{"version":3,"sources":["webpack:///./node_modules/markdown-it/lib/common/utils.js","webpack:///./src/assets/fabric/group01/coffee03.md","webpack:///./node_modules/markdown-it-emoji/lib/render.js","webpack:///./src/assets/writings/group02/what.md","webpack:///./node_modules/markdown-it/lib/rules_block/heading.js","webpack:///./src/assets/fabric/group01/coffee01.md","webpack:///./node_modules/markdown-it/lib/index.js","webpack:///./node_modules/markdown-it/lib/token.js","webpack:///./node_modules/markdown-it/lib/rules_inline/state_inline.js","webpack:///./src/components/knowledge/Article.vue?997d","webpack:///./src/components/knowledge/Article.vue?761b","webpack:///./src/assets/writings/group07/pow.md","webpack:///./node_modules/katex/src/domTree.js","webpack:///./src/assets/fabric/group01/coffee06.md","webpack:///./node_modules/katex/src/ParseError.js","webpack:///./node_modules/katex/src/symbols.js","webpack:///./node_modules/babel-runtime/core-js/get-iterator.js","webpack:///./node_modules/babel-runtime/core-js/object/keys.js","webpack:///./node_modules/markdown-it/lib/rules_block/lheading.js","webpack:///./node_modules/uslug/index.js","webpack:///./node_modules/markdown-it/lib/presets/zero.js","webpack:///./node_modules/core-js/internals/array-method-has-species-support.js","webpack:///./src/assets/writings/group03/oracle.md","webpack:///./src/assets/writings/group06/mining.md","webpack:///./src/assets/writings/group07/incentive.md","webpack:///./node_modules/markdown-it/lib/rules_inline/text_collapse.js","webpack:///./src/assets/writings/group07/def.md","webpack:///./src/assets/writings/group07/consensus.md","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/core.get-iterator-method.js","webpack:///./node_modules/clone/clone.js","webpack:///./src/assets/writings/group07/pos.md","webpack:///./src/assets/writings/group05/history.md","webpack:///./node_modules/markdown-it/lib/rules_inline/autolink.js","webpack:///./node_modules/unorm/lib/unorm.js","webpack:///./node_modules/uslug/lib/Z.js","webpack:///./src/assets/fabric/group01/coffee05.md","webpack:///./node_modules/uslug/lib/L.js","webpack:///./node_modules/markdown-it-toc-and-anchor/dist/index.js","webpack:///./node_modules/katex/src/buildTree.js","webpack:///./node_modules/markdown-it/lib/rules_core/block.js","webpack:///./node_modules/markdown-it-emoji/index.js","webpack:///./node_modules/markdown-it-emoji/lib/normalize_opts.js","webpack:///./node_modules/core-js/modules/es.string.iterator.js","webpack:///./src/assets/fabric/group03/roster.md","webpack:///./src/assets/writings/group06/evm.md","webpack:///./node_modules/markdown-it/lib/rules_inline/newline.js","webpack:///./src/assets/writings/group05/hash.md","webpack:///./node_modules/markdown-it/lib/presets/commonmark.js","webpack:///./node_modules/mdurl/format.js","webpack:///./node_modules/markdown-it/lib/rules_block/paragraph.js","webpack:///./node_modules/markdown-it/lib/ruler.js","webpack:///./node_modules/markdown-it-emoji/lib/replace.js","webpack:///./node_modules/markdown-it/lib/rules_inline/backticks.js","webpack:///./src/assets/writings/group06/solidity.md","webpack:///./node_modules/markdown-it/lib/rules_block/list.js","webpack:///./node_modules/markdown-it-mark/index.js","webpack:///./node_modules/markdown-it/lib/rules_core/normalize.js","webpack:///./node_modules/markdown-it/lib/parser_inline.js","webpack:///./node_modules/core-js/modules/es.array.filter.js","webpack:///./src/assets/writings/group03/token.md","webpack:///./node_modules/core-js/modules/es.map.js","webpack:///./src/assets/writings/group02/client.md","webpack:///./node_modules/uc.micro/categories/Z/regex.js","webpack:///./node_modules/katex/src/mathMLTree.js","webpack:///./node_modules/markdown-it-abbr/index.js","webpack:///./src/assets/anim/ship.gif","webpack:///./node_modules/core-js/modules/es.string.replace.js","webpack:///./src sync ^\\.\\/assets.*$","webpack:///./node_modules/markdown-it-sub/index.js","webpack:///./node_modules/markdown-it/lib/helpers/index.js","webpack:///./node_modules/markdown-it/lib/common/html_re.js","webpack:///./src/assets/writings/group06/state-tree.md","webpack:///./node_modules/core-js/internals/whitespaces.js","webpack:///./node_modules/core-js/internals/string-trim.js","webpack:///./node_modules/katex/src/Options.js","webpack:///./src/assets/fabric/group02/sdk.md","webpack:///./node_modules/markdown-it/lib/rules_inline/entity.js","webpack:///./node_modules/markdown-it/lib/rules_block/html_block.js","webpack:///./src/assets/writings/group03/security.md","webpack:///./node_modules/core-js/internals/collection-strong.js","webpack:///./src/assets/fabric/group04/consensus.md","webpack:///./node_modules/uslug/lib/N.js","webpack:///./src/assets/fabric/group04/peer.md","webpack:///./node_modules/katex/src/Style.js","webpack:///./src/assets/fabric/group02/lifecycle.md","webpack:///./src/assets/writings/group07/fee.md","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_classof.js","webpack:///./node_modules/core-js/internals/collection.js","webpack:///./src/assets/writings/group06/program.md","webpack:///./node_modules/markdown-it/lib/rules_inline/escape.js","webpack:///./node_modules/katex/src/Parser.js","webpack:///./node_modules/uc.micro/categories/Cf/regex.js","webpack:///./node_modules/markdown-it/lib/rules_core/state_core.js","webpack:///./node_modules/core-js/internals/inherit-if-required.js","webpack:///./src/components/knowledge/Article.vue?0ee2","webpack:///./node_modules/katex/src/fontMetricsData.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-sap.js","webpack:///./node_modules/markdown-it/lib/parser_block.js","webpack:///./node_modules/katex/src/functions.js","webpack:///./node_modules/markdown-it-sup/index.js","webpack:///./node_modules/uc.micro/categories/P/regex.js","webpack:///./node_modules/markdown-it/lib/renderer.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/fn/get-iterator.js","webpack:///./node_modules/markdown-it/lib/helpers/parse_link_title.js","webpack:///./node_modules/core-js/modules/es.array.find.js","webpack:///./node_modules/uslug/lib/M.js","webpack:///./node_modules/markdown-it/lib/rules_block/table.js","webpack:///./node_modules/katex/src/environments.js","webpack:///./node_modules/markdown-it/lib/rules_block/state_block.js","webpack:///./node_modules/markdown-it/lib/rules_inline/balance_pairs.js","webpack:///./src/assets/writings/group01/welcome.md","webpack:///./node_modules/markdown-it/lib/presets/default.js","webpack:///./src/assets/fabric/group02/health.md","webpack:///./node_modules/mdurl/decode.js","webpack:///./node_modules/markdown-it/lib/rules_inline/strikethrough.js","webpack:///./src/assets/recommends/whisper_chat.png","webpack:///./node_modules/markdown-it/lib/rules_inline/image.js","webpack:///./src/assets/writings/group07/poa.md","webpack:///./src/assets/writings/group02/transaction.md","webpack:///./node_modules/markdown-it/lib/rules_core/linkify.js","webpack:///./src/assets/fabric/group03/cli.md","webpack:///./src/assets/writings/group06/game.md","webpack:///./node_modules/markdown-it/lib/rules_block/code.js","webpack:///./node_modules/vue-markdown/dist/vue-markdown.common.js","webpack:///./node_modules/punycode/punycode.js","webpack:///./node_modules/markdown-it/lib/rules_core/inline.js","webpack:///./node_modules/katex/src/Settings.js","webpack:///./node_modules/markdown-it-katex/index.js","webpack:///./src/assets/writings/group03/dapp.md","webpack:///./node_modules/uc.micro/categories/Cc/regex.js","webpack:///./node_modules/markdown-it/lib/parser_core.js","webpack:///./node_modules/core-js/modules/es.number.constructor.js","webpack:///./node_modules/markdown-it-emoji/lib/data/shortcuts.js","webpack:///./src/assets/fabric/group02/devnet.md","webpack:///./node_modules/match-at/lib/matchAt.js","webpack:///./node_modules/markdown-it/lib/rules_core/smartquotes.js","webpack:///./node_modules/linkify-it/lib/re.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/core.get-iterator.js","webpack:///./node_modules/katex/src/utils.js","webpack:///./src/assets/writings/group03/evm.md","webpack:///./src/assets/writings/group07/attack.md","webpack:///./src/components/knowledge/Article.vue?afa3","webpack:///./node_modules/markdown-it/lib/rules_inline/text.js","webpack:///./node_modules/core-js/internals/freezing.js","webpack:///./node_modules/markdown-it/lib/rules_core/replacements.js","webpack:///./node_modules/markdown-it/lib/common/entities.js","webpack:///./node_modules/markdown-it-task-lists/index.js","webpack:///./node_modules/markdown-it/lib/rules_block/fence.js","webpack:///./src/assets/writings/group06/vs.md","webpack:///./src/assets/fabric/group03/webapp.md","webpack:///./node_modules/markdown-it/lib/rules_inline/html_inline.js","webpack:///./node_modules/mdurl/encode.js","webpack:///./src/assets/fabric/group02/explorer.md","webpack:///./node_modules/katex/katex.js","webpack:///./node_modules/markdown-it/lib/rules_inline/emphasis.js","webpack:///./node_modules/katex/src/buildCommon.js","webpack:///./src/assets/writings/group02/wallet.md","webpack:///./node_modules/katex/src/parseData.js","webpack:///./node_modules/uc.micro/properties/Any/regex.js","webpack:///./node_modules/katex/src/fontMetrics.js","webpack:///./src/components/knowledge/Article.vue?b6f8","webpack:///./node_modules/markdown-it/lib/rules_inline/link.js","webpack:///./src/assets/writings/group06/web3.md","webpack:///./node_modules/markdown-it-ins/index.js","webpack:///./src/assets/writings/group05/mining.md","webpack:///./node_modules/katex/src/buildHTML.js","webpack:///./src/assets/writings/group03/consensus.md","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/fn/object/keys.js","webpack:///./node_modules/markdown-it/index.js","webpack:///./node_modules/uc.micro/index.js","webpack:///./node_modules/markdown-it/lib/rules_block/reference.js","webpack:///./src/assets/fabric/group01/coffee04.md","webpack:///./src/assets/writings/group06/address.md","webpack:///./node_modules/mdurl/index.js","webpack:///./src/components/knowledge/Article.vue","webpack:///./node_modules/mdurl/parse.js","webpack:///./src/assets/fabric/group01/coffee07.md","webpack:///./src/assets/writings/group06/block.md","webpack:///./src/assets/writings/group02/basic.md","webpack:///./node_modules/markdown-it/lib/helpers/parse_link_label.js","webpack:///./node_modules/markdown-it/lib/common/html_blocks.js","webpack:///./node_modules/markdown-it/lib/helpers/parse_link_destination.js","webpack:///./node_modules/uslug/lib/uslug.js","webpack:///./src/assets/writings/group02/crytography.md","webpack:///./node_modules/katex/src/Lexer.js","webpack:///./node_modules/katex/src/buildMathML.js","webpack:///./node_modules/markdown-it-footnote/index.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.keys.js","webpack:///./node_modules/markdown-it/lib/rules_block/blockquote.js","webpack:///./src/assets/writings/group04/byzantine.md","webpack:///./src/assets/fabric/group01/coffee02.md","webpack:///./node_modules/katex/src/delimiter.js","webpack:///./src/assets/writings/group06/userful.md","webpack:///./node_modules/katex/src/parseTree.js","webpack:///./src/assets/fabric/group03/insurance.md","webpack:///./src/assets/writings/group04/cap.md","webpack:///./node_modules/core-js/internals/internal-metadata.js","webpack:///./src/assets/writings/group05/block.md","webpack:///./src/assets/fabric/group04/raft.md","webpack:///./node_modules/linkify-it/index.js","webpack:///./src/assets/fabric/group04/orderer.md","webpack:///./node_modules/markdown-it/lib/rules_block/hr.js","webpack:///./node_modules/markdown-it-deflist/index.js"],"names":["_class","obj","Object","prototype","toString","call","isString","_hasOwnProperty","hasOwnProperty","has","object","key","assign","sources","Array","slice","arguments","forEach","source","TypeError","keys","arrayReplaceAt","src","pos","newElements","concat","isValidEntityCode","c","fromCodePoint","surrogate1","surrogate2","String","fromCharCode","UNESCAPE_MD_RE","ENTITY_RE","UNESCAPE_ALL_RE","RegExp","DIGITAL_ENTITY_TEST_RE","entities","replaceEntityPattern","match","name","code","charCodeAt","test","toLowerCase","parseInt","unescapeMd","str","indexOf","replace","unescapeAll","escaped","entity","HTML_ESCAPE_TEST_RE","HTML_ESCAPE_REPLACE_RE","HTML_REPLACEMENTS","replaceUnsafeChar","ch","escapeHtml","REGEXP_ESCAPE_RE","escapeRE","isSpace","isWhiteSpace","UNICODE_PUNCT_RE","isPunctChar","isMdAsciiPunct","normalizeReference","trim","toUpperCase","exports","lib","mdurl","ucmicro","module","tokens","idx","content","state","startLine","endLine","silent","level","tmp","token","bMarks","tShift","max","eMarks","skipSpacesBack","skipCharsBack","line","push","markup","map","children","utils","helpers","Renderer","ParserCore","ParserBlock","ParserInline","LinkifyIt","punycode","config","zero","commonmark","BAD_PROTO_RE","GOOD_DATA_RE","validateLink","url","RECODE_HOSTNAME_FOR","normalizeLink","parsed","parse","hostname","protocol","toASCII","er","encode","format","normalizeLinkText","toUnicode","decode","MarkdownIt","presetName","options","this","inline","block","core","renderer","linkify","configure","set","presets","self","Error","components","rules","ruler","enableOnly","rules2","ruler2","enable","list","ignoreInvalid","result","isArray","chain","missed","filter","length","disable","use","plugin","args","apply","env","State","process","render","parseInline","inlineMode","renderInline","Token","type","tag","nesting","attrs","info","meta","hidden","attrIndex","i","len","attrPush","attrData","attrSet","value","attrGet","attrJoin","StateInline","md","outTokens","posMax","pending","pendingLevel","cache","delimiters","pushPending","scanDelims","start","canSplitWord","lastChar","nextChar","count","can_open","can_close","isLastWhiteSpace","isLastPunctChar","isNextWhiteSpace","isNextPunctChar","left_flanking","right_flanking","marker","_vm","_h","$createElement","_c","_self","staticClass","staticRenderFns","createClass","classes","splice","join","span","height","depth","maxFontSize","style","attributes","documentFragment","symbolNode","italic","skew","setAttribute","attribute","toNode","document","createElement","className","attr","appendChild","toMarkup","escape","styles","hyphenate","frag","createDocumentFragment","node","createTextNode","marginRight","needsSpan","ParseError","message","lexer","position","error","undefined","input","_input","begin","Math","end","__proto__","defineSymbol","mode","font","group","math","text","main","ams","accent","bin","close","inner","mathord","op","open","punct","rel","spacing","textord","mathTextSymbols","charAt","textSymbols","letters","__esModule","terminate","l","nextLine","terminatorRules","getRules","isEmpty","sCount","blkIndent","skipChars","skipSpaces","getLines","html","xhtmlOut","breaks","langPrefix","typographer","quotes","highlight","maxNesting","fails","wellKnownSymbol","V8_VERSION","SPECIES","METHOD_NAME","array","constructor","foo","Boolean","curr","last","classof","ITERATOR","Iterators","getIteratorMethod","it","_instanceof","nativeMap","nativeSet","nativePromise","Map","_","Set","Promise","clone","parent","circular","includeNonEnumerable","allParents","allChildren","useBuffer","Buffer","_clone","child","proto","resolve","reject","then","err","__isArray","__isRegExp","__getRegExpFlags","lastIndex","__isDate","Date","getTime","isBuffer","allocUnsafe","copy","create","getPrototypeOf","index","keyChild","valueChild","entryChild","add","getOwnPropertyDescriptor","getOwnPropertySymbols","symbols","symbol","descriptor","enumerable","defineProperty","allPropertyNames","getOwnPropertyNames","propertyName","Infinity","__objToStr","o","re","flags","global","ignoreCase","multiline","clonePrototype","EMAIL_RE","AUTOLINK_RE","tail","linkMatch","emailMatch","fullUrl","root","DEFAULT_FEATURE","CACHE_THRESHOLD","SBase","LBase","VBase","TBase","LCount","VCount","TCount","NCount","SCount","UChar","cp","feature","codepoint","cacheCounter","fromCache","next","needFeature","ret","fromData","hash","dunit","udata","f","fromCpOnly","fromRuleBasedJamo","j","base","SIndex","TIndex","floor","fromCpFilter","strategies","reduceRight","strategy","isHighSurrogate","isLowSurrogate","prepFeature","x","getDecomp","isCompatibility","isExclude","getCanonicalClass","getComposite","following","UCharIterator","cursor","d","RecursDecompIterator","cano","canonical","resBuf","recursiveDecomp","uchar","decomp","a","shift","DecompIterator","cc","inspt","uchar2","cc2","CompIterator","procBuf","lastClass","starter","composite","createIterator","normalize","nfd","nfkd","nfc","nfkc","0","60","824","61","62","65","768","769","770","771","772","774","775","776","777","778","780","783","785","803","805","808","66","817","67","807","68","813","69","816","70","71","72","814","73","74","75","76","77","78","79","779","795","80","82","83","806","84","85","804","86","87","88","89","90","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","114","115","116","117","118","119","120","121","122","160","168","834","170","175","178","179","180","181","184","185","186","188","189","190","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","209","210","211","212","213","214","216","217","218","219","220","221","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","241","242","243","244","245","246","248","249","250","251","252","253","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","296","297","298","299","300","301","302","303","304","306","307","308","309","310","311","313","314","315","316","317","318","319","320","323","324","325","326","327","328","329","332","333","334","335","336","337","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","360","361","362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","416","417","431","432","439","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","478","479","480","481","482","483","486","487","488","489","490","491","492","493","494","495","496","497","498","499","500","501","504","505","506","507","508","509","510","511","66045","512","513","514","515","516","517","518","519","520","521","522","523","524","525","526","527","528","529","530","531","532","533","534","535","536","537","538","539","542","543","550","551","552","553","554","555","556","557","558","559","560","561","562","563","658","688","689","690","691","692","693","694","695","696","728","729","730","731","732","733","736","737","738","739","740","66272","773","781","782","784","786","787","788","789","790","791","792","793","794","796","797","798","799","800","801","802","809","810","811","812","815","818","819","820","821","822","823","825","826","827","828","829","830","831","832","833","835","836","837","838","839","840","841","842","843","844","845","846","848","849","850","851","852","853","854","855","856","857","858","859","860","861","862","863","864","865","866","867","868","869","870","871","872","873","874","875","876","877","878","879","884","890","894","900","901","902","903","904","905","906","908","910","911","912","913","917","919","921","927","929","933","937","938","939","940","941","942","943","944","945","949","951","953","959","961","965","969","970","971","972","973","974","976","977","978","979","980","981","982","1008","1009","1010","1012","1013","1017","66422","66423","66424","66425","66426","1024","1025","1027","1030","1031","1036","1037","1038","1040","1043","1045","1046","1047","1048","1049","1050","1054","1059","1063","1067","1069","1072","1075","1077","1078","1079","1080","1081","1082","1086","1091","1095","1099","1101","1104","1105","1107","1110","1111","1116","1117","1118","1140","1141","1142","1143","1155","1156","1157","1158","1159","1217","1218","1232","1233","1234","1235","1238","1239","1240","1241","1242","1243","1244","1245","1246","1247","1250","1251","1252","1253","1254","1255","1256","1257","1258","1259","1260","1261","1262","1263","1264","1265","1266","1267","1268","1269","1272","1273","1280","1415","1425","1426","1427","1428","1429","1430","1431","1432","1433","1434","1435","1436","1437","1438","1439","1440","1441","1442","1443","1444","1445","1446","1447","1448","1449","1450","1451","1452","1453","1454","1455","1456","1457","1458","1459","1460","1461","1462","1463","1464","1465","1466","1467","1468","1469","1471","1473","1474","1476","1477","1479","1536","1552","1553","1554","1555","1556","1557","1558","1559","1560","1561","1562","1570","1571","1572","1573","1574","1575","1619","1620","1621","1608","1610","1611","1612","1613","1614","1615","1616","1617","1618","1622","1623","1624","1625","1626","1627","1628","1629","1630","1631","1648","1653","1654","1655","1656","1728","1729","1730","1746","1747","1749","1750","1751","1752","1753","1754","1755","1756","1759","1760","1761","1762","1763","1764","1767","1768","1770","1771","1772","1773","1792","1809","1840","1841","1842","1843","1844","1845","1846","1847","1848","1849","1850","1851","1852","1853","1854","1855","1856","1857","1858","1859","1860","1861","1862","1863","1864","1865","1866","2027","2028","2029","2030","2031","2032","2033","2034","2035","2048","2070","2071","2072","2073","2075","2076","2077","2078","2079","2080","2081","2082","2083","2085","2086","2087","2089","2090","2091","2092","2093","2137","2138","2139","2276","2277","2278","2279","2280","2281","2282","2283","2284","2285","2286","2287","2288","2289","2290","2291","2292","2293","2294","2295","2296","2297","2298","2299","2300","2301","2302","2303","2304","2344","2364","2345","2352","2353","2355","2356","2381","2385","2386","2387","2388","2392","2393","2394","2395","2396","2397","2398","2399","2492","2503","2494","2519","2507","2508","2509","2524","2525","2527","2560","2611","2614","2620","2637","2649","2650","2651","2654","2748","2765","68109","68111","68152","68153","68154","68159","68325","68326","2816","2876","2887","2878","2902","2903","2888","2891","2892","2893","2908","2909","2962","3031","2964","3014","3006","3015","3018","3019","3020","3021","3072","3142","3158","3144","3149","3157","3260","3263","3285","3264","3270","3266","3286","3271","3272","3274","3275","3277","3328","3398","3390","3415","3399","3402","3403","3404","3405","3530","3545","3535","3551","3546","3548","3549","3550","3584","3635","3640","3641","3642","3656","3657","3658","3659","3763","3768","3769","3784","3785","3786","3787","3804","3805","3840","3852","3864","3865","3893","3895","3897","3907","3917","3922","3927","3932","3945","3953","3954","3955","3956","3957","3958","3959","3960","3961","3962","3963","3964","3965","3968","3969","3970","3971","3972","3974","3975","3987","3997","4002","4007","4012","4025","4038","4096","4133","4142","4134","4151","4153","4154","4237","4348","69702","69759","69785","69818","69786","69787","69788","69797","69803","69817","4352","69888","69889","69890","69934","69935","69937","69927","69938","69939","69940","70003","70080","4608","70197","70198","70377","70378","4864","4957","4958","4959","70460","70471","70462","70487","70475","70476","70477","70502","70503","70504","70505","70506","70507","70508","70512","70513","70514","70515","70516","5120","70841","70832","70842","70845","70843","70844","70846","70850","70851","5376","71096","71087","71097","71098","71099","71103","71104","5632","71231","71350","71351","5888","5908","5940","6098","6109","6144","6313","6400","6457","6458","6459","6656","6679","6680","6752","6773","6774","6775","6776","6777","6778","6779","6780","6783","6832","6833","6834","6835","6836","6837","6838","6839","6840","6841","6842","6843","6844","6845","6912","6917","6965","6918","6919","6920","6921","6922","6923","6924","6925","6926","6929","6930","6964","6970","6971","6972","6973","6974","6975","6976","6977","6978","6979","6980","7019","7020","7021","7022","7023","7024","7025","7026","7027","7082","7083","7142","7154","7155","7168","7223","7376","7377","7378","7380","7381","7382","7383","7384","7385","7386","7387","7388","7389","7390","7391","7392","7394","7395","7396","7397","7398","7399","7400","7405","7412","7416","7417","7424","7468","7469","7470","7472","7473","7474","7475","7476","7477","7478","7479","7480","7481","7482","7484","7485","7486","7487","7488","7489","7490","7491","7492","7493","7494","7495","7496","7497","7498","7499","7500","7501","7503","7504","7505","7506","7507","7508","7509","7510","7511","7512","7513","7514","7515","7516","7517","7518","7519","7520","7521","7522","7523","7524","7525","7526","7527","7528","7529","7530","7544","7579","7580","7581","7582","7583","7584","7585","7586","7587","7588","7589","7590","7591","7592","7593","7594","7595","7596","7597","7598","7599","7600","7601","7602","7603","7604","7605","7606","7607","7608","7609","7610","7611","7612","7613","7614","7615","7616","7617","7618","7619","7620","7621","7622","7623","7624","7625","7626","7627","7628","7629","7630","7631","7632","7633","7634","7635","7636","7637","7638","7639","7640","7641","7642","7643","7644","7645","7646","7647","7648","7649","7650","7651","7652","7653","7654","7655","7656","7657","7658","7659","7660","7661","7662","7663","7664","7665","7666","7667","7668","7669","7676","7677","7678","7679","7680","7681","7682","7683","7684","7685","7686","7687","7688","7689","7690","7691","7692","7693","7694","7695","7696","7697","7698","7699","7700","7701","7702","7703","7704","7705","7706","7707","7708","7709","7710","7711","7712","7713","7714","7715","7716","7717","7718","7719","7720","7721","7722","7723","7724","7725","7726","7727","7728","7729","7730","7731","7732","7733","7734","7735","7736","7737","7738","7739","7740","7741","7742","7743","7744","7745","7746","7747","7748","7749","7750","7751","7752","7753","7754","7755","7756","7757","7758","7759","7760","7761","7762","7763","7764","7765","7766","7767","7768","7769","7770","7771","7772","7773","7774","7775","7776","7777","7778","7779","7780","7781","7782","7783","7784","7785","7786","7787","7788","7789","7790","7791","7792","7793","7794","7795","7796","7797","7798","7799","7800","7801","7802","7803","7804","7805","7806","7807","7808","7809","7810","7811","7812","7813","7814","7815","7816","7817","7818","7819","7820","7821","7822","7823","7824","7825","7826","7827","7828","7829","7830","7831","7832","7833","7834","7835","7840","7841","7842","7843","7844","7845","7846","7847","7848","7849","7850","7851","7852","7853","7854","7855","7856","7857","7858","7859","7860","7861","7862","7863","7864","7865","7866","7867","7868","7869","7870","7871","7872","7873","7874","7875","7876","7877","7878","7879","7880","7881","7882","7883","7884","7885","7886","7887","7888","7889","7890","7891","7892","7893","7894","7895","7896","7897","7898","7899","7900","7901","7902","7903","7904","7905","7906","7907","7908","7909","7910","7911","7912","7913","7914","7915","7916","7917","7918","7919","7920","7921","7922","7923","7924","7925","7926","7927","7928","7929","7936","7937","7938","7939","7940","7941","7942","7943","7944","7945","7946","7947","7948","7949","7950","7951","7952","7953","7954","7955","7956","7957","7960","7961","7962","7963","7964","7965","7968","7969","7970","7971","7972","7973","7974","7975","7976","7977","7978","7979","7980","7981","7982","7983","7984","7985","7986","7987","7988","7989","7990","7991","7992","7993","7994","7995","7996","7997","7998","7999","8000","8001","8002","8003","8004","8005","8008","8009","8010","8011","8012","8013","8016","8017","8018","8019","8020","8021","8022","8023","8025","8027","8029","8031","8032","8033","8034","8035","8036","8037","8038","8039","8040","8041","8042","8043","8044","8045","8046","8047","8048","8049","8050","8051","8052","8053","8054","8055","8056","8057","8058","8059","8060","8061","8064","8065","8066","8067","8068","8069","8070","8071","8072","8073","8074","8075","8076","8077","8078","8079","8080","8081","8082","8083","8084","8085","8086","8087","8088","8089","8090","8091","8092","8093","8094","8095","8096","8097","8098","8099","8100","8101","8102","8103","8104","8105","8106","8107","8108","8109","8110","8111","8112","8113","8114","8115","8116","8118","8119","8120","8121","8122","8123","8124","8125","8126","8127","8128","8129","8130","8131","8132","8134","8135","8136","8137","8138","8139","8140","8141","8142","8143","8144","8145","8146","8147","8150","8151","8152","8153","8154","8155","8157","8158","8159","8160","8161","8162","8163","8164","8165","8166","8167","8168","8169","8170","8171","8172","8173","8174","8175","8178","8179","8180","8182","8183","8184","8185","8186","8187","8188","8189","8190","8192","8193","8194","8195","8196","8197","8198","8199","8200","8201","8202","8209","8215","8228","8229","8230","8239","8243","8244","8246","8247","8252","8254","8263","8264","8265","8279","8287","8304","8305","8308","8309","8310","8311","8312","8313","8314","8315","8316","8317","8318","8319","8320","8321","8322","8323","8324","8325","8326","8327","8328","8329","8330","8331","8332","8333","8334","8336","8337","8338","8339","8340","8341","8342","8343","8344","8345","8346","8347","8348","8360","8400","8401","8402","8403","8404","8405","8406","8407","8408","8409","8410","8411","8412","8417","8421","8422","8423","8424","8425","8426","8427","8428","8429","8430","8431","8432","8448","8449","8450","8451","8453","8454","8455","8457","8458","8459","8460","8461","8462","8463","8464","8465","8466","8467","8469","8470","8473","8474","8475","8476","8477","8480","8481","8482","8484","8486","8488","8490","8491","8492","8493","8495","8496","8497","8499","8500","8501","8502","8503","8504","8505","8507","8508","8509","8510","8511","8512","8517","8518","8519","8520","8521","8528","8529","8530","8531","8532","8533","8534","8535","8536","8537","8538","8539","8540","8541","8542","8543","8544","8545","8546","8547","8548","8549","8550","8551","8552","8553","8554","8555","8556","8557","8558","8559","8560","8561","8562","8563","8564","8565","8566","8567","8568","8569","8570","8571","8572","8573","8574","8575","8585","8592","8594","8596","8602","8603","8622","8653","8654","8655","8656","8658","8660","8704","8707","8708","8712","8713","8715","8716","8739","8740","8741","8742","8748","8749","8751","8752","8764","8769","8771","8772","8773","8775","8776","8777","8781","8800","8801","8802","8804","8805","8813","8814","8815","8816","8817","8818","8819","8820","8821","8822","8823","8824","8825","8826","8827","8828","8829","8832","8833","8834","8835","8836","8837","8838","8839","8840","8841","8849","8850","8866","8872","8873","8875","8876","8877","8878","8879","8882","8883","8884","8885","8928","8929","8930","8931","8938","8939","8940","8941","8960","9001","9002","9216","9312","9313","9314","9315","9316","9317","9318","9319","9320","9321","9322","9323","9324","9325","9326","9327","9328","9329","9330","9331","9332","9333","9334","9335","9336","9337","9338","9339","9340","9341","9342","9343","9344","9345","9346","9347","9348","9349","9350","9351","9352","9353","9354","9355","9356","9357","9358","9359","9360","9361","9362","9363","9364","9365","9366","9367","9368","9369","9370","9371","9372","9373","9374","9375","9376","9377","9378","9379","9380","9381","9382","9383","9384","9385","9386","9387","9388","9389","9390","9391","9392","9393","9394","9395","9396","9397","9398","9399","9400","9401","9402","9403","9404","9405","9406","9407","9408","9409","9410","9411","9412","9413","9414","9415","9416","9417","9418","9419","9420","9421","9422","9423","9424","9425","9426","9427","9428","9429","9430","9431","9432","9433","9434","9435","9436","9437","9438","9439","9440","9441","9442","9443","9444","9445","9446","9447","9448","9449","9450","10752","10764","10868","10869","10870","10972","11264","11388","11389","11503","11504","11505","11520","11631","11647","11744","11745","11746","11747","11748","11749","11750","11751","11752","11753","11754","11755","11756","11757","11758","11759","11760","11761","11762","11763","11764","11765","11766","11767","11768","11769","11770","11771","11772","11773","11774","11775","11776","11935","12019","12032","12033","12034","12035","12036","12037","12038","12039","12040","12041","12042","12043","12044","12045","12046","12047","12048","12049","12050","12051","12052","12053","12054","12055","12056","12057","12058","12059","12060","12061","12062","12063","12064","12065","12066","12067","12068","12069","12070","12071","12072","12073","12074","12075","12076","12077","12078","12079","12080","12081","12082","12083","12084","12085","12086","12087","12088","12089","12090","12091","12092","12093","12094","12095","12096","12097","12098","12099","12100","12101","12102","12103","12104","12105","12106","12107","12108","12109","12110","12111","12112","12113","12114","12115","12116","12117","12118","12119","12120","12121","12122","12123","12124","12125","12126","12127","12128","12129","12130","12131","12132","12133","12134","12135","12136","12137","12138","12139","12140","12141","12142","12143","12144","12145","12146","12147","12148","12149","12150","12151","12152","12153","12154","12155","12156","12157","12158","12159","12160","12161","12162","12163","12164","12165","12166","12167","12168","12169","12170","12171","12172","12173","12174","12175","12176","12177","12178","12179","12180","12181","12182","12183","12184","12185","12186","12187","12188","12189","12190","12191","12192","12193","12194","12195","12196","12197","12198","12199","12200","12201","12202","12203","12204","12205","12206","12207","12208","12209","12210","12211","12212","12213","12214","12215","12216","12217","12218","12219","12220","12221","12222","12223","12224","12225","12226","12227","12228","12229","12230","12231","12232","12233","12234","12235","12236","12237","12238","12239","12240","12241","12242","12243","12244","12245","12288","12330","12331","12332","12333","12334","12335","12342","12344","12345","12346","12358","12441","12363","12364","12365","12366","12367","12368","12369","12370","12371","12372","12373","12374","12375","12376","12377","12378","12379","12380","12381","12382","12383","12384","12385","12386","12388","12389","12390","12391","12392","12393","12399","12442","12400","12401","12402","12403","12404","12405","12406","12407","12408","12409","12410","12411","12412","12413","12436","12443","12444","12445","12446","12447","12454","12459","12460","12461","12462","12463","12464","12465","12466","12467","12468","12469","12470","12471","12472","12473","12474","12475","12476","12477","12478","12479","12480","12481","12482","12484","12485","12486","12487","12488","12489","12495","12496","12497","12498","12499","12500","12501","12502","12503","12504","12505","12506","12507","12508","12509","12527","12528","12529","12530","12532","12535","12536","12537","12538","12541","12542","12543","12544","12593","12594","12595","12596","12597","12598","12599","12600","12601","12602","12603","12604","12605","12606","12607","12608","12609","12610","12611","12612","12613","12614","12615","12616","12617","12618","12619","12620","12621","12622","12623","12624","12625","12626","12627","12628","12629","12630","12631","12632","12633","12634","12635","12636","12637","12638","12639","12640","12641","12642","12643","12644","12645","12646","12647","12648","12649","12650","12651","12652","12653","12654","12655","12656","12657","12658","12659","12660","12661","12662","12663","12664","12665","12666","12667","12668","12669","12670","12671","12672","12673","12674","12675","12676","12677","12678","12679","12680","12681","12682","12683","12684","12685","12686","12690","12691","12692","12693","12694","12695","12696","12697","12698","12699","12700","12701","12702","12703","12800","12801","12802","12803","12804","12805","12806","12807","12808","12809","12810","12811","12812","12813","12814","12815","12816","12817","12818","12819","12820","12821","12822","12823","12824","12825","12826","12827","12828","12829","12830","12832","12833","12834","12835","12836","12837","12838","12839","12840","12841","12842","12843","12844","12845","12846","12847","12848","12849","12850","12851","12852","12853","12854","12855","12856","12857","12858","12859","12860","12861","12862","12863","12864","12865","12866","12867","12868","12869","12870","12871","12880","12881","12882","12883","12884","12885","12886","12887","12888","12889","12890","12891","12892","12893","12894","12895","12896","12897","12898","12899","12900","12901","12902","12903","12904","12905","12906","12907","12908","12909","12910","12911","12912","12913","12914","12915","12916","12917","12918","12919","12920","12921","12922","12923","12924","12925","12926","12928","12929","12930","12931","12932","12933","12934","12935","12936","12937","12938","12939","12940","12941","12942","12943","12944","12945","12946","12947","12948","12949","12950","12951","12952","12953","12954","12955","12956","12957","12958","12959","12960","12961","12962","12963","12964","12965","12966","12967","12968","12969","12970","12971","12972","12973","12974","12975","12976","12977","12978","12979","12980","12981","12982","12983","12984","12985","12986","12987","12988","12989","12990","12991","12992","12993","12994","12995","12996","12997","12998","12999","13000","13001","13002","13003","13004","13005","13006","13007","13008","13009","13010","13011","13012","13013","13014","13015","13016","13017","13018","13019","13020","13021","13022","13023","13024","13025","13026","13027","13028","13029","13030","13031","13032","13033","13034","13035","13036","13037","13038","13039","13040","13041","13042","13043","13044","13045","13046","13047","13048","13049","13050","13051","13052","13053","13054","13056","13057","13058","13059","13060","13061","13062","13063","13064","13065","13066","13067","13068","13069","13070","13071","13072","13073","13074","13075","13076","13077","13078","13079","13080","13081","13082","13083","13084","13085","13086","13087","13088","13089","13090","13091","13092","13093","13094","13095","13096","13097","13098","13099","13100","13101","13102","13103","13104","13105","13106","13107","13108","13109","13110","13111","13112","13113","13114","13115","13116","13117","13118","13119","13120","13121","13122","13123","13124","13125","13126","13127","13128","13129","13130","13131","13132","13133","13134","13135","13136","13137","13138","13139","13140","13141","13142","13143","13144","13145","13146","13147","13148","13149","13150","13151","13152","13153","13154","13155","13156","13157","13158","13159","13160","13161","13162","13163","13164","13165","13166","13167","13168","13169","13170","13171","13172","13173","13174","13175","13176","13177","13178","13179","13180","13181","13182","13183","13184","13185","13186","13187","13188","13189","13190","13191","13192","13193","13194","13195","13196","13197","13198","13199","13200","13201","13202","13203","13204","13205","13206","13207","13208","13209","13210","13211","13212","13213","13214","13215","13216","13217","13218","13219","13220","13221","13222","13223","13224","13225","13226","13227","13228","13229","13230","13231","13232","13233","13234","13235","13236","13237","13238","13239","13240","13241","13242","13243","13244","13245","13246","13247","13248","13249","13250","13251","13252","13253","13254","13255","13256","13257","13258","13259","13260","13261","13262","13263","13264","13265","13266","13267","13268","13269","13270","13271","13272","13273","13274","13275","13276","13277","13278","13279","13280","13281","13282","13283","13284","13285","13286","13287","13288","13289","13290","13291","13292","13293","13294","13295","13296","13297","13298","13299","13300","13301","13302","13303","13304","13305","13306","13307","13308","13309","13310","13311","27136","92912","92913","92914","92915","92916","27392","92976","92977","92978","92979","92980","92981","92982","42496","42607","42612","42613","42614","42615","42616","42617","42618","42619","42620","42621","42652","42653","42655","42736","42737","42752","42864","43000","43001","43008","43014","43204","43232","43233","43234","43235","43236","43237","43238","43239","43240","43241","43242","43243","43244","43245","43246","43247","43248","43249","43264","43307","43308","43309","43347","43443","43456","43520","43696","43698","43699","43700","43703","43704","43710","43711","43713","43766","43776","43868","43869","43870","43871","44013","48128","113822","53504","119134","119135","119136","119137","119138","119139","119140","119141","119142","119143","119144","119145","119149","119150","119151","119152","119153","119154","119163","119164","119165","119166","119167","119168","119169","119170","119173","119174","119175","119176","119177","119178","119179","119210","119211","119212","119213","119227","119228","119229","119230","119231","119232","53760","119362","119363","119364","54272","119808","119809","119810","119811","119812","119813","119814","119815","119816","119817","119818","119819","119820","119821","119822","119823","119824","119825","119826","119827","119828","119829","119830","119831","119832","119833","119834","119835","119836","119837","119838","119839","119840","119841","119842","119843","119844","119845","119846","119847","119848","119849","119850","119851","119852","119853","119854","119855","119856","119857","119858","119859","119860","119861","119862","119863","119864","119865","119866","119867","119868","119869","119870","119871","119872","119873","119874","119875","119876","119877","119878","119879","119880","119881","119882","119883","119884","119885","119886","119887","119888","119889","119890","119891","119892","119894","119895","119896","119897","119898","119899","119900","119901","119902","119903","119904","119905","119906","119907","119908","119909","119910","119911","119912","119913","119914","119915","119916","119917","119918","119919","119920","119921","119922","119923","119924","119925","119926","119927","119928","119929","119930","119931","119932","119933","119934","119935","119936","119937","119938","119939","119940","119941","119942","119943","119944","119945","119946","119947","119948","119949","119950","119951","119952","119953","119954","119955","119956","119957","119958","119959","119960","119961","119962","119963","119964","119966","119967","119970","119973","119974","119977","119978","119979","119980","119982","119983","119984","119985","119986","119987","119988","119989","119990","119991","119992","119993","119995","119997","119998","119999","120000","120001","120002","120003","120005","120006","120007","120008","120009","120010","120011","120012","120013","120014","120015","120016","120017","120018","120019","120020","120021","120022","120023","120024","120025","120026","120027","120028","120029","120030","120031","120032","120033","120034","120035","120036","120037","120038","120039","120040","120041","120042","120043","120044","120045","120046","120047","120048","120049","120050","120051","120052","120053","120054","120055","120056","120057","120058","120059","120060","120061","120062","120063","54528","120064","120065","120066","120067","120068","120069","120071","120072","120073","120074","120077","120078","120079","120080","120081","120082","120083","120084","120086","120087","120088","120089","120090","120091","120092","120094","120095","120096","120097","120098","120099","120100","120101","120102","120103","120104","120105","120106","120107","120108","120109","120110","120111","120112","120113","120114","120115","120116","120117","120118","120119","120120","120121","120123","120124","120125","120126","120128","120129","120130","120131","120132","120134","120138","120139","120140","120141","120142","120143","120144","120146","120147","120148","120149","120150","120151","120152","120153","120154","120155","120156","120157","120158","120159","120160","120161","120162","120163","120164","120165","120166","120167","120168","120169","120170","120171","120172","120173","120174","120175","120176","120177","120178","120179","120180","120181","120182","120183","120184","120185","120186","120187","120188","120189","120190","120191","120192","120193","120194","120195","120196","120197","120198","120199","120200","120201","120202","120203","120204","120205","120206","120207","120208","120209","120210","120211","120212","120213","120214","120215","120216","120217","120218","120219","120220","120221","120222","120223","120224","120225","120226","120227","120228","120229","120230","120231","120232","120233","120234","120235","120236","120237","120238","120239","120240","120241","120242","120243","120244","120245","120246","120247","120248","120249","120250","120251","120252","120253","120254","120255","120256","120257","120258","120259","120260","120261","120262","120263","120264","120265","120266","120267","120268","120269","120270","120271","120272","120273","120274","120275","120276","120277","120278","120279","120280","120281","120282","120283","120284","120285","120286","120287","120288","120289","120290","120291","120292","120293","120294","120295","120296","120297","120298","120299","120300","120301","120302","120303","120304","120305","120306","120307","120308","120309","120310","120311","120312","120313","120314","120315","120316","120317","120318","120319","54784","120320","120321","120322","120323","120324","120325","120326","120327","120328","120329","120330","120331","120332","120333","120334","120335","120336","120337","120338","120339","120340","120341","120342","120343","120344","120345","120346","120347","120348","120349","120350","120351","120352","120353","120354","120355","120356","120357","120358","120359","120360","120361","120362","120363","120364","120365","120366","120367","120368","120369","120370","120371","120372","120373","120374","120375","120376","120377","120378","120379","120380","120381","120382","120383","120384","120385","120386","120387","120388","120389","120390","120391","120392","120393","120394","120395","120396","120397","120398","120399","120400","120401","120402","120403","120404","120405","120406","120407","120408","120409","120410","120411","120412","120413","120414","120415","120416","120417","120418","120419","120420","120421","120422","120423","120424","120425","120426","120427","120428","120429","120430","120431","120432","120433","120434","120435","120436","120437","120438","120439","120440","120441","120442","120443","120444","120445","120446","120447","120448","120449","120450","120451","120452","120453","120454","120455","120456","120457","120458","120459","120460","120461","120462","120463","120464","120465","120466","120467","120468","120469","120470","120471","120472","120473","120474","120475","120476","120477","120478","120479","120480","120481","120482","120483","120484","120485","120488","120489","120490","120491","120492","120493","120494","120495","120496","120497","120498","120499","120500","120501","120502","120503","120504","120505","120506","120507","120508","120509","120510","120511","120512","120513","120514","120515","120516","120517","120518","120519","120520","120521","120522","120523","120524","120525","120526","120527","120528","120529","120530","120531","120532","120533","120534","120535","120536","120537","120538","120539","120540","120541","120542","120543","120544","120545","120546","120547","120548","120549","120550","120551","120552","120553","120554","120555","120556","120557","120558","120559","120560","120561","120562","120563","120564","120565","120566","120567","120568","120569","120570","120571","120572","120573","120574","120575","55040","120576","120577","120578","120579","120580","120581","120582","120583","120584","120585","120586","120587","120588","120589","120590","120591","120592","120593","120594","120595","120596","120597","120598","120599","120600","120601","120602","120603","120604","120605","120606","120607","120608","120609","120610","120611","120612","120613","120614","120615","120616","120617","120618","120619","120620","120621","120622","120623","120624","120625","120626","120627","120628","120629","120630","120631","120632","120633","120634","120635","120636","120637","120638","120639","120640","120641","120642","120643","120644","120645","120646","120647","120648","120649","120650","120651","120652","120653","120654","120655","120656","120657","120658","120659","120660","120661","120662","120663","120664","120665","120666","120667","120668","120669","120670","120671","120672","120673","120674","120675","120676","120677","120678","120679","120680","120681","120682","120683","120684","120685","120686","120687","120688","120689","120690","120691","120692","120693","120694","120695","120696","120697","120698","120699","120700","120701","120702","120703","120704","120705","120706","120707","120708","120709","120710","120711","120712","120713","120714","120715","120716","120717","120718","120719","120720","120721","120722","120723","120724","120725","120726","120727","120728","120729","120730","120731","120732","120733","120734","120735","120736","120737","120738","120739","120740","120741","120742","120743","120744","120745","120746","120747","120748","120749","120750","120751","120752","120753","120754","120755","120756","120757","120758","120759","120760","120761","120762","120763","120764","120765","120766","120767","120768","120769","120770","120771","120772","120773","120774","120775","120776","120777","120778","120779","120782","120783","120784","120785","120786","120787","120788","120789","120790","120791","120792","120793","120794","120795","120796","120797","120798","120799","120800","120801","120802","120803","120804","120805","120806","120807","120808","120809","120810","120811","120812","120813","120814","120815","120816","120817","120818","120819","120820","120821","120822","120823","120824","120825","120826","120827","120828","120829","120830","120831","59392","125136","125137","125138","125139","125140","125141","125142","60928","126464","126465","126466","126467","126469","126470","126471","126472","126473","126474","126475","126476","126477","126478","126479","126480","126481","126482","126483","126484","126485","126486","126487","126488","126489","126490","126491","126492","126493","126494","126495","126497","126498","126500","126503","126505","126506","126507","126508","126509","126510","126511","126512","126513","126514","126516","126517","126518","126519","126521","126523","126530","126535","126537","126539","126541","126542","126543","126545","126546","126548","126551","126553","126555","126557","126559","126561","126562","126564","126567","126568","126569","126570","126572","126573","126574","126575","126576","126577","126578","126580","126581","126582","126583","126585","126586","126587","126588","126590","126592","126593","126594","126595","126596","126597","126598","126599","126600","126601","126603","126604","126605","126606","126607","126608","126609","126610","126611","126612","126613","126614","126615","126616","126617","126618","126619","126625","126626","126627","126629","126630","126631","126632","126633","126635","126636","126637","126638","126639","126640","126641","126642","126643","126644","126645","126646","126647","126648","126649","126650","126651","61696","127232","127233","127234","127235","127236","127237","127238","127239","127240","127241","127242","127248","127249","127250","127251","127252","127253","127254","127255","127256","127257","127258","127259","127260","127261","127262","127263","127264","127265","127266","127267","127268","127269","127270","127271","127272","127273","127274","127275","127276","127277","127278","127280","127281","127282","127283","127284","127285","127286","127287","127288","127289","127290","127291","127292","127293","127294","127295","127296","127297","127298","127299","127300","127301","127302","127303","127304","127305","127306","127307","127308","127309","127310","127311","127338","127339","127376","61952","127488","127489","127490","127504","127505","127506","127507","127508","127509","127510","127511","127512","127513","127514","127515","127516","127517","127518","127519","127520","127521","127522","127523","127524","127525","127526","127527","127528","127529","127530","127531","127532","127533","127534","127535","127536","127537","127538","127539","127540","127541","127542","127543","127544","127545","127546","127552","127553","127554","127555","127556","127557","127558","127559","127560","127568","127569","63488","194560","194561","194562","194563","194564","194565","194566","194567","194568","194569","194570","194571","194572","194573","194574","194575","194576","194577","194578","194579","194580","194581","194582","194583","194584","194585","194586","194587","194588","194589","194590","194591","194592","194593","194594","194595","194596","194597","194598","194599","194600","194601","194602","194603","194604","194605","194606","194607","194608","194609","194610","194611","194612","194613","194614","194615","194616","194617","194618","194619","194620","194621","194622","194623","194624","194625","194626","194627","194628","194629","194630","194631","194632","194633","194634","194635","194636","194637","194638","194639","194640","194641","194642","194643","194644","194645","194646","194647","194648","194649","194650","194651","194652","194653","194654","194655","194656","194657","194658","194659","194660","194661","194662","194663","194664","194665","194666","194667","194668","194669","194670","194671","194672","194673","194674","194675","194676","194677","194678","194679","194680","194681","194682","194683","194684","194685","194686","194687","194688","194689","194690","194691","194692","194693","194694","194695","194696","194697","194698","194699","194700","194701","194702","194703","194704","194705","194706","194707","194708","194709","194710","194711","194712","194713","194714","194715","194716","194717","194718","194719","194720","194721","194722","194723","194724","194725","194726","194727","194728","194729","194730","194731","194732","194733","194734","194735","194736","194737","194738","194739","194740","194741","194742","194743","194744","194745","194746","194747","194748","194749","194750","194751","194752","194753","194754","194755","194756","194757","194758","194759","194760","194761","194762","194763","194764","194765","194766","194767","194768","194769","194770","194771","194772","194773","194774","194775","194776","194777","194778","194779","194780","194781","194782","194783","194784","194785","194786","194787","194788","194789","194790","194791","194792","194793","194794","194795","194796","194797","194798","194799","194800","194801","194802","194803","194804","194805","194806","194807","194808","194809","194810","194811","194812","194813","194814","194815","63744","63745","63746","63747","63748","63749","63750","63751","63752","63753","63754","63755","63756","63757","63758","63759","63760","63761","63762","63763","63764","63765","63766","63767","63768","63769","63770","63771","63772","63773","63774","63775","63776","63777","63778","63779","63780","63781","63782","63783","63784","63785","63786","63787","63788","63789","63790","63791","63792","63793","63794","63795","63796","63797","63798","63799","63800","63801","63802","63803","63804","63805","63806","63807","63808","63809","63810","63811","63812","63813","63814","63815","63816","63817","63818","63819","63820","63821","63822","63823","63824","63825","63826","63827","63828","63829","63830","63831","63832","63833","63834","63835","63836","63837","63838","63839","63840","63841","63842","63843","63844","63845","63846","63847","63848","63849","63850","63851","63852","63853","63854","63855","63856","63857","63858","63859","63860","63861","63862","63863","63864","63865","63866","63867","63868","63869","63870","63871","63872","63873","63874","63875","63876","63877","63878","63879","63880","63881","63882","63883","63884","63885","63886","63887","63888","63889","63890","63891","63892","63893","63894","63895","63896","63897","63898","63899","63900","63901","63902","63903","63904","63905","63906","63907","63908","63909","63910","63911","63912","63913","63914","63915","63916","63917","63918","63919","63920","63921","63922","63923","63924","63925","63926","63927","63928","63929","63930","63931","63932","63933","63934","63935","63936","63937","63938","63939","63940","63941","63942","63943","63944","63945","63946","63947","63948","63949","63950","63951","63952","63953","63954","63955","63956","63957","63958","63959","63960","63961","63962","63963","63964","63965","63966","63967","63968","63969","63970","63971","63972","63973","63974","63975","63976","63977","63978","63979","63980","63981","63982","63983","63984","63985","63986","63987","63988","63989","63990","63991","63992","63993","63994","63995","63996","63997","63998","63999","194816","194817","194818","194819","194820","194821","194822","194823","194824","194825","194826","194827","194828","194829","194830","194831","194832","194833","194834","194835","194836","194837","194838","194839","194840","194841","194842","194843","194844","194845","194846","194847","194848","194849","194850","194851","194852","194853","194854","194855","194856","194857","194858","194859","194860","194861","194862","194863","194864","194865","194866","194867","194868","194869","194870","194871","194872","194873","194874","194875","194876","194877","194878","194879","194880","194881","194882","194883","194884","194885","194886","194887","194888","194889","194890","194891","194892","194893","194894","194895","194896","194897","194898","194899","194900","194901","194902","194903","194904","194905","194906","194907","194908","194909","194910","194911","194912","194913","194914","194915","194916","194917","194918","194919","194920","194921","194922","194923","194924","194925","194926","194927","194928","194929","194930","194931","194932","194933","194934","194935","194936","194937","194938","194939","194940","194941","194942","194943","194944","194945","194946","194947","194948","194949","194950","194951","194952","194953","194954","194955","194956","194957","194958","194959","194960","194961","194962","194963","194964","194965","194966","194967","194968","194969","194970","194971","194972","194973","194974","194975","194976","194977","194978","194979","194980","194981","194982","194983","194984","194985","194986","194987","194988","194989","194990","194991","194992","194993","194994","194995","194996","194997","194998","194999","195000","195001","195002","195003","195004","195005","195006","195007","195008","195009","195010","195011","195012","195013","195014","195015","195016","195017","195018","195019","195020","195021","195022","195023","195024","195025","195026","195027","195028","195029","195030","195031","195032","195033","195034","195035","195036","195037","195038","195039","195040","195041","195042","195043","195044","195045","195046","195047","195048","195049","195050","195051","195052","195053","195054","195055","195056","195057","195058","195059","195060","195061","195062","195063","195064","195065","195066","195067","195068","195069","195070","195071","64000","64001","64002","64003","64004","64005","64006","64007","64008","64009","64010","64011","64012","64013","64016","64018","64021","64022","64023","64024","64025","64026","64027","64028","64029","64030","64032","64034","64037","64038","64042","64043","64044","64045","64046","64047","64048","64049","64050","64051","64052","64053","64054","64055","64056","64057","64058","64059","64060","64061","64062","64063","64064","64065","64066","64067","64068","64069","64070","64071","64072","64073","64074","64075","64076","64077","64078","64079","64080","64081","64082","64083","64084","64085","64086","64087","64088","64089","64090","64091","64092","64093","64094","64095","64096","64097","64098","64099","64100","64101","64102","64103","64104","64105","64106","64107","64108","64109","64112","64113","64114","64115","64116","64117","64118","64119","64120","64121","64122","64123","64124","64125","64126","64127","64128","64129","64130","64131","64132","64133","64134","64135","64136","64137","64138","64139","64140","64141","64142","64143","64144","64145","64146","64147","64148","64149","64150","64151","64152","64153","64154","64155","64156","64157","64158","64159","64160","64161","64162","64163","64164","64165","64166","64167","64168","64169","64170","64171","64172","64173","64174","64175","64176","64177","64178","64179","64180","64181","64182","64183","64184","64185","64186","64187","64188","64189","64190","64191","64192","64193","64194","64195","64196","64197","64198","64199","64200","64201","64202","64203","64204","64205","64206","64207","64208","64209","64210","64211","64212","64213","64214","64215","64216","64217","195072","195073","195074","195075","195076","195077","195078","195079","195080","195081","195082","195083","195084","195085","195086","195087","195088","195089","195090","195091","195092","195093","195094","195095","195096","195097","195098","195099","195100","195101","64256","64257","64258","64259","64260","64261","64262","64275","64276","64277","64278","64279","64285","64286","64287","64288","64289","64290","64291","64292","64293","64294","64295","64296","64297","64298","64299","64300","64301","64302","64303","64304","64305","64306","64307","64308","64309","64310","64312","64313","64314","64315","64316","64318","64320","64321","64323","64324","64326","64327","64328","64329","64330","64331","64332","64333","64334","64335","64336","64337","64338","64339","64340","64341","64342","64343","64344","64345","64346","64347","64348","64349","64350","64351","64352","64353","64354","64355","64356","64357","64358","64359","64360","64361","64362","64363","64364","64365","64366","64367","64368","64369","64370","64371","64372","64373","64374","64375","64376","64377","64378","64379","64380","64381","64382","64383","64384","64385","64386","64387","64388","64389","64390","64391","64392","64393","64394","64395","64396","64397","64398","64399","64400","64401","64402","64403","64404","64405","64406","64407","64408","64409","64410","64411","64412","64413","64414","64415","64416","64417","64418","64419","64420","64421","64422","64423","64424","64425","64426","64427","64428","64429","64430","64431","64432","64433","64467","64468","64469","64470","64471","64472","64473","64474","64475","64476","64477","64478","64479","64480","64481","64482","64483","64484","64485","64486","64487","64488","64489","64490","64491","64492","64493","64494","64495","64496","64497","64498","64499","64500","64501","64502","64503","64504","64505","64506","64507","64508","64509","64510","64511","64512","64513","64514","64515","64516","64517","64518","64519","64520","64521","64522","64523","64524","64525","64526","64527","64528","64529","64530","64531","64532","64533","64534","64535","64536","64537","64538","64539","64540","64541","64542","64543","64544","64545","64546","64547","64548","64549","64550","64551","64552","64553","64554","64555","64556","64557","64558","64559","64560","64561","64562","64563","64564","64565","64566","64567","64568","64569","64570","64571","64572","64573","64574","64575","64576","64577","64578","64579","64580","64581","64582","64583","64584","64585","64586","64587","64588","64589","64590","64591","64592","64593","64594","64595","64596","64597","64598","64599","64600","64601","64602","64603","64604","64605","64606","64607","64608","64609","64610","64611","64612","64613","64614","64615","64616","64617","64618","64619","64620","64621","64622","64623","64624","64625","64626","64627","64628","64629","64630","64631","64632","64633","64634","64635","64636","64637","64638","64639","64640","64641","64642","64643","64644","64645","64646","64647","64648","64649","64650","64651","64652","64653","64654","64655","64656","64657","64658","64659","64660","64661","64662","64663","64664","64665","64666","64667","64668","64669","64670","64671","64672","64673","64674","64675","64676","64677","64678","64679","64680","64681","64682","64683","64684","64685","64686","64687","64688","64689","64690","64691","64692","64693","64694","64695","64696","64697","64698","64699","64700","64701","64702","64703","64704","64705","64706","64707","64708","64709","64710","64711","64712","64713","64714","64715","64716","64717","64718","64719","64720","64721","64722","64723","64724","64725","64726","64727","64728","64729","64730","64731","64732","64733","64734","64735","64736","64737","64738","64739","64740","64741","64742","64743","64744","64745","64746","64747","64748","64749","64750","64751","64752","64753","64754","64755","64756","64757","64758","64759","64760","64761","64762","64763","64764","64765","64766","64767","64768","64769","64770","64771","64772","64773","64774","64775","64776","64777","64778","64779","64780","64781","64782","64783","64784","64785","64786","64787","64788","64789","64790","64791","64792","64793","64794","64795","64796","64797","64798","64799","64800","64801","64802","64803","64804","64805","64806","64807","64808","64809","64810","64811","64812","64813","64814","64815","64816","64817","64818","64819","64820","64821","64822","64823","64824","64825","64826","64827","64828","64829","64848","64849","64850","64851","64852","64853","64854","64855","64856","64857","64858","64859","64860","64861","64862","64863","64864","64865","64866","64867","64868","64869","64870","64871","64872","64873","64874","64875","64876","64877","64878","64879","64880","64881","64882","64883","64884","64885","64886","64887","64888","64889","64890","64891","64892","64893","64894","64895","64896","64897","64898","64899","64900","64901","64902","64903","64904","64905","64906","64907","64908","64909","64910","64911","64914","64915","64916","64917","64918","64919","64920","64921","64922","64923","64924","64925","64926","64927","64928","64929","64930","64931","64932","64933","64934","64935","64936","64937","64938","64939","64940","64941","64942","64943","64944","64945","64946","64947","64948","64949","64950","64951","64952","64953","64954","64955","64956","64957","64958","64959","64960","64961","64962","64963","64964","64965","64966","64967","65008","65009","65010","65011","65012","65013","65014","65015","65016","65017","65018","65019","65020","65024","65040","65041","65042","65043","65044","65045","65046","65047","65048","65049","65056","65057","65058","65059","65060","65061","65062","65063","65064","65065","65066","65067","65068","65069","65072","65073","65074","65075","65076","65077","65078","65079","65080","65081","65082","65083","65084","65085","65086","65087","65088","65089","65090","65091","65092","65095","65096","65097","65098","65099","65100","65101","65102","65103","65104","65105","65106","65108","65109","65110","65111","65112","65113","65114","65115","65116","65117","65118","65119","65120","65121","65122","65123","65124","65125","65126","65128","65129","65130","65131","65136","65137","65138","65140","65142","65143","65144","65145","65146","65147","65148","65149","65150","65151","65152","65153","65154","65155","65156","65157","65158","65159","65160","65161","65162","65163","65164","65165","65166","65167","65168","65169","65170","65171","65172","65173","65174","65175","65176","65177","65178","65179","65180","65181","65182","65183","65184","65185","65186","65187","65188","65189","65190","65191","65192","65193","65194","65195","65196","65197","65198","65199","65200","65201","65202","65203","65204","65205","65206","65207","65208","65209","65210","65211","65212","65213","65214","65215","65216","65217","65218","65219","65220","65221","65222","65223","65224","65225","65226","65227","65228","65229","65230","65231","65232","65233","65234","65235","65236","65237","65238","65239","65240","65241","65242","65243","65244","65245","65246","65247","65248","65249","65250","65251","65252","65253","65254","65255","65256","65257","65258","65259","65260","65261","65262","65263","65264","65265","65266","65267","65268","65269","65270","65271","65272","65273","65274","65275","65276","65280","65281","65282","65283","65284","65285","65286","65287","65288","65289","65290","65291","65292","65293","65294","65295","65296","65297","65298","65299","65300","65301","65302","65303","65304","65305","65306","65307","65308","65309","65310","65311","65312","65313","65314","65315","65316","65317","65318","65319","65320","65321","65322","65323","65324","65325","65326","65327","65328","65329","65330","65331","65332","65333","65334","65335","65336","65337","65338","65339","65340","65341","65342","65343","65344","65345","65346","65347","65348","65349","65350","65351","65352","65353","65354","65355","65356","65357","65358","65359","65360","65361","65362","65363","65364","65365","65366","65367","65368","65369","65370","65371","65372","65373","65374","65375","65376","65377","65378","65379","65380","65381","65382","65383","65384","65385","65386","65387","65388","65389","65390","65391","65392","65393","65394","65395","65396","65397","65398","65399","65400","65401","65402","65403","65404","65405","65406","65407","65408","65409","65410","65411","65412","65413","65414","65415","65416","65417","65418","65419","65420","65421","65422","65423","65424","65425","65426","65427","65428","65429","65430","65431","65432","65433","65434","65435","65436","65437","65438","65439","65440","65441","65442","65443","65444","65445","65446","65447","65448","65449","65450","65451","65452","65453","65454","65455","65456","65457","65458","65459","65460","65461","65462","65463","65464","65465","65466","65467","65468","65469","65470","65474","65475","65476","65477","65478","65479","65482","65483","65484","65485","65486","65487","65490","65491","65492","65493","65494","65495","65498","65499","65500","65504","65505","65506","65507","65508","65509","65510","65512","65513","65514","65515","65516","65517","65518","unorm","shimApplied","configurable","writable","form","RangeError","Z","L","default","_default","_interopRequireDefault","_uslug","_token","_typeof","Symbol","iterator","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","iter","from","arr2","_objectSpread","target","ownKeys","sym","_defineProperty","TOC","TOC_RE","markdownItSecondInstance","headingIds","tocHtml","repeat","string","num","makeSafe","slugifyFn","space","renderAnchorLinkSymbol","anchorLinkSymbolClassName","anchorLinkSymbol","renderAnchorLink","anchor","anchorClassName","openLinkToken","closeLinkToken","wrapHeadingTextInAnchor","unshift","_tokens$children","linkTokens","actionOnArray","false","true","anchorLinkSpace","anchorLinkBefore","treeToMarkdownBulletList","tree","indent","item","indentation","heading","contentWithoutAnchor","nodes","generateTocMarkdownFromArray","headings","tocFirstLevel","tocLastLevel","lastItem","toc","tocClassName","tocCallback","anchorLink","resetIds","tocArray","tocMarkdown","tocTokens","slugify","heading_close","_tocAnchor","reduce","acc","t","anchorLinkPrefix","substr","after","exec","m","originalHeadingOpen","heading_open","_len","_key","renderToken","_len2","_key2","toc_open","toc_close","toc_body","buildHTML","buildMathML","buildCommon","Options","Settings","Style","makeSpan","buildTree","expression","settings","startStyle","TEXT","displayMode","DISPLAY","size","mathMLNode","htmlNode","katexNode","emojies_defs","emojies_shortcuts","emoji_html","emoji_replace","normalize_opts","defaults","defs","shortcuts","enabled","opts","emoji","scanRE","replaceRE","quoteRE","emojies","alias","names","sort","reverse","InternalStateModule","defineIterator","STRING_ITERATOR","setInternalState","getInternalState","getterFor","iterated","point","done","pmax","slashes","auth","port","pathname","search","lineMax","Ruler","__rules__","__cache__","__find__","__compile__","chains","rule","alt","altName","fn","at","opt","before","beforeName","ruleName","afterName","chainName","ucm","ZPCc","P","Cc","splitTextToken","last_pos","offset","emoji_name","blockTokens","autolinkLevel","matchStart","matchEnd","skipBulletListMarker","skipOrderedListMarker","markTightParagraphs","initial","oldTShift","oldIndent","oldLIndent","oldTight","oldParentType","posAfterMarker","indentAfterMarker","markerValue","markerCharCode","isOrdered","contentStart","listTokIdx","prevEmptyEnd","listLines","itemLines","tight","Number","parentType","min","tokenize","scanned","jump","postProcess","startDelim","endDelim","loneMarkers","pop","NEWLINES_RE","NULL_RE","_rules","_rules2","skipToken","ok","$","$filter","arrayMethodHasSpeciesSupport","HAS_SPECIES_SUPPORT","USES_TO_LENGTH","forced","callbackfn","collection","collectionStrong","init","MathNode","TextNode","createElementNS","OTHER_CHARS","UNICODE_SPACE_RE","abbr_def","label","title","labelStart","labelEnd","abbreviations","abbr_replace","reg","regText","regSimple","currentToken","b","split","fixRegExpWellKnownSymbolLogic","anObject","toObject","toLength","toInteger","requireObjectCoercible","advanceStringIndex","regExpExec","SUBSTITUTION_SYMBOLS","SUBSTITUTION_SYMBOLS_NO_NAMED","maybeToString","REPLACE","nativeReplace","maybeCallNative","reason","searchValue","replaceValue","O","replacer","regexp","REPLACE_KEEPS_$0","res","rx","S","functionalReplace","fullUnicode","unicode","results","matchStr","accumulatedResult","nextSourcePosition","matched","captures","namedCaptures","groups","replacerArgs","replacement","getSubstitution","tailPos","capture","n","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","UNESCAPE_RE","subscript","found","parseLinkLabel","parseLinkDestination","parseLinkTitle","attr_name","unquoted","single_quoted","double_quoted","attr_value","open_tag","close_tag","comment","processing","declaration","cdata","HTML_TAG_RE","HTML_OPEN_CLOSE_TAG_RE","whitespaces","whitespace","ltrim","rtrim","createMethod","TYPE","$this","data","color","phantom","parentStyle","parentSize","extend","extension","withStyle","withSize","withColor","withPhantom","withFont","reset","colorMap","getColor","DIGITAL_RE","NAMED_RE","block_names","HTML_SEQUENCES","lineText","redefineAll","bind","anInstance","iterate","setSpecies","DESCRIPTORS","fastKey","internalStateGetterFor","getConstructor","wrapper","CONSTRUCTOR_NAME","IS_MAP","ADDER","C","that","iterable","first","define","previous","entry","getEntry","removed","clear","prev","boundFunction","get","setStrong","ITERATOR_NAME","getInternalCollectionState","getInternalIteratorState","kind","N","multiplier","cramped","sizeMultiplier","sup","sub","fracNum","fracDen","cramp","cls","sizeNames","resetNames","D","Dc","T","Tc","Sc","SS","SSc","SCRIPT","SCRIPTSCRIPT","cof","TAG","ARG","tryGet","B","callee","isForced","redefine","InternalMetadataModule","isObject","checkCorrectnessOfIteration","setToStringTag","inheritIfRequired","common","IS_WEAK","NativeConstructor","NativePrototype","Constructor","exported","fixMethod","KEY","nativeMethod","entries","REQUIRED","instance","HASNT_CHAINING","THROWS_ON_PRIMITIVES","ACCEPT_ITERABLES","BUGGY_ZERO","$instance","dummy","ESCAPED","functions","environments","Lexer","parseData","Parser","ParseNode","ParseFuncOrArgument","isFunction","expect","consume","nextToken","lex","parseInput","parseExpression","endOfExpression","breakOnInfix","breakOnToken","body","atom","parseAtom","throwOnError","errorNode","handleUnsupportedCmd","handleInfixNodes","funcName","overIndex","replaceWith","numerNode","denomNode","numerBody","denomBody","callFunction","SUPSUB_GREEDINESS","handleSupSubscript","symPos","parseGroup","funcGreediness","greediness","parseFunction","textordArray","textNode","colorNode","errorColor","superscript","parseImplicitGroup","limits","alwaysHandleSupSub","prime","primes","sizeFuncs","styleFuncs","parseSymbol","func","left","right","envName","namepos","parseArguments","context","parser","positions","handler","contains","baseGroup","funcData","allowedInText","totalArgs","numArgs","numOptionalArgs","baseGreediness","arg","argNode","argType","argTypes","parseSpecialGroup","parseOptionalGroup","argGreediness","innerMode","optional","outerMode","openBrace","nucleus","StateCore","setPrototypeOf","Wrapper","NewTarget","NewTargetPrototype","component","$export","exp","F","hasEmptyLines","skipEmptyLines","defineFunction","props","width","delimiterSizes","fontAliases","atoms","hasBarLine","numer","denom","leftDelim","rightDelim","delim","delimType","nameGroup","default_rules","code_inline","slf","renderAttrs","code_block","fence","highlighted","tmpAttrs","tmpToken","langName","image","renderInlineAsText","hardbreak","softbreak","html_block","html_inline","needLf","lines","$find","find","addToUnscopables","FIND","SKIPS_HOLES","M","getLine","escapedSplit","escapes","lastPos","backTicked","lastBackTick","substring","columns","columnCount","aligns","tableLines","tbodyLines","fontMetrics","parseArray","row","rowGaps","cell","cr","defineEnvironment","colalign","cols","ca","align","separator","hskipBeforeAndAfter","arraystretch","pregap","postgap","metrics","quad","emptyGroup","numCols","StateBlock","s","indent_found","ddIndent","keepLastLF","lineIndent","queue","lineStart","lastDelim","currDelim","decodeCache","getDecodeCache","exclude","defaultChars","seq","b1","b2","b3","b4","chr","componentChars","ref","href","oldPos","references","isLinkOpen","isLinkClose","ln","htmlLinkLevel","urlText","links","pretest","schema","emptyLines","factory","__WEBPACK_EXTERNAL_MODULE_1__","__WEBPACK_EXTERNAL_MODULE_2__","__WEBPACK_EXTERNAL_MODULE_3__","__WEBPACK_EXTERNAL_MODULE_4__","__WEBPACK_EXTERNAL_MODULE_5__","__WEBPACK_EXTERNAL_MODULE_6__","__WEBPACK_EXTERNAL_MODULE_7__","__WEBPACK_EXTERNAL_MODULE_8__","__WEBPACK_EXTERNAL_MODULE_9__","__WEBPACK_EXTERNAL_MODULE_10__","__WEBPACK_EXTERNAL_MODULE_11__","__WEBPACK_EXTERNAL_MODULE_12__","__WEBPACK_EXTERNAL_MODULE_13__","__WEBPACK_EXTERNAL_MODULE_14__","modules","installedModules","moduleId","loaded","p","_getIterator2","_getIterator3","_keys","_keys2","_markdownIt","_markdownIt2","_markdownItEmoji","_markdownItEmoji2","_markdownItSub","_markdownItSub2","_markdownItSup","_markdownItSup2","_markdownItFootnote","_markdownItFootnote2","_markdownItDeflist","_markdownItDeflist2","_markdownItAbbr","_markdownItAbbr2","_markdownItIns","_markdownItIns2","_markdownItMark","_markdownItMark2","_markdownItTocAndAnchor","_markdownItTocAndAnchor2","_markdownItKatex","_markdownItKatex2","_markdownItTaskLists","_markdownItTaskLists2","template","sourceData","watches","show","tableClass","taskLists","tocId","tocClass","tocAnchorLink","tocAnchorClass","tocAnchorLinkSymbol","tocAnchorLinkSpace","tocAnchorLinkClass","anchorAttributes","prerender","Function","postrender","htmlData","computed","tocLastLevelComputed","_this","table_open","defaultLinkRenderer","link_open","aIndex","getElementById","innerHTML","$emit","outHtml","domProps","beforeMount","_this2","$slots","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","slot","return","$watch","$forceUpdate","v","nodeType","freeGlobal","window","maxInt","tMin","tMax","damp","initialBias","initialN","delimiter","regexPunycode","regexNonASCII","regexSeparators","errors","baseMinusTMin","stringFromCharCode","mapDomain","parts","labels","encoded","ucs2decode","extra","output","counter","ucs2encode","basicToDigit","codePoint","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","k","out","basic","oldi","w","baseMinusT","inputLength","bias","lastIndexOf","handledCPCount","basicLength","q","currentValue","handledCPCountPlusOne","qMinusT","tok","option","defaultValue","katex","isValidDelim","prevChar","math_inline","math_block","firstLine","lastLine","katexInline","latex","renderToString","console","log","inlineRenderer","katexBlock","blockRenderer","Core","toPrimitive","NUMBER","NativeNumber","NumberPrototype","BROKEN_CLASSOF","toNumber","argument","third","radix","maxCode","digits","NaN","NumberWrapper","valueOf","angry","blush","broken_heart","confused","cry","frowning","heart","imp","innocent","joy","kissing","laughing","neutral_face","open_mouth","rage","smile","smiley","smiling_imp","sob","stuck_out_tongue","sunglasses","sweat","sweat_smile","unamused","wink","getRelocatable","__matchAtRelocatable","matchAt","sticky","reloc","QUOTE_TEST_RE","QUOTE_RE","APOSTROPHE","replaceAt","process_inlines","thisLevel","canOpen","canClose","isSingle","stack","openQuote","closeQuote","OUTER","single","blkIdx","src_Any","src_Cc","src_Z","src_P","src_ZPCc","src_ZCc","src_pseudo_letter","src_ip4","src_auth","src_port","src_host_terminator","src_path","src_email_name","src_xn","src_domain_root","src_domain","src_host","tpl_host_fuzzy","tpl_host_no_ip_fuzzy","src_host_strict","tpl_host_fuzzy_strict","src_host_port_strict","tpl_host_port_fuzzy_strict","tpl_host_port_no_ip_fuzzy_strict","tpl_host_fuzzy_test","tpl_email_fuzzy","tpl_link_fuzzy","tpl_link_no_ip_fuzzy","getIterator","iterFn","setTextContent","nativeIndexOf","elem","deflt","setting","defaultIfUndefined","uppercase","ESCAPE_LOOKUP","\"","ESCAPE_REGEX","escaper","testNode","textContent","innerText","clearNode","isTerminatorChar","isExtensible","preventExtensions","RARE_RE","SCOPED_ABBR_TEST_RE","SCOPED_ABBR_RE","SCOPED_ABBR","r","tm","replaceFn","replace_scoped","inlineTokens","replace_rare","disableCheckboxes","useLabelWrapper","useLabelAfter","parentToken","targetLevel","isTodoItem","isInline","isParagraph","isListItem","startsWithTodoMarkdown","todoify","TokenConstructor","makeCheckbox","ceil","random","afterLabel","beginLabel","endLabel","checkbox","disabledAttr","for","labelAfter","params","mem","haveEndMarker","isLetter","lc","encodeCache","getEncodeCache","keepEscaped","nextCode","encodeURIComponent","parseTree","baseNode","compatMode","warn","generateParseTree","__parse","isStrong","domTree","greekCapitals","dotlessLetters","makeSymbol","getCharacterMetrics","mathsym","mathDefault","mathit","makeOrd","fontName","fontMap","sizeElementFromChildren","makeFragment","fragment","makeFontSizer","fontSize","fontSizeInner","fontSizer","makeVList","positionType","positionData","currPos","oldChildren","diff","bottom","realChildren","childWrap","top","baselineFix","vlist","sizingMultiplier","size1","size2","size3","size4","size5","size6","size7","size8","size9","size10","spacingFunctions","variant","sigma5","sigma6","sigma8","sigma9","sigma10","sigma11","sigma12","sigma13","sigma14","sigma15","sigma16","sigma17","sigma18","sigma19","sigma20","sigma21","sigma21Script","sigma21ScriptScript","sigma22","xi8","xi9","xi10","xi11","xi12","xi13","ptPerEm","doubleRuleSep","xHeight","num1","num2","num3","denom1","denom2","sup1","sup2","sup3","sub1","sub2","supDrop","subDrop","axisHeight","defaultRuleThickness","bigOpSpacing1","bigOpSpacing2","bigOpSpacing3","bigOpSpacing4","bigOpSpacing5","emPerEx","delim1","getDelim2","metricMap","character","buildExpression","buildGroup","groupToType","genfrac","ordgroup","overline","underline","leftright","sqrt","getTypeOfGroup","shouldHandleSupSub","isCharacterBox","getBaseElem","baseElem","makeNullDelimiter","groupTypes","prevAtom","elements","supmid","submid","supShift","subShift","minSupShift","supsub","scriptspace","ruleWidth","psi","marginLeft","fstyle","numShift","clearance","denomShift","frac","delimSize","nstyle","dstyle","numerreset","denomreset","candiateClearance","mid","midShift","customSizedDelim","nr","nc","pt","arraycolsep","baselineskip","arrayskip","arstrutHeight","arstrutDepth","totalHeight","inrow","outrow","elt","gap","unit","number","colSep","colDescrNum","colDescriptions","colDescr","firstSeparator","verticalAlign","sepwidth","col","fix","supGroup","subGroup","hasLimits","noSuccessor","large","baseShift","slant","supKern","subKern","finalGroup","innerGroup","phi","lineClearance","innerHeight","minDelimiterHeight","delimDepth","delimShift","rootWrap","innerRootHeight","innerRootDepth","toShift","rootVList","rootVListWrap","newStyle","sizedDelim","innerDepth","leftRightDelim","borderRightWidth","borderTopWidth","supsubGroup","baseChar","vecClass","accentBody","accentWrap","groupNode","JSON","stringify","topStrut","bottomStrut","Any","Cf","_endLine","destEndPos","destEndLineNo","Url","protocolPattern","portPattern","simplePathPattern","delims","unwise","autoEscape","nonHostChars","hostEndingChars","hostnameMaxLen","hostnamePartPattern","hostnamePartStart","hostlessProtocol","slashedProtocol","urlParse","slashesDenoteHost","u","lowerProto","hec","rest","simplePath","atSign","hostEnd","host","parseHost","ipv6Hostname","hostparts","part","newpart","validParts","notHost","bit","qm","disableNested","prevPos","_unicodeCategory","allowedChars","lower","spaces","rv","chars","val","slug","tokenRegex","whitespaceRegex","_innerLex","ignoreWhitespace","cssColor","_innerLexColor","sizeRegex","_innerLexSize","_innerLexWhitespace","mathMLTree","makeText","getVariant","withDelims","leftOp","rightOp","outerNode","leftNode","rightNode","accentNode","styleAttributes","operator","texExpression","annotation","semantics","_footnote_ref","subId","_footnote_block_open","_footnote_block_close","_footnote_open","_footnote_close","_footnote_anchor","footnote_def","oldBMark","oldSCount","posAfterColon","footnotes","refs","footnote_inline","footnoteId","footnote_ref","footnoteSubId","footnote_tail","lastParagraph","current","currentLabel","insideRef","refTokens","footnote_block_open","footnote_block_close","footnote_open","footnote_close","footnote_anchor","$keys","lastLineEmpty","oldBMarks","getMetrics","mathrmSize","styleWrap","toStyle","makeSmallDelim","center","makeLargeDelim","makeInner","sizeClass","makeStackedDelim","heightTotal","middle","topMetrics","topHeightTotal","repeatMetrics","repeatHeightTotal","bottomMetrics","bottomHeightTotal","middleHeightTotal","middleFactor","middleMetrics","minHeight","repeatCount","realHeightTotal","inners","stackLargeDelimiters","stackAlwaysDelimiters","stackNeverDelimiters","sizeToMaxHeight","makeSizedDelim","stackNeverDelimiterSequence","stackAlwaysDelimiterSequence","stackLargeDelimiterSequence","delimTypeToFont","traverseSequence","sequence","heightDepth","makeCustomSizedDelim","makeLeftRightDelim","delimiterFactor","delimiterExtend","maxDistFromAxis","toParse","hiddenKeys","uid","FREEZING","METADATA","setMetadata","objectID","weakData","getWeakData","onFreeze","isRegExp","defaultOptions","fuzzyLink","fuzzyEmail","fuzzyIP","isOptionsObj","defaultSchemas","validate","http","no_http","mailto","tlds_2ch_src_re","tlds_default","resetScanCache","__index__","__text_cache__","createValidator","createNormalizer","compile","tlds","__tlds__","untpl","tpl","src_tlds","__tlds_replaced__","email_fuzzy","link_fuzzy","link_no_ip_fuzzy","host_fuzzy_test","aliases","schemaError","__compiled__","__schemas__","compiled","link","slist","schema_test","schema_search","Match","__last_index__","__schema__","raw","createMatch","schemas","__opts__","definition","ml","me","tld_pos","at_pos","testSchemaAt","keepOld","el","cnt","skipMarker","deflist","ddLine","dtLine","oldDDIndent"],"mappings":"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I,CAAC,CAAC,IAAI,MAAMC,IAAI,CAAC,CAAC,GAAG,MAAMC,IAAI,CAAC,CAAC,IAAI,MAAMC,IAAI,CAAC,CAAC,GAAG,MAAMC,IAAI,CAAC,CAAC,IAAI,MAAMC,IAAI,CAAC,CAAC,GAAG,MAAMC,IAAI,CAAC,CAAC,IAAI,MAAMC,IAAI,CAAC,CAAC,GAAG,MAAMC,IAAI,CAAC,CAAC,IAAI,MAAMC,IAAI,CAAC,CAAC,GAAG,MAAMC,IAAI,CAAC,CAAC,IAAI,MAAMC,IAAI,CAAC,CAAC,GAAG,MAAMC,IAAI,CAAC,CAAC,IAAI,MAAMC,IAAI,CAAC,CAAC,GAAG,MAAMC,IAAI,CAAC,CAAC,IAAI,MAAMC,IAAI,CAAC,CAAC,GAAG,MAAMC,IAAI,CAAC,CAAC,IAAI,MAAMC,IAAI,CAAC,CAAC,GAAG,MAAMC,IAAI,CAAC,CAAC,IAAI,MAAMC,IAAI,CAAC,CAAC,GAAG,MAAMC,IAAI,CAAC,CAAC,IAAI,MAAMC,IAAI,CAAC,CAAC,GAAG,MAAMC,IAAI,CAAC,CAAC,IAAI,MAAMC,IAAI,CAAC,CAAC,GAAG,MAAMC,IAAI,CAAC,CAAC,IAAI,MAAMC,IAAI,CAAC,CAAC,GAAG,MAAMC,IAAI,CAAC,CAAC,GAAG,IAAI,KAAKC,IAAI,CAAC,CAAC,IAAI,KAAK,KAAKC,IAAI,CAAC,CAAC,GAAG,MAAMC,IAAI,CAAC,CAAC,IAAI,MAAMC,IAAI,CAAC,CAAC,GAAG,MAAMC,IAAI,CAAC,CAAC,IAAI,MAAMC,IAAI,CAAC,CAAC,GAAG,MAAMC,IAAI,CAAC,CAAC,IAAI,MAAMC,IAAI,CAAC,CAAC,GAAG,MAAMC,IAAI,CAAC,CAAC,IAAI,MAAMC,IAAI,CAAC,CAAC,GAAG,MAAMC,IAAI,CAAC,CAAC,IAAI,MAAMC,IAAI,CAAC,CAAC,GAAG,KAAK,KAAKC,IAAI,CAAC,CAAC,IAAI,KAAK,KAAKC,IAAI,CAAC,CAAC,GAAG,MAAMC,IAAI,CAAC,CAAC,IAAI,MAAMC,IAAI,CAAC,CAAC,GAAG,MAAMC,IAAI,CAAC,CAAC,IAAI,MAAMC,IAAI,CAAC,CAAC,GAAG,MAAMC,IAAI,CAAC,CAA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AAK,CAAC,CAAC,KAAK,MAAMC,KAAK,CAAC,CAAC,KAAK,MAAMC,KAAK,CAAC,CAAC,KAAK,MAAMC,KAAK,CAAC,CAAC,KAAK,MAAMC,KAAK,CAAC,CAAC,KAAK,MAAMC,KAAK,CAAC,CAAC,KAAK,MAAMC,KAAK,CAAC,CAAC,KAAK,MAAMC,KAAK,CAAC,CAAC,KAAK,MAAMC,KAAK,CAAC,CAAC,KAAK,MAAMC,KAAK,CAAC,CAAC,KAAK,MAAMC,KAAK,CAAC,CAAC,KAAK,MAAMC,KAAK,CAAC,CAAC,KAAK,MAAMC,KAAK,CAAC,CAAC,KAAK,MAAMC,KAAK,CAAC,CAAC,KAAK,OACxxDC,KAAK,CAACC,KAAK,CAAC,CAAC,KAAK,MAAM,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,IAAIC,KAAK,CAAC,CAAC,IAAIC,KAAK,CAAC,CAAC,IAAIC,KAAK,CAAC,CAAC,IAAIC,KAAK,CAAC,CAAC,IAAIC,KAAK,CAAC,CAAC,IAAIC,KAAK,CAAC,CAAC,I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AAK,CAAC,CAAC,GAAGC,KAAK,CAAC,CAAC,GAAGC,KAAK,CAAC,CAAC,GAAGC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,MAC/TC,KAAK,CAACC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,MAAM,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,MAAM,KAAKC,KAAK,CAAC,CAAC,MAAM,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,MAAM,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,MAAM,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,MAAM,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,MAAM,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,MAAM,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,MAAM,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,MAC/yEC,KAAK,CAACA,KAAK,CAAC,CAAC,GAAG,MAAMC,KAAK,CAAC,CAAC,GAAG,MAAMC,KAAK,CAAC,CAAC,GAAG,MAAMC,KAAK,CAAC,CAAC,GAAG,MAAMC,KAAK,CAAC,CAAC,GAAG,MAAMC,KAAK,CAAC,CAAC,GAAG,MAAMC,KAAK,CAAC,CAAC,GAAG,MAAMC,KAAK,CAAC,CAAC,GAAG,MAAMC,KAAK,CAAC,CAAC,IAAI,MAAMC,KAAK,CAAC,CAAC,IAAI,MAAMC,KAAK,CAAC,CAAC,GAAG,MAAMC,KAAK,CAAC,CAAC,IAAI,MAAMC,KAAK,CAAC,CAAC,GAAG,MAAMC,KAAK,CAAC,CAAC,IAAI,MAAMC,KAAK,CAAC,CAAC,GAAG,MAAMC,KAAK,CAAC,CAAC,IAAI,MAAMC,KAAK,CAAC,CAAC,GAAG,MAAMC,KAAK,CAAC,CAAC,IAAI,MAAMC,KAAK,CAAC,CAAC,GAAG,MAAMC,KAAK,CAAC,CAAC,IAAI,MAAMC,KAAK,CAAC,CAAC,IAAI,MAAMC,KAAK,CAAC,CAAC,IAAI,MAAMC,KAAK,CAAC,CAAC,IAAI,MAAMC,KAAK,CAAC,CAAC,IAAI,MAAMC,KAAK,CAAC,CAAC,GAAG,MAAMC,KAAK,CAAC,CAAC,IAAI,MAAMC,KAAK,CAAC,CAAC,GAAG,MAAMC,KAAK,CAAC,CAAC,IAAI,MAAMC,KAAK,CAAC,CAAC,IAAI,MAAMC,KAAK,CAAC,CAAC,IAAI,MAAMC,KAAK,CAAC,CAAC,GAAG,MAAMC,KAAK,CAAC,CAAC,IAAI,MAAMC,KAAK,CAAC,CAAC,GAAG,MAAMC,KAAK,CAAC,CAAC,IAAI,MAAMC,KAAK,CAAC,CAAC,GAAG,MAAMC,KAAK,CAAC,CAAC,IAAI,MAAMC,KAAK,CAAC,CAAC,GAAG,MAAMC,KAAK,CAAC,CAAC,IAAI,MAAMC,KAAK,CAAC,CAAC,GAAG,MAAMC,KAAK,CAAC,CAAC,IAAI,MAAMC,KAAK,CAAC,CAAC,GAAG,MAAMC,KAAK,CAAC,CAAC,IAAI,MAAMC,KAAK,CAAC,CAAC,GAAG,MAAMC,KAAK,CAAC,CAAC,IAAI,MAAMC,KAAK,CAAC,CAAC,GAAG,MAAMC,KAAK,CAAC,CAAC,IAAI,MAAMC,KAAK,CAAC,CAAC,IAAI,MAAMC,KAAK,CAAC,CAAC,IAAI,MAAMC,KAAK,CAAC,CAAC,GAAG,MAAMC,KAAK,CAAC,CAAC,IAAI,MAAMC,KAAK,CAAC,CAAC,GAAG,MAAMC,KAAK,CAAC,CAAC,IAAI,MAAMC,KAAK,CAAC,CAAC,GAAG,MAAMC,KAAK,CAAC,CAAC,IAAI,MAAMC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAACp3C,IAAI,OAAOq3C,KAAK,CAAC,CAAC,IAAI,KAAK,CAAC,CAACr3C,IAAI,OAAOs3C,KAAK,CAAC,CAAC,KAAK,MAAMC,KAAK,CAAC,CAAC,KAAK,MAAMC,KAAK,CAAC,CAAC,GAAG,MAAMC,KAAK,CAAC,CAAC,IAAI,MAAMC,KAAK,CAAC,CAAC,GAAG,MAAMC,KAAK,CAAC,CAAC,IAAI,MAAMC,KAAK,CAAC,CAAC,GAAG,MAAMC,KAAK,CAAC,CAAC,IAAI,MAAMC,KAAK,CAAC,CAAC,GAAG,MAAMC,KAAK,CAAC,CAAC,IAAI,MAAMC,KAAK,CAAC,CAAC,GAAG,MAAMC,KAAK,CAAC,CAAC,IAAI,MAAMC,KAAK,CAAC,CAAC,GAAG,MAAMC,KAAK,CAAC,CAAC,IAAI,MAAMC,KAAK,CAAC,CAAC,GAAG,MAAMC,KAAK,CAAC,CAAC,IAAI,MAAMC,KAAK,CAAC,CAAC,GAAG,MAAMC,KAAK,CAAC,CAAC,IAAI,MAAMC,KAAK,CAAC,CAAC,GAAG,MAAMC,KAAK,CAAC,CAAC,IAAI,MAAMC,KAAK,CAAC,CAAC,IAAI,MAAMC,KAAK,CAAC,C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MAAM,KAAKC,KAAK,CAAC,CAAC,GAAG,KAAK,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,KAAK,MAAM,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,KAAK,CAAC,CAAC,KAAK,MAAM,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,KAAK,CAAC,CAAC,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,KAAK,KAAKC,KAAK,CAAC,CAAC,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAK,KAAK,MAAM,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,MAAM,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,MAAM,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,GAAG,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,GAAGC,KAAK,CAAC,CAAC,GAAGC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,GAAGC,KAAK,CAAC,CAAC,GAAGC,KAAK,CAAC,CAAC,GAAGC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,GAAGC,KAAK,CAAC,CAAC,GAAGC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,GAAGC,KAAK,CAAC,CAAC,GAAGC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,MAC//CC,KAAK,CAACA,KAAK,CAAC,CAAC,GAAG,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,GAAG,KAAK,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,GAAG,KAAK,KAAKC,KAAK,CAAC,CAAC,GAAG,GAAG,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,IAAI,IAAI,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,KAAK,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,MAAMC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,KAAKC,KAAK,CAAC,CAAC,MAAMC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,MAAM,KAAKC,KAAK,CAAC,CAAC,MAAM,KAAKC,KAAK,CAAC,CAAC,MAAM,KAAKC,KAAK,CAAC,CAAC,MAAM,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,GAAG,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,MAAM,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,GAAG,KAAK,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,KAAK,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,KAAK,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,KAAK,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,KAAK,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,KAAK,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,KAAK,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,KAAK,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,KAAK,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,KAAK,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,KAAK,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,KAAK,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,KAAK,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,KAAK,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,KAAK,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,MAAM,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAA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KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,GAAG,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,IAAI,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,IAAI,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,IAAI,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,IAAI,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,IAAI,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,IAAI,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,IAAI,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,IAAI,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,IAAI,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,IAAI,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,IAAI,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,IAAI,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,IAAI,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,IAAI,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,IAAI,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,IAAI,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,IAAI,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,IAAI,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,IAAI,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,IAAI,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,IAAI,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,IAAI,IAAI,KAAKC,KAAK,CAAC,CAAC,GAAG,IAAI,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,IAAI,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,KAAK,KAAKC,KAAK,CAAC,CAAC,IAAI,MAClpFC,MAAM,CAACC,MAAM,CAAC,CAAC,KAAK,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,GAAG,GAAG,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,GAAG,IAAI,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAK,MAC9HC,MAAM,CAACC,MAAM,CAAC,CAAC,KAAK,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,KAAKC,MAAM,CAAC,CAAC,KAAKC,MAAM,CAAC,CAAC,MAC5EC,MAAM,CAACC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,GAAGC,MAAM,CAAC,CAAC,KAAKC,MAAM,CAAC,CAAC,KAAKC,MAAM,CAAC,CAAC,KAAKC,MAAM,CAAC,CAAC,KAAKC,MAAM,CAAC,CAAC,KAAKC,MAAM,CAAC,CAAC,KAAKC,MAAM,CAAC,CAAC,KAAKC,MAAM,CAAC,CAAC,KAAKC,MAAM,CAAC,CAAC,KAAKC,MAAM,CAAC,CAAC,KAAKC,MAAM,CAAC,CAAC,KAAKC,MAAM,CAAC,CAAC,KAAKC,MAAM,CAAC,CAAC,KAAKC,MAAM,CAAC,CAAC,KAAKC,MAAM,CAAC,CAAC,KAAKC,MAAM,CAAC,CAAC,KAAKC,MAAM,CAAC,CAAC,KAAKC,MAAM,CAAC,CAAC,KAAKC,MAAM,CAAC,CAAC,KAAKC,MAAM,CAAC,CAAC,KAAKC,MAAM,CAAC,CAAC,KAAKC,MAAM,CAAC,CAAC,KAAKC,MAAM,CAAC,CAAC,KAAKC,MAAM,CAAC,CAAC,KAAKC,MAAM,CAAC,CAAC,KAAKC,MAAM,CAAC,CAAC,KAAKC,MAAM,CAAC,CAAC,KAAKC,MAAM,CAAC,CAAC,KAAKC,MAAM,CAAC,CAAC,KAAKC,MAAM,CAAC,CAAC,KAAKC,MAAM,CAAC,CAAC,KAAKC,MAAM,CAAC,CAAC,MACjcC,MAAM,CAACC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,MAC1CC,MAAM,CAACA,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,KAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC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K,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,KAAK,KAAK,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,KAAK,KAAK,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,KAAK,KAAK,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,KAAK,KAAK,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,KAAK,KAAK,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,KAAK,KAAK,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,KAAK,KAAK,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,KAAK,KAAK,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,KAAK,KAAK,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,KAAK,KAAK,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,KAAK,KAAK,KAAK,KAAK,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,MAAM,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,MAAM,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,MAAM,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,MAAM,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,MAAM,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,MAAM,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,MAAM,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,MAAM,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,MAAM,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,MAAM,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,MAAM,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,MAAM,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,MAAM,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,MAAM,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,MAAM,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,MAAM,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,MAAM,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,MAAM,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,MAAM,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,MAAM,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,MAAM,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,MAAM,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,MAAM,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,MAAM,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,MAAM,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,MAAM,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,MAAM,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,MAAM,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,MAAM,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,MAAM,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,MAAM,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,MAAM,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,MAAM,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,MAAM,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,MAAM,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,MAAM,IAAI,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,GAAG,GAAG,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,IAAI,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,GAAG,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,OAAO,KAAKC,MAAM,CAAC,CAAC,GAAG,OAAO,KAAKC,MAAM,CAAC,CAAC,GAAG,OAAO,KAAKC,MAAM,CAAC,CAAC,GAAG,OAAO,KAAKC,MAAM,CAAC,CAAC,GAAG,OAAO,KAAKC,MAAM,CAAC,CAAC,GAAG,OAAO,KAAKC,MAAM,CAAC,CAAC,GAAG,OAAO,KAAKC,MAAM,CAAC,CAAC,GAAG,OAAO,KAAKC,KAAM,CAAC,CAAC,GAAG,OAAO,KAAKC,MAAM,CAAC,CAAC,GAAG,GAAG,OAAO,KAAKC,MAAM,CAAC,CAAC,GAAG,GAAG,OAAO,KAAKC,MAAM,CAAC,CAAC,GAAG,GAAG,OAAO,KAAKC,MAAM,CAAC,CAAC,GAAG,KAAK,KAAKC,MAAM,CAAC,CAAC,IAAI,IAAI,KAAK,KAAKC,MAAM,CAAC,CAAC,IAAI,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,GAAG,IAAI,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,MACj5KC,MAAM,CAACA,MAAM,CAAC,CAAC,MAAM,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,GAAG,OAAO,KAAKC,MAAM,CAAC,CAAC,GAAG,OAAO,KAAKC,MAAM,CAAC,CAAC,GAAG,OAAO,KAAKC,MAAM,CAAC,CAAC,GAAG,OAAO,KAAKC,MAAM,CAAC,CAAC,GAAG,OAAO,KAAKC,MAAM,CAAC,CAAC,GAAG,OAAO,KAAKC,MAAM,CAAC,CAAC,GAAG,OAAO,KAAKC,MAAM,CAAC,CAAC,GAAG,OAAO,KAAKC,MAAM,CAAC,CAAC,GAAG,OAAO,KAAKC,MAAM,CAAC,CAAC,GAAG,OAAO,KAAKC,MAAM,CAAC,CAAC,GAAG,GAAG,OAAO,KAAKC,MAAM,CAAC,CAAC,GAAG,GAAG,OAAO,KAAKC,MAAM,CAAC,CAAC,GAAG,GAAG,OAAO,KAAKC,MAAM,CAAC,CAAC,GAAG,GAAG,OAAO,KAAKC,MAAM,CAAC,CAAC,GAAG,GAAG,OAAO,KAAKC,MAAM,CAAC,CAAC,GAAG,GAAG,OAAO,KAAKC,MAAM,CAAC,CAAC,GAAG,GAAG,OAAO,KAAKC,MAAM,CAAC,CAAC,GAAG,GAAG,OAAO,KAAKC,MAAM,CAAC,CAAC,GAAG,GAAG,OAAO,KAAKC,MAAM,CAAC,CAAC,GAAG,GAAG,OAAO,KAAKC,MAAM,CAAC,CAAC,GAAG,GAAG,OAAO,KAAKC,MAAM,CAAC,CAAC,GAAG,GAAG,OAAO,KAAKC,MAAM,CAAC,CAAC,GAAG,GAAG,OAAO,KAAKC,MAAM,CAAC,CAAC,GAAG,GAAG,OAAO,KAAKC,MAAM,CAAC,CAAC,GAAG,GAAG,OAAO,KAAKC,MAAM,CAAC,CAAC,IAAI,GAAG,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,GAAG,KAAK,KAAKC,MAAM,CAAC,CAAC,IAAI,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAK,KAAKC,MAAM,CAAC,CAAC,IAAI,IAAI,KAAK,KAAKC,MAAM,CAAC,CAAC,IAAI,IAAI,KAAK,KAAKC,MAAM,CAAC,CAAC,GAAG,IAAI,KAAKC,MAAM,CAAC,CAAC,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,MAAM,OAAO,KAAKC,MAAM,CAAC,CAAC,IAAI,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,GAAG,KAAK,KAAKC,MAAM,CAAC,CAAC,IAAI,GAAG,GAAG,KAAK,KAAKC,MAAM,CAAC,CAAC,IAAI,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAK,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAK,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAK,KAAKC,MAAM,CAAC,CAAC,GAAG,KAAK,KAAKC,MAAM,CAAC,CAAC,IAAI,GAAG,KAAK,KAAKC,MAAM,CAAC,CAAC,GAAG,GAAG,KAAK,KAAKC,MAAM,CAAC,CAAC,GAAG,GAAG,KAAK,KAAKC,MAAM,CAAC,CAAC,GAAG,GAAG,KAAK,KAAKC,MAAM,CAAC,CAAC,IAAI,MAAM,KAAKC,MAAM,CAAC,CAAC,IAAI,MAAM,KAAKC,MAAM,CAAC,CAAC,IAAI,MAAM,KAAKC,MAAM,CAAC,CAAC,IAAI,MAAM,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAK,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAK,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAK,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAK,KAAKC,MAAM,CAAC,CAAC,GAAG,KAAK,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAK,KAAKC,MAAM,CAAC,CAAC,IAAI,IAAI,KAAK,KAAKC,MAAM,CAAC,CAAC,GAAG,IAAI,KAAK,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAK,KAAKC,MAAM,CAAC,CAAC,IAAI,IAAI,KAAK,KAAKC,MAAM,CAAC,CAAC,IAAI,IAAI,KAAK,KAAKC,MAAM,CAAC,CAAC,GAAG,IAAI,KAAK,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAK,KAAKC,MAAM,CAAC,CAAC,IAAI,IAAI,KAAK,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAK,KAAK,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAK,IAAI,KAAK,KAAKC,MAAM,CAAC,CAAC,GAAG,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,GAAG,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,GAAG,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,GAAG,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,GAAG,KAAK,KAAKC,MAAM,CAAC,CAAC,IAAI,GAAG,IAAI,KAAK,KAAK,KAAKC,MAAM,CAAC,CAAC,IAAI,GAAG,IAAI,KAAK,IAAI,KAAK,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAK,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAK,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAK,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAK,KAAKC,MAAM,CAAC,CAAC,IAAI,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAK,KAAKC,MAAM,CAAC,CAAC,GAAG,KAAK,KAAKC,MAAM,CAAC,CAAC,GAAG,GAAG,IAAI,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,KAAK,KAAKC,MAAM,CAAC,CAAC,GAAG,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,KAAK,KAAKC,MAAM,CAAC,CAAC,GAAG,KAAK,IAAI,KAAK,KAAKC,MAAM,CAAC,CAAC,GAAG,IAAI,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,KAAK,KAAKC,MAAM,CAAC,CAAC,IAAI,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAK,KAAKC,MAAM,CAAC,CAAC,GAAG,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAK,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAK,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAK,KAAKC,MAAM,CAAC,CAAC,IAAI,IAAI,KAAK,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAK,KAAKC,MAAM,CAAC,CAAC,IAAI,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,IAAI,KAAK,KAAKC,MAAM,CAAC,CAAC,IAAI,IAAI,KAAK,KAAKC,MAAM,CAAC,CAAC,GAAG,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,GAAG,IAAI,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,GAAG,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAK,KAAKC,MAAM,CAAC,CAAC,GAAG,KAAK,KAAKC,MAAM,CAAC,CAAC,GAAG,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,KAAK,KAAK,KAAKC,MAAM,CAAC,CAAC,GAAG,KAAK,KAAK,KAAKC,MAAM,CAAC,CAAC,GAAG,OAAO,KAAKC,MAAM,CAAC,CAAC,GAAG,OAAO,KAAKC,MAAM,CAAC,CAAC,GAAG,OAAO,KAAKC,MAAM,CAAC,CAAC,GAAG,OAAO,KAAKC,MAAM,CAAC,CAAC,GAAG,OAAO,KAAKC,MAAM,CAAC,CAAC,GAAG,OAAO,KAAKC,MAAM,CAAC,CAAC,GAAG,OAAO,KAAKC,MAAM,CAAC,CAAC,GAAG,OAAO,KAAKC,MAAM,CAAC,CAAC,GAAG,OAAO,KAAKC,MAAM,CAAC,CAAC,GAAG,GAAG,OAAO,KAAKC,MAAM,CAAC,CAAC,GAAG,GAAG,OAAO,KAAKC,MAAM,CAAC,CAAC,GAAG,GAAG,OAAO,KAAKC,MAAM,CAAC,CAAC,GAAG,GAAG,OAAO,KAAKC,MAAM,CAAC,CAAC,GAAG,GAAG,OAAO,KAAKC,MAAM,CAAC,CAAC,GAAG,GAAG,OAAO,KAAKC,MAAM,CAAC,CAAC,GAAG,GAAG,OAAO,KAAKC,MAAM,CAAC,CAAC,GAAG,GAAG,OAAO,KAAKC,MAAM,CAAC,CAAC,GAAG,GAAG,OAAO,KAAKC,MAAM,CAAC,CAAC,GAAG,GAAG,OAAO,KAAKC,MAAM,CAAC,CAAC,GAAG,GAAG,OAAO,KAAKC,MAAM,CAAC,CAAC,GAAG,GAAG,OAAO,KAAKC,MAAM,CAAC,CAAC,GAAG,GAAG,OAAO,KAAKC,MAAM,CAAC,CAAC,GAAG,GAAG,OAAO,KAAKC,MAAM,CAAC,CAAC,GAAG,GAAG,OAAO,KAAKC,MAAM,CAAC,CAAC,GAAG,GAAG,OAAO,KAAKC,MAAM,CAAC,CAAC,GAAG,GAAG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,CAAC,CAAC,KAAKC,OAAO,CAAC,CAAC,KAAKC,OAAO,CAAC,CAAC,KAAKC,OAAO,CAAC,CAAC,KAAKC,OAAO,CAAC,CAAC,KAAKC,OAAO,CAAC,CAAC,KAAKC,OAAO,CAAC,CAAC,KAAKC,OAAO,CAAC,CAAC,KAAKC,OAAO,CAAC,CAAC,KAAKC,OAAO,CAAC,CAAC,KAAKC,OAAO,CAAC,CAAC,KAAKC,OAAO,CAAC,CAAC,KAAKC,OAAO,CAAC,CAAC,KAAKC,OAAO,CAAC,CAAC,KAAKC,OAAO,CAAC,CAAC,KAAKC,OAAO,CAAC,CAAC,KAAKC,OAAO,CAAC,CAAC,KAAKC,OAAO,CAAC,CAAC,KAAKC,OAAO,CAAC,CAAC,OAAO,QAAQ,KAAKC,OAAO,CAAC,CAAC,OAAO,QAAQ,KAAKC,OAAO,CAAC,CAAC,OAAO,QAAQ,KAAKC,OAAO,CAAC,CAAC,OAAO,QAAQ,KAAKC,OAAO,CAAC,CAAC,OAAO,QAAQ,KAAKC,OAAO,CAAC,CAAC,OAAO,QAAQ,MACzxBC,MAAM,CAACC,OAAO,CAAC,CAAC,KAAKC,OAAO,CAAC,CAAC,KAAKC,OAAO,CAAC,CAAC,MAC5CC,MAAM,CAACC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,KAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,MACr5IC,MAAM,CAACC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,MACz5IC,MAAM,CAACC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,MAC7oJC,MAAM,CAACC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,KAAK,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,MAChsJC,MAAM,CAACC,OAAO,CAAC,CAAC,KAAKC,OAAO,CAAC,CAAC,KAAKC,OAAO,CAAC,CAAC,KAAKC,OAAO,CAAC,CAAC,KAAKC,OAAO,CAAC,CAAC,KAAKC,OAAO,CAAC,CAAC,KAAKC,OAAO,CAAC,CAAC,MACpGC,MAAM,CAACC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,KAAKC,OAAO,CAAC,CAAC,MAAM,MACtwFC,MAAM,CAACC,OAAO,CAAC,CAAC,GAAG,IAAI,KAAKC,OAAO,CAAC,CAAC,GAAG,IAAI,KAAKC,OAAO,CAAC,CAAC,GAAG,IAAI,KAAKC,OAAO,CAAC,CAAC,GAAG,IAAI,KAAKC,OAAO,CAAC,CAAC,GAAG,IAAI,KAAKC,OAAO,CAAC,CAAC,GAAG,IAAI,KAAKC,OAAO,CAAC,CAAC,GAAG,IAAI,KAAKC,OAAO,CAAC,CAAC,GAAG,IAAI,KAAKC,OAAO,CAAC,CAAC,GAAG,IAAI,KAAKC,OAAO,CAAC,CAAC,GAAG,IAAI,KAAKC,OAAO,CAAC,CAAC,GAAG,IAAI,KAAKC,OAAO,CAAC,CAAC,GAAG,GAAG,IAAI,KAAKC,OAAO,CAAC,CAAC,GAAG,GAAG,IAAI,KAAKC,OAAO,CAAC,CAAC,GAAG,GAAG,IAAI,KAAKC,OAAO,CAAC,CAAC,GAAG,GAAG,IAAI,KAAKC,OAAO,CAAC,CAAC,GAAG,GAAG,IAAI,KAAKC,OAAO,CAAC,CAAC,GAAG,GAAG,IAAI,KAAKC,OAAO,CAAC,CAAC,GAAG,GAAG,IAAI,KAAKC,OAAO,CAAC,CAAC,GAAG,GAAG,IAAI,KAAKC,OAAO,CAAC,CAAC,GAAG,GAAG,IAAI,KAAKC,OAAO,CAAC,CAAC,GAAG,GAAG,IAAI,KAAKC,OAAO,CAAC,CAAC,GAAG,GAAG,IAAI,KAAKC,OAAO,CAAC,CAAC,GAAG,GAAG,IAAI,KAAKC,OAAO,CAAC,CAAC,GAAG,GAAG,IAAI,KAAKC,OAAO,CAAC,CAAC,GAAG,GAAG,IAAI,KAAKC,OAAO,CAAC,CAAC,GAAG,GAAG,IAAI,KAAKC,OAAO,CAAC,CAAC,GAAG,GAAG,IAAI,KAAKC,OAAO,CAAC,CAAC,GAAG,GAAG,IAAI,KAAKC,OAAO,CAAC,CAAC,GAAG,GAAG,IAAI,KAAKC,OAAO,CAAC,CAAC,GAAG,GAAG,IAAI,KAAKC,OAAO,CAAC,CAAC,GAAG,GAAG,IAAI,KAAKC,OAAO,CAAC,CAAC,GAAG,GAAG,IAAI,KAAKC,OAAO,CAAC,CAAC,GAAG,GAAG,IAAI,KAAKC,OAAO,CAAC,CAAC,GAAG,GAAG,IAAI,KAAKC,OAAO,CAAC,CAAC,GAAG,GAAG,IAAI,KAAKC,OAAO,CAAC,CAAC,GAAG,GAAG,IAAI,KAAKC,OAAO,CAAC,CAAC,GAAG,GAAG,IAAI,KAAKC,OAAO,CAAC,CAAC,MAAM,GAAG,OAAO,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,GAAG,IAAI,KAAKC,OAAO,CAAC,CAAC,GAAG,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,IAAI,KAAKC,OAAO,CAAC,CAAC,GAAG,IAAI,KAAKC,OAAO,CAAC,CAAC,GAAG,IAAI,KAAKC,OAAO,CAAC,CAAC,GAAG,IAAI,KAAKC,OAAO,CAAC,CAAC,GAAG,IAAI,KAAKC,OAAO,CAAC,CAAC,GAAG,GAAG,IAAI,KAAKC,OAAO,CAAC,CAAC,GAAG,IAAI,KAAKC,OAAO,CAAC,CAAC,GAAG,IAAI,KAAKC,OAAO,CAAC,CAAC,GAAG,IAAI,KAAKC,OAAO,CAAC,CAAC,GAAG,IAAI,MACzlDC,MAAM,CAACC,OAAO,CAAC,CAAC,MAAM,OAAO,KAAKC,OAAO,CAAC,CAAC,MAAM,OAAO,KAAKC,OAAO,CAAC,CAAC,OAAO,KAAKC,OAAO,CAAC,CAAC,OAAO,KAAKC,OAAO,CAAC,CAAC,OAAO,KAAKC,OAAO,CAAC,CAAC,OAAO,KAAKC,OAAO,CAAC,CAAC,OAAO,KAAKC,OAAO,CAAC,CAAC,OAAO,KAAKC,OAAO,CAAC,CAAC,OAAO,KAAKC,OAAO,CAAC,CAAC,OAAO,KAAKC,OAAO,CAAC,CAAC,OAAO,KAAKC,OAAO,CAAC,CAAC,OAAO,KAAKC,OAAO,CAAC,CAAC,OAAO,KAAKC,OAAO,CAAC,CAAC,OAAO,KAAKC,OAAO,CAAC,CAAC,OAAO,KAAKC,OAAO,CAAC,CAAC,OAAO,KAAKC,OAAO,CAAC,CAAC,OAAO,KAAKC,OAAO,CAAC,CAAC,OAAO,KAAKC,OAAO,CAAC,CAAC,OAAO,KAAKC,OAAO,CAAC,CAAC,OAAO,KAAKC,OAAO,CAAC,CAAC,OAAO,KAAKC,OAAO,CAAC,CAAC,OAAO,KAAKC,OAAO,CAAC,CAAC,OAAO,KAAKC,OAAO,CAAC,CAAC,OAAO,KAAKC,OAAO,CAAC,CAAC,OAAO,KAAKC,OAAO,CAAC,CAAC,OAAO,KAAKC,OAAO,CAAC,CAAC,OAAO,KAAKC,OAAO,CAAC,CAAC,OAAO,KAAKC,OAAO,CAAC,CAAC,OAAO,KAAKC,OAAO,CAAC,CAAC,OAAO,KAAKC,OAAO,CAAC,CAAC,OAAO,KAAKC,OAAO,CAAC,CAAC,OAAO,KAAKC,OAAO,CAAC,CAAC,OAAO,KAAKC,OAAO,CAAC,CAAC,OAAO,KAAKC,OAAO,CAAC,CAAC,OAAO,KAAKC,OAAO,CAAC,CAAC,OAAO,KAAKC,OAAO,CAAC,CAAC,OAAO,KAAKC,OAAO,CAAC,CAAC,OAAO,KAAKC,OAAO,CAAC,CAAC,OAAO,KAAKC,OAAO,CAAC,CAAC,OAAO,KAAKC,OAAO,CAAC,CAAC,OAAO,KAAKC,OAAO,CAAC,CAAC,OAAO,KAAKC,OAAO,CAAC,CAAC,OAAO,KAAKC,OAAO,CAAC,CAAC,OAAO,KAAKC,OAAO,CAAC,CAAC,OAAO,KAAKC,OAAO,CAAC,CAAC,OAAO,KAAKC,OAAO,CAAC,CAAC,MAAM,MAAM,OAAO,KAAKC,OAAO,CAAC,CAAC,MAAM,MAAM,OAAO,KAAKC,OAAO,CAAC,CAAC,MAAM,MAAM,OAAO,KAAKC,OAAO,CAAC,CAAC,MAAM,MAAM,OAAO,KAAKC,OAAO,CAAC,CAAC,MAAM,MAAM,OAAO,KAAKC,OAAO,CAAC,CAAC,MAAM,MAAM,OAAO,KAAKC,OAAO,CAAC,CAAC,MAAM,MAAM,OAAO,KAAKC,OAAO,CAAC,CAAC,MAAM,MAAM,OAAO,KAAKC,OAAO,CAAC,CAAC,MAAM,MAAM,OAAO,KAAKC,OAAO,CAAC,CAAC,OAAO,KAAKC,OAAO,CAAC,CAAC,OAAO,MACvyCC,MAAM,CAACC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,SAASC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,SAASC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,SAASC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,SAASC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,SAASC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,SAASC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,SAASC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,SAASC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,SAASC,OAAO,CAAC,CAAC,SAASC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,OAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,SAASC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,SAASC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,SAASC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,SAASC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,SAASC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,SAASC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,SAASC,OAAO,CAAC,CAAC,SAASC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,SAASC,OAAO,CAAC,CAAC,SAASC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,SAASC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,SAASC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,SAASC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,SAASC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,SAASC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,SAASC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,SAASC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,SAASC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,SAASC,OAAO,CAAC,CAAC,SAASC,OAAO,CAAC,CAAC,SAASC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,SAASC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,SAC/xj0QC,KAAM,CAACA,KAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,SAASC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,SAASC,MAAM,CAAC,CAAC,SAASC,MAAM,CAAC,CAAC,SAASC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,SAASC,MAAM,CAAC,CAAC,SAASC,MAAM,CAAC,CAAC,SAASC,MAAM,CAAC,CAAC,QAAQC,MAAM,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,SAASC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,SAASC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,MAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,SAASC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,SAASC,OAAO,CAAC,CAAC,SAASC,OAAO,CAAC,CAAC,SAASC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,QAAQC,OAAO,CAAC,CAAC,UAC1sHC,MAAM,CAACA,MAAM,CAAC,CAAC,IAAI,KAAK,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAK,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAK,KAAKC,MAAM,CAAC,CAAC,IAAI,IAAI,KAAK,KAAKC,MAAM,CAAC,CAAC,IAAI,IAAI,KAAK,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAK,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAK,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,IAAIC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,MACriIC,MAAM,CAACA,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,GAAG,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,GAAG,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,GAAG,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,GAAG,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,GAAG,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,GAAG,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,MACniMC,MAAM,CAACA,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,KAAK,GAAG,KAAK,KAAK,KAAK,KAAK,GAAG,KAAK,KAAK,KAAK,KAAK,GAAG,KAAK,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,GAAG,KAAK,KAAK,KAAK,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAK,KAAK,MAAM,MAC7yKC,MAAM,CAACC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAKC,MAAM,CAAC,CAAC,KAAKC,MAAM,CAAC,CAAC,KAAKC,MAAM,CAAC,CAAC,KAAKC,MAAM,CAAC,CAAC,KAAKC,MAAM,CAAC,CAAC,KAAKC,MAAM,CAAC,CAAC,KAAKC,MAAM,CAAC,CAAC,KAAKC,MAAM,CAAC,CAAC,KAAKC,MAAM,CAAC,CAAC,KAAKC,MAAM,CAAC,CAAC,KAAKC,MAAM,CAAC,CAAC,KAAKC,MAAM,CAAC,CAAC,KAAKC,MAAM,CAAC,CAAC,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,GAAG,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,GAAG,MAAM,KAAKC,MAAM,CAAC,CAAC,GAAG,MAAM,KAAKC,MAAM,CAAC,CAAC,GAAG,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,GAAG,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,GAAG,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,GAAG,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,GAAG,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,KAAKC,MAAM,CAAC,CAAC,KAAK,MAAM,MACxhIC,MAAM,CAACC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,IAAI,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAKC,MAAM,CAAC,CAAC,KAAK,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,KAAKC,MAAM,CAAC,CAAC,OAAO,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,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO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AM,CAAC,EAAG,OAAS,EAAG,GACtB,GAAM,CAAC,OAAS,OAAS,EAAG,GAC5B,GAAM,CAAC,EAAG,OAAS,EAAG,GACtB,GAAM,CAAC,OAAS,OAAS,EAAG,GAC5B,GAAM,CAAC,EAAG,OAAS,EAAG,GACtB,GAAM,CAAC,OAAS,OAAS,EAAG,GAC5B,GAAM,CAAC,EAAG,OAAS,EAAG,GACtB,GAAM,CAAC,EAAG,OAAS,EAAG,GACtB,GAAM,CAAC,EAAG,OAAS,EAAG,GACtB,GAAM,CAAC,OAAS,OAAS,EAAG,GAC5B,GAAM,CAAC,OAAS,OAAS,EAAG,GAC5B,GAAM,CAAC,OAAS,OAAS,EAAG,GAC5B,GAAM,CAAC,EAAG,OAAS,EAAG,GACtB,GAAM,CAAC,OAAS,OAAS,EAAG,GAC5B,GAAM,CAAC,EAAG,OAAS,EAAG,GACtB,GAAM,CAAC,OAAS,OAAS,EAAG,GAC5B,GAAM,CAAC,EAAG,OAAS,EAAG,GACtB,GAAM,CAAC,OAAS,OAAS,EAAG,GAC5B,GAAM,EAAE,OAAS,OAAS,EAAG,GAC7B,GAAM,CAAC,EAAG,OAAS,EAAG,GACtB,GAAM,CAAC,EAAG,OAAS,EAAG,GACtB,GAAM,CAAC,EAAG,OAAS,EAAG,GACtB,GAAM,CAAC,EAAG,OAAS,EAAG,GACtB,GAAM,CAAC,EAAG,OAAS,EAAG,GACtB,GAAM,CAAC,EAAG,OAAS,EAAG,GACtB,GAAM,CAAC,OAAS,OAAS,EAAG,GAC5B,GAAM,CAAC,EAAG,OAAS,EAAG,GACtB,GAAM,CAAC,OAAS,OAAS,EAAG,GAC5B,GAAM,CAAC,EAAG,OAAS,EAAG,GACtB,GAAM,CAAC,OAAS,OAAS,EAAG,GAC5B,GAAM,CAAC,EAAG,OAAS,EAAG,GACtB,GAAM,CAAC,EAAG,OAAS,EAAG,GACtB,GAAM,CAAC,EAAG,OAAS,EAAG,GACtB,GAAM,CAAC,EAAG,OAAS,EAAG,GACtB,GAAM,CAAC,EAAG,OAAS,EAAG,GACtB,GAAM,CAAC,OAAS,OAAS,EAAG,GAC5B,GAAM,CAAC,OAAS,OAAS,EAAG,GAC5B,GAAM,CAAC,EAAG,OAAS,EAAG,GACtB,GAAM,CAAC,EAAG,OAAS,EAAG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S,OAAS,GAC7B,IAAO,CAAC,OAAS,OAAS,OAAS,GACnC,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,OAAS,OAAS,EAAG,GAC7B,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,OAAS,OAAS,EAAG,GAC7B,IAAO,CAAC,OAAS,OAAS,EAAG,GAC7B,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,OAAS,GAC7B,IAAO,CAAC,EAAG,OAAS,OAAS,GAC7B,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,OAAS,OAAS,OAAS,GACnC,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,IAAM,IAAM,EAAG,GACvB,IAAO,CAAC,IAAM,IAAM,EAAG,GACvB,IAAO,CAAC,IAAM,IAAM,EAAG,GACvB,IAAO,CAAC,IAAM,OAAS,EAAG,GAC1B,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,OAAS,OAAS,EAAG,GAC7B,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,OAAS,OAAS,EAAG,GAC7B,IAAO,CAAC,OAAS,OAAS,EAAG,GAC7B,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,OAAS,OAAS,EAAG,GAC7B,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,OAAS,OAAS,EAAG,GAC7B,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,KAAQ,CAAC,EAAG,OAAS,OAAS,GAC9B,KAAQ,CAAC,EAAG,OAAS,OAAS,GAC9B,KAAQ,CAAC,EAAG,OAAS,EAAG,GACxB,KAAQ,CAAC,EAAG,OAAS,EAAG,GACxB,KAAQ,CAAC,EAAG,OAAS,EAAG,GACxB,KAAQ,CAAC,EAAG,OAAS,EAAG,GACxB,KAAQ,CAAC,OAAS,OAAS,EAAG,GAC9B,KAAQ,CAAC,OAAS,OAAS,EAAG,GAC9B,KAAQ,CAAC,EAAG,OAAS,EAAG,GACxB,KAAQ,CAAC,EAAG,OAAS,OAAS,GAC9B,KAAQ,CAAC,EAAG,OAAS,EAAG,GACxB,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C7B,IAAO,CAAC,EAAG,OAAS,MAAQ,GAC5B,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,OAAS,OAAS,EAAG,GAC7B,IAAO,CAAC,OAAS,OAAS,OAAS,GACnC,IAAO,CAAC,EAAG,OAAS,OAAS,GAC7B,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,OAAS,GAC7B,IAAO,CAAC,EAAG,OAAS,OAAS,GAC7B,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,OAAS,OAAS,OAAS,GACnC,IAAO,CAAC,EAAG,OAAS,OAAS,GAC7B,IAAO,CAAC,EAAG,OAAS,OAAS,GAC7B,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,OAAS,GAC7B,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,OAAS,GAC7B,IAAO,CAAC,EAAG,OAAS,OAAS,GAC7B,IAAO,CAAC,EAAG,OAAS,OAAS,GAC7B,IAAO,CAAC,EAAG,OAAS,OAAS,GAC7B,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,OAAS,GAC7B,IAAO,CAAC,EAAG,OAAS,OAAS,GAC7B,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,OAAS,OAAS,OAAS,GACnC,IAAO,CAAC,OAAS,OAAS,OAAS,GACnC,IAAO,CAAC,EAAG,OAAS,OAAS,GAC7B,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,OAAS,OAAS,OAAS,GACnC,IAAO,CAAC,OAAS,OAAS,OAAS,GACnC,IAAO,CAAC,EAAG,OAAS,OAAS,GAC7B,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,OAAS,OAAS,EAAG,GAC7B,IAAO,CAAC,EAAG,OAA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,OAAS,OAAS,GAC7B,IAAO,CAAC,OAAS,OAAS,OAAS,GACnC,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,OAAS,OAAS,EAAG,GAC7B,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,OAAS,OAAS,EAAG,GAC7B,IAAO,CAAC,OAAS,OAAS,EAAG,GAC7B,IAAO,CAAC,EAAG,OAAS,OAAS,GAC7B,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,OAAS,GAC7B,IAAO,CAAC,EAAG,OAAS,OAAS,GAC7B,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,OAAS,OAAS,OAAS,GACnC,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,IAAM,OAAS,EAAG,GAC1B,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,OAAS,OAAS,EAAG,GAC7B,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,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AM,CAAC,EAAG,OAAS,EAAG,GACtB,GAAM,CAAC,EAAG,OAAS,EAAG,GACtB,GAAM,CAAC,EAAG,OAAS,EAAG,GACtB,GAAM,CAAC,EAAG,OAAS,EAAG,GACtB,GAAM,CAAC,EAAG,OAAS,EAAG,GACtB,GAAM,CAAC,EAAG,OAAS,EAAG,GACtB,GAAM,CAAC,EAAG,OAAS,EAAG,GACtB,GAAM,CAAC,EAAG,OAAS,EAAG,GACtB,GAAM,CAAC,EAAG,OAAS,EAAG,GACtB,GAAM,CAAC,OAAS,OAAS,EAAG,GAC5B,GAAM,CAAC,OAAS,OAAS,EAAG,GAC5B,GAAM,CAAC,OAAS,OAAS,EAAG,GAC5B,GAAM,CAAC,EAAG,OAAS,EAAG,GACtB,GAAM,CAAC,OAAS,EAAG,EAAG,GACtB,GAAM,CAAC,EAAG,OAAS,EAAG,GACtB,GAAM,CAAC,EAAG,OAAS,EAAG,GACtB,GAAM,CAAC,EAAG,OAAS,EAAG,GACtB,GAAM,CAAC,EAAG,OAAS,EAAG,GACtB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,OAAS,OAAS,EAAG,GAC7B,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,OAAS,OAAS,EAAG,GAC7B,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,OAAS,OAAS,EAAG,GAC7B,IAAO,CAAC,OAAS,OAAS,EAAG,GAC7B,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG,GACvB,IAAO,CAAC,EAAG,OAAS,EAAG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","file":"js/page-fabric-index~page-knowledge-index.7af16ac1.js","sourcesContent":["// Utilities\n//\n'use strict';\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction isString(obj) { return _class(obj) === '[object String]'; }\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction has(object, key) {\n  return _hasOwnProperty.call(object, key);\n}\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object');\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\n// Remove element from array and put another array at those position.\n// Useful for some operations with tokens\nfunction arrayReplaceAt(src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1));\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isValidEntityCode(c) {\n  /*eslint no-bitwise:0*/\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false; }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false; }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false; }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false; }\n  if (c === 0x0B) { return false; }\n  if (c >= 0x0E && c <= 0x1F) { return false; }\n  if (c >= 0x7F && c <= 0x9F) { return false; }\n  // out of range\n  if (c > 0x10FFFF) { return false; }\n  return true;\n}\n\nfunction fromCodePoint(c) {\n  /*eslint no-bitwise:0*/\n  if (c > 0xffff) {\n    c -= 0x10000;\n    var surrogate1 = 0xd800 + (c >> 10),\n        surrogate2 = 0xdc00 + (c & 0x3ff);\n\n    return String.fromCharCode(surrogate1, surrogate2);\n  }\n  return String.fromCharCode(c);\n}\n\n\nvar UNESCAPE_MD_RE  = /\\\\([!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~])/g;\nvar ENTITY_RE       = /&([a-z#][a-z0-9]{1,31});/gi;\nvar UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi');\n\nvar DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i;\n\nvar entities = require('./entities');\n\nfunction replaceEntityPattern(match, name) {\n  var code = 0;\n\n  if (has(entities, name)) {\n    return entities[name];\n  }\n\n  if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    code = name[1].toLowerCase() === 'x' ?\n      parseInt(name.slice(2), 16)\n    :\n      parseInt(name.slice(1), 10);\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code);\n    }\n  }\n\n  return match;\n}\n\n/*function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n}*/\n\nfunction unescapeMd(str) {\n  if (str.indexOf('\\\\') < 0) { return str; }\n  return str.replace(UNESCAPE_MD_RE, '$1');\n}\n\nfunction unescapeAll(str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) { return str; }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) { return escaped; }\n    return replaceEntityPattern(match, entity);\n  });\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar HTML_ESCAPE_TEST_RE = /[&<>\"]/;\nvar HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\nvar HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n};\n\nfunction replaceUnsafeChar(ch) {\n  return HTML_REPLACEMENTS[ch];\n}\n\nfunction escapeHtml(str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n  }\n  return str;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g;\n\nfunction escapeRE(str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&');\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isSpace(code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true;\n  }\n  return false;\n}\n\n// Zs (unicode class) || [\\t\\f\\v\\r\\n]\nfunction isWhiteSpace(code) {\n  if (code >= 0x2000 && code <= 0x200A) { return true; }\n  switch (code) {\n    case 0x09: // \\t\n    case 0x0A: // \\n\n    case 0x0B: // \\v\n    case 0x0C: // \\f\n    case 0x0D: // \\r\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true;\n  }\n  return false;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/*eslint-disable max-len*/\nvar UNICODE_PUNCT_RE = require('uc.micro/categories/P/regex');\n\n// Currently without astral characters support.\nfunction isPunctChar(ch) {\n  return UNICODE_PUNCT_RE.test(ch);\n}\n\n\n// Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\nfunction isMdAsciiPunct(ch) {\n  switch (ch) {\n    case 0x21/* ! */:\n    case 0x22/* \" */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x27/* ' */:\n    case 0x28/* ( */:\n    case 0x29/* ) */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2C/* , */:\n    case 0x2D/* - */:\n    case 0x2E/* . */:\n    case 0x2F/* / */:\n    case 0x3A/* : */:\n    case 0x3B/* ; */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x3F/* ? */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7C/* | */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\n// Hepler to unify [reference labels].\n//\nfunction normalizeReference(str) {\n  // use .toUpperCase() instead of .toLowerCase()\n  // here to avoid a conflict with Object.prototype\n  // members (most notably, `__proto__`)\n  return str.trim().replace(/\\s+/g, ' ').toUpperCase();\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\nexports.lib                 = {};\nexports.lib.mdurl           = require('mdurl');\nexports.lib.ucmicro         = require('uc.micro');\n\nexports.assign              = assign;\nexports.isString            = isString;\nexports.has                 = has;\nexports.unescapeMd          = unescapeMd;\nexports.unescapeAll         = unescapeAll;\nexports.isValidEntityCode   = isValidEntityCode;\nexports.fromCodePoint       = fromCodePoint;\n// exports.replaceEntities     = replaceEntities;\nexports.escapeHtml          = escapeHtml;\nexports.arrayReplaceAt      = arrayReplaceAt;\nexports.isSpace             = isSpace;\nexports.isWhiteSpace        = isWhiteSpace;\nexports.isMdAsciiPunct      = isMdAsciiPunct;\nexports.isPunctChar         = isPunctChar;\nexports.escapeRE            = escapeRE;\nexports.normalizeReference  = normalizeReference;\n","export default \"# 从0开始搭建Fabric网络:管理\\n## 添加管理组织\\n小明的咖啡馆网络已经启动了，然而当前并不能做什么。Orderer就像企业的管理层，他们成天策划方案，但具体落实的，是底层的员工。在Fabric中扮演这个角色的是Peer节点。\\n经过一番大脑风暴，小明打好了第一个Peer节点草稿：\\n- peer名称：`ming.coffeeshop.com`\\n- peer权限：管理权限\\n- peer数量：1\\n\\n## 现在开始编写peer节点配置\\n第一，创建目录 02-adding-network-administrators，并且进入该目录：\\n```\\nmkdir 02-adding-network-administrators\\ncd 02-adding-network-administrators\\n```\\n\\n第二，在crypto-config.yaml配置peer信息：\\n```\\nPeerOrgs:\\n  - Name: Ming\\n    Domain: ming.coffeeshop.com\\n    EnableNodeOUs: true\\n    Template:\\n      Count: 1\\n    Users:\\n      Count: 2\\n```\\n\\n第三，在configtx.yaml配置peer的组织信息:\\n```\\n    - &Ming\\n        Name: Ming\\n        ID: MingMSP\\n        MSPDir: ./organizations/peerOrganizations/ming.coffeeshop.com/msp\\n        Policies:\\n            Readers:\\n                Type: Signature\\n                Rule: \\\"OR('MingMSP.admin', 'MingMSP.peer', 'MingMSP.client')\\\"\\n            Writers:\\n                Type: Signature\\n                Rule: \\\"OR('MingMSP.admin', 'MingMSP.client')\\\"\\n            Admins:\\n                Type: Signature\\n                Rule: \\\"OR('MingMSP.admin')\\\"\\n            Endorsement:\\n                Type: Signature\\n                Rule: \\\"OR('MingMSP.peer')\\\"\\n```\\n同时，将peer设置为网络组织：\\n```\\nProfiles:\\n    Genesis:\\n        <<: *ChannelDefaults\\n        Orderer:\\n            <<: *OrdererDefaults\\n            Organizations:\\n                - *Orderer\\n                - *Ming\\n            Capabilities:\\n                <<: *OrdererCapabilities\\n        Consortiums:\\n            SampleConsortium:\\n                Organizations:\\n```\\n第四，启动网络:\\n```\\n./network.sh custom\\n```\\n\\n## 网络示意图\\n![admin](/book/fabric/coffee02.png)\\n\\n注:\\n- 在这一节中，重点是配置peer节点，相应组织Ming添加为网络管理组织，而peer节点的容器尚未启动\\n- 本节的源码位于[02-adding-network-administrators](https://github.com/stephenwu2020/hfcoffeeshop/tree/master/02-adding-network-administrators)\";","'use strict';\n\nmodule.exports = function emoji_html(tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\n","export default \"# Ethereum是什么\\n\\nEthereum俗称“全球计算机“。从计算机科学的角度来看，它本质上是一台状态机，拥有无限种状态，每一次的状态变化只能由一个特定的对象完成，这个对象运行在虚拟机当中，这就是它最基本的构成。从实用性的角度来看，它是全球化，分散化的基础运算设施，运行其上的程序被称作Smart Contract。Smart Contract运行状态的更新，同步，由底层的Blockchain实现。执行这些操作会消耗一定的计算资源，因此需要为此支付一笔小费，用加密货币ether作为支付媒介。Ethereum的运行生态具有高可用性，高可认证性，高透明度，中立性等等优点，同时可抵抗审查，降低交易对手不确定性风险,使得开发者得以构建强大的去中心化的应用.\\n\\n# 与Bitcoin做对比\\n\\n许多人接触Ethereum之前，已有加密货币的使用经验，特别是Bitcoin。Ethereum与其它开放型Blockchain有很多相似之处：通过点对点的网络进行连接；使用拜占庭容错的共识算法对内部状态进行同步更新；广泛运用密码学基本元素，如电子签名，哈希函数，加密货币等。但在其它很多方面，包括最终目标和实现架构，有惊人的差异。\\n\\nBitcoin是一个电子加密货币系统，它的脚本语言的功能非常有限，只能做简单的true/false条件判断。Ethereum的主要目标并非是电子支付网络。虽然电子货币ether自身是一个运行整体，也是Ethereum运行的必要因素。但从设计上，它是为了Ethereum这台“全球计算机“的运行而生，仅仅是一个货币工具而已。Ethereum的目标，是成为具有普遍性的，可编程的Blockchain。用户在它的虚拟机运行应用程序，执行数学运算和复杂的商业逻辑。Ethereum的脚本语言是图灵完整的，Ethereum从功能上是一台具有普遍适用性的计算机。\\n\\n# Blockchain的组成\\n\\n一个开放的，公共的Blockchain通常具有以下组件:\\n\\n- 点对点的网络(P2P)，连接各个参与者，在其中广播交易消息和验证数据\\n- 消息，类似交易数据的格式，是最后形成状态的中间过渡数据\\n- 共识规则，规定交易的组成元素，判定交易的合法性\\n- 状态机，在共识规则下执行各种交易\\n- Block，多个交易数据组合成的，经过加密的块数据，形成数据链，记录了所有的经过验证且被接受的交易信息\\n- 共识算法，强制所有参与者遵守共识规则，从而达到分散化\\n- 运用博弈论的激励机制，给予参与验证的主体一定的奖励，防止Blockchain被私人篡改\\n- 实现上述功能的客户端软件\\n\\n# Ethereum: 通用型Blockchain\\n最原始的Blockchain是Bitcoin Blockchain，它追踪Bitcoin的所有权和状态变化。Bitcoin本质上是一个分布式的具有共识的状态机，每一个交易都导致了状态的切换，最终导致的是货币所有权的转移。每次状态的切换，必须在共识规则约束下完成，同时所有的参与者都会进入下一个相同的状态下。Ethereum也是一个分布式的状态机，不同于Bitcoin追踪货币在某一状态下的所有权，Ethereum追踪的数据具有一般普遍性，包括所有可以用键值对表示的数据。换句话说，跟普通计算机使用的RAM数据存储模型是一样的。Ethereum存储着数据和代码，使用Blockchain来跟踪这些存储的变化，能够将代码加载进虚拟机中运行，并将产生的结果写入Blockchain之中。Ethereum跟普通计算机有两个关键性的区别，其一，Ethereum的运行必须遵循共识规则；其二，Ethereum的状态是全球化分布式的。Ethereum解决的是这样的问题：如果我们能够在特定的共识下，追踪程序的任意状态，并且对状态机进行编程，创造一个全球化的计算机系统，会发生什么呢？\\n\\n# Ethereum的组成\\nEthereum Blockchain的组件，具体来说，包括以下部分：\\n\\n### P2P网络\\n> Ethereum的主网的协议叫做DEVp2p，运行在TCP之上，端口为30303\\n### 共识规则\\n> Ethereum的共识规则定义在其黄页的参考规格中\\n### 交易\\n> Ethereum的交易用网络消息实现，包含发送者，接受者，价值，数据负载等\\n### 状态机\\n> Ethereum的状态切换由Ethereum虚拟机(EVM)处理，EVM基于堆栈的架构，执行字节码。EVM运行的程序叫做\\\"Smart Contract\\\"，由高级语言，比如Solidity编写而成，经过编译，成为字节码，再由EVM执行\\n### 数据结构\\n> Ethereum的状态，存储在每个节点本地的数据库之中，通常是Google LevelDB，存储的数据包括交易数据和系统状态，经过哈希函数序列化，形成Merkle Particia Tree。\\n### 共识算法\\n> Ethereum使用Bitcoin的Nakamoto共识模型，用PoW算法，对按顺序排列的，单独签名的信息块加权重，决定出最长的区块链，为当前的合法状态。然而，Ethereum正计划用PoS加权投票系统来代替它.\\n### 经济安全性\\n> Ethereum目前使用名为Ethash的PoW算法保证自身的安全，但在不久的将来会用PoS算法取替\\n### 客户端\\n> Ethereum有多个使用不同语言开发的客户端程序，最流行的是Geth和Parity\\n\";","// heading (#, ##, ...)\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function heading(state, startLine, endLine, silent) {\n  var ch, level, tmp, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  ch  = state.src.charCodeAt(pos);\n\n  if (ch !== 0x23/* # */ || pos >= max) { return false; }\n\n  // count heading level\n  level = 1;\n  ch = state.src.charCodeAt(++pos);\n  while (ch === 0x23/* # */ && pos < max && level <= 6) {\n    level++;\n    ch = state.src.charCodeAt(++pos);\n  }\n\n  if (level > 6 || (pos < max && ch !== 0x20/* space */)) { return false; }\n\n  if (silent) { return true; }\n\n  // Let's cut tails like '    ###  ' from the end of string\n\n  max = state.skipSpacesBack(max, pos);\n  tmp = state.skipCharsBack(max, 0x23, pos); // #\n  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n    max = tmp;\n  }\n\n  state.line = startLine + 1;\n\n  token        = state.push('heading_open', 'h' + String(level), 1);\n  token.markup = '########'.slice(0, level);\n  token.map    = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = state.src.slice(pos, max).trim();\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token        = state.push('heading_close', 'h' + String(level), -1);\n  token.markup = '########'.slice(0, level);\n\n  return true;\n};\n","export default \"# 从0开始搭建Fabric网络:准备\\n## 从咖啡馆说起\\n小明经营一家咖啡馆已有2年时间了。他的咖啡味道独特，花样丰富，深受客户喜爱。随着业务的发展，小明正着手配套相应的软件应用，提高运营效率。经过3天3夜的艰苦探索，决定使用当前最火的技术--区块链，打造自个的咖啡帝国。\\n## 技术选材\\n小明打开Google的页面，输入“区块链”，排在首位的是比特币。然而比特币为电子支付而生，不适合他的咖啡馆，于是打开了Ethereum的官网。 多年的商海浮沉磨练了小明的大脑，一个绝妙的Smart Contract已跃然涌现脑海。小明正打算部署Etherem，忽然又打住了。他在想，未来咖啡馆做大了，如何隐藏商业机密不被泄漏，如何分配分店的权限呢？最后，经过深思熟虑，小明认为Hyperledger Fabric的技术，是最适合咖啡馆的，一切就这么定了。\\n## 环境搭建\\n跟着[Fabric的指导网站](https://hyperledger-fabric.readthedocs.io/en/master/prereqs.html)走，小明安装了git,curl,docker, docker compose等等软件，创建了[Github Reposity](https://github.com/stephenwu2020/hfcoffeeshop).\\n## Fabric镜像、工具软件部署\\n小明为咖啡馆网络创建了Github Reposity，仓库名字就叫[hfcoffeeshop](https://github.com/stephenwu2020/hfcoffeeshop)。为了方便拉取Fabric镜像，以及配置网络需要用到的软件，小明配置了简单的Makefile，在项目的根目录下执行：\\n```\\nmake\\n```\\n将会调用`bootstrap.sh`，拉取镜像、下载bin软件，之后，项目根目录会产生两个文件夹: bin和config。执行：\\n```\\ndocker images\\n```\\n确认fabric的镜像已经拉取：\\n```\\nREPOSITORY                   TAG                 IMAGE ID            CREATED             SIZE\\nhyperledger/fabric-tools     2.2                 5eb2356665e7        4 weeks ago         519MB\\nhyperledger/fabric-tools     2.2.0               5eb2356665e7        4 weeks ago         519MB\\nhyperledger/fabric-tools     latest              5eb2356665e7        4 weeks ago         519MB\\nhyperledger/fabric-peer      2.2                 760f304a3282        4 weeks ago         54.9MB\\nhyperledger/fabric-peer      2.2.0               760f304a3282        4 weeks ago         54.9MB\\nhyperledger/fabric-peer      latest              760f304a3282        4 weeks ago         54.9MB\\nhyperledger/fabric-orderer   2.2                 5fb8e97da88d        4 weeks ago         38.4MB\\nhyperledger/fabric-orderer   2.2.0               5fb8e97da88d        4 weeks ago         38.4MB\\nhyperledger/fabric-orderer   latest              5fb8e97da88d        4 weeks ago         38.4MB\\nhyperledger/fabric-ccenv     2.2                 aac435a5d3f1        4 weeks ago         586MB\\nhyperledger/fabric-ccenv     2.2.0               aac435a5d3f1        4 weeks ago         586MB\\nhyperledger/fabric-ccenv     latest              aac435a5d3f1        4 weeks ago         586MB\\nhyperledger/fabric-baseos    2.2                 aa2bdf8013af        4 weeks ago         6.85MB\\nhyperledger/fabric-baseos    2.2.0               aa2bdf8013af        4 weeks ago         6.85MB\\nhyperledger/fabric-baseos    latest              aa2bdf8013af        4 weeks ago         6.85MB\\nhyperledger/fabric-nodeenv   2.2                 ab88fe4d29dd        5 weeks ago         293MB\\nhyperledger/fabric-nodeenv   2.2.0               ab88fe4d29dd        5 weeks ago         293MB\\nhyperledger/fabric-nodeenv   latest              ab88fe4d29dd        5 weeks ago         293MB\\nhyperledger/fabric-javaenv   2.2                 56c30f316b23        5 weeks ago         504MB\\nhyperledger/fabric-javaenv   2.2.0               56c30f316b23        5 weeks ago         504MB\\nhyperledger/fabric-javaenv   latest              56c30f316b23        5 weeks ago         504MB\\nhyperledger/fabric-ca        1.4                 743a758fae29        2 months ago        154MB\\nhyperledger/fabric-ca        1.4.7               743a758fae29        2 months ago        154MB\\nhyperledger/fabric-ca        latest              743a758fae29        2 months ago        154MB\\n```\\n注：\\n- 大陆地区执行`bootstrap.sh`及docker镜像的拉取，可能会遇到网络问题。\\n- 源码地址: [hfcoffeeshop](https://github.com/stephenwu2020/hfcoffeeshop)\";","// Main parser class\n\n'use strict';\n\n\nvar utils        = require('./common/utils');\nvar helpers      = require('./helpers');\nvar Renderer     = require('./renderer');\nvar ParserCore   = require('./parser_core');\nvar ParserBlock  = require('./parser_block');\nvar ParserInline = require('./parser_inline');\nvar LinkifyIt    = require('linkify-it');\nvar mdurl        = require('mdurl');\nvar punycode     = require('punycode');\n\n\nvar config = {\n  'default': require('./presets/default'),\n  zero: require('./presets/zero'),\n  commonmark: require('./presets/commonmark')\n};\n\n////////////////////////////////////////////////////////////////////////////////\n//\n// This validator can prohibit more than really needed to prevent XSS. It's a\n// tradeoff to keep code simple and to be secure by default.\n//\n// If you need different setup - override validator method as you wish. Or\n// replace it with dummy function and use external sanitizer.\n//\n\nvar BAD_PROTO_RE = /^(vbscript|javascript|file|data):/;\nvar GOOD_DATA_RE = /^data:image\\/(gif|png|jpeg|webp);/;\n\nfunction validateLink(url) {\n  // url should be normalized at this point, and existing entities are decoded\n  var str = url.trim().toLowerCase();\n\n  return BAD_PROTO_RE.test(str) ? (GOOD_DATA_RE.test(str) ? true : false) : true;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar RECODE_HOSTNAME_FOR = [ 'http:', 'https:', 'mailto:' ];\n\nfunction normalizeLink(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toASCII(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  return mdurl.encode(mdurl.format(parsed));\n}\n\nfunction normalizeLinkText(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toUnicode(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  return mdurl.decode(mdurl.format(parsed));\n}\n\n\n/**\n * class MarkdownIt\n *\n * Main parser/renderer class.\n *\n * ##### Usage\n *\n * ```javascript\n * // node.js, \"classic\" way:\n * var MarkdownIt = require('markdown-it'),\n *     md = new MarkdownIt();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // node.js, the same, but with sugar:\n * var md = require('markdown-it')();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // browser without AMD, added to \"window\" on script load\n * // Note, there are no dash.\n * var md = window.markdownit();\n * var result = md.render('# markdown-it rulezz!');\n * ```\n *\n * Single line rendering, without paragraph wrap:\n *\n * ```javascript\n * var md = require('markdown-it')();\n * var result = md.renderInline('__markdown-it__ rulezz!');\n * ```\n **/\n\n/**\n * new MarkdownIt([presetName, options])\n * - presetName (String): optional, `commonmark` / `zero`\n * - options (Object)\n *\n * Creates parser instanse with given config. Can be called without `new`.\n *\n * ##### presetName\n *\n * MarkdownIt provides named presets as a convenience to quickly\n * enable/disable active syntax rules and options for common use cases.\n *\n * - [\"commonmark\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/commonmark.js) -\n *   configures parser to strict [CommonMark](http://commonmark.org/) mode.\n * - [default](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/default.js) -\n *   similar to GFM, used when no preset name given. Enables all available rules,\n *   but still without html, typographer & autolinker.\n * - [\"zero\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.js) -\n *   all rules disabled. Useful to quickly setup your config via `.enable()`.\n *   For example, when you need only `bold` and `italic` markup and nothing else.\n *\n * ##### options:\n *\n * - __html__ - `false`. Set `true` to enable HTML tags in source. Be careful!\n *   That's not safe! You may need external sanitizer to protect output from XSS.\n *   It's better to extend features via plugins, instead of enabling HTML.\n * - __xhtmlOut__ - `false`. Set `true` to add '/' when closing single tags\n *   (`<br />`). This is needed only for full CommonMark compatibility. In real\n *   world you will need HTML output.\n * - __breaks__ - `false`. Set `true` to convert `\\n` in paragraphs into `<br>`.\n * - __langPrefix__ - `language-`. CSS language class prefix for fenced blocks.\n *   Can be useful for external highlighters.\n * - __linkify__ - `false`. Set `true` to autoconvert URL-like text to links.\n * - __typographer__  - `false`. Set `true` to enable [some language-neutral\n *   replacement](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.js) +\n *   quotes beautification (smartquotes).\n * - __quotes__ - `“”‘’`, String or Array. Double + single quotes replacement\n *   pairs, when typographer enabled and smartquotes on. For example, you can\n *   use `'«»„“'` for Russian, `'„“‚‘'` for German, and\n *   `['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›']` for French (including nbsp).\n * - __highlight__ - `null`. Highlighter function for fenced code blocks.\n *   Highlighter `function (str, lang)` should return escaped HTML. It can also\n *   return empty string if the source was not changed and should be escaped\n *   externaly. If result starts with <pre... internal wrapper is skipped.\n *\n * ##### Example\n *\n * ```javascript\n * // commonmark mode\n * var md = require('markdown-it')('commonmark');\n *\n * // default mode\n * var md = require('markdown-it')();\n *\n * // enable everything\n * var md = require('markdown-it')({\n *   html: true,\n *   linkify: true,\n *   typographer: true\n * });\n * ```\n *\n * ##### Syntax highlighting\n *\n * ```js\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return hljs.highlight(lang, str, true).value;\n *       } catch (__) {}\n *     }\n *\n *     return ''; // use external default escaping\n *   }\n * });\n * ```\n *\n * Or with full wrapper override (if you need assign class to `<pre>`):\n *\n * ```javascript\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * // Actual default values\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return '<pre class=\"hljs\"><code>' +\n *                hljs.highlight(lang, str, true).value +\n *                '</code></pre>';\n *       } catch (__) {}\n *     }\n *\n *     return '<pre class=\"hljs\"><code>' + md.utils.escapeHtml(str) + '</code></pre>';\n *   }\n * });\n * ```\n *\n **/\nfunction MarkdownIt(presetName, options) {\n  if (!(this instanceof MarkdownIt)) {\n    return new MarkdownIt(presetName, options);\n  }\n\n  if (!options) {\n    if (!utils.isString(presetName)) {\n      options = presetName || {};\n      presetName = 'default';\n    }\n  }\n\n  /**\n   * MarkdownIt#inline -> ParserInline\n   *\n   * Instance of [[ParserInline]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.inline = new ParserInline();\n\n  /**\n   * MarkdownIt#block -> ParserBlock\n   *\n   * Instance of [[ParserBlock]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.block = new ParserBlock();\n\n  /**\n   * MarkdownIt#core -> Core\n   *\n   * Instance of [[Core]] chain executor. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.core = new ParserCore();\n\n  /**\n   * MarkdownIt#renderer -> Renderer\n   *\n   * Instance of [[Renderer]]. Use it to modify output look. Or to add rendering\n   * rules for new token types, generated by plugins.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * function myToken(tokens, idx, options, env, self) {\n   *   //...\n   *   return result;\n   * };\n   *\n   * md.renderer.rules['my_token'] = myToken\n   * ```\n   *\n   * See [[Renderer]] docs and [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js).\n   **/\n  this.renderer = new Renderer();\n\n  /**\n   * MarkdownIt#linkify -> LinkifyIt\n   *\n   * [linkify-it](https://github.com/markdown-it/linkify-it) instance.\n   * Used by [linkify](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/linkify.js)\n   * rule.\n   **/\n  this.linkify = new LinkifyIt();\n\n  /**\n   * MarkdownIt#validateLink(url) -> Boolean\n   *\n   * Link validation function. CommonMark allows too much in links. By default\n   * we disable `javascript:`, `vbscript:`, `file:` schemas, and almost all `data:...` schemas\n   * except some embedded image types.\n   *\n   * You can change this behaviour:\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   * // enable everything\n   * md.validateLink = function () { return true; }\n   * ```\n   **/\n  this.validateLink = validateLink;\n\n  /**\n   * MarkdownIt#normalizeLink(url) -> String\n   *\n   * Function used to encode link url to a machine-readable format,\n   * which includes url-encoding, punycode, etc.\n   **/\n  this.normalizeLink = normalizeLink;\n\n  /**\n   * MarkdownIt#normalizeLinkText(url) -> String\n   *\n   * Function used to decode link url to a human-readable format`\n   **/\n  this.normalizeLinkText = normalizeLinkText;\n\n\n  // Expose utils & helpers for easy acces from plugins\n\n  /**\n   * MarkdownIt#utils -> utils\n   *\n   * Assorted utility functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.js).\n   **/\n  this.utils = utils;\n\n  /**\n   * MarkdownIt#helpers -> helpers\n   *\n   * Link components parser functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/helpers).\n   **/\n  this.helpers = helpers;\n\n\n  this.options = {};\n  this.configure(presetName);\n\n  if (options) { this.set(options); }\n}\n\n\n/** chainable\n * MarkdownIt.set(options)\n *\n * Set parser options (in the same format as in constructor). Probably, you\n * will never need it, but you can change options after constructor call.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .set({ html: true, breaks: true })\n *             .set({ typographer, true });\n * ```\n *\n * __Note:__ To achieve the best possible performance, don't modify a\n * `markdown-it` instance options on the fly. If you need multiple configurations\n * it's best to create multiple instances and initialize each with separate\n * config.\n **/\nMarkdownIt.prototype.set = function (options) {\n  utils.assign(this.options, options);\n  return this;\n};\n\n\n/** chainable, internal\n * MarkdownIt.configure(presets)\n *\n * Batch load of all options and compenent settings. This is internal method,\n * and you probably will not need it. But if you with - see available presets\n * and data structure [here](https://github.com/markdown-it/markdown-it/tree/master/lib/presets)\n *\n * We strongly recommend to use presets instead of direct config loads. That\n * will give better compatibility with next versions.\n **/\nMarkdownIt.prototype.configure = function (presets) {\n  var self = this, presetName;\n\n  if (utils.isString(presets)) {\n    presetName = presets;\n    presets = config[presetName];\n    if (!presets) { throw new Error('Wrong `markdown-it` preset \"' + presetName + '\", check name'); }\n  }\n\n  if (!presets) { throw new Error('Wrong `markdown-it` preset, can\\'t be empty'); }\n\n  if (presets.options) { self.set(presets.options); }\n\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enableOnly(presets.components[name].rules);\n      }\n      if (presets.components[name].rules2) {\n        self[name].ruler2.enableOnly(presets.components[name].rules2);\n      }\n    });\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.enable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to enable\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable list or rules. It will automatically find appropriate components,\n * containing rules with given names. If rule not found, and `ignoreInvalid`\n * not set - throws exception.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .enable(['sub', 'sup'])\n *             .disable('smartquotes');\n * ```\n **/\nMarkdownIt.prototype.enable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.enable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.enable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to enable unknown rule(s): ' + missed);\n  }\n\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.disable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * The same as [[MarkdownIt.enable]], but turn specified rules off.\n **/\nMarkdownIt.prototype.disable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.disable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.disable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to disable unknown rule(s): ' + missed);\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.use(plugin, params)\n *\n * Load specified plugin with given params into current parser instance.\n * It's just a sugar to call `plugin(md, params)` with curring.\n *\n * ##### Example\n *\n * ```javascript\n * var iterator = require('markdown-it-for-inline');\n * var md = require('markdown-it')()\n *             .use(iterator, 'foo_replace', 'text', function (tokens, idx) {\n *               tokens[idx].content = tokens[idx].content.replace(/foo/g, 'bar');\n *             });\n * ```\n **/\nMarkdownIt.prototype.use = function (plugin /*, params, ... */) {\n  var args = [ this ].concat(Array.prototype.slice.call(arguments, 1));\n  plugin.apply(plugin, args);\n  return this;\n};\n\n\n/** internal\n * MarkdownIt.parse(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Parse input string and returns list of block tokens (special token type\n * \"inline\" will contain list of inline tokens). You should not call this\n * method directly, until you write custom renderer (for example, to produce\n * AST).\n *\n * `env` is used to pass data between \"distributed\" rules and return additional\n * metadata like reference info, needed for the renderer. It also can be used to\n * inject data in specific cases. Usually, you will be ok to pass `{}`,\n * and then pass updated object to renderer.\n **/\nMarkdownIt.prototype.parse = function (src, env) {\n  var state = new this.core.State(src, this, env);\n\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.render(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Render markdown string into html. It does all magic for you :).\n *\n * `env` can be used to inject additional metadata (`{}` by default).\n * But you will not need it with high probability. See also comment\n * in [[MarkdownIt.parse]].\n **/\nMarkdownIt.prototype.render = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parse(src, env), this.options, env);\n};\n\n\n/** internal\n * MarkdownIt.parseInline(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * The same as [[MarkdownIt.parse]] but skip all block rules. It returns the\n * block tokens list with the single `inline` element, containing parsed inline\n * tokens in `children` property. Also updates `env` object.\n **/\nMarkdownIt.prototype.parseInline = function (src, env) {\n  var state = new this.core.State(src, this, env);\n\n  state.inlineMode = true;\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.renderInline(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Similar to [[MarkdownIt.render]] but for single paragraph content. Result\n * will NOT be wrapped into `<p>` tags.\n **/\nMarkdownIt.prototype.renderInline = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parseInline(src, env), this.options, env);\n};\n\n\nmodule.exports = MarkdownIt;\n","// Token class\n\n'use strict';\n\n\n/**\n * class Token\n **/\n\n/**\n * new Token(type, tag, nesting)\n *\n * Create new token and fill passed properties.\n **/\nfunction Token(type, tag, nesting) {\n  /**\n   * Token#type -> String\n   *\n   * Type of the token (string, e.g. \"paragraph_open\")\n   **/\n  this.type     = type;\n\n  /**\n   * Token#tag -> String\n   *\n   * html tag name, e.g. \"p\"\n   **/\n  this.tag      = tag;\n\n  /**\n   * Token#attrs -> Array\n   *\n   * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`\n   **/\n  this.attrs    = null;\n\n  /**\n   * Token#map -> Array\n   *\n   * Source map info. Format: `[ line_begin, line_end ]`\n   **/\n  this.map      = null;\n\n  /**\n   * Token#nesting -> Number\n   *\n   * Level change (number in {-1, 0, 1} set), where:\n   *\n   * -  `1` means the tag is opening\n   * -  `0` means the tag is self-closing\n   * - `-1` means the tag is closing\n   **/\n  this.nesting  = nesting;\n\n  /**\n   * Token#level -> Number\n   *\n   * nesting level, the same as `state.level`\n   **/\n  this.level    = 0;\n\n  /**\n   * Token#children -> Array\n   *\n   * An array of child nodes (inline and img tokens)\n   **/\n  this.children = null;\n\n  /**\n   * Token#content -> String\n   *\n   * In a case of self-closing tag (code, html, fence, etc.),\n   * it has contents of this tag.\n   **/\n  this.content  = '';\n\n  /**\n   * Token#markup -> String\n   *\n   * '*' or '_' for emphasis, fence string for fence, etc.\n   **/\n  this.markup   = '';\n\n  /**\n   * Token#info -> String\n   *\n   * fence infostring\n   **/\n  this.info     = '';\n\n  /**\n   * Token#meta -> Object\n   *\n   * A place for plugins to store an arbitrary data\n   **/\n  this.meta     = null;\n\n  /**\n   * Token#block -> Boolean\n   *\n   * True for block-level tokens, false for inline tokens.\n   * Used in renderer to calculate line breaks\n   **/\n  this.block    = false;\n\n  /**\n   * Token#hidden -> Boolean\n   *\n   * If it's true, ignore this element when rendering. Used for tight lists\n   * to hide paragraphs.\n   **/\n  this.hidden   = false;\n}\n\n\n/**\n * Token.attrIndex(name) -> Number\n *\n * Search attribute index by name.\n **/\nToken.prototype.attrIndex = function attrIndex(name) {\n  var attrs, i, len;\n\n  if (!this.attrs) { return -1; }\n\n  attrs = this.attrs;\n\n  for (i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i][0] === name) { return i; }\n  }\n  return -1;\n};\n\n\n/**\n * Token.attrPush(attrData)\n *\n * Add `[ name, value ]` attribute to list. Init attrs if necessary\n **/\nToken.prototype.attrPush = function attrPush(attrData) {\n  if (this.attrs) {\n    this.attrs.push(attrData);\n  } else {\n    this.attrs = [ attrData ];\n  }\n};\n\n\n/**\n * Token.attrSet(name, value)\n *\n * Set `name` attribute to `value`. Override old value if exists.\n **/\nToken.prototype.attrSet = function attrSet(name, value) {\n  var idx = this.attrIndex(name),\n      attrData = [ name, value ];\n\n  if (idx < 0) {\n    this.attrPush(attrData);\n  } else {\n    this.attrs[idx] = attrData;\n  }\n};\n\n\n/**\n * Token.attrGet(name)\n *\n * Get the value of attribute `name`, or null if it does not exist.\n **/\nToken.prototype.attrGet = function attrGet(name) {\n  var idx = this.attrIndex(name), value = null;\n  if (idx >= 0) {\n    value = this.attrs[idx][1];\n  }\n  return value;\n};\n\n\n/**\n * Token.attrJoin(name, value)\n *\n * Join value to existing attribute via space. Or create new attribute if not\n * exists. Useful to operate with token classes.\n **/\nToken.prototype.attrJoin = function attrJoin(name, value) {\n  var idx = this.attrIndex(name);\n\n  if (idx < 0) {\n    this.attrPush([ name, value ]);\n  } else {\n    this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value;\n  }\n};\n\n\nmodule.exports = Token;\n","// Inline parser state\n\n'use strict';\n\n\nvar Token          = require('../token');\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\n\nfunction StateInline(src, md, env, outTokens) {\n  this.src = src;\n  this.env = env;\n  this.md = md;\n  this.tokens = outTokens;\n\n  this.pos = 0;\n  this.posMax = this.src.length;\n  this.level = 0;\n  this.pending = '';\n  this.pendingLevel = 0;\n\n  this.cache = {};        // Stores { start: end } pairs. Useful for backtrack\n                          // optimization of pairs parse (emphasis, strikes).\n\n  this.delimiters = [];   // Emphasis-like delimiters\n}\n\n\n// Flush pending text\n//\nStateInline.prototype.pushPending = function () {\n  var token = new Token('text', '', 0);\n  token.content = this.pending;\n  token.level = this.pendingLevel;\n  this.tokens.push(token);\n  this.pending = '';\n  return token;\n};\n\n\n// Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\nStateInline.prototype.push = function (type, tag, nesting) {\n  if (this.pending) {\n    this.pushPending();\n  }\n\n  var token = new Token(type, tag, nesting);\n\n  if (nesting < 0) { this.level--; }\n  token.level = this.level;\n  if (nesting > 0) { this.level++; }\n\n  this.pendingLevel = this.level;\n  this.tokens.push(token);\n  return token;\n};\n\n\n// Scan a sequence of emphasis-like markers, and determine whether\n// it can start an emphasis sequence or end an emphasis sequence.\n//\n//  - start - position to scan from (it should point at a valid marker);\n//  - canSplitWord - determine if these markers can be found inside a word\n//\nStateInline.prototype.scanDelims = function (start, canSplitWord) {\n  var pos = start, lastChar, nextChar, count, can_open, can_close,\n      isLastWhiteSpace, isLastPunctChar,\n      isNextWhiteSpace, isNextPunctChar,\n      left_flanking = true,\n      right_flanking = true,\n      max = this.posMax,\n      marker = this.src.charCodeAt(start);\n\n  // treat beginning of the line as a whitespace\n  lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20;\n\n  while (pos < max && this.src.charCodeAt(pos) === marker) { pos++; }\n\n  count = pos - start;\n\n  // treat end of the line as a whitespace\n  nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20;\n\n  isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n  isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n  isLastWhiteSpace = isWhiteSpace(lastChar);\n  isNextWhiteSpace = isWhiteSpace(nextChar);\n\n  if (isNextWhiteSpace) {\n    left_flanking = false;\n  } else if (isNextPunctChar) {\n    if (!(isLastWhiteSpace || isLastPunctChar)) {\n      left_flanking = false;\n    }\n  }\n\n  if (isLastWhiteSpace) {\n    right_flanking = false;\n  } else if (isLastPunctChar) {\n    if (!(isNextWhiteSpace || isNextPunctChar)) {\n      right_flanking = false;\n    }\n  }\n\n  if (!canSplitWord) {\n    can_open  = left_flanking  && (!right_flanking || isLastPunctChar);\n    can_close = right_flanking && (!left_flanking  || isNextPunctChar);\n  } else {\n    can_open  = left_flanking;\n    can_close = right_flanking;\n  }\n\n  return {\n    can_open:  can_open,\n    can_close: can_close,\n    length:    count\n  };\n};\n\n\n// re-export Token class to use in block rules\nStateInline.prototype.Token = Token;\n\n\nmodule.exports = StateInline;\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"article\"},[_c('vue-markdown',{attrs:{\"source\":_vm.source}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export * from \"-!../../../node_modules/cache-loader/dist/cjs.js?{\\\"cacheDirectory\\\":\\\"node_modules/.cache/vue-loader\\\",\\\"cacheIdentifier\\\":\\\"6bb3d82a-vue-loader-template\\\"}!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Article.vue?vue&type=template&id=abab3c10&\"","export default \"# Proof-of-Work\\n\\nProof-of-work, POW, 这个算法是发明 Bitcoin 的最重要的驱动力之一。最早出现于1992年的一篇论文中，用于防止垃圾邮件攻击。后来又被用来防止 DDoS 攻击。在这两方面都没有特别成功，如今却在加密货币中大显身手。\\n\\nBitcoin 的 POW 算法里，使用了 SHA-256 哈希方法。矿工重复地用 SHA-256 对 header 进行哈希，每次迭代，使用不同的 nonce 和时间戳填入 header 里，直到产生的哈希结果少于网络设置的难度值，然后把这个 block 广播到网络当中。矿工创造新的 block 消耗了大量的计算资源，存储资源，电力等等，为此，把随着该 block 诞生的新的比特币作为矿工的奖励，矿工可以在 block 里加入发送奖励到 coinbase 账户的 transaction，接收新创建的比特币奖励。\\n\\n为了祢补 SHA-256 哈希方法的缺陷，人们设计了许多变种。最简单的 SHA-256，适合在 ASIC 硬件上运算和挖矿。Litecoin 使用 Scrypt，它被设计成运算效率与内存的大小相关，但是有特定 ASIC 专门针对它设计出来了。Monero 使用 CryptoNight，被设计成特殊的系统调用相关，在传统的 CPU 架构是最高效的。\\n\\nEthereum 使用的算法叫做 Ethash，被设计成最适合使用 GPU 运算。它的运行过程，需要反复读取内存里的有向循环图 DAG，DAG 大少超过1G，ASIC 的硬件通常只有很少的内存，难以运行。\\n\\n在 POW 算法机制下，任何人想要控制整个网络系统，必须拥有51%以上 hashpower。Block 的奖励和 transaction 的小费吸引矿工挖矿，越多分散的矿工，那么进行51%攻击的难度就越大。网络的挖矿难度动态调整，目前 Ethereum 新的 block 诞生，一般在20秒左右。\\n\\nEthereum 的系统设置了一个难度炸弹，当系统到达难度炸弹的条件时，挖矿难度会相当高，新的 block 的诞生非常艰难，矿工将无利可图，整个系统将会走向瘫痪。之所以设置这个玩意，是督促 Ethereum 切换 POS 算法。估计在切换 POS 之后，挖矿的奖励将降低到接近0.\\n\";","/**\n * These objects store the data about the DOM nodes we create, as well as some\n * extra data. They can then be transformed into real DOM nodes with the\n * `toNode` function or HTML markup using `toMarkup`. They are useful for both\n * storing extra properties on the nodes, as well as providing a way to easily\n * work with the DOM.\n *\n * Similar functions for working with MathML nodes exist in mathMLTree.js.\n */\n\nvar utils = require(\"./utils\");\n\n/**\n * Create an HTML className based on a list of classes. In addition to joining\n * with spaces, we also remove null or empty classes.\n */\nvar createClass = function(classes) {\n    classes = classes.slice();\n    for (var i = classes.length - 1; i >= 0; i--) {\n        if (!classes[i]) {\n            classes.splice(i, 1);\n        }\n    }\n\n    return classes.join(\" \");\n};\n\n/**\n * This node represents a span node, with a className, a list of children, and\n * an inline style. It also contains information about its height, depth, and\n * maxFontSize.\n */\nfunction span(classes, children, height, depth, maxFontSize, style) {\n    this.classes = classes || [];\n    this.children = children || [];\n    this.height = height || 0;\n    this.depth = depth || 0;\n    this.maxFontSize = maxFontSize || 0;\n    this.style = style || {};\n    this.attributes = {};\n}\n\n/**\n * Sets an arbitrary attribute on the span. Warning: use this wisely. Not all\n * browsers support attributes the same, and having too many custom attributes\n * is probably bad.\n */\nspan.prototype.setAttribute = function(attribute, value) {\n    this.attributes[attribute] = value;\n};\n\n/**\n * Convert the span into an HTML node\n */\nspan.prototype.toNode = function() {\n    var span = document.createElement(\"span\");\n\n    // Apply the class\n    span.className = createClass(this.classes);\n\n    // Apply inline styles\n    for (var style in this.style) {\n        if (Object.prototype.hasOwnProperty.call(this.style, style)) {\n            span.style[style] = this.style[style];\n        }\n    }\n\n    // Apply attributes\n    for (var attr in this.attributes) {\n        if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n            span.setAttribute(attr, this.attributes[attr]);\n        }\n    }\n\n    // Append the children, also as HTML nodes\n    for (var i = 0; i < this.children.length; i++) {\n        span.appendChild(this.children[i].toNode());\n    }\n\n    return span;\n};\n\n/**\n * Convert the span into an HTML markup string\n */\nspan.prototype.toMarkup = function() {\n    var markup = \"<span\";\n\n    // Add the class\n    if (this.classes.length) {\n        markup += \" class=\\\"\";\n        markup += utils.escape(createClass(this.classes));\n        markup += \"\\\"\";\n    }\n\n    var styles = \"\";\n\n    // Add the styles, after hyphenation\n    for (var style in this.style) {\n        if (this.style.hasOwnProperty(style)) {\n            styles += utils.hyphenate(style) + \":\" + this.style[style] + \";\";\n        }\n    }\n\n    if (styles) {\n        markup += \" style=\\\"\" + utils.escape(styles) + \"\\\"\";\n    }\n\n    // Add the attributes\n    for (var attr in this.attributes) {\n        if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n            markup += \" \" + attr + \"=\\\"\";\n            markup += utils.escape(this.attributes[attr]);\n            markup += \"\\\"\";\n        }\n    }\n\n    markup += \">\";\n\n    // Add the markup of the children, also as markup\n    for (var i = 0; i < this.children.length; i++) {\n        markup += this.children[i].toMarkup();\n    }\n\n    markup += \"</span>\";\n\n    return markup;\n};\n\n/**\n * This node represents a document fragment, which contains elements, but when\n * placed into the DOM doesn't have any representation itself. Thus, it only\n * contains children and doesn't have any HTML properties. It also keeps track\n * of a height, depth, and maxFontSize.\n */\nfunction documentFragment(children, height, depth, maxFontSize) {\n    this.children = children || [];\n    this.height = height || 0;\n    this.depth = depth || 0;\n    this.maxFontSize = maxFontSize || 0;\n}\n\n/**\n * Convert the fragment into a node\n */\ndocumentFragment.prototype.toNode = function() {\n    // Create a fragment\n    var frag = document.createDocumentFragment();\n\n    // Append the children\n    for (var i = 0; i < this.children.length; i++) {\n        frag.appendChild(this.children[i].toNode());\n    }\n\n    return frag;\n};\n\n/**\n * Convert the fragment into HTML markup\n */\ndocumentFragment.prototype.toMarkup = function() {\n    var markup = \"\";\n\n    // Simply concatenate the markup for the children together\n    for (var i = 0; i < this.children.length; i++) {\n        markup += this.children[i].toMarkup();\n    }\n\n    return markup;\n};\n\n/**\n * A symbol node contains information about a single symbol. It either renders\n * to a single text node, or a span with a single text node in it, depending on\n * whether it has CSS classes, styles, or needs italic correction.\n */\nfunction symbolNode(value, height, depth, italic, skew, classes, style) {\n    this.value = value || \"\";\n    this.height = height || 0;\n    this.depth = depth || 0;\n    this.italic = italic || 0;\n    this.skew = skew || 0;\n    this.classes = classes || [];\n    this.style = style || {};\n    this.maxFontSize = 0;\n}\n\n/**\n * Creates a text node or span from a symbol node. Note that a span is only\n * created if it is needed.\n */\nsymbolNode.prototype.toNode = function() {\n    var node = document.createTextNode(this.value);\n    var span = null;\n\n    if (this.italic > 0) {\n        span = document.createElement(\"span\");\n        span.style.marginRight = this.italic + \"em\";\n    }\n\n    if (this.classes.length > 0) {\n        span = span || document.createElement(\"span\");\n        span.className = createClass(this.classes);\n    }\n\n    for (var style in this.style) {\n        if (this.style.hasOwnProperty(style)) {\n            span = span || document.createElement(\"span\");\n            span.style[style] = this.style[style];\n        }\n    }\n\n    if (span) {\n        span.appendChild(node);\n        return span;\n    } else {\n        return node;\n    }\n};\n\n/**\n * Creates markup for a symbol node.\n */\nsymbolNode.prototype.toMarkup = function() {\n    // TODO(alpert): More duplication than I'd like from\n    // span.prototype.toMarkup and symbolNode.prototype.toNode...\n    var needsSpan = false;\n\n    var markup = \"<span\";\n\n    if (this.classes.length) {\n        needsSpan = true;\n        markup += \" class=\\\"\";\n        markup += utils.escape(createClass(this.classes));\n        markup += \"\\\"\";\n    }\n\n    var styles = \"\";\n\n    if (this.italic > 0) {\n        styles += \"margin-right:\" + this.italic + \"em;\";\n    }\n    for (var style in this.style) {\n        if (this.style.hasOwnProperty(style)) {\n            styles += utils.hyphenate(style) + \":\" + this.style[style] + \";\";\n        }\n    }\n\n    if (styles) {\n        needsSpan = true;\n        markup += \" style=\\\"\" + utils.escape(styles) + \"\\\"\";\n    }\n\n    var escaped = utils.escape(this.value);\n    if (needsSpan) {\n        markup += \">\";\n        markup += escaped;\n        markup += \"</span>\";\n        return markup;\n    } else {\n        return escaped;\n    }\n};\n\nmodule.exports = {\n    span: span,\n    documentFragment: documentFragment,\n    symbolNode: symbolNode,\n};\n","export default \"# 从0开始搭建Fabric网络:Peer\\n## 记录区块的Peer\\nPeer的主要任务有：\\n- 接受客户请求，创建交易\\n- 发送交易至orderer\\n- 接收orderer的区块\\n- 将区块写入本地数据库\\n\\n## 现在开始部署Peer节点\\n第一，创建目录05-peers-and-ledgers，进入该目录\\n```\\nmkdir 05-peers-and-ledgers\\ncd 05-peers-and-ledgers\\n```\\n第二，修改configtx.yaml，为企业Ming定义anchor peer:\\n```\\n        AnchorPeers:\\n            # AnchorPeers defines the location of peers which can be used\\n            # for cross org gossip communication.  Note, this value is only\\n            # encoded in the genesis block in the Application section context\\n            - Host: peer0.ming.coffeeshop.com\\n              Port: 7051\\n```\\n第三，为企业Ming添加peer的容器，修改docker-compose.yaml:\\n```\\n  peer0.ming.coffeeshop.com:\\n    container_name: peer0.ming.coffeeshop.com\\n    image: hyperledger/fabric-peer:$IMAGE_TAG\\n    environment:\\n      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock\\n      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_test\\n      - FABRIC_LOGGING_SPEC=info\\n      # peer env\\n      - CORE_PEER_TLS_ENABLED=true\\n      - CORE_PEER_PROFILE_ENABLED=true\\n      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt\\n      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key\\n      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt\\n      # Peer specific variabes\\n      - CORE_PEER_ID=peer0.ming.coffeeshop.com\\n      - CORE_PEER_ADDRESS=peer0.ming.coffeeshop.com:7051\\n      - CORE_PEER_LISTENADDRESS=0.0.0.0:7051\\n      - CORE_PEER_CHAINCODEADDRESS=peer0.ming.coffeeshop.com:7052\\n      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052\\n      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.ming.coffeeshop.com:7051\\n      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.ming.coffeeshop.com:7051\\n      - CORE_PEER_LOCALMSPID=MingMSP\\n\\n    working_dir: /opt/gopath/src/github.com/hyperledger/fabric\\n    command: peer node start\\n    ports:\\n      - 7051:7051\\n    volumes:\\n        - /var/run/:/host/var/run/\\n        - ./system-genesis-block:/etc/hyperledger/configtx\\n        - ./organizations/peerOrganizations/ming.coffeeshop.com/peers/peer0.ming.coffeeshop.com/msp:/etc/hyperledger/fabric/msp\\n        - ./organizations/peerOrganizations/ming.coffeeshop.com/peers/peer0.ming.coffeeshop.com/tls:/etc/hyperledger/fabric/tls\\n        - ./channel-artifacts:/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts\\n        - ./organizations:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/\\n    networks:\\n      - basic\\n```\\n第四，启动网络:\\n```\\n./network.sh custom\\n```\\n## 检查docker容器状态\\n```\\ndocker ps\\nCONTAINER ID        IMAGE                              COMMAND             CREATED             STATUS              PORTS                    NAMES\\nb87e39044118        hyperledger/fabric-tools:2.2.0     \\\"/bin/bash\\\"         45 seconds ago      Up 44 seconds                                cli\\n733c894838be        hyperledger/fabric-peer:2.2.0      \\\"peer node start\\\"   47 seconds ago      Up 44 seconds       0.0.0.0:7051->7051/tcp   peer0.ming.coffeeshop.com\\n8ad4281a376c        hyperledger/fabric-orderer:2.2.0   \\\"orderer\\\"           47 seconds ago      Up 45 seconds       0.0.0.0:7050->7050/tcp   orderer.coffeeshop.com\\n```\\n\\n## 网络示意图\\n![consortium](/book/fabric/coffee05.png)\\n\\n## 命令解释\\n执行./network.sh custom启动网络，其中新增的命令是:\\n- joinChan: 将peer加入channel\\n- setAnchor：设置企业Ming的anchor peer为`peer0.ming.coffeeshop.com`\\n- listChan: 查看当前channel的信息\\n\\n注：\\n- 本节源码位于:[05-peers-and-ledgers](https://github.com/stephenwu2020/hfcoffeeshop/tree/master/05-peers-and-ledgers)\";","/**\n * This is the ParseError class, which is the main error thrown by KaTeX\n * functions when something has gone wrong. This is used to distinguish internal\n * errors from errors in the expression that the user provided.\n */\nfunction ParseError(message, lexer, position) {\n    var error = \"KaTeX parse error: \" + message;\n\n    if (lexer !== undefined && position !== undefined) {\n        // If we have the input and a position, make the error a bit fancier\n\n        // Prepend some information\n        error += \" at position \" + position + \": \";\n\n        // Get the input\n        var input = lexer._input;\n        // Insert a combining underscore at the correct position\n        input = input.slice(0, position) + \"\\u0332\" +\n            input.slice(position);\n\n        // Extract some context from the input and add it to the error\n        var begin = Math.max(0, position - 15);\n        var end = position + 15;\n        error += input.slice(begin, end);\n    }\n\n    // Some hackery to make ParseError a prototype of Error\n    // See http://stackoverflow.com/a/8460753\n    var self = new Error(error);\n    self.name = \"ParseError\";\n    self.__proto__ = ParseError.prototype;\n\n    self.position = position;\n    return self;\n}\n\n// More hackery\nParseError.prototype.__proto__ = Error.prototype;\n\nmodule.exports = ParseError;\n","/**\n * This file holds a list of all no-argument functions and single-character\n * symbols (like 'a' or ';').\n *\n * For each of the symbols, there are three properties they can have:\n * - font (required): the font to be used for this symbol. Either \"main\" (the\n     normal font), or \"ams\" (the ams fonts).\n * - group (required): the ParseNode group type the symbol should have (i.e.\n     \"textord\", \"mathord\", etc).\n     See https://github.com/Khan/KaTeX/wiki/Examining-TeX#group-types\n * - replace: the character that this symbol or function should be\n *   replaced with (i.e. \"\\phi\" has a replace value of \"\\u03d5\", the phi\n *   character in the main font).\n *\n * The outermost map in the table indicates what mode the symbols should be\n * accepted in (e.g. \"math\" or \"text\").\n */\n\nmodule.exports = {\n    math: {},\n    text: {},\n};\n\nfunction defineSymbol(mode, font, group, replace, name) {\n    module.exports[mode][name] = {\n        font: font,\n        group: group,\n        replace: replace,\n    };\n}\n\n// Some abbreviations for commonly used strings.\n// This helps minify the code, and also spotting typos using jshint.\n\n// modes:\nvar math = \"math\";\nvar text = \"text\";\n\n// fonts:\nvar main = \"main\";\nvar ams = \"ams\";\n\n// groups:\nvar accent = \"accent\";\nvar bin = \"bin\";\nvar close = \"close\";\nvar inner = \"inner\";\nvar mathord = \"mathord\";\nvar op = \"op\";\nvar open = \"open\";\nvar punct = \"punct\";\nvar rel = \"rel\";\nvar spacing = \"spacing\";\nvar textord = \"textord\";\n\n// Now comes the symbol table\n\n// Relation Symbols\ndefineSymbol(math, main, rel, \"\\u2261\", \"\\\\equiv\");\ndefineSymbol(math, main, rel, \"\\u227a\", \"\\\\prec\");\ndefineSymbol(math, main, rel, \"\\u227b\", \"\\\\succ\");\ndefineSymbol(math, main, rel, \"\\u223c\", \"\\\\sim\");\ndefineSymbol(math, main, rel, \"\\u22a5\", \"\\\\perp\");\ndefineSymbol(math, main, rel, \"\\u2aaf\", \"\\\\preceq\");\ndefineSymbol(math, main, rel, \"\\u2ab0\", \"\\\\succeq\");\ndefineSymbol(math, main, rel, \"\\u2243\", \"\\\\simeq\");\ndefineSymbol(math, main, rel, \"\\u2223\", \"\\\\mid\");\ndefineSymbol(math, main, rel, \"\\u226a\", \"\\\\ll\");\ndefineSymbol(math, main, rel, \"\\u226b\", \"\\\\gg\");\ndefineSymbol(math, main, rel, \"\\u224d\", \"\\\\asymp\");\ndefineSymbol(math, main, rel, \"\\u2225\", \"\\\\parallel\");\ndefineSymbol(math, main, rel, \"\\u22c8\", \"\\\\bowtie\");\ndefineSymbol(math, main, rel, \"\\u2323\", \"\\\\smile\");\ndefineSymbol(math, main, rel, \"\\u2291\", \"\\\\sqsubseteq\");\ndefineSymbol(math, main, rel, \"\\u2292\", \"\\\\sqsupseteq\");\ndefineSymbol(math, main, rel, \"\\u2250\", \"\\\\doteq\");\ndefineSymbol(math, main, rel, \"\\u2322\", \"\\\\frown\");\ndefineSymbol(math, main, rel, \"\\u220b\", \"\\\\ni\");\ndefineSymbol(math, main, rel, \"\\u221d\", \"\\\\propto\");\ndefineSymbol(math, main, rel, \"\\u22a2\", \"\\\\vdash\");\ndefineSymbol(math, main, rel, \"\\u22a3\", \"\\\\dashv\");\ndefineSymbol(math, main, rel, \"\\u220b\", \"\\\\owns\");\n\n// Punctuation\ndefineSymbol(math, main, punct, \"\\u002e\", \"\\\\ldotp\");\ndefineSymbol(math, main, punct, \"\\u22c5\", \"\\\\cdotp\");\n\n// Misc Symbols\ndefineSymbol(math, main, textord, \"\\u0023\", \"\\\\#\");\ndefineSymbol(math, main, textord, \"\\u0026\", \"\\\\&\");\ndefineSymbol(math, main, textord, \"\\u2135\", \"\\\\aleph\");\ndefineSymbol(math, main, textord, \"\\u2200\", \"\\\\forall\");\ndefineSymbol(math, main, textord, \"\\u210f\", \"\\\\hbar\");\ndefineSymbol(math, main, textord, \"\\u2203\", \"\\\\exists\");\ndefineSymbol(math, main, textord, \"\\u2207\", \"\\\\nabla\");\ndefineSymbol(math, main, textord, \"\\u266d\", \"\\\\flat\");\ndefineSymbol(math, main, textord, \"\\u2113\", \"\\\\ell\");\ndefineSymbol(math, main, textord, \"\\u266e\", \"\\\\natural\");\ndefineSymbol(math, main, textord, \"\\u2663\", \"\\\\clubsuit\");\ndefineSymbol(math, main, textord, \"\\u2118\", \"\\\\wp\");\ndefineSymbol(math, main, textord, \"\\u266f\", \"\\\\sharp\");\ndefineSymbol(math, main, textord, \"\\u2662\", \"\\\\diamondsuit\");\ndefineSymbol(math, main, textord, \"\\u211c\", \"\\\\Re\");\ndefineSymbol(math, main, textord, \"\\u2661\", \"\\\\heartsuit\");\ndefineSymbol(math, main, textord, \"\\u2111\", \"\\\\Im\");\ndefineSymbol(math, main, textord, \"\\u2660\", \"\\\\spadesuit\");\n\n// Math and Text\ndefineSymbol(math, main, textord, \"\\u2020\", \"\\\\dag\");\ndefineSymbol(math, main, textord, \"\\u2021\", \"\\\\ddag\");\n\n// Large Delimiters\ndefineSymbol(math, main, close, \"\\u23b1\", \"\\\\rmoustache\");\ndefineSymbol(math, main, open, \"\\u23b0\", \"\\\\lmoustache\");\ndefineSymbol(math, main, close, \"\\u27ef\", \"\\\\rgroup\");\ndefineSymbol(math, main, open, \"\\u27ee\", \"\\\\lgroup\");\n\n// Binary Operators\ndefineSymbol(math, main, bin, \"\\u2213\", \"\\\\mp\");\ndefineSymbol(math, main, bin, \"\\u2296\", \"\\\\ominus\");\ndefineSymbol(math, main, bin, \"\\u228e\", \"\\\\uplus\");\ndefineSymbol(math, main, bin, \"\\u2293\", \"\\\\sqcap\");\ndefineSymbol(math, main, bin, \"\\u2217\", \"\\\\ast\");\ndefineSymbol(math, main, bin, \"\\u2294\", \"\\\\sqcup\");\ndefineSymbol(math, main, bin, \"\\u25ef\", \"\\\\bigcirc\");\ndefineSymbol(math, main, bin, \"\\u2219\", \"\\\\bullet\");\ndefineSymbol(math, main, bin, \"\\u2021\", \"\\\\ddagger\");\ndefineSymbol(math, main, bin, \"\\u2240\", \"\\\\wr\");\ndefineSymbol(math, main, bin, \"\\u2a3f\", \"\\\\amalg\");\n\n// Arrow Symbols\ndefineSymbol(math, main, rel, \"\\u27f5\", \"\\\\longleftarrow\");\ndefineSymbol(math, main, rel, \"\\u21d0\", \"\\\\Leftarrow\");\ndefineSymbol(math, main, rel, \"\\u27f8\", \"\\\\Longleftarrow\");\ndefineSymbol(math, main, rel, \"\\u27f6\", \"\\\\longrightarrow\");\ndefineSymbol(math, main, rel, \"\\u21d2\", \"\\\\Rightarrow\");\ndefineSymbol(math, main, rel, \"\\u27f9\", \"\\\\Longrightarrow\");\ndefineSymbol(math, main, rel, \"\\u2194\", \"\\\\leftrightarrow\");\ndefineSymbol(math, main, rel, \"\\u27f7\", \"\\\\longleftrightarrow\");\ndefineSymbol(math, main, rel, \"\\u21d4\", \"\\\\Leftrightarrow\");\ndefineSymbol(math, main, rel, \"\\u27fa\", \"\\\\Longleftrightarrow\");\ndefineSymbol(math, main, rel, \"\\u21a6\", \"\\\\mapsto\");\ndefineSymbol(math, main, rel, \"\\u27fc\", \"\\\\longmapsto\");\ndefineSymbol(math, main, rel, \"\\u2197\", \"\\\\nearrow\");\ndefineSymbol(math, main, rel, \"\\u21a9\", \"\\\\hookleftarrow\");\ndefineSymbol(math, main, rel, \"\\u21aa\", \"\\\\hookrightarrow\");\ndefineSymbol(math, main, rel, \"\\u2198\", \"\\\\searrow\");\ndefineSymbol(math, main, rel, \"\\u21bc\", \"\\\\leftharpoonup\");\ndefineSymbol(math, main, rel, \"\\u21c0\", \"\\\\rightharpoonup\");\ndefineSymbol(math, main, rel, \"\\u2199\", \"\\\\swarrow\");\ndefineSymbol(math, main, rel, \"\\u21bd\", \"\\\\leftharpoondown\");\ndefineSymbol(math, main, rel, \"\\u21c1\", \"\\\\rightharpoondown\");\ndefineSymbol(math, main, rel, \"\\u2196\", \"\\\\nwarrow\");\ndefineSymbol(math, main, rel, \"\\u21cc\", \"\\\\rightleftharpoons\");\n\n// AMS Negated Binary Relations\ndefineSymbol(math, ams, rel, \"\\u226e\", \"\\\\nless\");\ndefineSymbol(math, ams, rel, \"\\ue010\", \"\\\\nleqslant\");\ndefineSymbol(math, ams, rel, \"\\ue011\", \"\\\\nleqq\");\ndefineSymbol(math, ams, rel, \"\\u2a87\", \"\\\\lneq\");\ndefineSymbol(math, ams, rel, \"\\u2268\", \"\\\\lneqq\");\ndefineSymbol(math, ams, rel, \"\\ue00c\", \"\\\\lvertneqq\");\ndefineSymbol(math, ams, rel, \"\\u22e6\", \"\\\\lnsim\");\ndefineSymbol(math, ams, rel, \"\\u2a89\", \"\\\\lnapprox\");\ndefineSymbol(math, ams, rel, \"\\u2280\", \"\\\\nprec\");\ndefineSymbol(math, ams, rel, \"\\u22e0\", \"\\\\npreceq\");\ndefineSymbol(math, ams, rel, \"\\u22e8\", \"\\\\precnsim\");\ndefineSymbol(math, ams, rel, \"\\u2ab9\", \"\\\\precnapprox\");\ndefineSymbol(math, ams, rel, \"\\u2241\", \"\\\\nsim\");\ndefineSymbol(math, ams, rel, \"\\ue006\", \"\\\\nshortmid\");\ndefineSymbol(math, ams, rel, \"\\u2224\", \"\\\\nmid\");\ndefineSymbol(math, ams, rel, \"\\u22ac\", \"\\\\nvdash\");\ndefineSymbol(math, ams, rel, \"\\u22ad\", \"\\\\nvDash\");\ndefineSymbol(math, ams, rel, \"\\u22ea\", \"\\\\ntriangleleft\");\ndefineSymbol(math, ams, rel, \"\\u22ec\", \"\\\\ntrianglelefteq\");\ndefineSymbol(math, ams, rel, \"\\u228a\", \"\\\\subsetneq\");\ndefineSymbol(math, ams, rel, \"\\ue01a\", \"\\\\varsubsetneq\");\ndefineSymbol(math, ams, rel, \"\\u2acb\", \"\\\\subsetneqq\");\ndefineSymbol(math, ams, rel, \"\\ue017\", \"\\\\varsubsetneqq\");\ndefineSymbol(math, ams, rel, \"\\u226f\", \"\\\\ngtr\");\ndefineSymbol(math, ams, rel, \"\\ue00f\", \"\\\\ngeqslant\");\ndefineSymbol(math, ams, rel, \"\\ue00e\", \"\\\\ngeqq\");\ndefineSymbol(math, ams, rel, \"\\u2a88\", \"\\\\gneq\");\ndefineSymbol(math, ams, rel, \"\\u2269\", \"\\\\gneqq\");\ndefineSymbol(math, ams, rel, \"\\ue00d\", \"\\\\gvertneqq\");\ndefineSymbol(math, ams, rel, \"\\u22e7\", \"\\\\gnsim\");\ndefineSymbol(math, ams, rel, \"\\u2a8a\", \"\\\\gnapprox\");\ndefineSymbol(math, ams, rel, \"\\u2281\", \"\\\\nsucc\");\ndefineSymbol(math, ams, rel, \"\\u22e1\", \"\\\\nsucceq\");\ndefineSymbol(math, ams, rel, \"\\u22e9\", \"\\\\succnsim\");\ndefineSymbol(math, ams, rel, \"\\u2aba\", \"\\\\succnapprox\");\ndefineSymbol(math, ams, rel, \"\\u2246\", \"\\\\ncong\");\ndefineSymbol(math, ams, rel, \"\\ue007\", \"\\\\nshortparallel\");\ndefineSymbol(math, ams, rel, \"\\u2226\", \"\\\\nparallel\");\ndefineSymbol(math, ams, rel, \"\\u22af\", \"\\\\nVDash\");\ndefineSymbol(math, ams, rel, \"\\u22eb\", \"\\\\ntriangleright\");\ndefineSymbol(math, ams, rel, \"\\u22ed\", \"\\\\ntrianglerighteq\");\ndefineSymbol(math, ams, rel, \"\\ue018\", \"\\\\nsupseteqq\");\ndefineSymbol(math, ams, rel, \"\\u228b\", \"\\\\supsetneq\");\ndefineSymbol(math, ams, rel, \"\\ue01b\", \"\\\\varsupsetneq\");\ndefineSymbol(math, ams, rel, \"\\u2acc\", \"\\\\supsetneqq\");\ndefineSymbol(math, ams, rel, \"\\ue019\", \"\\\\varsupsetneqq\");\ndefineSymbol(math, ams, rel, \"\\u22ae\", \"\\\\nVdash\");\ndefineSymbol(math, ams, rel, \"\\u2ab5\", \"\\\\precneqq\");\ndefineSymbol(math, ams, rel, \"\\u2ab6\", \"\\\\succneqq\");\ndefineSymbol(math, ams, rel, \"\\ue016\", \"\\\\nsubseteqq\");\ndefineSymbol(math, ams, bin, \"\\u22b4\", \"\\\\unlhd\");\ndefineSymbol(math, ams, bin, \"\\u22b5\", \"\\\\unrhd\");\n\n// AMS Negated Arrows\ndefineSymbol(math, ams, rel, \"\\u219a\", \"\\\\nleftarrow\");\ndefineSymbol(math, ams, rel, \"\\u219b\", \"\\\\nrightarrow\");\ndefineSymbol(math, ams, rel, \"\\u21cd\", \"\\\\nLeftarrow\");\ndefineSymbol(math, ams, rel, \"\\u21cf\", \"\\\\nRightarrow\");\ndefineSymbol(math, ams, rel, \"\\u21ae\", \"\\\\nleftrightarrow\");\ndefineSymbol(math, ams, rel, \"\\u21ce\", \"\\\\nLeftrightarrow\");\n\n// AMS Misc\ndefineSymbol(math, ams, rel, \"\\u25b3\", \"\\\\vartriangle\");\ndefineSymbol(math, ams, textord, \"\\u210f\", \"\\\\hslash\");\ndefineSymbol(math, ams, textord, \"\\u25bd\", \"\\\\triangledown\");\ndefineSymbol(math, ams, textord, \"\\u25ca\", \"\\\\lozenge\");\ndefineSymbol(math, ams, textord, \"\\u24c8\", \"\\\\circledS\");\ndefineSymbol(math, ams, textord, \"\\u00ae\", \"\\\\circledR\");\ndefineSymbol(math, ams, textord, \"\\u2221\", \"\\\\measuredangle\");\ndefineSymbol(math, ams, textord, \"\\u2204\", \"\\\\nexists\");\ndefineSymbol(math, ams, textord, \"\\u2127\", \"\\\\mho\");\ndefineSymbol(math, ams, textord, \"\\u2132\", \"\\\\Finv\");\ndefineSymbol(math, ams, textord, \"\\u2141\", \"\\\\Game\");\ndefineSymbol(math, ams, textord, \"\\u006b\", \"\\\\Bbbk\");\ndefineSymbol(math, ams, textord, \"\\u2035\", \"\\\\backprime\");\ndefineSymbol(math, ams, textord, \"\\u25b2\", \"\\\\blacktriangle\");\ndefineSymbol(math, ams, textord, \"\\u25bc\", \"\\\\blacktriangledown\");\ndefineSymbol(math, ams, textord, \"\\u25a0\", \"\\\\blacksquare\");\ndefineSymbol(math, ams, textord, \"\\u29eb\", \"\\\\blacklozenge\");\ndefineSymbol(math, ams, textord, \"\\u2605\", \"\\\\bigstar\");\ndefineSymbol(math, ams, textord, \"\\u2222\", \"\\\\sphericalangle\");\ndefineSymbol(math, ams, textord, \"\\u2201\", \"\\\\complement\");\ndefineSymbol(math, ams, textord, \"\\u00f0\", \"\\\\eth\");\ndefineSymbol(math, ams, textord, \"\\u2571\", \"\\\\diagup\");\ndefineSymbol(math, ams, textord, \"\\u2572\", \"\\\\diagdown\");\ndefineSymbol(math, ams, textord, \"\\u25a1\", \"\\\\square\");\ndefineSymbol(math, ams, textord, \"\\u25a1\", \"\\\\Box\");\ndefineSymbol(math, ams, textord, \"\\u25ca\", \"\\\\Diamond\");\ndefineSymbol(math, ams, textord, \"\\u00a5\", \"\\\\yen\");\ndefineSymbol(math, ams, textord, \"\\u2713\", \"\\\\checkmark\");\n\n// AMS Hebrew\ndefineSymbol(math, ams, textord, \"\\u2136\", \"\\\\beth\");\ndefineSymbol(math, ams, textord, \"\\u2138\", \"\\\\daleth\");\ndefineSymbol(math, ams, textord, \"\\u2137\", \"\\\\gimel\");\n\n// AMS Greek\ndefineSymbol(math, ams, textord, \"\\u03dd\", \"\\\\digamma\");\ndefineSymbol(math, ams, textord, \"\\u03f0\", \"\\\\varkappa\");\n\n// AMS Delimiters\ndefineSymbol(math, ams, open, \"\\u250c\", \"\\\\ulcorner\");\ndefineSymbol(math, ams, close, \"\\u2510\", \"\\\\urcorner\");\ndefineSymbol(math, ams, open, \"\\u2514\", \"\\\\llcorner\");\ndefineSymbol(math, ams, close, \"\\u2518\", \"\\\\lrcorner\");\n\n// AMS Binary Relations\ndefineSymbol(math, ams, rel, \"\\u2266\", \"\\\\leqq\");\ndefineSymbol(math, ams, rel, \"\\u2a7d\", \"\\\\leqslant\");\ndefineSymbol(math, ams, rel, \"\\u2a95\", \"\\\\eqslantless\");\ndefineSymbol(math, ams, rel, \"\\u2272\", \"\\\\lesssim\");\ndefineSymbol(math, ams, rel, \"\\u2a85\", \"\\\\lessapprox\");\ndefineSymbol(math, ams, rel, \"\\u224a\", \"\\\\approxeq\");\ndefineSymbol(math, ams, bin, \"\\u22d6\", \"\\\\lessdot\");\ndefineSymbol(math, ams, rel, \"\\u22d8\", \"\\\\lll\");\ndefineSymbol(math, ams, rel, \"\\u2276\", \"\\\\lessgtr\");\ndefineSymbol(math, ams, rel, \"\\u22da\", \"\\\\lesseqgtr\");\ndefineSymbol(math, ams, rel, \"\\u2a8b\", \"\\\\lesseqqgtr\");\ndefineSymbol(math, ams, rel, \"\\u2251\", \"\\\\doteqdot\");\ndefineSymbol(math, ams, rel, \"\\u2253\", \"\\\\risingdotseq\");\ndefineSymbol(math, ams, rel, \"\\u2252\", \"\\\\fallingdotseq\");\ndefineSymbol(math, ams, rel, \"\\u223d\", \"\\\\backsim\");\ndefineSymbol(math, ams, rel, \"\\u22cd\", \"\\\\backsimeq\");\ndefineSymbol(math, ams, rel, \"\\u2ac5\", \"\\\\subseteqq\");\ndefineSymbol(math, ams, rel, \"\\u22d0\", \"\\\\Subset\");\ndefineSymbol(math, ams, rel, \"\\u228f\", \"\\\\sqsubset\");\ndefineSymbol(math, ams, rel, \"\\u227c\", \"\\\\preccurlyeq\");\ndefineSymbol(math, ams, rel, \"\\u22de\", \"\\\\curlyeqprec\");\ndefineSymbol(math, ams, rel, \"\\u227e\", \"\\\\precsim\");\ndefineSymbol(math, ams, rel, \"\\u2ab7\", \"\\\\precapprox\");\ndefineSymbol(math, ams, rel, \"\\u22b2\", \"\\\\vartriangleleft\");\ndefineSymbol(math, ams, rel, \"\\u22b4\", \"\\\\trianglelefteq\");\ndefineSymbol(math, ams, rel, \"\\u22a8\", \"\\\\vDash\");\ndefineSymbol(math, ams, rel, \"\\u22aa\", \"\\\\Vvdash\");\ndefineSymbol(math, ams, rel, \"\\u2323\", \"\\\\smallsmile\");\ndefineSymbol(math, ams, rel, \"\\u2322\", \"\\\\smallfrown\");\ndefineSymbol(math, ams, rel, \"\\u224f\", \"\\\\bumpeq\");\ndefineSymbol(math, ams, rel, \"\\u224e\", \"\\\\Bumpeq\");\ndefineSymbol(math, ams, rel, \"\\u2267\", \"\\\\geqq\");\ndefineSymbol(math, ams, rel, \"\\u2a7e\", \"\\\\geqslant\");\ndefineSymbol(math, ams, rel, \"\\u2a96\", \"\\\\eqslantgtr\");\ndefineSymbol(math, ams, rel, \"\\u2273\", \"\\\\gtrsim\");\ndefineSymbol(math, ams, rel, \"\\u2a86\", \"\\\\gtrapprox\");\ndefineSymbol(math, ams, bin, \"\\u22d7\", \"\\\\gtrdot\");\ndefineSymbol(math, ams, rel, \"\\u22d9\", \"\\\\ggg\");\ndefineSymbol(math, ams, rel, \"\\u2277\", \"\\\\gtrless\");\ndefineSymbol(math, ams, rel, \"\\u22db\", \"\\\\gtreqless\");\ndefineSymbol(math, ams, rel, \"\\u2a8c\", \"\\\\gtreqqless\");\ndefineSymbol(math, ams, rel, \"\\u2256\", \"\\\\eqcirc\");\ndefineSymbol(math, ams, rel, \"\\u2257\", \"\\\\circeq\");\ndefineSymbol(math, ams, rel, \"\\u225c\", \"\\\\triangleq\");\ndefineSymbol(math, ams, rel, \"\\u223c\", \"\\\\thicksim\");\ndefineSymbol(math, ams, rel, \"\\u2248\", \"\\\\thickapprox\");\ndefineSymbol(math, ams, rel, \"\\u2ac6\", \"\\\\supseteqq\");\ndefineSymbol(math, ams, rel, \"\\u22d1\", \"\\\\Supset\");\ndefineSymbol(math, ams, rel, \"\\u2290\", \"\\\\sqsupset\");\ndefineSymbol(math, ams, rel, \"\\u227d\", \"\\\\succcurlyeq\");\ndefineSymbol(math, ams, rel, \"\\u22df\", \"\\\\curlyeqsucc\");\ndefineSymbol(math, ams, rel, \"\\u227f\", \"\\\\succsim\");\ndefineSymbol(math, ams, rel, \"\\u2ab8\", \"\\\\succapprox\");\ndefineSymbol(math, ams, rel, \"\\u22b3\", \"\\\\vartriangleright\");\ndefineSymbol(math, ams, rel, \"\\u22b5\", \"\\\\trianglerighteq\");\ndefineSymbol(math, ams, rel, \"\\u22a9\", \"\\\\Vdash\");\ndefineSymbol(math, ams, rel, \"\\u2223\", \"\\\\shortmid\");\ndefineSymbol(math, ams, rel, \"\\u2225\", \"\\\\shortparallel\");\ndefineSymbol(math, ams, rel, \"\\u226c\", \"\\\\between\");\ndefineSymbol(math, ams, rel, \"\\u22d4\", \"\\\\pitchfork\");\ndefineSymbol(math, ams, rel, \"\\u221d\", \"\\\\varpropto\");\ndefineSymbol(math, ams, rel, \"\\u25c0\", \"\\\\blacktriangleleft\");\ndefineSymbol(math, ams, rel, \"\\u2234\", \"\\\\therefore\");\ndefineSymbol(math, ams, rel, \"\\u220d\", \"\\\\backepsilon\");\ndefineSymbol(math, ams, rel, \"\\u25b6\", \"\\\\blacktriangleright\");\ndefineSymbol(math, ams, rel, \"\\u2235\", \"\\\\because\");\ndefineSymbol(math, ams, rel, \"\\u22d8\", \"\\\\llless\");\ndefineSymbol(math, ams, rel, \"\\u22d9\", \"\\\\gggtr\");\ndefineSymbol(math, ams, bin, \"\\u22b2\", \"\\\\lhd\");\ndefineSymbol(math, ams, bin, \"\\u22b3\", \"\\\\rhd\");\ndefineSymbol(math, ams, rel, \"\\u2242\", \"\\\\eqsim\");\ndefineSymbol(math, main, rel, \"\\u22c8\", \"\\\\Join\");\ndefineSymbol(math, ams, rel, \"\\u2251\", \"\\\\Doteq\");\n\n// AMS Binary Operators\ndefineSymbol(math, ams, bin, \"\\u2214\", \"\\\\dotplus\");\ndefineSymbol(math, ams, bin, \"\\u2216\", \"\\\\smallsetminus\");\ndefineSymbol(math, ams, bin, \"\\u22d2\", \"\\\\Cap\");\ndefineSymbol(math, ams, bin, \"\\u22d3\", \"\\\\Cup\");\ndefineSymbol(math, ams, bin, \"\\u2a5e\", \"\\\\doublebarwedge\");\ndefineSymbol(math, ams, bin, \"\\u229f\", \"\\\\boxminus\");\ndefineSymbol(math, ams, bin, \"\\u229e\", \"\\\\boxplus\");\ndefineSymbol(math, ams, bin, \"\\u22c7\", \"\\\\divideontimes\");\ndefineSymbol(math, ams, bin, \"\\u22c9\", \"\\\\ltimes\");\ndefineSymbol(math, ams, bin, \"\\u22ca\", \"\\\\rtimes\");\ndefineSymbol(math, ams, bin, \"\\u22cb\", \"\\\\leftthreetimes\");\ndefineSymbol(math, ams, bin, \"\\u22cc\", \"\\\\rightthreetimes\");\ndefineSymbol(math, ams, bin, \"\\u22cf\", \"\\\\curlywedge\");\ndefineSymbol(math, ams, bin, \"\\u22ce\", \"\\\\curlyvee\");\ndefineSymbol(math, ams, bin, \"\\u229d\", \"\\\\circleddash\");\ndefineSymbol(math, ams, bin, \"\\u229b\", \"\\\\circledast\");\ndefineSymbol(math, ams, bin, \"\\u22c5\", \"\\\\centerdot\");\ndefineSymbol(math, ams, bin, \"\\u22ba\", \"\\\\intercal\");\ndefineSymbol(math, ams, bin, \"\\u22d2\", \"\\\\doublecap\");\ndefineSymbol(math, ams, bin, \"\\u22d3\", \"\\\\doublecup\");\ndefineSymbol(math, ams, bin, \"\\u22a0\", \"\\\\boxtimes\");\n\n// AMS Arrows\ndefineSymbol(math, ams, rel, \"\\u21e2\", \"\\\\dashrightarrow\");\ndefineSymbol(math, ams, rel, \"\\u21e0\", \"\\\\dashleftarrow\");\ndefineSymbol(math, ams, rel, \"\\u21c7\", \"\\\\leftleftarrows\");\ndefineSymbol(math, ams, rel, \"\\u21c6\", \"\\\\leftrightarrows\");\ndefineSymbol(math, ams, rel, \"\\u21da\", \"\\\\Lleftarrow\");\ndefineSymbol(math, ams, rel, \"\\u219e\", \"\\\\twoheadleftarrow\");\ndefineSymbol(math, ams, rel, \"\\u21a2\", \"\\\\leftarrowtail\");\ndefineSymbol(math, ams, rel, \"\\u21ab\", \"\\\\looparrowleft\");\ndefineSymbol(math, ams, rel, \"\\u21cb\", \"\\\\leftrightharpoons\");\ndefineSymbol(math, ams, rel, \"\\u21b6\", \"\\\\curvearrowleft\");\ndefineSymbol(math, ams, rel, \"\\u21ba\", \"\\\\circlearrowleft\");\ndefineSymbol(math, ams, rel, \"\\u21b0\", \"\\\\Lsh\");\ndefineSymbol(math, ams, rel, \"\\u21c8\", \"\\\\upuparrows\");\ndefineSymbol(math, ams, rel, \"\\u21bf\", \"\\\\upharpoonleft\");\ndefineSymbol(math, ams, rel, \"\\u21c3\", \"\\\\downharpoonleft\");\ndefineSymbol(math, ams, rel, \"\\u22b8\", \"\\\\multimap\");\ndefineSymbol(math, ams, rel, \"\\u21ad\", \"\\\\leftrightsquigarrow\");\ndefineSymbol(math, ams, rel, \"\\u21c9\", \"\\\\rightrightarrows\");\ndefineSymbol(math, ams, rel, \"\\u21c4\", \"\\\\rightleftarrows\");\ndefineSymbol(math, ams, rel, \"\\u21a0\", \"\\\\twoheadrightarrow\");\ndefineSymbol(math, ams, rel, \"\\u21a3\", \"\\\\rightarrowtail\");\ndefineSymbol(math, ams, rel, \"\\u21ac\", \"\\\\looparrowright\");\ndefineSymbol(math, ams, rel, \"\\u21b7\", \"\\\\curvearrowright\");\ndefineSymbol(math, ams, rel, \"\\u21bb\", \"\\\\circlearrowright\");\ndefineSymbol(math, ams, rel, \"\\u21b1\", \"\\\\Rsh\");\ndefineSymbol(math, ams, rel, \"\\u21ca\", \"\\\\downdownarrows\");\ndefineSymbol(math, ams, rel, \"\\u21be\", \"\\\\upharpoonright\");\ndefineSymbol(math, ams, rel, \"\\u21c2\", \"\\\\downharpoonright\");\ndefineSymbol(math, ams, rel, \"\\u21dd\", \"\\\\rightsquigarrow\");\ndefineSymbol(math, ams, rel, \"\\u21dd\", \"\\\\leadsto\");\ndefineSymbol(math, ams, rel, \"\\u21db\", \"\\\\Rrightarrow\");\ndefineSymbol(math, ams, rel, \"\\u21be\", \"\\\\restriction\");\n\ndefineSymbol(math, main, textord, \"\\u2018\", \"`\");\ndefineSymbol(math, main, textord, \"$\", \"\\\\$\");\ndefineSymbol(math, main, textord, \"%\", \"\\\\%\");\ndefineSymbol(math, main, textord, \"_\", \"\\\\_\");\ndefineSymbol(math, main, textord, \"\\u2220\", \"\\\\angle\");\ndefineSymbol(math, main, textord, \"\\u221e\", \"\\\\infty\");\ndefineSymbol(math, main, textord, \"\\u2032\", \"\\\\prime\");\ndefineSymbol(math, main, textord, \"\\u25b3\", \"\\\\triangle\");\ndefineSymbol(math, main, textord, \"\\u0393\", \"\\\\Gamma\");\ndefineSymbol(math, main, textord, \"\\u0394\", \"\\\\Delta\");\ndefineSymbol(math, main, textord, \"\\u0398\", \"\\\\Theta\");\ndefineSymbol(math, main, textord, \"\\u039b\", \"\\\\Lambda\");\ndefineSymbol(math, main, textord, \"\\u039e\", \"\\\\Xi\");\ndefineSymbol(math, main, textord, \"\\u03a0\", \"\\\\Pi\");\ndefineSymbol(math, main, textord, \"\\u03a3\", \"\\\\Sigma\");\ndefineSymbol(math, main, textord, \"\\u03a5\", \"\\\\Upsilon\");\ndefineSymbol(math, main, textord, \"\\u03a6\", \"\\\\Phi\");\ndefineSymbol(math, main, textord, \"\\u03a8\", \"\\\\Psi\");\ndefineSymbol(math, main, textord, \"\\u03a9\", \"\\\\Omega\");\ndefineSymbol(math, main, textord, \"\\u00ac\", \"\\\\neg\");\ndefineSymbol(math, main, textord, \"\\u00ac\", \"\\\\lnot\");\ndefineSymbol(math, main, textord, \"\\u22a4\", \"\\\\top\");\ndefineSymbol(math, main, textord, \"\\u22a5\", \"\\\\bot\");\ndefineSymbol(math, main, textord, \"\\u2205\", \"\\\\emptyset\");\ndefineSymbol(math, ams, textord, \"\\u2205\", \"\\\\varnothing\");\ndefineSymbol(math, main, mathord, \"\\u03b1\", \"\\\\alpha\");\ndefineSymbol(math, main, mathord, \"\\u03b2\", \"\\\\beta\");\ndefineSymbol(math, main, mathord, \"\\u03b3\", \"\\\\gamma\");\ndefineSymbol(math, main, mathord, \"\\u03b4\", \"\\\\delta\");\ndefineSymbol(math, main, mathord, \"\\u03f5\", \"\\\\epsilon\");\ndefineSymbol(math, main, mathord, \"\\u03b6\", \"\\\\zeta\");\ndefineSymbol(math, main, mathord, \"\\u03b7\", \"\\\\eta\");\ndefineSymbol(math, main, mathord, \"\\u03b8\", \"\\\\theta\");\ndefineSymbol(math, main, mathord, \"\\u03b9\", \"\\\\iota\");\ndefineSymbol(math, main, mathord, \"\\u03ba\", \"\\\\kappa\");\ndefineSymbol(math, main, mathord, \"\\u03bb\", \"\\\\lambda\");\ndefineSymbol(math, main, mathord, \"\\u03bc\", \"\\\\mu\");\ndefineSymbol(math, main, mathord, \"\\u03bd\", \"\\\\nu\");\ndefineSymbol(math, main, mathord, \"\\u03be\", \"\\\\xi\");\ndefineSymbol(math, main, mathord, \"o\", \"\\\\omicron\");\ndefineSymbol(math, main, mathord, \"\\u03c0\", \"\\\\pi\");\ndefineSymbol(math, main, mathord, \"\\u03c1\", \"\\\\rho\");\ndefineSymbol(math, main, mathord, \"\\u03c3\", \"\\\\sigma\");\ndefineSymbol(math, main, mathord, \"\\u03c4\", \"\\\\tau\");\ndefineSymbol(math, main, mathord, \"\\u03c5\", \"\\\\upsilon\");\ndefineSymbol(math, main, mathord, \"\\u03d5\", \"\\\\phi\");\ndefineSymbol(math, main, mathord, \"\\u03c7\", \"\\\\chi\");\ndefineSymbol(math, main, mathord, \"\\u03c8\", \"\\\\psi\");\ndefineSymbol(math, main, mathord, \"\\u03c9\", \"\\\\omega\");\ndefineSymbol(math, main, mathord, \"\\u03b5\", \"\\\\varepsilon\");\ndefineSymbol(math, main, mathord, \"\\u03d1\", \"\\\\vartheta\");\ndefineSymbol(math, main, mathord, \"\\u03d6\", \"\\\\varpi\");\ndefineSymbol(math, main, mathord, \"\\u03f1\", \"\\\\varrho\");\ndefineSymbol(math, main, mathord, \"\\u03c2\", \"\\\\varsigma\");\ndefineSymbol(math, main, mathord, \"\\u03c6\", \"\\\\varphi\");\ndefineSymbol(math, main, bin, \"\\u2217\", \"*\");\ndefineSymbol(math, main, bin, \"+\", \"+\");\ndefineSymbol(math, main, bin, \"\\u2212\", \"-\");\ndefineSymbol(math, main, bin, \"\\u22c5\", \"\\\\cdot\");\ndefineSymbol(math, main, bin, \"\\u2218\", \"\\\\circ\");\ndefineSymbol(math, main, bin, \"\\u00f7\", \"\\\\div\");\ndefineSymbol(math, main, bin, \"\\u00b1\", \"\\\\pm\");\ndefineSymbol(math, main, bin, \"\\u00d7\", \"\\\\times\");\ndefineSymbol(math, main, bin, \"\\u2229\", \"\\\\cap\");\ndefineSymbol(math, main, bin, \"\\u222a\", \"\\\\cup\");\ndefineSymbol(math, main, bin, \"\\u2216\", \"\\\\setminus\");\ndefineSymbol(math, main, bin, \"\\u2227\", \"\\\\land\");\ndefineSymbol(math, main, bin, \"\\u2228\", \"\\\\lor\");\ndefineSymbol(math, main, bin, \"\\u2227\", \"\\\\wedge\");\ndefineSymbol(math, main, bin, \"\\u2228\", \"\\\\vee\");\ndefineSymbol(math, main, textord, \"\\u221a\", \"\\\\surd\");\ndefineSymbol(math, main, open, \"(\", \"(\");\ndefineSymbol(math, main, open, \"[\", \"[\");\ndefineSymbol(math, main, open, \"\\u27e8\", \"\\\\langle\");\ndefineSymbol(math, main, open, \"\\u2223\", \"\\\\lvert\");\ndefineSymbol(math, main, open, \"\\u2225\", \"\\\\lVert\");\ndefineSymbol(math, main, close, \")\", \")\");\ndefineSymbol(math, main, close, \"]\", \"]\");\ndefineSymbol(math, main, close, \"?\", \"?\");\ndefineSymbol(math, main, close, \"!\", \"!\");\ndefineSymbol(math, main, close, \"\\u27e9\", \"\\\\rangle\");\ndefineSymbol(math, main, close, \"\\u2223\", \"\\\\rvert\");\ndefineSymbol(math, main, close, \"\\u2225\", \"\\\\rVert\");\ndefineSymbol(math, main, rel, \"=\", \"=\");\ndefineSymbol(math, main, rel, \"<\", \"<\");\ndefineSymbol(math, main, rel, \">\", \">\");\ndefineSymbol(math, main, rel, \":\", \":\");\ndefineSymbol(math, main, rel, \"\\u2248\", \"\\\\approx\");\ndefineSymbol(math, main, rel, \"\\u2245\", \"\\\\cong\");\ndefineSymbol(math, main, rel, \"\\u2265\", \"\\\\ge\");\ndefineSymbol(math, main, rel, \"\\u2265\", \"\\\\geq\");\ndefineSymbol(math, main, rel, \"\\u2190\", \"\\\\gets\");\ndefineSymbol(math, main, rel, \">\", \"\\\\gt\");\ndefineSymbol(math, main, rel, \"\\u2208\", \"\\\\in\");\ndefineSymbol(math, main, rel, \"\\u2209\", \"\\\\notin\");\ndefineSymbol(math, main, rel, \"\\u2282\", \"\\\\subset\");\ndefineSymbol(math, main, rel, \"\\u2283\", \"\\\\supset\");\ndefineSymbol(math, main, rel, \"\\u2286\", \"\\\\subseteq\");\ndefineSymbol(math, main, rel, \"\\u2287\", \"\\\\supseteq\");\ndefineSymbol(math, ams, rel, \"\\u2288\", \"\\\\nsubseteq\");\ndefineSymbol(math, ams, rel, \"\\u2289\", \"\\\\nsupseteq\");\ndefineSymbol(math, main, rel, \"\\u22a8\", \"\\\\models\");\ndefineSymbol(math, main, rel, \"\\u2190\", \"\\\\leftarrow\");\ndefineSymbol(math, main, rel, \"\\u2264\", \"\\\\le\");\ndefineSymbol(math, main, rel, \"\\u2264\", \"\\\\leq\");\ndefineSymbol(math, main, rel, \"<\", \"\\\\lt\");\ndefineSymbol(math, main, rel, \"\\u2260\", \"\\\\ne\");\ndefineSymbol(math, main, rel, \"\\u2260\", \"\\\\neq\");\ndefineSymbol(math, main, rel, \"\\u2192\", \"\\\\rightarrow\");\ndefineSymbol(math, main, rel, \"\\u2192\", \"\\\\to\");\ndefineSymbol(math, ams, rel, \"\\u2271\", \"\\\\ngeq\");\ndefineSymbol(math, ams, rel, \"\\u2270\", \"\\\\nleq\");\ndefineSymbol(math, main, spacing, null, \"\\\\!\");\ndefineSymbol(math, main, spacing, \"\\u00a0\", \"\\\\ \");\ndefineSymbol(math, main, spacing, \"\\u00a0\", \"~\");\ndefineSymbol(math, main, spacing, null, \"\\\\,\");\ndefineSymbol(math, main, spacing, null, \"\\\\:\");\ndefineSymbol(math, main, spacing, null, \"\\\\;\");\ndefineSymbol(math, main, spacing, null, \"\\\\enspace\");\ndefineSymbol(math, main, spacing, null, \"\\\\qquad\");\ndefineSymbol(math, main, spacing, null, \"\\\\quad\");\ndefineSymbol(math, main, spacing, \"\\u00a0\", \"\\\\space\");\ndefineSymbol(math, main, punct, \",\", \",\");\ndefineSymbol(math, main, punct, \";\", \";\");\ndefineSymbol(math, main, punct, \":\", \"\\\\colon\");\ndefineSymbol(math, ams, bin, \"\\u22bc\", \"\\\\barwedge\");\ndefineSymbol(math, ams, bin, \"\\u22bb\", \"\\\\veebar\");\ndefineSymbol(math, main, bin, \"\\u2299\", \"\\\\odot\");\ndefineSymbol(math, main, bin, \"\\u2295\", \"\\\\oplus\");\ndefineSymbol(math, main, bin, \"\\u2297\", \"\\\\otimes\");\ndefineSymbol(math, main, textord, \"\\u2202\", \"\\\\partial\");\ndefineSymbol(math, main, bin, \"\\u2298\", \"\\\\oslash\");\ndefineSymbol(math, ams, bin, \"\\u229a\", \"\\\\circledcirc\");\ndefineSymbol(math, ams, bin, \"\\u22a1\", \"\\\\boxdot\");\ndefineSymbol(math, main, bin, \"\\u25b3\", \"\\\\bigtriangleup\");\ndefineSymbol(math, main, bin, \"\\u25bd\", \"\\\\bigtriangledown\");\ndefineSymbol(math, main, bin, \"\\u2020\", \"\\\\dagger\");\ndefineSymbol(math, main, bin, \"\\u22c4\", \"\\\\diamond\");\ndefineSymbol(math, main, bin, \"\\u22c6\", \"\\\\star\");\ndefineSymbol(math, main, bin, \"\\u25c3\", \"\\\\triangleleft\");\ndefineSymbol(math, main, bin, \"\\u25b9\", \"\\\\triangleright\");\ndefineSymbol(math, main, open, \"{\", \"\\\\{\");\ndefineSymbol(math, main, close, \"}\", \"\\\\}\");\ndefineSymbol(math, main, open, \"{\", \"\\\\lbrace\");\ndefineSymbol(math, main, close, \"}\", \"\\\\rbrace\");\ndefineSymbol(math, main, open, \"[\", \"\\\\lbrack\");\ndefineSymbol(math, main, close, \"]\", \"\\\\rbrack\");\ndefineSymbol(math, main, open, \"\\u230a\", \"\\\\lfloor\");\ndefineSymbol(math, main, close, \"\\u230b\", \"\\\\rfloor\");\ndefineSymbol(math, main, open, \"\\u2308\", \"\\\\lceil\");\ndefineSymbol(math, main, close, \"\\u2309\", \"\\\\rceil\");\ndefineSymbol(math, main, textord, \"\\\\\", \"\\\\backslash\");\ndefineSymbol(math, main, textord, \"\\u2223\", \"|\");\ndefineSymbol(math, main, textord, \"\\u2223\", \"\\\\vert\");\ndefineSymbol(math, main, textord, \"\\u2225\", \"\\\\|\");\ndefineSymbol(math, main, textord, \"\\u2225\", \"\\\\Vert\");\ndefineSymbol(math, main, rel, \"\\u2191\", \"\\\\uparrow\");\ndefineSymbol(math, main, rel, \"\\u21d1\", \"\\\\Uparrow\");\ndefineSymbol(math, main, rel, \"\\u2193\", \"\\\\downarrow\");\ndefineSymbol(math, main, rel, \"\\u21d3\", \"\\\\Downarrow\");\ndefineSymbol(math, main, rel, \"\\u2195\", \"\\\\updownarrow\");\ndefineSymbol(math, main, rel, \"\\u21d5\", \"\\\\Updownarrow\");\ndefineSymbol(math, math, op, \"\\u2210\", \"\\\\coprod\");\ndefineSymbol(math, math, op, \"\\u22c1\", \"\\\\bigvee\");\ndefineSymbol(math, math, op, \"\\u22c0\", \"\\\\bigwedge\");\ndefineSymbol(math, math, op, \"\\u2a04\", \"\\\\biguplus\");\ndefineSymbol(math, math, op, \"\\u22c2\", \"\\\\bigcap\");\ndefineSymbol(math, math, op, \"\\u22c3\", \"\\\\bigcup\");\ndefineSymbol(math, math, op, \"\\u222b\", \"\\\\int\");\ndefineSymbol(math, math, op, \"\\u222b\", \"\\\\intop\");\ndefineSymbol(math, math, op, \"\\u222c\", \"\\\\iint\");\ndefineSymbol(math, math, op, \"\\u222d\", \"\\\\iiint\");\ndefineSymbol(math, math, op, \"\\u220f\", \"\\\\prod\");\ndefineSymbol(math, math, op, \"\\u2211\", \"\\\\sum\");\ndefineSymbol(math, math, op, \"\\u2a02\", \"\\\\bigotimes\");\ndefineSymbol(math, math, op, \"\\u2a01\", \"\\\\bigoplus\");\ndefineSymbol(math, math, op, \"\\u2a00\", \"\\\\bigodot\");\ndefineSymbol(math, math, op, \"\\u222e\", \"\\\\oint\");\ndefineSymbol(math, math, op, \"\\u2a06\", \"\\\\bigsqcup\");\ndefineSymbol(math, math, op, \"\\u222b\", \"\\\\smallint\");\ndefineSymbol(math, main, inner, \"\\u2026\", \"\\\\ldots\");\ndefineSymbol(math, main, inner, \"\\u22ef\", \"\\\\cdots\");\ndefineSymbol(math, main, inner, \"\\u22f1\", \"\\\\ddots\");\ndefineSymbol(math, main, textord, \"\\u22ee\", \"\\\\vdots\");\ndefineSymbol(math, main, accent, \"\\u00b4\", \"\\\\acute\");\ndefineSymbol(math, main, accent, \"\\u0060\", \"\\\\grave\");\ndefineSymbol(math, main, accent, \"\\u00a8\", \"\\\\ddot\");\ndefineSymbol(math, main, accent, \"\\u007e\", \"\\\\tilde\");\ndefineSymbol(math, main, accent, \"\\u00af\", \"\\\\bar\");\ndefineSymbol(math, main, accent, \"\\u02d8\", \"\\\\breve\");\ndefineSymbol(math, main, accent, \"\\u02c7\", \"\\\\check\");\ndefineSymbol(math, main, accent, \"\\u005e\", \"\\\\hat\");\ndefineSymbol(math, main, accent, \"\\u20d7\", \"\\\\vec\");\ndefineSymbol(math, main, accent, \"\\u02d9\", \"\\\\dot\");\ndefineSymbol(math, main, mathord, \"\\u0131\", \"\\\\imath\");\ndefineSymbol(math, main, mathord, \"\\u0237\", \"\\\\jmath\");\n\ndefineSymbol(text, main, spacing, \"\\u00a0\", \"\\\\ \");\ndefineSymbol(text, main, spacing, \"\\u00a0\", \" \");\ndefineSymbol(text, main, spacing, \"\\u00a0\", \"~\");\n\n// There are lots of symbols which are the same, so we add them in afterwards.\nvar i;\nvar ch;\n\n// All of these are textords in math mode\nvar mathTextSymbols = \"0123456789/@.\\\"\";\nfor (i = 0; i < mathTextSymbols.length; i++) {\n    ch = mathTextSymbols.charAt(i);\n    defineSymbol(math, main, textord, ch, ch);\n}\n\n// All of these are textords in text mode\nvar textSymbols = \"0123456789`!@*()-=+[]'\\\";:?/.,\";\nfor (i = 0; i < textSymbols.length; i++) {\n    ch = textSymbols.charAt(i);\n    defineSymbol(text, main, textord, ch, ch);\n}\n\n// All of these are textords in text mode, and mathords in math mode\nvar letters = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\";\nfor (i = 0; i < letters.length; i++) {\n    ch = letters.charAt(i);\n    defineSymbol(math, main, mathord, ch, ch);\n    defineSymbol(text, main, textord, ch, ch);\n}\n","module.exports = { \"default\": require(\"core-js/library/fn/get-iterator\"), __esModule: true };","module.exports = { \"default\": require(\"core-js/library/fn/object/keys\"), __esModule: true };","// lheading (---, ===)\n\n'use strict';\n\n\nmodule.exports = function lheading(state, startLine, endLine/*, silent*/) {\n  var content, terminate, i, l, token, pos, max, level, marker,\n      nextLine = startLine + 1,\n      terminatorRules = state.md.block.ruler.getRules('paragraph');\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    //\n    // Check for underline in setext header\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos);\n\n        if (marker === 0x2D/* - */ || marker === 0x3D/* = */) {\n          pos = state.skipChars(pos, marker);\n          pos = state.skipSpaces(pos);\n\n          if (pos >= max) {\n            level = (marker === 0x3D/* = */ ? 1 : 2);\n            break;\n          }\n        }\n      }\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false;\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine + 1;\n\n  token          = state.push('heading_open', 'h' + String(level), 1);\n  token.markup   = String.fromCharCode(marker);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line - 1 ];\n  token.children = [];\n\n  token          = state.push('heading_close', 'h' + String(level), -1);\n  token.markup   = String.fromCharCode(marker);\n\n  return true;\n};\n","module.exports = require('./lib/uslug');","// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline'\n      ]\n    },\n\n    block: {\n      rules: [\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'text_collapse'\n      ]\n    }\n  }\n};\n","var fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/v8-version');\n\nvar SPECIES = wellKnownSymbol('species');\n\nmodule.exports = function (METHOD_NAME) {\n  // We can't use this feature detection in V8 since it causes\n  // deoptimization and serious performance degradation\n  // https://github.com/zloirock/core-js/issues/677\n  return V8_VERSION >= 51 || !fails(function () {\n    var array = [];\n    var constructor = array.constructor = {};\n    constructor[SPECIES] = function () {\n      return { foo: 1 };\n    };\n    return array[METHOD_NAME](Boolean).foo !== 1;\n  });\n};\n","export default \"# Oracle\\n\\n此处的Oracle，是指为Ethereum Smart Contract提供外部数据源的系统。Oracle一词起源于希腊神话，是可以与上帝交流，预见未来的人。而在Blockchain的上下文，Oracle用于解答Ethereum平台之外的问题。最理想的Oracle系统是完全不需要被信任的，完全遵循分散化原则的系统。\\n\\n# 为何需要Oracle\\nEthereum虚拟机是Ethereum平台的核心组件。在共识规则的约束之下，EVM在分散化网络上的每一个节点运行程序代码，更新Ethereum的状态。EVM的执行必须是确定的，必须依据共享的Ethereum状态和已签名的交易信息。这导致了两个特别重要的后果：第一，EVM内部没有真正的随机数；第二，外部数据只能够通过交易信息进入平台。\\n\\n让我们更深层次地认识这两个后果的意义。为了理解，为什么要禁止Ethereum使用随机数，假设现在要执行这样的操作：节点A执行了命令，得到了结果res=3，在Smart Contract中存储。节点B执行同一个Smart Contract同一个函数，得到了结果res=7，这样一来，节点A，B无法达成共识，尽管它们都的是同一件事。实际上，即使是同一个节点，每次运行同一个Smart Contract的同一个函数，由于随机性，结果都是不同的。那么，在分布式网络里，各个节点就无法各自独立运行，同时达成共识了。\\n\\n值得注意的是，即使是像加密安全哈希函数这样的伪随机函数，也常常满足不了应用软件的需求。假设现在有一个赌博游戏，用抛硬币的方式决定谁输谁赢，用伪随机函数模拟硬币的正面反面。矿工可以创造交易信息，然后把所有输钱的交易都丢弃，只保留赢钱的交易放到Block之中，保证只赚不亏。该如何解决这一类问题呢？当然，所有的节点都会同意签名之后的交易，可以把外部数据源，例如外部随机数，天气信息等等，通过交易信息传送到Blockchain，而这类数据不能不防范，它们可能来自不受信任的数据源。而Oracle，正是为了解决这一类的问题的。\\n\\n# Oracle用例\\nOracle用于获取外部数据，这是外部数据是链下的，是不可靠的，例如足球比赛的结果，黄金的价格，或者真正的随机数。提供给Ethereum的Smart Contract使用。因此，Oracle实际上是链上的Smart Contract与链下的真实世界的连接者。允许Smart Contract根据真实世界的事件和维持执行契约关系，极大地拓展了它的应用范围。同时，这也为Ethereum带来了极大的危险。考虑考虑这种情况，有一个执行遗嘱的Smart Contract，在人死后，自动给继承者转移遗产。如果遗产的金额巨大，就会吸引黑客攻击，尝试在此人死之前，找出这个Smart Contract的漏洞，把钱转走。\\n\\n有一些Oracle提供的数据，来源于特定的隐私数据，如学术证明，政府ID等等。这类数据的源头，通常是大学或者政府部门，是绝对可靠的，它们提供的数据也是客观真实的，权威认证的。通常认为这些数据源也是Oracle，它们也是Smart Contract与真实世界的连接。另外，提供这些数据的也属于Oracle：\\n\\n- 真随机数\\n- 与自然灾害相关的参数触发器\\n- 汇率\\n- 资本市场相关数据\\n- 基准参考数据\\n- 静态，伪静态数据\\n- 时间，时间间隔\\n- 天气数据\\n- 政治事件\\n- 体育运动数据\\n- 地理信息\\n- 伤害定损\\n- 其它Blockchain发生的事件\\n- Ether的市场价格\\n- 航线统计\\n\\n# Oracle设计模式\\n根据定义，所有的Oracle都要提供几个关键功能，包括：\\n\\n- 链下收集数据\\n- 链上通过交易信息传播数据\\n- 将数据存储在Smart Contract中，供大家使用\\n\\n一旦数据存储于Smart Contract之中，其它Smart Contract可以通过消息调用访问它，也可以在Ethereum节点中，直接读取Smart Contract的存储空间访问它。配置Oracle，可以分为三大类：1. 请求-回应； 2.发布-订阅； 3.直接读取。\\n\\n最简单的Oracle是直接提供数据让Smart Contract读取的Oracle。它们提供的数据一般用于直接的判断，例如，ethereumbook.info的地址是什么？这个人超过18岁了吗？读取这种Oracle数据的操作，一般都是实时的操作，拿完数据就走，也许也就读取一次，再也不需要了。这些Oracle的提供者，一般是企业，机构，它们存储认证数据，机构成员关系，机场认证，机构ID等。这种类型的Oracle，数据写入了一次，其它Smart Contract多次读取。当然数据也可以被更新。除了通过发送交易信息获取数据，也可以直接通过节点访问对应Smart Contract的存储。商店可以使用这种Oracle，检查买酒的顾客是否满18岁。有些公司，机构很喜欢这种Oracle，否则就要开发和维护自己的服务器，给用户提供信息。Oracle存储的，很有可能不是原始的数据，而是对应数据的哈希，保持信息的隐秘。\\n\\n第二种Oracle采取发布-订阅的配置方式，对所有感兴趣的Smart Contract广播数据。每次Oracle更新了数据，就发送一个通知，订阅者接收到通知，自己决定是否拉取最新的数据。订阅者轮询获取数据，在传统的中心服务器框架的Web应用中，效率很低。而在Ethereum之中，由于客户端必须时刻更新保持自身的状态，轮询只发生在单个节点内部，不存在这个问题。\\n\\n第三种方式是请求-回应的方式，这是最复杂的，一般由于数据非常巨大，不方便存储在Blockchain之中，由Ethereum外部的服务器提供数据源，Smart Contract每次读取一部分。具体的步骤如下，EOA账户访问Smart Contract，然后从实现Oracle接口的Smart Contract获取数据，Oracle的Smart Contract发起请求，访问外部Oracle的数据库，获取数据，然后执行回调函数。当消息被认证之后，这个请求可以看作是Oracle的Smart Contract发起的事件，或者状态转换。这种Oracle做的事情，可以细分为：\\n\\n- 接收DApp的请求\\n- 解释请求\\n- 检查访问权限\\n- 从数据库获取数据\\n- 对包含数据的交易信息签名\\n- 广播交易信息\\n- 执行后续的操作，发时间，写日志等\\n\\n# 数据认证\\n假设DApp请求的数据的来源是权威和值得信任的，仍然无法确定拿到的数据是正确的，因此数据在传输的过程中，可能丢失，可能被黑客替换。来自链下的数据，必须能够证明它的完整性。有两个常用的数据认证的方法，真实性证明和可信任执行环境。\\n\\n真实性证明是数据没有被修改的密码认证，基于一些列的证明方法，如签名认证等，把数据的信任值，从数据的运送者转移到数据的证明者，使得验证的方法转移到链上，Smart Contract可以根据数据的完整性，决定是否使用该数据。详细情况，可以了解TLSNotary证明。而可信任执行环境，这种方法利用基于硬件的安全包来确保数据的完整性，如Town Crier。\\n\\n# 运算型Oracle\\n除了用于收集和传送数据，Oracle也可以用来进行复杂的数学运算，避免过高的gas消耗。\\n\\n# Oracle的接口\\n下面的例子，展示了Oracle的基本用法：\\n![img](/book/oracle.png)\\n\\n一般使用Oraclize库，继承父类usingOraclize，用oraclize_query发起请求，__callback是请求之后的回调方法。\\n\";","export default \"# Mining\\n\\n所有挖矿节点，使用专门的 proof-of-work 算法，Ethash，互相竞争，创建下一个 block。Ethash 算法的输入是 block 的 header，里面包含一个随机数，叫做 nonce。算法的输出，是一个32位的16进制的数。修改 nonce 会修改输出的值，并且是无法预测的。\\n\\n为了使网络接受 block，Ethash 对 block header 的运算结果，必须少于整个网络设置的难度，difficulty，这是另外一个32位16进制的数，作为挖矿的目标要求。对于任何矿工，只要它广播的 block 满足目标要求的难度，会获得挖矿奖励，通过在 block 包含一个对 coinbase 的 transaction 发放。这个 coinbase 的 transaction，通常安排在 block 的第一个 transaction，奖励的目标是矿工账号。当前 block 的奖励，从 Byzanium hard fork之后，一直都是3个ether。\\n\\n有的时候，两个矿工同时产生满足要求的 block，而最终只有1个能被主网接受。没有被接受的 block 被称为 uncle block Uncle block 会记录在 blockchain 之中，相应的矿工会获得相对少一点的奖励，但是， uncle block 的 transaction，不会修改 blockchain 的状态树。\\n\\nBlockchain 的安全程度，与整个网络中的 hashpower 的数量成正比。越多的 hashpower，意味着单独的挖矿节点的 hashpower,在整个网络中的占比越少，使得网络被攻击，破坏，控制的难度更高。区块链中保留 uncle block，会增加自身的安全，因为创建 uncle block 的节点的 hashpower 没有被浪费掉。\\n\\n网络的难度会定时调整，每过15 ～ 30秒，会有一个新的 block 诞生。\\n\";","export default \"# 激励\\n\\n设计良好的激励机制是 blockchain 安全的基石。每当评估一项新的 blockchain 技术，第一个要问的问题是，哪些行为是这个 blockchain 鼓励的？你可以假设这样的前提，blockchain 的用户总是想方设法最大化自身的利益的。隐藏的潜在的巨大利益，打败设计不好的 blockchain 是轻而易举的。\\n\\nBlockchain 之所以成功，是因为在任何情况下，他都平稳地运行，包括被攻击。让我们看看 Ethereum 的激励机制，以及它们如果保护系统安全：\\n\\n- Block 奖励：矿工挖矿成功后获得 block 奖励，因此它们愿意投资设备，为网络提供 hashpower。数量巨大的 hashpower，保护系统不被51%攻击。\\n\\n- 交易小费：防止恶意破坏者发送海量的垃圾交易，影响网络运行。\\n- 共识规则：让每个节点都有平等的权利，决定 block 是否被接受。矿工不会浪费时间和资源去制造虚假的 block，因为这不会被网络接受的。\\n\";","// Merge adjacent text nodes into one, and re-calculate all token levels\n//\n'use strict';\n\n\nmodule.exports = function text_collapse(state) {\n  var curr, last,\n      level = 0,\n      tokens = state.tokens,\n      max = state.tokens.length;\n\n  for (curr = last = 0; curr < max; curr++) {\n    // re-calculate levels\n    level += tokens[curr].nesting;\n    tokens[curr].level = level;\n\n    if (tokens[curr].type === 'text' &&\n        curr + 1 < max &&\n        tokens[curr + 1].type === 'text') {\n\n      // collapse two adjacent text nodes\n      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n    } else {\n      if (curr !== last) { tokens[last] = tokens[curr]; }\n\n      last++;\n    }\n  }\n\n  if (curr !== last) {\n    tokens.length = last;\n  }\n};\n","export default \"# 加密经济学定义\\n\\n加密经济学，指的是如何运用激励机制，经济学，博弈论等等知识，建立和维护 blockchain 的学科。如果把经济学简单认为是激励机制的研究，那么加密经济学，就是基于 blockchain 的激励机制的研究。以下这些主题，都是当中的热门研究：block 的创造方法， blockchain 安全机制，网络的共识，优秀的激励机制，以及特定 blockchain 的常用攻击手段。\\n\\n当下，主流的成功的 blockchain 都由 hashpower 来保护，具体就是指使用 POW 算法挖矿的计算机的计算能力。一部分 blockchain 尝试使用 POS 和 POA 算法来保护系统的安全。 Ethereum 的研究者已经表明，在未来的不久，Ethererum 也会切换至 POS，我们相当期待。\\n\";","export default \"# 达成共识\\n\\n达成共识是指某些节点决定是否添加某个 block 到 blockchain 的过程。这个过程依赖一组共享的规则。网络上的所有节点必须在一组相互兼容的规则下行动。在部分 blockchain 里，这套规则又被称为 block 校验规则，因为节点根据它，决定是否把网络上接受的 block 加入到本地数据库，并且传播给邻居节点。\\n\\nEthereum 在 EVM 执行代码，更新 state tree 的 Merkle root 的过程中应用共识规则。每个节点有序地运行 block 里的 transaction，每个 transaction 在 EVM 的眼里是有序的指令。如果各个节点里，EVM 的运行规则是一样的，最终的结果都是相同的状态。\\n\\n如果部分节点采取了不同的共识规则，就会导致 fork 分叉。如果新的规则是旧的规则的子集，导致的是 soft fork。这种情况下，矿工节点必须更新，新的规则创建的 block 仍被旧规则节点接受。反之则不然。\\n\\n如果新规则不是旧规则的子集，两者不兼容，导致的是 hark fork。所有节点都必须更新。没有更新的节点，不能得到更新的节点的认可。ETC 的诞生，就是由于部分节点不愿意更新，不愿意调解 DAO 攻击导致的后果，此后就独立发展了。\\n\";","var classof = require('./_classof');\nvar ITERATOR = require('./_wks')('iterator');\nvar Iterators = require('./_iterators');\nmodule.exports = require('./_core').getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n","var clone = (function() {\n'use strict';\n\nfunction _instanceof(obj, type) {\n  return type != null && obj instanceof type;\n}\n\nvar nativeMap;\ntry {\n  nativeMap = Map;\n} catch(_) {\n  // maybe a reference error because no `Map`. Give it a dummy value that no\n  // value will ever be an instanceof.\n  nativeMap = function() {};\n}\n\nvar nativeSet;\ntry {\n  nativeSet = Set;\n} catch(_) {\n  nativeSet = function() {};\n}\n\nvar nativePromise;\ntry {\n  nativePromise = Promise;\n} catch(_) {\n  nativePromise = function() {};\n}\n\n/**\n * Clones (copies) an Object using deep copying.\n *\n * This function supports circular references by default, but if you are certain\n * there are no circular references in your object, you can save some CPU time\n * by calling clone(obj, false).\n *\n * Caution: if `circular` is false and `parent` contains circular references,\n * your program may enter an infinite loop and crash.\n *\n * @param `parent` - the object to be cloned\n * @param `circular` - set to true if the object to be cloned may contain\n *    circular references. (optional - true by default)\n * @param `depth` - set to a number if the object is only to be cloned to\n *    a particular depth. (optional - defaults to Infinity)\n * @param `prototype` - sets the prototype to be used when cloning an object.\n *    (optional - defaults to parent prototype).\n * @param `includeNonEnumerable` - set to true if the non-enumerable properties\n *    should be cloned as well. Non-enumerable properties on the prototype\n *    chain will be ignored. (optional - false by default)\n*/\nfunction clone(parent, circular, depth, prototype, includeNonEnumerable) {\n  if (typeof circular === 'object') {\n    depth = circular.depth;\n    prototype = circular.prototype;\n    includeNonEnumerable = circular.includeNonEnumerable;\n    circular = circular.circular;\n  }\n  // maintain two arrays for circular references, where corresponding parents\n  // and children have the same index\n  var allParents = [];\n  var allChildren = [];\n\n  var useBuffer = typeof Buffer != 'undefined';\n\n  if (typeof circular == 'undefined')\n    circular = true;\n\n  if (typeof depth == 'undefined')\n    depth = Infinity;\n\n  // recurse this function so we don't reset allParents and allChildren\n  function _clone(parent, depth) {\n    // cloning null always returns null\n    if (parent === null)\n      return null;\n\n    if (depth === 0)\n      return parent;\n\n    var child;\n    var proto;\n    if (typeof parent != 'object') {\n      return parent;\n    }\n\n    if (_instanceof(parent, nativeMap)) {\n      child = new nativeMap();\n    } else if (_instanceof(parent, nativeSet)) {\n      child = new nativeSet();\n    } else if (_instanceof(parent, nativePromise)) {\n      child = new nativePromise(function (resolve, reject) {\n        parent.then(function(value) {\n          resolve(_clone(value, depth - 1));\n        }, function(err) {\n          reject(_clone(err, depth - 1));\n        });\n      });\n    } else if (clone.__isArray(parent)) {\n      child = [];\n    } else if (clone.__isRegExp(parent)) {\n      child = new RegExp(parent.source, __getRegExpFlags(parent));\n      if (parent.lastIndex) child.lastIndex = parent.lastIndex;\n    } else if (clone.__isDate(parent)) {\n      child = new Date(parent.getTime());\n    } else if (useBuffer && Buffer.isBuffer(parent)) {\n      if (Buffer.allocUnsafe) {\n        // Node.js >= 4.5.0\n        child = Buffer.allocUnsafe(parent.length);\n      } else {\n        // Older Node.js versions\n        child = new Buffer(parent.length);\n      }\n      parent.copy(child);\n      return child;\n    } else if (_instanceof(parent, Error)) {\n      child = Object.create(parent);\n    } else {\n      if (typeof prototype == 'undefined') {\n        proto = Object.getPrototypeOf(parent);\n        child = Object.create(proto);\n      }\n      else {\n        child = Object.create(prototype);\n        proto = prototype;\n      }\n    }\n\n    if (circular) {\n      var index = allParents.indexOf(parent);\n\n      if (index != -1) {\n        return allChildren[index];\n      }\n      allParents.push(parent);\n      allChildren.push(child);\n    }\n\n    if (_instanceof(parent, nativeMap)) {\n      parent.forEach(function(value, key) {\n        var keyChild = _clone(key, depth - 1);\n        var valueChild = _clone(value, depth - 1);\n        child.set(keyChild, valueChild);\n      });\n    }\n    if (_instanceof(parent, nativeSet)) {\n      parent.forEach(function(value) {\n        var entryChild = _clone(value, depth - 1);\n        child.add(entryChild);\n      });\n    }\n\n    for (var i in parent) {\n      var attrs;\n      if (proto) {\n        attrs = Object.getOwnPropertyDescriptor(proto, i);\n      }\n\n      if (attrs && attrs.set == null) {\n        continue;\n      }\n      child[i] = _clone(parent[i], depth - 1);\n    }\n\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(parent);\n      for (var i = 0; i < symbols.length; i++) {\n        // Don't need to worry about cloning a symbol because it is a primitive,\n        // like a number or string.\n        var symbol = symbols[i];\n        var descriptor = Object.getOwnPropertyDescriptor(parent, symbol);\n        if (descriptor && !descriptor.enumerable && !includeNonEnumerable) {\n          continue;\n        }\n        child[symbol] = _clone(parent[symbol], depth - 1);\n        if (!descriptor.enumerable) {\n          Object.defineProperty(child, symbol, {\n            enumerable: false\n          });\n        }\n      }\n    }\n\n    if (includeNonEnumerable) {\n      var allPropertyNames = Object.getOwnPropertyNames(parent);\n      for (var i = 0; i < allPropertyNames.length; i++) {\n        var propertyName = allPropertyNames[i];\n        var descriptor = Object.getOwnPropertyDescriptor(parent, propertyName);\n        if (descriptor && descriptor.enumerable) {\n          continue;\n        }\n        child[propertyName] = _clone(parent[propertyName], depth - 1);\n        Object.defineProperty(child, propertyName, {\n          enumerable: false\n        });\n      }\n    }\n\n    return child;\n  }\n\n  return _clone(parent, depth);\n}\n\n/**\n * Simple flat clone using prototype, accepts only objects, usefull for property\n * override on FLAT configuration object (no nested props).\n *\n * USE WITH CAUTION! This may not behave as you wish if you do not know how this\n * works.\n */\nclone.clonePrototype = function clonePrototype(parent) {\n  if (parent === null)\n    return null;\n\n  var c = function () {};\n  c.prototype = parent;\n  return new c();\n};\n\n// private utility functions\n\nfunction __objToStr(o) {\n  return Object.prototype.toString.call(o);\n}\nclone.__objToStr = __objToStr;\n\nfunction __isDate(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object Date]';\n}\nclone.__isDate = __isDate;\n\nfunction __isArray(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object Array]';\n}\nclone.__isArray = __isArray;\n\nfunction __isRegExp(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object RegExp]';\n}\nclone.__isRegExp = __isRegExp;\n\nfunction __getRegExpFlags(re) {\n  var flags = '';\n  if (re.global) flags += 'g';\n  if (re.ignoreCase) flags += 'i';\n  if (re.multiline) flags += 'm';\n  return flags;\n}\nclone.__getRegExpFlags = __getRegExpFlags;\n\nreturn clone;\n})();\n\nif (typeof module === 'object' && module.exports) {\n  module.exports = clone;\n}\n","export default \"# Proof-of-Stake\\n\\nEthereum 的 POS 算法实现仍然在开发进程表中，没有确切的完成时间。POS 的实现方式有好多种，Ethereum 的 POS 算法叫做 Casper，人们创建 block，并为之押注保证金，如果网络拒绝接受，那么将会丢失保证金。\\n\\n第一个使用 POS 的加密币是 Peercoin，它基于加密币的年龄规则来提供安全，创造新币。最近， Steemit 和 EOS 使用改进的 DPOS。 DPOS 要求用户对一系列的候选 block 厂家进行投票，胜出的候选人有权创建新的 block。如果说 Casper 算法是纯粹的民主机制，那么，DPOS 是代议制民主。\\n\";","export default \"# Blockchain进化史\\n\\nBlockchain普遍被认为是，继大型主机，个人计算机，互联网，社交网络后的，第五次技术革命。有的学者就Blockchain自身的发展，划分为3个阶段：\\n\\n- Blockchain 1.0: 加密货币，支付系统\\n- Blockchain 2.0: 只能合约，金融资产数字化，物联网等\\n- Blockchain 3.0: 基于Blockchain的上层应用：政府，健康医疗，社会，艺术文化等\\n\\n\\n![img](/book/history.png)\\n\\n新技术改变人类生活的时间越来越短，做好迎接未来的准备吧！\\n\\n![img](/book/expectation.png)\\n\";","// Process autolinks '<protocol:...>'\n\n'use strict';\n\n\n/*eslint max-len:0*/\nvar EMAIL_RE    = /^<([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)>/;\nvar AUTOLINK_RE = /^<([a-zA-Z][a-zA-Z0-9+.\\-]{1,31}):([^<>\\x00-\\x20]*)>/;\n\n\nmodule.exports = function autolink(state, silent) {\n  var tail, linkMatch, emailMatch, url, fullUrl, token,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  tail = state.src.slice(pos);\n\n  if (tail.indexOf('>') < 0) { return false; }\n\n  if (AUTOLINK_RE.test(tail)) {\n    linkMatch = tail.match(AUTOLINK_RE);\n\n    url = linkMatch[0].slice(1, -1);\n    fullUrl = state.md.normalizeLink(url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += linkMatch[0].length;\n    return true;\n  }\n\n  if (EMAIL_RE.test(tail)) {\n    emailMatch = tail.match(EMAIL_RE);\n\n    url = emailMatch[0].slice(1, -1);\n    fullUrl = state.md.normalizeLink('mailto:' + url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += emailMatch[0].length;\n    return true;\n  }\n\n  return false;\n};\n","(function (root) {\n   \"use strict\";\n\n/***** unorm.js *****/\n\n/*\n * UnicodeNormalizer 1.0.0\n * Copyright (c) 2008 Matsuza\n * Dual licensed under the MIT (MIT-LICENSE.txt) and GPL (GPL-LICENSE.txt) licenses.\n * $Date: 2008-06-05 16:44:17 +0200 (Thu, 05 Jun 2008) $\n * $Rev: 13309 $\n */\n\n   var DEFAULT_FEATURE = [null, 0, {}];\n   var CACHE_THRESHOLD = 10;\n   var SBase = 0xAC00, LBase = 0x1100, VBase = 0x1161, TBase = 0x11A7, LCount = 19, VCount = 21, TCount = 28;\n   var NCount = VCount * TCount; // 588\n   var SCount = LCount * NCount; // 11172\n\n   var UChar = function(cp, feature){\n      this.codepoint = cp;\n      this.feature = feature;\n   };\n\n   // Strategies\n   var cache = {};\n   var cacheCounter = [];\n   for (var i = 0; i <= 0xFF; ++i){\n      cacheCounter[i] = 0;\n   }\n\n   function fromCache(next, cp, needFeature){\n      var ret = cache[cp];\n      if(!ret){\n         ret = next(cp, needFeature);\n         if(!!ret.feature && ++cacheCounter[(cp >> 8) & 0xFF] > CACHE_THRESHOLD){\n            cache[cp] = ret;\n         }\n      }\n      return ret;\n   }\n\n   function fromData(next, cp, needFeature){\n      var hash = cp & 0xFF00;\n      var dunit = UChar.udata[hash] || {};\n      var f = dunit[cp];\n      return f ? new UChar(cp, f) : new UChar(cp, DEFAULT_FEATURE);\n   }\n   function fromCpOnly(next, cp, needFeature){\n      return !!needFeature ? next(cp, needFeature) : new UChar(cp, null);\n   }\n   function fromRuleBasedJamo(next, cp, needFeature){\n      var j;\n      if(cp < LBase || (LBase + LCount <= cp && cp < SBase) || (SBase + SCount < cp)){\n         return next(cp, needFeature);\n      }\n      if(LBase <= cp && cp < LBase + LCount){\n         var c = {};\n         var base = (cp - LBase) * VCount;\n         for (j = 0; j < VCount; ++j){\n            c[VBase + j] = SBase + TCount * (j + base);\n         }\n         return new UChar(cp, [,,c]);\n      }\n\n      var SIndex = cp - SBase;\n      var TIndex = SIndex % TCount;\n      var feature = [];\n      if(TIndex !== 0){\n         feature[0] = [SBase + SIndex - TIndex, TBase + TIndex];\n      } else {\n         feature[0] = [LBase + Math.floor(SIndex / NCount), VBase + Math.floor((SIndex % NCount) / TCount)];\n         feature[2] = {};\n         for (j = 1; j < TCount; ++j){\n            feature[2][TBase + j] = cp + j;\n         }\n      }\n      return new UChar(cp, feature);\n   }\n   function fromCpFilter(next, cp, needFeature){\n      return cp < 60 || 13311 < cp && cp < 42607 ? new UChar(cp, DEFAULT_FEATURE) : next(cp, needFeature);\n   }\n\n   var strategies = [fromCpFilter, fromCache, fromCpOnly, fromRuleBasedJamo, fromData];\n\n   UChar.fromCharCode = strategies.reduceRight(function (next, strategy) {\n      return function (cp, needFeature) {\n         return strategy(next, cp, needFeature);\n      };\n   }, null);\n\n   UChar.isHighSurrogate = function(cp){\n      return cp >= 0xD800 && cp <= 0xDBFF;\n   };\n   UChar.isLowSurrogate = function(cp){\n      return cp >= 0xDC00 && cp <= 0xDFFF;\n   };\n\n   UChar.prototype.prepFeature = function(){\n      if(!this.feature){\n         this.feature = UChar.fromCharCode(this.codepoint, true).feature;\n      }\n   };\n\n   UChar.prototype.toString = function(){\n      if(this.codepoint < 0x10000){\n         return String.fromCharCode(this.codepoint);\n      } else {\n         var x = this.codepoint - 0x10000;\n         return String.fromCharCode(Math.floor(x / 0x400) + 0xD800, x % 0x400 + 0xDC00);\n      }\n   };\n\n   UChar.prototype.getDecomp = function(){\n      this.prepFeature();\n      return this.feature[0] || null;\n   };\n\n   UChar.prototype.isCompatibility = function(){\n      this.prepFeature();\n      return !!this.feature[1] && (this.feature[1] & (1 << 8));\n   };\n   UChar.prototype.isExclude = function(){\n      this.prepFeature();\n      return !!this.feature[1] && (this.feature[1] & (1 << 9));\n   };\n   UChar.prototype.getCanonicalClass = function(){\n      this.prepFeature();\n      return !!this.feature[1] ? (this.feature[1] & 0xff) : 0;\n   };\n   UChar.prototype.getComposite = function(following){\n      this.prepFeature();\n      if(!this.feature[2]){\n         return null;\n      }\n      var cp = this.feature[2][following.codepoint];\n      return cp ? UChar.fromCharCode(cp) : null;\n   };\n\n   var UCharIterator = function(str){\n      this.str = str;\n      this.cursor = 0;\n   };\n   UCharIterator.prototype.next = function(){\n      if(!!this.str && this.cursor < this.str.length){\n         var cp = this.str.charCodeAt(this.cursor++);\n         var d;\n         if(UChar.isHighSurrogate(cp) && this.cursor < this.str.length && UChar.isLowSurrogate((d = this.str.charCodeAt(this.cursor)))){\n            cp = (cp - 0xD800) * 0x400 + (d -0xDC00) + 0x10000;\n            ++this.cursor;\n         }\n         return UChar.fromCharCode(cp);\n      } else {\n         this.str = null;\n         return null;\n      }\n   };\n\n   var RecursDecompIterator = function(it, cano){\n      this.it = it;\n      this.canonical = cano;\n      this.resBuf = [];\n   };\n\n   RecursDecompIterator.prototype.next = function(){\n      function recursiveDecomp(cano, uchar){\n         var decomp = uchar.getDecomp();\n         if(!!decomp && !(cano && uchar.isCompatibility())){\n            var ret = [];\n            for(var i = 0; i < decomp.length; ++i){\n               var a = recursiveDecomp(cano, UChar.fromCharCode(decomp[i]));\n                ret = ret.concat(a);\n            }\n            return ret;\n         } else {\n            return [uchar];\n         }\n      }\n      if(this.resBuf.length === 0){\n         var uchar = this.it.next();\n         if(!uchar){\n            return null;\n         }\n         this.resBuf = recursiveDecomp(this.canonical, uchar);\n      }\n      return this.resBuf.shift();\n   };\n\n   var DecompIterator = function(it){\n      this.it = it;\n      this.resBuf = [];\n   };\n\n   DecompIterator.prototype.next = function(){\n      var cc;\n      if(this.resBuf.length === 0){\n         do{\n            var uchar = this.it.next();\n            if(!uchar){\n               break;\n            }\n            cc = uchar.getCanonicalClass();\n            var inspt = this.resBuf.length;\n            if(cc !== 0){\n               for(; inspt > 0; --inspt){\n                  var uchar2 = this.resBuf[inspt - 1];\n                  var cc2 = uchar2.getCanonicalClass();\n                  if(cc2 <= cc){\n                     break;\n                  }\n               }\n            }\n            this.resBuf.splice(inspt, 0, uchar);\n         } while(cc !== 0);\n      }\n      return this.resBuf.shift();\n   };\n\n   var CompIterator = function(it){\n      this.it = it;\n      this.procBuf = [];\n      this.resBuf = [];\n      this.lastClass = null;\n   };\n\n   CompIterator.prototype.next = function(){\n      while(this.resBuf.length === 0){\n         var uchar = this.it.next();\n         if(!uchar){\n            this.resBuf = this.procBuf;\n            this.procBuf = [];\n            break;\n         }\n         if(this.procBuf.length === 0){\n            this.lastClass = uchar.getCanonicalClass();\n            this.procBuf.push(uchar);\n         } else {\n            var starter = this.procBuf[0];\n            var composite = starter.getComposite(uchar);\n            var cc = uchar.getCanonicalClass();\n            if(!!composite && (this.lastClass < cc || this.lastClass === 0)){\n               this.procBuf[0] = composite;\n            } else {\n               if(cc === 0){\n                  this.resBuf = this.procBuf;\n                  this.procBuf = [];\n               }\n               this.lastClass = cc;\n               this.procBuf.push(uchar);\n            }\n         }\n      }\n      return this.resBuf.shift();\n   };\n\n   var createIterator = function(mode, str){\n      switch(mode){\n         case \"NFD\":\n            return new DecompIterator(new RecursDecompIterator(new UCharIterator(str), true));\n         case \"NFKD\":\n            return new DecompIterator(new RecursDecompIterator(new UCharIterator(str), false));\n         case \"NFC\":\n            return new CompIterator(new DecompIterator(new RecursDecompIterator(new UCharIterator(str), true)));\n         case \"NFKC\":\n            return new CompIterator(new DecompIterator(new RecursDecompIterator(new UCharIterator(str), false)));\n      }\n      throw mode + \" is invalid\";\n   };\n   var normalize = function(mode, str){\n      var it = createIterator(mode, str);\n      var ret = \"\";\n      var uchar;\n      while(!!(uchar = it.next())){\n         ret += uchar.toString();\n      }\n      return ret;\n   };\n\n   /* API functions */\n   function nfd(str){\n      return normalize(\"NFD\", str);\n   }\n\n   function nfkd(str){\n      return normalize(\"NFKD\", str);\n   }\n\n   function nfc(str){\n      return normalize(\"NFC\", str);\n   }\n\n   function nfkc(str){\n      return normalize(\"NFKC\", str);\n   }\n\n/* Unicode data */\nUChar.udata={\n0:{60:[,,{824:8814}],61:[,,{824:8800}],62:[,,{824:8815}],65:[,,{768:192,769:193,770:194,771:195,772:256,774:258,775:550,776:196,777:7842,778:197,780:461,783:512,785:514,803:7840,805:7680,808:260}],66:[,,{775:7682,803:7684,817:7686}],67:[,,{769:262,770:264,775:266,780:268,807:199}],68:[,,{775:7690,780:270,803:7692,807:7696,813:7698,817:7694}],69:[,,{768:200,769:201,770:202,771:7868,772:274,774:276,775:278,776:203,777:7866,780:282,783:516,785:518,803:7864,807:552,808:280,813:7704,816:7706}],70:[,,{775:7710}],71:[,,{769:500,770:284,772:7712,774:286,775:288,780:486,807:290}],72:[,,{770:292,775:7714,776:7718,780:542,803:7716,807:7720,814:7722}],73:[,,{768:204,769:205,770:206,771:296,772:298,774:300,775:304,776:207,777:7880,780:463,783:520,785:522,803:7882,808:302,816:7724}],74:[,,{770:308}],75:[,,{769:7728,780:488,803:7730,807:310,817:7732}],76:[,,{769:313,780:317,803:7734,807:315,813:7740,817:7738}],77:[,,{769:7742,775:7744,803:7746}],78:[,,{768:504,769:323,771:209,775:7748,780:327,803:7750,807:325,813:7754,817:7752}],79:[,,{768:210,769:211,770:212,771:213,772:332,774:334,775:558,776:214,777:7886,779:336,780:465,783:524,785:526,795:416,803:7884,808:490}],80:[,,{769:7764,775:7766}],82:[,,{769:340,775:7768,780:344,783:528,785:530,803:7770,807:342,817:7774}],83:[,,{769:346,770:348,775:7776,780:352,803:7778,806:536,807:350}],84:[,,{775:7786,780:356,803:7788,806:538,807:354,813:7792,817:7790}],85:[,,{768:217,769:218,770:219,771:360,772:362,774:364,776:220,777:7910,778:366,779:368,780:467,783:532,785:534,795:431,803:7908,804:7794,808:370,813:7798,816:7796}],86:[,,{771:7804,803:7806}],87:[,,{768:7808,769:7810,770:372,775:7814,776:7812,803:7816}],88:[,,{775:7818,776:7820}],89:[,,{768:7922,769:221,770:374,771:7928,772:562,775:7822,776:376,777:7926,803:7924}],90:[,,{769:377,770:7824,775:379,780:381,803:7826,817:7828}],97:[,,{768:224,769:225,770:226,771:227,772:257,774:259,775:551,776:228,777:7843,778:229,780:462,783:513,785:515,803:7841,805:7681,808:261}],98:[,,{775:7683,803:7685,817:7687}],99:[,,{769:263,770:265,775:267,780:269,807:231}],100:[,,{775:7691,780:271,803:7693,807:7697,813:7699,817:7695}],101:[,,{768:232,769:233,770:234,771:7869,772:275,774:277,775:279,776:235,777:7867,780:283,783:517,785:519,803:7865,807:553,808:281,813:7705,816:7707}],102:[,,{775:7711}],103:[,,{769:501,770:285,772:7713,774:287,775:289,780:487,807:291}],104:[,,{770:293,775:7715,776:7719,780:543,803:7717,807:7721,814:7723,817:7830}],105:[,,{768:236,769:237,770:238,771:297,772:299,774:301,776:239,777:7881,780:464,783:521,785:523,803:7883,808:303,816:7725}],106:[,,{770:309,780:496}],107:[,,{769:7729,780:489,803:7731,807:311,817:7733}],108:[,,{769:314,780:318,803:7735,807:316,813:7741,817:7739}],109:[,,{769:7743,775:7745,803:7747}],110:[,,{768:505,769:324,771:241,775:7749,780:328,803:7751,807:326,813:7755,817:7753}],111:[,,{768:242,769:243,770:244,771:245,772:333,774:335,775:559,776:246,777:7887,779:337,780:466,783:525,785:527,795:417,803:7885,808:491}],112:[,,{769:7765,775:7767}],114:[,,{769:341,775:7769,780:345,783:529,785:531,803:7771,807:343,817:7775}],115:[,,{769:347,770:349,775:7777,780:353,803:7779,806:537,807:351}],116:[,,{775:7787,776:7831,780:357,803:7789,806:539,807:355,813:7793,817:7791}],117:[,,{768:249,769:250,770:251,771:361,772:363,774:365,776:252,777:7911,778:367,779:369,780:468,783:533,785:535,795:432,803:7909,804:7795,808:371,813:7799,816:7797}],118:[,,{771:7805,803:7807}],119:[,,{768:7809,769:7811,770:373,775:7815,776:7813,778:7832,803:7817}],120:[,,{775:7819,776:7821}],121:[,,{768:7923,769:253,770:375,771:7929,772:563,775:7823,776:255,777:7927,778:7833,803:7925}],122:[,,{769:378,770:7825,775:380,780:382,803:7827,817:7829}],160:[[32],256],168:[[32,776],256,{768:8173,769:901,834:8129}],170:[[97],256],175:[[32,772],256],178:[[50],256],179:[[51],256],180:[[32,769],256],181:[[956],256],184:[[32,807],256],185:[[49],256],186:[[111],256],188:[[49,8260,52],256],189:[[49,8260,50],256],190:[[51,8260,52],256],192:[[65,768]],193:[[65,769]],194:[[65,770],,{768:7846,769:7844,771:7850,777:7848}],195:[[65,771]],196:[[65,776],,{772:478}],197:[[65,778],,{769:506}],198:[,,{769:508,772:482}],199:[[67,807],,{769:7688}],200:[[69,768]],201:[[69,769]],202:[[69,770],,{768:7872,769:7870,771:7876,777:7874}],203:[[69,776]],204:[[73,768]],205:[[73,769]],206:[[73,770]],207:[[73,776],,{769:7726}],209:[[78,771]],210:[[79,768]],211:[[79,769]],212:[[79,770],,{768:7890,769:7888,771:7894,777:7892}],213:[[79,771],,{769:7756,772:556,776:7758}],214:[[79,776],,{772:554}],216:[,,{769:510}],217:[[85,768]],218:[[85,769]],219:[[85,770]],220:[[85,776],,{768:475,769:471,772:469,780:473}],221:[[89,769]],224:[[97,768]],225:[[97,769]],226:[[97,770],,{768:7847,769:7845,771:7851,777:7849}],227:[[97,771]],228:[[97,776],,{772:479}],229:[[97,778],,{769:507}],230:[,,{769:509,772:483}],231:[[99,807],,{769:7689}],232:[[101,768]],233:[[101,769]],234:[[101,770],,{768:7873,769:7871,771:7877,777:7875}],235:[[101,776]],236:[[105,768]],237:[[105,769]],238:[[105,770]],239:[[105,776],,{769:7727}],241:[[110,771]],242:[[111,768]],243:[[111,769]],244:[[111,770],,{768:7891,769:7889,771:7895,777:7893}],245:[[111,771],,{769:7757,772:557,776:7759}],246:[[111,776],,{772:555}],248:[,,{769:511}],249:[[117,768]],250:[[117,769]],251:[[117,770]],252:[[117,776],,{768:476,769:472,772:470,780:474}],253:[[121,769]],255:[[121,776]]},\n256:{256:[[65,772]],257:[[97,772]],258:[[65,774],,{768:7856,769:7854,771:7860,777:7858}],259:[[97,774],,{768:7857,769:7855,771:7861,777:7859}],260:[[65,808]],261:[[97,808]],262:[[67,769]],263:[[99,769]],264:[[67,770]],265:[[99,770]],266:[[67,775]],267:[[99,775]],268:[[67,780]],269:[[99,780]],270:[[68,780]],271:[[100,780]],274:[[69,772],,{768:7700,769:7702}],275:[[101,772],,{768:7701,769:7703}],276:[[69,774]],277:[[101,774]],278:[[69,775]],279:[[101,775]],280:[[69,808]],281:[[101,808]],282:[[69,780]],283:[[101,780]],284:[[71,770]],285:[[103,770]],286:[[71,774]],287:[[103,774]],288:[[71,775]],289:[[103,775]],290:[[71,807]],291:[[103,807]],292:[[72,770]],293:[[104,770]],296:[[73,771]],297:[[105,771]],298:[[73,772]],299:[[105,772]],300:[[73,774]],301:[[105,774]],302:[[73,808]],303:[[105,808]],304:[[73,775]],306:[[73,74],256],307:[[105,106],256],308:[[74,770]],309:[[106,770]],310:[[75,807]],311:[[107,807]],313:[[76,769]],314:[[108,769]],315:[[76,807]],316:[[108,807]],317:[[76,780]],318:[[108,780]],319:[[76,183],256],320:[[108,183],256],323:[[78,769]],324:[[110,769]],325:[[78,807]],326:[[110,807]],327:[[78,780]],328:[[110,780]],329:[[700,110],256],332:[[79,772],,{768:7760,769:7762}],333:[[111,772],,{768:7761,769:7763}],334:[[79,774]],335:[[111,774]],336:[[79,779]],337:[[111,779]],340:[[82,769]],341:[[114,769]],342:[[82,807]],343:[[114,807]],344:[[82,780]],345:[[114,780]],346:[[83,769],,{775:7780}],347:[[115,769],,{775:7781}],348:[[83,770]],349:[[115,770]],350:[[83,807]],351:[[115,807]],352:[[83,780],,{775:7782}],353:[[115,780],,{775:7783}],354:[[84,807]],355:[[116,807]],356:[[84,780]],357:[[116,780]],360:[[85,771],,{769:7800}],361:[[117,771],,{769:7801}],362:[[85,772],,{776:7802}],363:[[117,772],,{776:7803}],364:[[85,774]],365:[[117,774]],366:[[85,778]],367:[[117,778]],368:[[85,779]],369:[[117,779]],370:[[85,808]],371:[[117,808]],372:[[87,770]],373:[[119,770]],374:[[89,770]],375:[[121,770]],376:[[89,776]],377:[[90,769]],378:[[122,769]],379:[[90,775]],380:[[122,775]],381:[[90,780]],382:[[122,780]],383:[[115],256,{775:7835}],416:[[79,795],,{768:7900,769:7898,771:7904,777:7902,803:7906}],417:[[111,795],,{768:7901,769:7899,771:7905,777:7903,803:7907}],431:[[85,795],,{768:7914,769:7912,771:7918,777:7916,803:7920}],432:[[117,795],,{768:7915,769:7913,771:7919,777:7917,803:7921}],439:[,,{780:494}],452:[[68,381],256],453:[[68,382],256],454:[[100,382],256],455:[[76,74],256],456:[[76,106],256],457:[[108,106],256],458:[[78,74],256],459:[[78,106],256],460:[[110,106],256],461:[[65,780]],462:[[97,780]],463:[[73,780]],464:[[105,780]],465:[[79,780]],466:[[111,780]],467:[[85,780]],468:[[117,780]],469:[[220,772]],470:[[252,772]],471:[[220,769]],472:[[252,769]],473:[[220,780]],474:[[252,780]],475:[[220,768]],476:[[252,768]],478:[[196,772]],479:[[228,772]],480:[[550,772]],481:[[551,772]],482:[[198,772]],483:[[230,772]],486:[[71,780]],487:[[103,780]],488:[[75,780]],489:[[107,780]],490:[[79,808],,{772:492}],491:[[111,808],,{772:493}],492:[[490,772]],493:[[491,772]],494:[[439,780]],495:[[658,780]],496:[[106,780]],497:[[68,90],256],498:[[68,122],256],499:[[100,122],256],500:[[71,769]],501:[[103,769]],504:[[78,768]],505:[[110,768]],506:[[197,769]],507:[[229,769]],508:[[198,769]],509:[[230,769]],510:[[216,769]],511:[[248,769]],66045:[,220]},\n512:{512:[[65,783]],513:[[97,783]],514:[[65,785]],515:[[97,785]],516:[[69,783]],517:[[101,783]],518:[[69,785]],519:[[101,785]],520:[[73,783]],521:[[105,783]],522:[[73,785]],523:[[105,785]],524:[[79,783]],525:[[111,783]],526:[[79,785]],527:[[111,785]],528:[[82,783]],529:[[114,783]],530:[[82,785]],531:[[114,785]],532:[[85,783]],533:[[117,783]],534:[[85,785]],535:[[117,785]],536:[[83,806]],537:[[115,806]],538:[[84,806]],539:[[116,806]],542:[[72,780]],543:[[104,780]],550:[[65,775],,{772:480}],551:[[97,775],,{772:481}],552:[[69,807],,{774:7708}],553:[[101,807],,{774:7709}],554:[[214,772]],555:[[246,772]],556:[[213,772]],557:[[245,772]],558:[[79,775],,{772:560}],559:[[111,775],,{772:561}],560:[[558,772]],561:[[559,772]],562:[[89,772]],563:[[121,772]],658:[,,{780:495}],688:[[104],256],689:[[614],256],690:[[106],256],691:[[114],256],692:[[633],256],693:[[635],256],694:[[641],256],695:[[119],256],696:[[121],256],728:[[32,774],256],729:[[32,775],256],730:[[32,778],256],731:[[32,808],256],732:[[32,771],256],733:[[32,779],256],736:[[611],256],737:[[108],256],738:[[115],256],739:[[120],256],740:[[661],256],66272:[,220]},\n768:{768:[,230],769:[,230],770:[,230],771:[,230],772:[,230],773:[,230],774:[,230],775:[,230],776:[,230,{769:836}],777:[,230],778:[,230],779:[,230],780:[,230],781:[,230],782:[,230],783:[,230],784:[,230],785:[,230],786:[,230],787:[,230],788:[,230],789:[,232],790:[,220],791:[,220],792:[,220],793:[,220],794:[,232],795:[,216],796:[,220],797:[,220],798:[,220],799:[,220],800:[,220],801:[,202],802:[,202],803:[,220],804:[,220],805:[,220],806:[,220],807:[,202],808:[,202],809:[,220],810:[,220],811:[,220],812:[,220],813:[,220],814:[,220],815:[,220],816:[,220],817:[,220],818:[,220],819:[,220],820:[,1],821:[,1],822:[,1],823:[,1],824:[,1],825:[,220],826:[,220],827:[,220],828:[,220],829:[,230],830:[,230],831:[,230],832:[[768],230],833:[[769],230],834:[,230],835:[[787],230],836:[[776,769],230],837:[,240],838:[,230],839:[,220],840:[,220],841:[,220],842:[,230],843:[,230],844:[,230],845:[,220],846:[,220],848:[,230],849:[,230],850:[,230],851:[,220],852:[,220],853:[,220],854:[,220],855:[,230],856:[,232],857:[,220],858:[,220],859:[,230],860:[,233],861:[,234],862:[,234],863:[,233],864:[,234],865:[,234],866:[,233],867:[,230],868:[,230],869:[,230],870:[,230],871:[,230],872:[,230],873:[,230],874:[,230],875:[,230],876:[,230],877:[,230],878:[,230],879:[,230],884:[[697]],890:[[32,837],256],894:[[59]],900:[[32,769],256],901:[[168,769]],902:[[913,769]],903:[[183]],904:[[917,769]],905:[[919,769]],906:[[921,769]],908:[[927,769]],910:[[933,769]],911:[[937,769]],912:[[970,769]],913:[,,{768:8122,769:902,772:8121,774:8120,787:7944,788:7945,837:8124}],917:[,,{768:8136,769:904,787:7960,788:7961}],919:[,,{768:8138,769:905,787:7976,788:7977,837:8140}],921:[,,{768:8154,769:906,772:8153,774:8152,776:938,787:7992,788:7993}],927:[,,{768:8184,769:908,787:8008,788:8009}],929:[,,{788:8172}],933:[,,{768:8170,769:910,772:8169,774:8168,776:939,788:8025}],937:[,,{768:8186,769:911,787:8040,788:8041,837:8188}],938:[[921,776]],939:[[933,776]],940:[[945,769],,{837:8116}],941:[[949,769]],942:[[951,769],,{837:8132}],943:[[953,769]],944:[[971,769]],945:[,,{768:8048,769:940,772:8113,774:8112,787:7936,788:7937,834:8118,837:8115}],949:[,,{768:8050,769:941,787:7952,788:7953}],951:[,,{768:8052,769:942,787:7968,788:7969,834:8134,837:8131}],953:[,,{768:8054,769:943,772:8145,774:8144,776:970,787:7984,788:7985,834:8150}],959:[,,{768:8056,769:972,787:8000,788:8001}],961:[,,{787:8164,788:8165}],965:[,,{768:8058,769:973,772:8161,774:8160,776:971,787:8016,788:8017,834:8166}],969:[,,{768:8060,769:974,787:8032,788:8033,834:8182,837:8179}],970:[[953,776],,{768:8146,769:912,834:8151}],971:[[965,776],,{768:8162,769:944,834:8167}],972:[[959,769]],973:[[965,769]],974:[[969,769],,{837:8180}],976:[[946],256],977:[[952],256],978:[[933],256,{769:979,776:980}],979:[[978,769]],980:[[978,776]],981:[[966],256],982:[[960],256],1008:[[954],256],1009:[[961],256],1010:[[962],256],1012:[[920],256],1013:[[949],256],1017:[[931],256],66422:[,230],66423:[,230],66424:[,230],66425:[,230],66426:[,230]},\n1024:{1024:[[1045,768]],1025:[[1045,776]],1027:[[1043,769]],1030:[,,{776:1031}],1031:[[1030,776]],1036:[[1050,769]],1037:[[1048,768]],1038:[[1059,774]],1040:[,,{774:1232,776:1234}],1043:[,,{769:1027}],1045:[,,{768:1024,774:1238,776:1025}],1046:[,,{774:1217,776:1244}],1047:[,,{776:1246}],1048:[,,{768:1037,772:1250,774:1049,776:1252}],1049:[[1048,774]],1050:[,,{769:1036}],1054:[,,{776:1254}],1059:[,,{772:1262,774:1038,776:1264,779:1266}],1063:[,,{776:1268}],1067:[,,{776:1272}],1069:[,,{776:1260}],1072:[,,{774:1233,776:1235}],1075:[,,{769:1107}],1077:[,,{768:1104,774:1239,776:1105}],1078:[,,{774:1218,776:1245}],1079:[,,{776:1247}],1080:[,,{768:1117,772:1251,774:1081,776:1253}],1081:[[1080,774]],1082:[,,{769:1116}],1086:[,,{776:1255}],1091:[,,{772:1263,774:1118,776:1265,779:1267}],1095:[,,{776:1269}],1099:[,,{776:1273}],1101:[,,{776:1261}],1104:[[1077,768]],1105:[[1077,776]],1107:[[1075,769]],1110:[,,{776:1111}],1111:[[1110,776]],1116:[[1082,769]],1117:[[1080,768]],1118:[[1091,774]],1140:[,,{783:1142}],1141:[,,{783:1143}],1142:[[1140,783]],1143:[[1141,783]],1155:[,230],1156:[,230],1157:[,230],1158:[,230],1159:[,230],1217:[[1046,774]],1218:[[1078,774]],1232:[[1040,774]],1233:[[1072,774]],1234:[[1040,776]],1235:[[1072,776]],1238:[[1045,774]],1239:[[1077,774]],1240:[,,{776:1242}],1241:[,,{776:1243}],1242:[[1240,776]],1243:[[1241,776]],1244:[[1046,776]],1245:[[1078,776]],1246:[[1047,776]],1247:[[1079,776]],1250:[[1048,772]],1251:[[1080,772]],1252:[[1048,776]],1253:[[1080,776]],1254:[[1054,776]],1255:[[1086,776]],1256:[,,{776:1258}],1257:[,,{776:1259}],1258:[[1256,776]],1259:[[1257,776]],1260:[[1069,776]],1261:[[1101,776]],1262:[[1059,772]],1263:[[1091,772]],1264:[[1059,776]],1265:[[1091,776]],1266:[[1059,779]],1267:[[1091,779]],1268:[[1063,776]],1269:[[1095,776]],1272:[[1067,776]],1273:[[1099,776]]},\n1280:{1415:[[1381,1410],256],1425:[,220],1426:[,230],1427:[,230],1428:[,230],1429:[,230],1430:[,220],1431:[,230],1432:[,230],1433:[,230],1434:[,222],1435:[,220],1436:[,230],1437:[,230],1438:[,230],1439:[,230],1440:[,230],1441:[,230],1442:[,220],1443:[,220],1444:[,220],1445:[,220],1446:[,220],1447:[,220],1448:[,230],1449:[,230],1450:[,220],1451:[,230],1452:[,230],1453:[,222],1454:[,228],1455:[,230],1456:[,10],1457:[,11],1458:[,12],1459:[,13],1460:[,14],1461:[,15],1462:[,16],1463:[,17],1464:[,18],1465:[,19],1466:[,19],1467:[,20],1468:[,21],1469:[,22],1471:[,23],1473:[,24],1474:[,25],1476:[,230],1477:[,220],1479:[,18]},\n1536:{1552:[,230],1553:[,230],1554:[,230],1555:[,230],1556:[,230],1557:[,230],1558:[,230],1559:[,230],1560:[,30],1561:[,31],1562:[,32],1570:[[1575,1619]],1571:[[1575,1620]],1572:[[1608,1620]],1573:[[1575,1621]],1574:[[1610,1620]],1575:[,,{1619:1570,1620:1571,1621:1573}],1608:[,,{1620:1572}],1610:[,,{1620:1574}],1611:[,27],1612:[,28],1613:[,29],1614:[,30],1615:[,31],1616:[,32],1617:[,33],1618:[,34],1619:[,230],1620:[,230],1621:[,220],1622:[,220],1623:[,230],1624:[,230],1625:[,230],1626:[,230],1627:[,230],1628:[,220],1629:[,230],1630:[,230],1631:[,220],1648:[,35],1653:[[1575,1652],256],1654:[[1608,1652],256],1655:[[1735,1652],256],1656:[[1610,1652],256],1728:[[1749,1620]],1729:[,,{1620:1730}],1730:[[1729,1620]],1746:[,,{1620:1747}],1747:[[1746,1620]],1749:[,,{1620:1728}],1750:[,230],1751:[,230],1752:[,230],1753:[,230],1754:[,230],1755:[,230],1756:[,230],1759:[,230],1760:[,230],1761:[,230],1762:[,230],1763:[,220],1764:[,230],1767:[,230],1768:[,230],1770:[,220],1771:[,230],1772:[,230],1773:[,220]},\n1792:{1809:[,36],1840:[,230],1841:[,220],1842:[,230],1843:[,230],1844:[,220],1845:[,230],1846:[,230],1847:[,220],1848:[,220],1849:[,220],1850:[,230],1851:[,220],1852:[,220],1853:[,230],1854:[,220],1855:[,230],1856:[,230],1857:[,230],1858:[,220],1859:[,230],1860:[,220],1861:[,230],1862:[,220],1863:[,230],1864:[,220],1865:[,230],1866:[,230],2027:[,230],2028:[,230],2029:[,230],2030:[,230],2031:[,230],2032:[,230],2033:[,230],2034:[,220],2035:[,230]},\n2048:{2070:[,230],2071:[,230],2072:[,230],2073:[,230],2075:[,230],2076:[,230],2077:[,230],2078:[,230],2079:[,230],2080:[,230],2081:[,230],2082:[,230],2083:[,230],2085:[,230],2086:[,230],2087:[,230],2089:[,230],2090:[,230],2091:[,230],2092:[,230],2093:[,230],2137:[,220],2138:[,220],2139:[,220],2276:[,230],2277:[,230],2278:[,220],2279:[,230],2280:[,230],2281:[,220],2282:[,230],2283:[,230],2284:[,230],2285:[,220],2286:[,220],2287:[,220],2288:[,27],2289:[,28],2290:[,29],2291:[,230],2292:[,230],2293:[,230],2294:[,220],2295:[,230],2296:[,230],2297:[,220],2298:[,220],2299:[,230],2300:[,230],2301:[,230],2302:[,230],2303:[,230]},\n2304:{2344:[,,{2364:2345}],2345:[[2344,2364]],2352:[,,{2364:2353}],2353:[[2352,2364]],2355:[,,{2364:2356}],2356:[[2355,2364]],2364:[,7],2381:[,9],2385:[,230],2386:[,220],2387:[,230],2388:[,230],2392:[[2325,2364],512],2393:[[2326,2364],512],2394:[[2327,2364],512],2395:[[2332,2364],512],2396:[[2337,2364],512],2397:[[2338,2364],512],2398:[[2347,2364],512],2399:[[2351,2364],512],2492:[,7],2503:[,,{2494:2507,2519:2508}],2507:[[2503,2494]],2508:[[2503,2519]],2509:[,9],2524:[[2465,2492],512],2525:[[2466,2492],512],2527:[[2479,2492],512]},\n2560:{2611:[[2610,2620],512],2614:[[2616,2620],512],2620:[,7],2637:[,9],2649:[[2582,2620],512],2650:[[2583,2620],512],2651:[[2588,2620],512],2654:[[2603,2620],512],2748:[,7],2765:[,9],68109:[,220],68111:[,230],68152:[,230],68153:[,1],68154:[,220],68159:[,9],68325:[,230],68326:[,220]},\n2816:{2876:[,7],2887:[,,{2878:2891,2902:2888,2903:2892}],2888:[[2887,2902]],2891:[[2887,2878]],2892:[[2887,2903]],2893:[,9],2908:[[2849,2876],512],2909:[[2850,2876],512],2962:[,,{3031:2964}],2964:[[2962,3031]],3014:[,,{3006:3018,3031:3020}],3015:[,,{3006:3019}],3018:[[3014,3006]],3019:[[3015,3006]],3020:[[3014,3031]],3021:[,9]},\n3072:{3142:[,,{3158:3144}],3144:[[3142,3158]],3149:[,9],3157:[,84],3158:[,91],3260:[,7],3263:[,,{3285:3264}],3264:[[3263,3285]],3270:[,,{3266:3274,3285:3271,3286:3272}],3271:[[3270,3285]],3272:[[3270,3286]],3274:[[3270,3266],,{3285:3275}],3275:[[3274,3285]],3277:[,9]},\n3328:{3398:[,,{3390:3402,3415:3404}],3399:[,,{3390:3403}],3402:[[3398,3390]],3403:[[3399,3390]],3404:[[3398,3415]],3405:[,9],3530:[,9],3545:[,,{3530:3546,3535:3548,3551:3550}],3546:[[3545,3530]],3548:[[3545,3535],,{3530:3549}],3549:[[3548,3530]],3550:[[3545,3551]]},\n3584:{3635:[[3661,3634],256],3640:[,103],3641:[,103],3642:[,9],3656:[,107],3657:[,107],3658:[,107],3659:[,107],3763:[[3789,3762],256],3768:[,118],3769:[,118],3784:[,122],3785:[,122],3786:[,122],3787:[,122],3804:[[3755,3737],256],3805:[[3755,3745],256]},\n3840:{3852:[[3851],256],3864:[,220],3865:[,220],3893:[,220],3895:[,220],3897:[,216],3907:[[3906,4023],512],3917:[[3916,4023],512],3922:[[3921,4023],512],3927:[[3926,4023],512],3932:[[3931,4023],512],3945:[[3904,4021],512],3953:[,129],3954:[,130],3955:[[3953,3954],512],3956:[,132],3957:[[3953,3956],512],3958:[[4018,3968],512],3959:[[4018,3969],256],3960:[[4019,3968],512],3961:[[4019,3969],256],3962:[,130],3963:[,130],3964:[,130],3965:[,130],3968:[,130],3969:[[3953,3968],512],3970:[,230],3971:[,230],3972:[,9],3974:[,230],3975:[,230],3987:[[3986,4023],512],3997:[[3996,4023],512],4002:[[4001,4023],512],4007:[[4006,4023],512],4012:[[4011,4023],512],4025:[[3984,4021],512],4038:[,220]},\n4096:{4133:[,,{4142:4134}],4134:[[4133,4142]],4151:[,7],4153:[,9],4154:[,9],4237:[,220],4348:[[4316],256],69702:[,9],69759:[,9],69785:[,,{69818:69786}],69786:[[69785,69818]],69787:[,,{69818:69788}],69788:[[69787,69818]],69797:[,,{69818:69803}],69803:[[69797,69818]],69817:[,9],69818:[,7]},\n4352:{69888:[,230],69889:[,230],69890:[,230],69934:[[69937,69927]],69935:[[69938,69927]],69937:[,,{69927:69934}],69938:[,,{69927:69935}],69939:[,9],69940:[,9],70003:[,7],70080:[,9]},\n4608:{70197:[,9],70198:[,7],70377:[,7],70378:[,9]},\n4864:{4957:[,230],4958:[,230],4959:[,230],70460:[,7],70471:[,,{70462:70475,70487:70476}],70475:[[70471,70462]],70476:[[70471,70487]],70477:[,9],70502:[,230],70503:[,230],70504:[,230],70505:[,230],70506:[,230],70507:[,230],70508:[,230],70512:[,230],70513:[,230],70514:[,230],70515:[,230],70516:[,230]},\n5120:{70841:[,,{70832:70844,70842:70843,70845:70846}],70843:[[70841,70842]],70844:[[70841,70832]],70846:[[70841,70845]],70850:[,9],70851:[,7]},\n5376:{71096:[,,{71087:71098}],71097:[,,{71087:71099}],71098:[[71096,71087]],71099:[[71097,71087]],71103:[,9],71104:[,7]},\n5632:{71231:[,9],71350:[,9],71351:[,7]},\n5888:{5908:[,9],5940:[,9],6098:[,9],6109:[,230]},\n6144:{6313:[,228]},\n6400:{6457:[,222],6458:[,230],6459:[,220]},\n6656:{6679:[,230],6680:[,220],6752:[,9],6773:[,230],6774:[,230],6775:[,230],6776:[,230],6777:[,230],6778:[,230],6779:[,230],6780:[,230],6783:[,220],6832:[,230],6833:[,230],6834:[,230],6835:[,230],6836:[,230],6837:[,220],6838:[,220],6839:[,220],6840:[,220],6841:[,220],6842:[,220],6843:[,230],6844:[,230],6845:[,220]},\n6912:{6917:[,,{6965:6918}],6918:[[6917,6965]],6919:[,,{6965:6920}],6920:[[6919,6965]],6921:[,,{6965:6922}],6922:[[6921,6965]],6923:[,,{6965:6924}],6924:[[6923,6965]],6925:[,,{6965:6926}],6926:[[6925,6965]],6929:[,,{6965:6930}],6930:[[6929,6965]],6964:[,7],6970:[,,{6965:6971}],6971:[[6970,6965]],6972:[,,{6965:6973}],6973:[[6972,6965]],6974:[,,{6965:6976}],6975:[,,{6965:6977}],6976:[[6974,6965]],6977:[[6975,6965]],6978:[,,{6965:6979}],6979:[[6978,6965]],6980:[,9],7019:[,230],7020:[,220],7021:[,230],7022:[,230],7023:[,230],7024:[,230],7025:[,230],7026:[,230],7027:[,230],7082:[,9],7083:[,9],7142:[,7],7154:[,9],7155:[,9]},\n7168:{7223:[,7],7376:[,230],7377:[,230],7378:[,230],7380:[,1],7381:[,220],7382:[,220],7383:[,220],7384:[,220],7385:[,220],7386:[,230],7387:[,230],7388:[,220],7389:[,220],7390:[,220],7391:[,220],7392:[,230],7394:[,1],7395:[,1],7396:[,1],7397:[,1],7398:[,1],7399:[,1],7400:[,1],7405:[,220],7412:[,230],7416:[,230],7417:[,230]},\n7424:{7468:[[65],256],7469:[[198],256],7470:[[66],256],7472:[[68],256],7473:[[69],256],7474:[[398],256],7475:[[71],256],7476:[[72],256],7477:[[73],256],7478:[[74],256],7479:[[75],256],7480:[[76],256],7481:[[77],256],7482:[[78],256],7484:[[79],256],7485:[[546],256],7486:[[80],256],7487:[[82],256],7488:[[84],256],7489:[[85],256],7490:[[87],256],7491:[[97],256],7492:[[592],256],7493:[[593],256],7494:[[7426],256],7495:[[98],256],7496:[[100],256],7497:[[101],256],7498:[[601],256],7499:[[603],256],7500:[[604],256],7501:[[103],256],7503:[[107],256],7504:[[109],256],7505:[[331],256],7506:[[111],256],7507:[[596],256],7508:[[7446],256],7509:[[7447],256],7510:[[112],256],7511:[[116],256],7512:[[117],256],7513:[[7453],256],7514:[[623],256],7515:[[118],256],7516:[[7461],256],7517:[[946],256],7518:[[947],256],7519:[[948],256],7520:[[966],256],7521:[[967],256],7522:[[105],256],7523:[[114],256],7524:[[117],256],7525:[[118],256],7526:[[946],256],7527:[[947],256],7528:[[961],256],7529:[[966],256],7530:[[967],256],7544:[[1085],256],7579:[[594],256],7580:[[99],256],7581:[[597],256],7582:[[240],256],7583:[[604],256],7584:[[102],256],7585:[[607],256],7586:[[609],256],7587:[[613],256],7588:[[616],256],7589:[[617],256],7590:[[618],256],7591:[[7547],256],7592:[[669],256],7593:[[621],256],7594:[[7557],256],7595:[[671],256],7596:[[625],256],7597:[[624],256],7598:[[626],256],7599:[[627],256],7600:[[628],256],7601:[[629],256],7602:[[632],256],7603:[[642],256],7604:[[643],256],7605:[[427],256],7606:[[649],256],7607:[[650],256],7608:[[7452],256],7609:[[651],256],7610:[[652],256],7611:[[122],256],7612:[[656],256],7613:[[657],256],7614:[[658],256],7615:[[952],256],7616:[,230],7617:[,230],7618:[,220],7619:[,230],7620:[,230],7621:[,230],7622:[,230],7623:[,230],7624:[,230],7625:[,230],7626:[,220],7627:[,230],7628:[,230],7629:[,234],7630:[,214],7631:[,220],7632:[,202],7633:[,230],7634:[,230],7635:[,230],7636:[,230],7637:[,230],7638:[,230],7639:[,230],7640:[,230],7641:[,230],7642:[,230],7643:[,230],7644:[,230],7645:[,230],7646:[,230],7647:[,230],7648:[,230],7649:[,230],7650:[,230],7651:[,230],7652:[,230],7653:[,230],7654:[,230],7655:[,230],7656:[,230],7657:[,230],7658:[,230],7659:[,230],7660:[,230],7661:[,230],7662:[,230],7663:[,230],7664:[,230],7665:[,230],7666:[,230],7667:[,230],7668:[,230],7669:[,230],7676:[,233],7677:[,220],7678:[,230],7679:[,220]},\n7680:{7680:[[65,805]],7681:[[97,805]],7682:[[66,775]],7683:[[98,775]],7684:[[66,803]],7685:[[98,803]],7686:[[66,817]],7687:[[98,817]],7688:[[199,769]],7689:[[231,769]],7690:[[68,775]],7691:[[100,775]],7692:[[68,803]],7693:[[100,803]],7694:[[68,817]],7695:[[100,817]],7696:[[68,807]],7697:[[100,807]],7698:[[68,813]],7699:[[100,813]],7700:[[274,768]],7701:[[275,768]],7702:[[274,769]],7703:[[275,769]],7704:[[69,813]],7705:[[101,813]],7706:[[69,816]],7707:[[101,816]],7708:[[552,774]],7709:[[553,774]],7710:[[70,775]],7711:[[102,775]],7712:[[71,772]],7713:[[103,772]],7714:[[72,775]],7715:[[104,775]],7716:[[72,803]],7717:[[104,803]],7718:[[72,776]],7719:[[104,776]],7720:[[72,807]],7721:[[104,807]],7722:[[72,814]],7723:[[104,814]],7724:[[73,816]],7725:[[105,816]],7726:[[207,769]],7727:[[239,769]],7728:[[75,769]],7729:[[107,769]],7730:[[75,803]],7731:[[107,803]],7732:[[75,817]],7733:[[107,817]],7734:[[76,803],,{772:7736}],7735:[[108,803],,{772:7737}],7736:[[7734,772]],7737:[[7735,772]],7738:[[76,817]],7739:[[108,817]],7740:[[76,813]],7741:[[108,813]],7742:[[77,769]],7743:[[109,769]],7744:[[77,775]],7745:[[109,775]],7746:[[77,803]],7747:[[109,803]],7748:[[78,775]],7749:[[110,775]],7750:[[78,803]],7751:[[110,803]],7752:[[78,817]],7753:[[110,817]],7754:[[78,813]],7755:[[110,813]],7756:[[213,769]],7757:[[245,769]],7758:[[213,776]],7759:[[245,776]],7760:[[332,768]],7761:[[333,768]],7762:[[332,769]],7763:[[333,769]],7764:[[80,769]],7765:[[112,769]],7766:[[80,775]],7767:[[112,775]],7768:[[82,775]],7769:[[114,775]],7770:[[82,803],,{772:7772}],7771:[[114,803],,{772:7773}],7772:[[7770,772]],7773:[[7771,772]],7774:[[82,817]],7775:[[114,817]],7776:[[83,775]],7777:[[115,775]],7778:[[83,803],,{775:7784}],7779:[[115,803],,{775:7785}],7780:[[346,775]],7781:[[347,775]],7782:[[352,775]],7783:[[353,775]],7784:[[7778,775]],7785:[[7779,775]],7786:[[84,775]],7787:[[116,775]],7788:[[84,803]],7789:[[116,803]],7790:[[84,817]],7791:[[116,817]],7792:[[84,813]],7793:[[116,813]],7794:[[85,804]],7795:[[117,804]],7796:[[85,816]],7797:[[117,816]],7798:[[85,813]],7799:[[117,813]],7800:[[360,769]],7801:[[361,769]],7802:[[362,776]],7803:[[363,776]],7804:[[86,771]],7805:[[118,771]],7806:[[86,803]],7807:[[118,803]],7808:[[87,768]],7809:[[119,768]],7810:[[87,769]],7811:[[119,769]],7812:[[87,776]],7813:[[119,776]],7814:[[87,775]],7815:[[119,775]],7816:[[87,803]],7817:[[119,803]],7818:[[88,775]],7819:[[120,775]],7820:[[88,776]],7821:[[120,776]],7822:[[89,775]],7823:[[121,775]],7824:[[90,770]],7825:[[122,770]],7826:[[90,803]],7827:[[122,803]],7828:[[90,817]],7829:[[122,817]],7830:[[104,817]],7831:[[116,776]],7832:[[119,778]],7833:[[121,778]],7834:[[97,702],256],7835:[[383,775]],7840:[[65,803],,{770:7852,774:7862}],7841:[[97,803],,{770:7853,774:7863}],7842:[[65,777]],7843:[[97,777]],7844:[[194,769]],7845:[[226,769]],7846:[[194,768]],7847:[[226,768]],7848:[[194,777]],7849:[[226,777]],7850:[[194,771]],7851:[[226,771]],7852:[[7840,770]],7853:[[7841,770]],7854:[[258,769]],7855:[[259,769]],7856:[[258,768]],7857:[[259,768]],7858:[[258,777]],7859:[[259,777]],7860:[[258,771]],7861:[[259,771]],7862:[[7840,774]],7863:[[7841,774]],7864:[[69,803],,{770:7878}],7865:[[101,803],,{770:7879}],7866:[[69,777]],7867:[[101,777]],7868:[[69,771]],7869:[[101,771]],7870:[[202,769]],7871:[[234,769]],7872:[[202,768]],7873:[[234,768]],7874:[[202,777]],7875:[[234,777]],7876:[[202,771]],7877:[[234,771]],7878:[[7864,770]],7879:[[7865,770]],7880:[[73,777]],7881:[[105,777]],7882:[[73,803]],7883:[[105,803]],7884:[[79,803],,{770:7896}],7885:[[111,803],,{770:7897}],7886:[[79,777]],7887:[[111,777]],7888:[[212,769]],7889:[[244,769]],7890:[[212,768]],7891:[[244,768]],7892:[[212,777]],7893:[[244,777]],7894:[[212,771]],7895:[[244,771]],7896:[[7884,770]],7897:[[7885,770]],7898:[[416,769]],7899:[[417,769]],7900:[[416,768]],7901:[[417,768]],7902:[[416,777]],7903:[[417,777]],7904:[[416,771]],7905:[[417,771]],7906:[[416,803]],7907:[[417,803]],7908:[[85,803]],7909:[[117,803]],7910:[[85,777]],7911:[[117,777]],7912:[[431,769]],7913:[[432,769]],7914:[[431,768]],7915:[[432,768]],7916:[[431,777]],7917:[[432,777]],7918:[[431,771]],7919:[[432,771]],7920:[[431,803]],7921:[[432,803]],7922:[[89,768]],7923:[[121,768]],7924:[[89,803]],7925:[[121,803]],7926:[[89,777]],7927:[[121,777]],7928:[[89,771]],7929:[[121,771]]},\n7936:{7936:[[945,787],,{768:7938,769:7940,834:7942,837:8064}],7937:[[945,788],,{768:7939,769:7941,834:7943,837:8065}],7938:[[7936,768],,{837:8066}],7939:[[7937,768],,{837:8067}],7940:[[7936,769],,{837:8068}],7941:[[7937,769],,{837:8069}],7942:[[7936,834],,{837:8070}],7943:[[7937,834],,{837:8071}],7944:[[913,787],,{768:7946,769:7948,834:7950,837:8072}],7945:[[913,788],,{768:7947,769:7949,834:7951,837:8073}],7946:[[7944,768],,{837:8074}],7947:[[7945,768],,{837:8075}],7948:[[7944,769],,{837:8076}],7949:[[7945,769],,{837:8077}],7950:[[7944,834],,{837:8078}],7951:[[7945,834],,{837:8079}],7952:[[949,787],,{768:7954,769:7956}],7953:[[949,788],,{768:7955,769:7957}],7954:[[7952,768]],7955:[[7953,768]],7956:[[7952,769]],7957:[[7953,769]],7960:[[917,787],,{768:7962,769:7964}],7961:[[917,788],,{768:7963,769:7965}],7962:[[7960,768]],7963:[[7961,768]],7964:[[7960,769]],7965:[[7961,769]],7968:[[951,787],,{768:7970,769:7972,834:7974,837:8080}],7969:[[951,788],,{768:7971,769:7973,834:7975,837:8081}],7970:[[7968,768],,{837:8082}],7971:[[7969,768],,{837:8083}],7972:[[7968,769],,{837:8084}],7973:[[7969,769],,{837:8085}],7974:[[7968,834],,{837:8086}],7975:[[7969,834],,{837:8087}],7976:[[919,787],,{768:7978,769:7980,834:7982,837:8088}],7977:[[919,788],,{768:7979,769:7981,834:7983,837:8089}],7978:[[7976,768],,{837:8090}],7979:[[7977,768],,{837:8091}],7980:[[7976,769],,{837:8092}],7981:[[7977,769],,{837:8093}],7982:[[7976,834],,{837:8094}],7983:[[7977,834],,{837:8095}],7984:[[953,787],,{768:7986,769:7988,834:7990}],7985:[[953,788],,{768:7987,769:7989,834:7991}],7986:[[7984,768]],7987:[[7985,768]],7988:[[7984,769]],7989:[[7985,769]],7990:[[7984,834]],7991:[[7985,834]],7992:[[921,787],,{768:7994,769:7996,834:7998}],7993:[[921,788],,{768:7995,769:7997,834:7999}],7994:[[7992,768]],7995:[[7993,768]],7996:[[7992,769]],7997:[[7993,769]],7998:[[7992,834]],7999:[[7993,834]],8000:[[959,787],,{768:8002,769:8004}],8001:[[959,788],,{768:8003,769:8005}],8002:[[8000,768]],8003:[[8001,768]],8004:[[8000,769]],8005:[[8001,769]],8008:[[927,787],,{768:8010,769:8012}],8009:[[927,788],,{768:8011,769:8013}],8010:[[8008,768]],8011:[[8009,768]],8012:[[8008,769]],8013:[[8009,769]],8016:[[965,787],,{768:8018,769:8020,834:8022}],8017:[[965,788],,{768:8019,769:8021,834:8023}],8018:[[8016,768]],8019:[[8017,768]],8020:[[8016,769]],8021:[[8017,769]],8022:[[8016,834]],8023:[[8017,834]],8025:[[933,788],,{768:8027,769:8029,834:8031}],8027:[[8025,768]],8029:[[8025,769]],8031:[[8025,834]],8032:[[969,787],,{768:8034,769:8036,834:8038,837:8096}],8033:[[969,788],,{768:8035,769:8037,834:8039,837:8097}],8034:[[8032,768],,{837:8098}],8035:[[8033,768],,{837:8099}],8036:[[8032,769],,{837:8100}],8037:[[8033,769],,{837:8101}],8038:[[8032,834],,{837:8102}],8039:[[8033,834],,{837:8103}],8040:[[937,787],,{768:8042,769:8044,834:8046,837:8104}],8041:[[937,788],,{768:8043,769:8045,834:8047,837:8105}],8042:[[8040,768],,{837:8106}],8043:[[8041,768],,{837:8107}],8044:[[8040,769],,{837:8108}],8045:[[8041,769],,{837:8109}],8046:[[8040,834],,{837:8110}],8047:[[8041,834],,{837:8111}],8048:[[945,768],,{837:8114}],8049:[[940]],8050:[[949,768]],8051:[[941]],8052:[[951,768],,{837:8130}],8053:[[942]],8054:[[953,768]],8055:[[943]],8056:[[959,768]],8057:[[972]],8058:[[965,768]],8059:[[973]],8060:[[969,768],,{837:8178}],8061:[[974]],8064:[[7936,837]],8065:[[7937,837]],8066:[[7938,837]],8067:[[7939,837]],8068:[[7940,837]],8069:[[7941,837]],8070:[[7942,837]],8071:[[7943,837]],8072:[[7944,837]],8073:[[7945,837]],8074:[[7946,837]],8075:[[7947,837]],8076:[[7948,837]],8077:[[7949,837]],8078:[[7950,837]],8079:[[7951,837]],8080:[[7968,837]],8081:[[7969,837]],8082:[[7970,837]],8083:[[7971,837]],8084:[[7972,837]],8085:[[7973,837]],8086:[[7974,837]],8087:[[7975,837]],8088:[[7976,837]],8089:[[7977,837]],8090:[[7978,837]],8091:[[7979,837]],8092:[[7980,837]],8093:[[7981,837]],8094:[[7982,837]],8095:[[7983,837]],8096:[[8032,837]],8097:[[8033,837]],8098:[[8034,837]],8099:[[8035,837]],8100:[[8036,837]],8101:[[8037,837]],8102:[[8038,837]],8103:[[8039,837]],8104:[[8040,837]],8105:[[8041,837]],8106:[[8042,837]],8107:[[8043,837]],8108:[[8044,837]],8109:[[8045,837]],8110:[[8046,837]],8111:[[8047,837]],8112:[[945,774]],8113:[[945,772]],8114:[[8048,837]],8115:[[945,837]],8116:[[940,837]],8118:[[945,834],,{837:8119}],8119:[[8118,837]],8120:[[913,774]],8121:[[913,772]],8122:[[913,768]],8123:[[902]],8124:[[913,837]],8125:[[32,787],256],8126:[[953]],8127:[[32,787],256,{768:8141,769:8142,834:8143}],8128:[[32,834],256],8129:[[168,834]],8130:[[8052,837]],8131:[[951,837]],8132:[[942,837]],8134:[[951,834],,{837:8135}],8135:[[8134,837]],8136:[[917,768]],8137:[[904]],8138:[[919,768]],8139:[[905]],8140:[[919,837]],8141:[[8127,768]],8142:[[8127,769]],8143:[[8127,834]],8144:[[953,774]],8145:[[953,772]],8146:[[970,768]],8147:[[912]],8150:[[953,834]],8151:[[970,834]],8152:[[921,774]],8153:[[921,772]],8154:[[921,768]],8155:[[906]],8157:[[8190,768]],8158:[[8190,769]],8159:[[8190,834]],8160:[[965,774]],8161:[[965,772]],8162:[[971,768]],8163:[[944]],8164:[[961,787]],8165:[[961,788]],8166:[[965,834]],8167:[[971,834]],8168:[[933,774]],8169:[[933,772]],8170:[[933,768]],8171:[[910]],8172:[[929,788]],8173:[[168,768]],8174:[[901]],8175:[[96]],8178:[[8060,837]],8179:[[969,837]],8180:[[974,837]],8182:[[969,834],,{837:8183}],8183:[[8182,837]],8184:[[927,768]],8185:[[908]],8186:[[937,768]],8187:[[911]],8188:[[937,837]],8189:[[180]],8190:[[32,788],256,{768:8157,769:8158,834:8159}]},\n8192:{8192:[[8194]],8193:[[8195]],8194:[[32],256],8195:[[32],256],8196:[[32],256],8197:[[32],256],8198:[[32],256],8199:[[32],256],8200:[[32],256],8201:[[32],256],8202:[[32],256],8209:[[8208],256],8215:[[32,819],256],8228:[[46],256],8229:[[46,46],256],8230:[[46,46,46],256],8239:[[32],256],8243:[[8242,8242],256],8244:[[8242,8242,8242],256],8246:[[8245,8245],256],8247:[[8245,8245,8245],256],8252:[[33,33],256],8254:[[32,773],256],8263:[[63,63],256],8264:[[63,33],256],8265:[[33,63],256],8279:[[8242,8242,8242,8242],256],8287:[[32],256],8304:[[48],256],8305:[[105],256],8308:[[52],256],8309:[[53],256],8310:[[54],256],8311:[[55],256],8312:[[56],256],8313:[[57],256],8314:[[43],256],8315:[[8722],256],8316:[[61],256],8317:[[40],256],8318:[[41],256],8319:[[110],256],8320:[[48],256],8321:[[49],256],8322:[[50],256],8323:[[51],256],8324:[[52],256],8325:[[53],256],8326:[[54],256],8327:[[55],256],8328:[[56],256],8329:[[57],256],8330:[[43],256],8331:[[8722],256],8332:[[61],256],8333:[[40],256],8334:[[41],256],8336:[[97],256],8337:[[101],256],8338:[[111],256],8339:[[120],256],8340:[[601],256],8341:[[104],256],8342:[[107],256],8343:[[108],256],8344:[[109],256],8345:[[110],256],8346:[[112],256],8347:[[115],256],8348:[[116],256],8360:[[82,115],256],8400:[,230],8401:[,230],8402:[,1],8403:[,1],8404:[,230],8405:[,230],8406:[,230],8407:[,230],8408:[,1],8409:[,1],8410:[,1],8411:[,230],8412:[,230],8417:[,230],8421:[,1],8422:[,1],8423:[,230],8424:[,220],8425:[,230],8426:[,1],8427:[,1],8428:[,220],8429:[,220],8430:[,220],8431:[,220],8432:[,230]},\n8448:{8448:[[97,47,99],256],8449:[[97,47,115],256],8450:[[67],256],8451:[[176,67],256],8453:[[99,47,111],256],8454:[[99,47,117],256],8455:[[400],256],8457:[[176,70],256],8458:[[103],256],8459:[[72],256],8460:[[72],256],8461:[[72],256],8462:[[104],256],8463:[[295],256],8464:[[73],256],8465:[[73],256],8466:[[76],256],8467:[[108],256],8469:[[78],256],8470:[[78,111],256],8473:[[80],256],8474:[[81],256],8475:[[82],256],8476:[[82],256],8477:[[82],256],8480:[[83,77],256],8481:[[84,69,76],256],8482:[[84,77],256],8484:[[90],256],8486:[[937]],8488:[[90],256],8490:[[75]],8491:[[197]],8492:[[66],256],8493:[[67],256],8495:[[101],256],8496:[[69],256],8497:[[70],256],8499:[[77],256],8500:[[111],256],8501:[[1488],256],8502:[[1489],256],8503:[[1490],256],8504:[[1491],256],8505:[[105],256],8507:[[70,65,88],256],8508:[[960],256],8509:[[947],256],8510:[[915],256],8511:[[928],256],8512:[[8721],256],8517:[[68],256],8518:[[100],256],8519:[[101],256],8520:[[105],256],8521:[[106],256],8528:[[49,8260,55],256],8529:[[49,8260,57],256],8530:[[49,8260,49,48],256],8531:[[49,8260,51],256],8532:[[50,8260,51],256],8533:[[49,8260,53],256],8534:[[50,8260,53],256],8535:[[51,8260,53],256],8536:[[52,8260,53],256],8537:[[49,8260,54],256],8538:[[53,8260,54],256],8539:[[49,8260,56],256],8540:[[51,8260,56],256],8541:[[53,8260,56],256],8542:[[55,8260,56],256],8543:[[49,8260],256],8544:[[73],256],8545:[[73,73],256],8546:[[73,73,73],256],8547:[[73,86],256],8548:[[86],256],8549:[[86,73],256],8550:[[86,73,73],256],8551:[[86,73,73,73],256],8552:[[73,88],256],8553:[[88],256],8554:[[88,73],256],8555:[[88,73,73],256],8556:[[76],256],8557:[[67],256],8558:[[68],256],8559:[[77],256],8560:[[105],256],8561:[[105,105],256],8562:[[105,105,105],256],8563:[[105,118],256],8564:[[118],256],8565:[[118,105],256],8566:[[118,105,105],256],8567:[[118,105,105,105],256],8568:[[105,120],256],8569:[[120],256],8570:[[120,105],256],8571:[[120,105,105],256],8572:[[108],256],8573:[[99],256],8574:[[100],256],8575:[[109],256],8585:[[48,8260,51],256],8592:[,,{824:8602}],8594:[,,{824:8603}],8596:[,,{824:8622}],8602:[[8592,824]],8603:[[8594,824]],8622:[[8596,824]],8653:[[8656,824]],8654:[[8660,824]],8655:[[8658,824]],8656:[,,{824:8653}],8658:[,,{824:8655}],8660:[,,{824:8654}]},\n8704:{8707:[,,{824:8708}],8708:[[8707,824]],8712:[,,{824:8713}],8713:[[8712,824]],8715:[,,{824:8716}],8716:[[8715,824]],8739:[,,{824:8740}],8740:[[8739,824]],8741:[,,{824:8742}],8742:[[8741,824]],8748:[[8747,8747],256],8749:[[8747,8747,8747],256],8751:[[8750,8750],256],8752:[[8750,8750,8750],256],8764:[,,{824:8769}],8769:[[8764,824]],8771:[,,{824:8772}],8772:[[8771,824]],8773:[,,{824:8775}],8775:[[8773,824]],8776:[,,{824:8777}],8777:[[8776,824]],8781:[,,{824:8813}],8800:[[61,824]],8801:[,,{824:8802}],8802:[[8801,824]],8804:[,,{824:8816}],8805:[,,{824:8817}],8813:[[8781,824]],8814:[[60,824]],8815:[[62,824]],8816:[[8804,824]],8817:[[8805,824]],8818:[,,{824:8820}],8819:[,,{824:8821}],8820:[[8818,824]],8821:[[8819,824]],8822:[,,{824:8824}],8823:[,,{824:8825}],8824:[[8822,824]],8825:[[8823,824]],8826:[,,{824:8832}],8827:[,,{824:8833}],8828:[,,{824:8928}],8829:[,,{824:8929}],8832:[[8826,824]],8833:[[8827,824]],8834:[,,{824:8836}],8835:[,,{824:8837}],8836:[[8834,824]],8837:[[8835,824]],8838:[,,{824:8840}],8839:[,,{824:8841}],8840:[[8838,824]],8841:[[8839,824]],8849:[,,{824:8930}],8850:[,,{824:8931}],8866:[,,{824:8876}],8872:[,,{824:8877}],8873:[,,{824:8878}],8875:[,,{824:8879}],8876:[[8866,824]],8877:[[8872,824]],8878:[[8873,824]],8879:[[8875,824]],8882:[,,{824:8938}],8883:[,,{824:8939}],8884:[,,{824:8940}],8885:[,,{824:8941}],8928:[[8828,824]],8929:[[8829,824]],8930:[[8849,824]],8931:[[8850,824]],8938:[[8882,824]],8939:[[8883,824]],8940:[[8884,824]],8941:[[8885,824]]},\n8960:{9001:[[12296]],9002:[[12297]]},\n9216:{9312:[[49],256],9313:[[50],256],9314:[[51],256],9315:[[52],256],9316:[[53],256],9317:[[54],256],9318:[[55],256],9319:[[56],256],9320:[[57],256],9321:[[49,48],256],9322:[[49,49],256],9323:[[49,50],256],9324:[[49,51],256],9325:[[49,52],256],9326:[[49,53],256],9327:[[49,54],256],9328:[[49,55],256],9329:[[49,56],256],9330:[[49,57],256],9331:[[50,48],256],9332:[[40,49,41],256],9333:[[40,50,41],256],9334:[[40,51,41],256],9335:[[40,52,41],256],9336:[[40,53,41],256],9337:[[40,54,41],256],9338:[[40,55,41],256],9339:[[40,56,41],256],9340:[[40,57,41],256],9341:[[40,49,48,41],256],9342:[[40,49,49,41],256],9343:[[40,49,50,41],256],9344:[[40,49,51,41],256],9345:[[40,49,52,41],256],9346:[[40,49,53,41],256],9347:[[40,49,54,41],256],9348:[[40,49,55,41],256],9349:[[40,49,56,41],256],9350:[[40,49,57,41],256],9351:[[40,50,48,41],256],9352:[[49,46],256],9353:[[50,46],256],9354:[[51,46],256],9355:[[52,46],256],9356:[[53,46],256],9357:[[54,46],256],9358:[[55,46],256],9359:[[56,46],256],9360:[[57,46],256],9361:[[49,48,46],256],9362:[[49,49,46],256],9363:[[49,50,46],256],9364:[[49,51,46],256],9365:[[49,52,46],256],9366:[[49,53,46],256],9367:[[49,54,46],256],9368:[[49,55,46],256],9369:[[49,56,46],256],9370:[[49,57,46],256],9371:[[50,48,46],256],9372:[[40,97,41],256],9373:[[40,98,41],256],9374:[[40,99,41],256],9375:[[40,100,41],256],9376:[[40,101,41],256],9377:[[40,102,41],256],9378:[[40,103,41],256],9379:[[40,104,41],256],9380:[[40,105,41],256],9381:[[40,106,41],256],9382:[[40,107,41],256],9383:[[40,108,41],256],9384:[[40,109,41],256],9385:[[40,110,41],256],9386:[[40,111,41],256],9387:[[40,112,41],256],9388:[[40,113,41],256],9389:[[40,114,41],256],9390:[[40,115,41],256],9391:[[40,116,41],256],9392:[[40,117,41],256],9393:[[40,118,41],256],9394:[[40,119,41],256],9395:[[40,120,41],256],9396:[[40,121,41],256],9397:[[40,122,41],256],9398:[[65],256],9399:[[66],256],9400:[[67],256],9401:[[68],256],9402:[[69],256],9403:[[70],256],9404:[[71],256],9405:[[72],256],9406:[[73],256],9407:[[74],256],9408:[[75],256],9409:[[76],256],9410:[[77],256],9411:[[78],256],9412:[[79],256],9413:[[80],256],9414:[[81],256],9415:[[82],256],9416:[[83],256],9417:[[84],256],9418:[[85],256],9419:[[86],256],9420:[[87],256],9421:[[88],256],9422:[[89],256],9423:[[90],256],9424:[[97],256],9425:[[98],256],9426:[[99],256],9427:[[100],256],9428:[[101],256],9429:[[102],256],9430:[[103],256],9431:[[104],256],9432:[[105],256],9433:[[106],256],9434:[[107],256],9435:[[108],256],9436:[[109],256],9437:[[110],256],9438:[[111],256],9439:[[112],256],9440:[[113],256],9441:[[114],256],9442:[[115],256],9443:[[116],256],9444:[[117],256],9445:[[118],256],9446:[[119],256],9447:[[120],256],9448:[[121],256],9449:[[122],256],9450:[[48],256]},\n10752:{10764:[[8747,8747,8747,8747],256],10868:[[58,58,61],256],10869:[[61,61],256],10870:[[61,61,61],256],10972:[[10973,824],512]},\n11264:{11388:[[106],256],11389:[[86],256],11503:[,230],11504:[,230],11505:[,230]},\n11520:{11631:[[11617],256],11647:[,9],11744:[,230],11745:[,230],11746:[,230],11747:[,230],11748:[,230],11749:[,230],11750:[,230],11751:[,230],11752:[,230],11753:[,230],11754:[,230],11755:[,230],11756:[,230],11757:[,230],11758:[,230],11759:[,230],11760:[,230],11761:[,230],11762:[,230],11763:[,230],11764:[,230],11765:[,230],11766:[,230],11767:[,230],11768:[,230],11769:[,230],11770:[,230],11771:[,230],11772:[,230],11773:[,230],11774:[,230],11775:[,230]},\n11776:{11935:[[27597],256],12019:[[40863],256]},\n12032:{12032:[[19968],256],12033:[[20008],256],12034:[[20022],256],12035:[[20031],256],12036:[[20057],256],12037:[[20101],256],12038:[[20108],256],12039:[[20128],256],12040:[[20154],256],12041:[[20799],256],12042:[[20837],256],12043:[[20843],256],12044:[[20866],256],12045:[[20886],256],12046:[[20907],256],12047:[[20960],256],12048:[[20981],256],12049:[[20992],256],12050:[[21147],256],12051:[[21241],256],12052:[[21269],256],12053:[[21274],256],12054:[[21304],256],12055:[[21313],256],12056:[[21340],256],12057:[[21353],256],12058:[[21378],256],12059:[[21430],256],12060:[[21448],256],12061:[[21475],256],12062:[[22231],256],12063:[[22303],256],12064:[[22763],256],12065:[[22786],256],12066:[[22794],256],12067:[[22805],256],12068:[[22823],256],12069:[[22899],256],12070:[[23376],256],12071:[[23424],256],12072:[[23544],256],12073:[[23567],256],12074:[[23586],256],12075:[[23608],256],12076:[[23662],256],12077:[[23665],256],12078:[[24027],256],12079:[[24037],256],12080:[[24049],256],12081:[[24062],256],12082:[[24178],256],12083:[[24186],256],12084:[[24191],256],12085:[[24308],256],12086:[[24318],256],12087:[[24331],256],12088:[[24339],256],12089:[[24400],256],12090:[[24417],256],12091:[[24435],256],12092:[[24515],256],12093:[[25096],256],12094:[[25142],256],12095:[[25163],256],12096:[[25903],256],12097:[[25908],256],12098:[[25991],256],12099:[[26007],256],12100:[[26020],256],12101:[[26041],256],12102:[[26080],256],12103:[[26085],256],12104:[[26352],256],12105:[[26376],256],12106:[[26408],256],12107:[[27424],256],12108:[[27490],256],12109:[[27513],256],12110:[[27571],256],12111:[[27595],256],12112:[[27604],256],12113:[[27611],256],12114:[[27663],256],12115:[[27668],256],12116:[[27700],256],12117:[[28779],256],12118:[[29226],256],12119:[[29238],256],12120:[[29243],256],12121:[[29247],256],12122:[[29255],256],12123:[[29273],256],12124:[[29275],256],12125:[[29356],256],12126:[[29572],256],12127:[[29577],256],12128:[[29916],256],12129:[[29926],256],12130:[[29976],256],12131:[[29983],256],12132:[[29992],256],12133:[[30000],256],12134:[[30091],256],12135:[[30098],256],12136:[[30326],256],12137:[[30333],256],12138:[[30382],256],12139:[[30399],256],12140:[[30446],256],12141:[[30683],256],12142:[[30690],256],12143:[[30707],256],12144:[[31034],256],12145:[[31160],256],12146:[[31166],256],12147:[[31348],256],12148:[[31435],256],12149:[[31481],256],12150:[[31859],256],12151:[[31992],256],12152:[[32566],256],12153:[[32593],256],12154:[[32650],256],12155:[[32701],256],12156:[[32769],256],12157:[[32780],256],12158:[[32786],256],12159:[[32819],256],12160:[[32895],256],12161:[[32905],256],12162:[[33251],256],12163:[[33258],256],12164:[[33267],256],12165:[[33276],256],12166:[[33292],256],12167:[[33307],256],12168:[[33311],256],12169:[[33390],256],12170:[[33394],256],12171:[[33400],256],12172:[[34381],256],12173:[[34411],256],12174:[[34880],256],12175:[[34892],256],12176:[[34915],256],12177:[[35198],256],12178:[[35211],256],12179:[[35282],256],12180:[[35328],256],12181:[[35895],256],12182:[[35910],256],12183:[[35925],256],12184:[[35960],256],12185:[[35997],256],12186:[[36196],256],12187:[[36208],256],12188:[[36275],256],12189:[[36523],256],12190:[[36554],256],12191:[[36763],256],12192:[[36784],256],12193:[[36789],256],12194:[[37009],256],12195:[[37193],256],12196:[[37318],256],12197:[[37324],256],12198:[[37329],256],12199:[[38263],256],12200:[[38272],256],12201:[[38428],256],12202:[[38582],256],12203:[[38585],256],12204:[[38632],256],12205:[[38737],256],12206:[[38750],256],12207:[[38754],256],12208:[[38761],256],12209:[[38859],256],12210:[[38893],256],12211:[[38899],256],12212:[[38913],256],12213:[[39080],256],12214:[[39131],256],12215:[[39135],256],12216:[[39318],256],12217:[[39321],256],12218:[[39340],256],12219:[[39592],256],12220:[[39640],256],12221:[[39647],256],12222:[[39717],256],12223:[[39727],256],12224:[[39730],256],12225:[[39740],256],12226:[[39770],256],12227:[[40165],256],12228:[[40565],256],12229:[[40575],256],12230:[[40613],256],12231:[[40635],256],12232:[[40643],256],12233:[[40653],256],12234:[[40657],256],12235:[[40697],256],12236:[[40701],256],12237:[[40718],256],12238:[[40723],256],12239:[[40736],256],12240:[[40763],256],12241:[[40778],256],12242:[[40786],256],12243:[[40845],256],12244:[[40860],256],12245:[[40864],256]},\n12288:{12288:[[32],256],12330:[,218],12331:[,228],12332:[,232],12333:[,222],12334:[,224],12335:[,224],12342:[[12306],256],12344:[[21313],256],12345:[[21316],256],12346:[[21317],256],12358:[,,{12441:12436}],12363:[,,{12441:12364}],12364:[[12363,12441]],12365:[,,{12441:12366}],12366:[[12365,12441]],12367:[,,{12441:12368}],12368:[[12367,12441]],12369:[,,{12441:12370}],12370:[[12369,12441]],12371:[,,{12441:12372}],12372:[[12371,12441]],12373:[,,{12441:12374}],12374:[[12373,12441]],12375:[,,{12441:12376}],12376:[[12375,12441]],12377:[,,{12441:12378}],12378:[[12377,12441]],12379:[,,{12441:12380}],12380:[[12379,12441]],12381:[,,{12441:12382}],12382:[[12381,12441]],12383:[,,{12441:12384}],12384:[[12383,12441]],12385:[,,{12441:12386}],12386:[[12385,12441]],12388:[,,{12441:12389}],12389:[[12388,12441]],12390:[,,{12441:12391}],12391:[[12390,12441]],12392:[,,{12441:12393}],12393:[[12392,12441]],12399:[,,{12441:12400,12442:12401}],12400:[[12399,12441]],12401:[[12399,12442]],12402:[,,{12441:12403,12442:12404}],12403:[[12402,12441]],12404:[[12402,12442]],12405:[,,{12441:12406,12442:12407}],12406:[[12405,12441]],12407:[[12405,12442]],12408:[,,{12441:12409,12442:12410}],12409:[[12408,12441]],12410:[[12408,12442]],12411:[,,{12441:12412,12442:12413}],12412:[[12411,12441]],12413:[[12411,12442]],12436:[[12358,12441]],12441:[,8],12442:[,8],12443:[[32,12441],256],12444:[[32,12442],256],12445:[,,{12441:12446}],12446:[[12445,12441]],12447:[[12424,12426],256],12454:[,,{12441:12532}],12459:[,,{12441:12460}],12460:[[12459,12441]],12461:[,,{12441:12462}],12462:[[12461,12441]],12463:[,,{12441:12464}],12464:[[12463,12441]],12465:[,,{12441:12466}],12466:[[12465,12441]],12467:[,,{12441:12468}],12468:[[12467,12441]],12469:[,,{12441:12470}],12470:[[12469,12441]],12471:[,,{12441:12472}],12472:[[12471,12441]],12473:[,,{12441:12474}],12474:[[12473,12441]],12475:[,,{12441:12476}],12476:[[12475,12441]],12477:[,,{12441:12478}],12478:[[12477,12441]],12479:[,,{12441:12480}],12480:[[12479,12441]],12481:[,,{12441:12482}],12482:[[12481,12441]],12484:[,,{12441:12485}],12485:[[12484,12441]],12486:[,,{12441:12487}],12487:[[12486,12441]],12488:[,,{12441:12489}],12489:[[12488,12441]],12495:[,,{12441:12496,12442:12497}],12496:[[12495,12441]],12497:[[12495,12442]],12498:[,,{12441:12499,12442:12500}],12499:[[12498,12441]],12500:[[12498,12442]],12501:[,,{12441:12502,12442:12503}],12502:[[12501,12441]],12503:[[12501,12442]],12504:[,,{12441:12505,12442:12506}],12505:[[12504,12441]],12506:[[12504,12442]],12507:[,,{12441:12508,12442:12509}],12508:[[12507,12441]],12509:[[12507,12442]],12527:[,,{12441:12535}],12528:[,,{12441:12536}],12529:[,,{12441:12537}],12530:[,,{12441:12538}],12532:[[12454,12441]],12535:[[12527,12441]],12536:[[12528,12441]],12537:[[12529,12441]],12538:[[12530,12441]],12541:[,,{12441:12542}],12542:[[12541,12441]],12543:[[12467,12488],256]},\n12544:{12593:[[4352],256],12594:[[4353],256],12595:[[4522],256],12596:[[4354],256],12597:[[4524],256],12598:[[4525],256],12599:[[4355],256],12600:[[4356],256],12601:[[4357],256],12602:[[4528],256],12603:[[4529],256],12604:[[4530],256],12605:[[4531],256],12606:[[4532],256],12607:[[4533],256],12608:[[4378],256],12609:[[4358],256],12610:[[4359],256],12611:[[4360],256],12612:[[4385],256],12613:[[4361],256],12614:[[4362],256],12615:[[4363],256],12616:[[4364],256],12617:[[4365],256],12618:[[4366],256],12619:[[4367],256],12620:[[4368],256],12621:[[4369],256],12622:[[4370],256],12623:[[4449],256],12624:[[4450],256],12625:[[4451],256],12626:[[4452],256],12627:[[4453],256],12628:[[4454],256],12629:[[4455],256],12630:[[4456],256],12631:[[4457],256],12632:[[4458],256],12633:[[4459],256],12634:[[4460],256],12635:[[4461],256],12636:[[4462],256],12637:[[4463],256],12638:[[4464],256],12639:[[4465],256],12640:[[4466],256],12641:[[4467],256],12642:[[4468],256],12643:[[4469],256],12644:[[4448],256],12645:[[4372],256],12646:[[4373],256],12647:[[4551],256],12648:[[4552],256],12649:[[4556],256],12650:[[4558],256],12651:[[4563],256],12652:[[4567],256],12653:[[4569],256],12654:[[4380],256],12655:[[4573],256],12656:[[4575],256],12657:[[4381],256],12658:[[4382],256],12659:[[4384],256],12660:[[4386],256],12661:[[4387],256],12662:[[4391],256],12663:[[4393],256],12664:[[4395],256],12665:[[4396],256],12666:[[4397],256],12667:[[4398],256],12668:[[4399],256],12669:[[4402],256],12670:[[4406],256],12671:[[4416],256],12672:[[4423],256],12673:[[4428],256],12674:[[4593],256],12675:[[4594],256],12676:[[4439],256],12677:[[4440],256],12678:[[4441],256],12679:[[4484],256],12680:[[4485],256],12681:[[4488],256],12682:[[4497],256],12683:[[4498],256],12684:[[4500],256],12685:[[4510],256],12686:[[4513],256],12690:[[19968],256],12691:[[20108],256],12692:[[19977],256],12693:[[22235],256],12694:[[19978],256],12695:[[20013],256],12696:[[19979],256],12697:[[30002],256],12698:[[20057],256],12699:[[19993],256],12700:[[19969],256],12701:[[22825],256],12702:[[22320],256],12703:[[20154],256]},\n12800:{12800:[[40,4352,41],256],12801:[[40,4354,41],256],12802:[[40,4355,41],256],12803:[[40,4357,41],256],12804:[[40,4358,41],256],12805:[[40,4359,41],256],12806:[[40,4361,41],256],12807:[[40,4363,41],256],12808:[[40,4364,41],256],12809:[[40,4366,41],256],12810:[[40,4367,41],256],12811:[[40,4368,41],256],12812:[[40,4369,41],256],12813:[[40,4370,41],256],12814:[[40,4352,4449,41],256],12815:[[40,4354,4449,41],256],12816:[[40,4355,4449,41],256],12817:[[40,4357,4449,41],256],12818:[[40,4358,4449,41],256],12819:[[40,4359,4449,41],256],12820:[[40,4361,4449,41],256],12821:[[40,4363,4449,41],256],12822:[[40,4364,4449,41],256],12823:[[40,4366,4449,41],256],12824:[[40,4367,4449,41],256],12825:[[40,4368,4449,41],256],12826:[[40,4369,4449,41],256],12827:[[40,4370,4449,41],256],12828:[[40,4364,4462,41],256],12829:[[40,4363,4457,4364,4453,4523,41],256],12830:[[40,4363,4457,4370,4462,41],256],12832:[[40,19968,41],256],12833:[[40,20108,41],256],12834:[[40,19977,41],256],12835:[[40,22235,41],256],12836:[[40,20116,41],256],12837:[[40,20845,41],256],12838:[[40,19971,41],256],12839:[[40,20843,41],256],12840:[[40,20061,41],256],12841:[[40,21313,41],256],12842:[[40,26376,41],256],12843:[[40,28779,41],256],12844:[[40,27700,41],256],12845:[[40,26408,41],256],12846:[[40,37329,41],256],12847:[[40,22303,41],256],12848:[[40,26085,41],256],12849:[[40,26666,41],256],12850:[[40,26377,41],256],12851:[[40,31038,41],256],12852:[[40,21517,41],256],12853:[[40,29305,41],256],12854:[[40,36001,41],256],12855:[[40,31069,41],256],12856:[[40,21172,41],256],12857:[[40,20195,41],256],12858:[[40,21628,41],256],12859:[[40,23398,41],256],12860:[[40,30435,41],256],12861:[[40,20225,41],256],12862:[[40,36039,41],256],12863:[[40,21332,41],256],12864:[[40,31085,41],256],12865:[[40,20241,41],256],12866:[[40,33258,41],256],12867:[[40,33267,41],256],12868:[[21839],256],12869:[[24188],256],12870:[[25991],256],12871:[[31631],256],12880:[[80,84,69],256],12881:[[50,49],256],12882:[[50,50],256],12883:[[50,51],256],12884:[[50,52],256],12885:[[50,53],256],12886:[[50,54],256],12887:[[50,55],256],12888:[[50,56],256],12889:[[50,57],256],12890:[[51,48],256],12891:[[51,49],256],12892:[[51,50],256],12893:[[51,51],256],12894:[[51,52],256],12895:[[51,53],256],12896:[[4352],256],12897:[[4354],256],12898:[[4355],256],12899:[[4357],256],12900:[[4358],256],12901:[[4359],256],12902:[[4361],256],12903:[[4363],256],12904:[[4364],256],12905:[[4366],256],12906:[[4367],256],12907:[[4368],256],12908:[[4369],256],12909:[[4370],256],12910:[[4352,4449],256],12911:[[4354,4449],256],12912:[[4355,4449],256],12913:[[4357,4449],256],12914:[[4358,4449],256],12915:[[4359,4449],256],12916:[[4361,4449],256],12917:[[4363,4449],256],12918:[[4364,4449],256],12919:[[4366,4449],256],12920:[[4367,4449],256],12921:[[4368,4449],256],12922:[[4369,4449],256],12923:[[4370,4449],256],12924:[[4366,4449,4535,4352,4457],256],12925:[[4364,4462,4363,4468],256],12926:[[4363,4462],256],12928:[[19968],256],12929:[[20108],256],12930:[[19977],256],12931:[[22235],256],12932:[[20116],256],12933:[[20845],256],12934:[[19971],256],12935:[[20843],256],12936:[[20061],256],12937:[[21313],256],12938:[[26376],256],12939:[[28779],256],12940:[[27700],256],12941:[[26408],256],12942:[[37329],256],12943:[[22303],256],12944:[[26085],256],12945:[[26666],256],12946:[[26377],256],12947:[[31038],256],12948:[[21517],256],12949:[[29305],256],12950:[[36001],256],12951:[[31069],256],12952:[[21172],256],12953:[[31192],256],12954:[[30007],256],12955:[[22899],256],12956:[[36969],256],12957:[[20778],256],12958:[[21360],256],12959:[[27880],256],12960:[[38917],256],12961:[[20241],256],12962:[[20889],256],12963:[[27491],256],12964:[[19978],256],12965:[[20013],256],12966:[[19979],256],12967:[[24038],256],12968:[[21491],256],12969:[[21307],256],12970:[[23447],256],12971:[[23398],256],12972:[[30435],256],12973:[[20225],256],12974:[[36039],256],12975:[[21332],256],12976:[[22812],256],12977:[[51,54],256],12978:[[51,55],256],12979:[[51,56],256],12980:[[51,57],256],12981:[[52,48],256],12982:[[52,49],256],12983:[[52,50],256],12984:[[52,51],256],12985:[[52,52],256],12986:[[52,53],256],12987:[[52,54],256],12988:[[52,55],256],12989:[[52,56],256],12990:[[52,57],256],12991:[[53,48],256],12992:[[49,26376],256],12993:[[50,26376],256],12994:[[51,26376],256],12995:[[52,26376],256],12996:[[53,26376],256],12997:[[54,26376],256],12998:[[55,26376],256],12999:[[56,26376],256],13000:[[57,26376],256],13001:[[49,48,26376],256],13002:[[49,49,26376],256],13003:[[49,50,26376],256],13004:[[72,103],256],13005:[[101,114,103],256],13006:[[101,86],256],13007:[[76,84,68],256],13008:[[12450],256],13009:[[12452],256],13010:[[12454],256],13011:[[12456],256],13012:[[12458],256],13013:[[12459],256],13014:[[12461],256],13015:[[12463],256],13016:[[12465],256],13017:[[12467],256],13018:[[12469],256],13019:[[12471],256],13020:[[12473],256],13021:[[12475],256],13022:[[12477],256],13023:[[12479],256],13024:[[12481],256],13025:[[12484],256],13026:[[12486],256],13027:[[12488],256],13028:[[12490],256],13029:[[12491],256],13030:[[12492],256],13031:[[12493],256],13032:[[12494],256],13033:[[12495],256],13034:[[12498],256],13035:[[12501],256],13036:[[12504],256],13037:[[12507],256],13038:[[12510],256],13039:[[12511],256],13040:[[12512],256],13041:[[12513],256],13042:[[12514],256],13043:[[12516],256],13044:[[12518],256],13045:[[12520],256],13046:[[12521],256],13047:[[12522],256],13048:[[12523],256],13049:[[12524],256],13050:[[12525],256],13051:[[12527],256],13052:[[12528],256],13053:[[12529],256],13054:[[12530],256]},\n13056:{13056:[[12450,12497,12540,12488],256],13057:[[12450,12523,12501,12449],256],13058:[[12450,12531,12506,12450],256],13059:[[12450,12540,12523],256],13060:[[12452,12491,12531,12464],256],13061:[[12452,12531,12481],256],13062:[[12454,12457,12531],256],13063:[[12456,12473,12463,12540,12489],256],13064:[[12456,12540,12459,12540],256],13065:[[12458,12531,12473],256],13066:[[12458,12540,12512],256],13067:[[12459,12452,12522],256],13068:[[12459,12521,12483,12488],256],13069:[[12459,12525,12522,12540],256],13070:[[12460,12525,12531],256],13071:[[12460,12531,12510],256],13072:[[12462,12460],256],13073:[[12462,12491,12540],256],13074:[[12461,12517,12522,12540],256],13075:[[12462,12523,12480,12540],256],13076:[[12461,12525],256],13077:[[12461,12525,12464,12521,12512],256],13078:[[12461,12525,12513,12540,12488,12523],256],13079:[[12461,12525,12527,12483,12488],256],13080:[[12464,12521,12512],256],13081:[[12464,12521,12512,12488,12531],256],13082:[[12463,12523,12476,12452,12525],256],13083:[[12463,12525,12540,12493],256],13084:[[12465,12540,12473],256],13085:[[12467,12523,12490],256],13086:[[12467,12540,12509],256],13087:[[12469,12452,12463,12523],256],13088:[[12469,12531,12481,12540,12512],256],13089:[[12471,12522,12531,12464],256],13090:[[12475,12531,12481],256],13091:[[12475,12531,12488],256],13092:[[12480,12540,12473],256],13093:[[12487,12471],256],13094:[[12489,12523],256],13095:[[12488,12531],256],13096:[[12490,12494],256],13097:[[12494,12483,12488],256],13098:[[12495,12452,12484],256],13099:[[12497,12540,12475,12531,12488],256],13100:[[12497,12540,12484],256],13101:[[12496,12540,12524,12523],256],13102:[[12500,12450,12473,12488,12523],256],13103:[[12500,12463,12523],256],13104:[[12500,12467],256],13105:[[12499,12523],256],13106:[[12501,12449,12521,12483,12489],256],13107:[[12501,12451,12540,12488],256],13108:[[12502,12483,12471,12455,12523],256],13109:[[12501,12521,12531],256],13110:[[12504,12463,12479,12540,12523],256],13111:[[12506,12477],256],13112:[[12506,12491,12498],256],13113:[[12504,12523,12484],256],13114:[[12506,12531,12473],256],13115:[[12506,12540,12472],256],13116:[[12505,12540,12479],256],13117:[[12509,12452,12531,12488],256],13118:[[12508,12523,12488],256],13119:[[12507,12531],256],13120:[[12509,12531,12489],256],13121:[[12507,12540,12523],256],13122:[[12507,12540,12531],256],13123:[[12510,12452,12463,12525],256],13124:[[12510,12452,12523],256],13125:[[12510,12483,12495],256],13126:[[12510,12523,12463],256],13127:[[12510,12531,12471,12519,12531],256],13128:[[12511,12463,12525,12531],256],13129:[[12511,12522],256],13130:[[12511,12522,12496,12540,12523],256],13131:[[12513,12460],256],13132:[[12513,12460,12488,12531],256],13133:[[12513,12540,12488,12523],256],13134:[[12516,12540,12489],256],13135:[[12516,12540,12523],256],13136:[[12518,12450,12531],256],13137:[[12522,12483,12488,12523],256],13138:[[12522,12521],256],13139:[[12523,12500,12540],256],13140:[[12523,12540,12502,12523],256],13141:[[12524,12512],256],13142:[[12524,12531,12488,12466,12531],256],13143:[[12527,12483,12488],256],13144:[[48,28857],256],13145:[[49,28857],256],13146:[[50,28857],256],13147:[[51,28857],256],13148:[[52,28857],256],13149:[[53,28857],256],13150:[[54,28857],256],13151:[[55,28857],256],13152:[[56,28857],256],13153:[[57,28857],256],13154:[[49,48,28857],256],13155:[[49,49,28857],256],13156:[[49,50,28857],256],13157:[[49,51,28857],256],13158:[[49,52,28857],256],13159:[[49,53,28857],256],13160:[[49,54,28857],256],13161:[[49,55,28857],256],13162:[[49,56,28857],256],13163:[[49,57,28857],256],13164:[[50,48,28857],256],13165:[[50,49,28857],256],13166:[[50,50,28857],256],13167:[[50,51,28857],256],13168:[[50,52,28857],256],13169:[[104,80,97],256],13170:[[100,97],256],13171:[[65,85],256],13172:[[98,97,114],256],13173:[[111,86],256],13174:[[112,99],256],13175:[[100,109],256],13176:[[100,109,178],256],13177:[[100,109,179],256],13178:[[73,85],256],13179:[[24179,25104],256],13180:[[26157,21644],256],13181:[[22823,27491],256],13182:[[26126,27835],256],13183:[[26666,24335,20250,31038],256],13184:[[112,65],256],13185:[[110,65],256],13186:[[956,65],256],13187:[[109,65],256],13188:[[107,65],256],13189:[[75,66],256],13190:[[77,66],256],13191:[[71,66],256],13192:[[99,97,108],256],13193:[[107,99,97,108],256],13194:[[112,70],256],13195:[[110,70],256],13196:[[956,70],256],13197:[[956,103],256],13198:[[109,103],256],13199:[[107,103],256],13200:[[72,122],256],13201:[[107,72,122],256],13202:[[77,72,122],256],13203:[[71,72,122],256],13204:[[84,72,122],256],13205:[[956,8467],256],13206:[[109,8467],256],13207:[[100,8467],256],13208:[[107,8467],256],13209:[[102,109],256],13210:[[110,109],256],13211:[[956,109],256],13212:[[109,109],256],13213:[[99,109],256],13214:[[107,109],256],13215:[[109,109,178],256],13216:[[99,109,178],256],13217:[[109,178],256],13218:[[107,109,178],256],13219:[[109,109,179],256],13220:[[99,109,179],256],13221:[[109,179],256],13222:[[107,109,179],256],13223:[[109,8725,115],256],13224:[[109,8725,115,178],256],13225:[[80,97],256],13226:[[107,80,97],256],13227:[[77,80,97],256],13228:[[71,80,97],256],13229:[[114,97,100],256],13230:[[114,97,100,8725,115],256],13231:[[114,97,100,8725,115,178],256],13232:[[112,115],256],13233:[[110,115],256],13234:[[956,115],256],13235:[[109,115],256],13236:[[112,86],256],13237:[[110,86],256],13238:[[956,86],256],13239:[[109,86],256],13240:[[107,86],256],13241:[[77,86],256],13242:[[112,87],256],13243:[[110,87],256],13244:[[956,87],256],13245:[[109,87],256],13246:[[107,87],256],13247:[[77,87],256],13248:[[107,937],256],13249:[[77,937],256],13250:[[97,46,109,46],256],13251:[[66,113],256],13252:[[99,99],256],13253:[[99,100],256],13254:[[67,8725,107,103],256],13255:[[67,111,46],256],13256:[[100,66],256],13257:[[71,121],256],13258:[[104,97],256],13259:[[72,80],256],13260:[[105,110],256],13261:[[75,75],256],13262:[[75,77],256],13263:[[107,116],256],13264:[[108,109],256],13265:[[108,110],256],13266:[[108,111,103],256],13267:[[108,120],256],13268:[[109,98],256],13269:[[109,105,108],256],13270:[[109,111,108],256],13271:[[80,72],256],13272:[[112,46,109,46],256],13273:[[80,80,77],256],13274:[[80,82],256],13275:[[115,114],256],13276:[[83,118],256],13277:[[87,98],256],13278:[[86,8725,109],256],13279:[[65,8725,109],256],13280:[[49,26085],256],13281:[[50,26085],256],13282:[[51,26085],256],13283:[[52,26085],256],13284:[[53,26085],256],13285:[[54,26085],256],13286:[[55,26085],256],13287:[[56,26085],256],13288:[[57,26085],256],13289:[[49,48,26085],256],13290:[[49,49,26085],256],13291:[[49,50,26085],256],13292:[[49,51,26085],256],13293:[[49,52,26085],256],13294:[[49,53,26085],256],13295:[[49,54,26085],256],13296:[[49,55,26085],256],13297:[[49,56,26085],256],13298:[[49,57,26085],256],13299:[[50,48,26085],256],13300:[[50,49,26085],256],13301:[[50,50,26085],256],13302:[[50,51,26085],256],13303:[[50,52,26085],256],13304:[[50,53,26085],256],13305:[[50,54,26085],256],13306:[[50,55,26085],256],13307:[[50,56,26085],256],13308:[[50,57,26085],256],13309:[[51,48,26085],256],13310:[[51,49,26085],256],13311:[[103,97,108],256]},\n27136:{92912:[,1],92913:[,1],92914:[,1],92915:[,1],92916:[,1]},\n27392:{92976:[,230],92977:[,230],92978:[,230],92979:[,230],92980:[,230],92981:[,230],92982:[,230]},\n42496:{42607:[,230],42612:[,230],42613:[,230],42614:[,230],42615:[,230],42616:[,230],42617:[,230],42618:[,230],42619:[,230],42620:[,230],42621:[,230],42652:[[1098],256],42653:[[1100],256],42655:[,230],42736:[,230],42737:[,230]},\n42752:{42864:[[42863],256],43000:[[294],256],43001:[[339],256]},\n43008:{43014:[,9],43204:[,9],43232:[,230],43233:[,230],43234:[,230],43235:[,230],43236:[,230],43237:[,230],43238:[,230],43239:[,230],43240:[,230],43241:[,230],43242:[,230],43243:[,230],43244:[,230],43245:[,230],43246:[,230],43247:[,230],43248:[,230],43249:[,230]},\n43264:{43307:[,220],43308:[,220],43309:[,220],43347:[,9],43443:[,7],43456:[,9]},\n43520:{43696:[,230],43698:[,230],43699:[,230],43700:[,220],43703:[,230],43704:[,230],43710:[,230],43711:[,230],43713:[,230],43766:[,9]},\n43776:{43868:[[42791],256],43869:[[43831],256],43870:[[619],256],43871:[[43858],256],44013:[,9]},\n48128:{113822:[,1]},\n53504:{119134:[[119127,119141],512],119135:[[119128,119141],512],119136:[[119135,119150],512],119137:[[119135,119151],512],119138:[[119135,119152],512],119139:[[119135,119153],512],119140:[[119135,119154],512],119141:[,216],119142:[,216],119143:[,1],119144:[,1],119145:[,1],119149:[,226],119150:[,216],119151:[,216],119152:[,216],119153:[,216],119154:[,216],119163:[,220],119164:[,220],119165:[,220],119166:[,220],119167:[,220],119168:[,220],119169:[,220],119170:[,220],119173:[,230],119174:[,230],119175:[,230],119176:[,230],119177:[,230],119178:[,220],119179:[,220],119210:[,230],119211:[,230],119212:[,230],119213:[,230],119227:[[119225,119141],512],119228:[[119226,119141],512],119229:[[119227,119150],512],119230:[[119228,119150],512],119231:[[119227,119151],512],119232:[[119228,119151],512]},\n53760:{119362:[,230],119363:[,230],119364:[,230]},\n54272:{119808:[[65],256],119809:[[66],256],119810:[[67],256],119811:[[68],256],119812:[[69],256],119813:[[70],256],119814:[[71],256],119815:[[72],256],119816:[[73],256],119817:[[74],256],119818:[[75],256],119819:[[76],256],119820:[[77],256],119821:[[78],256],119822:[[79],256],119823:[[80],256],119824:[[81],256],119825:[[82],256],119826:[[83],256],119827:[[84],256],119828:[[85],256],119829:[[86],256],119830:[[87],256],119831:[[88],256],119832:[[89],256],119833:[[90],256],119834:[[97],256],119835:[[98],256],119836:[[99],256],119837:[[100],256],119838:[[101],256],119839:[[102],256],119840:[[103],256],119841:[[104],256],119842:[[105],256],119843:[[106],256],119844:[[107],256],119845:[[108],256],119846:[[109],256],119847:[[110],256],119848:[[111],256],119849:[[112],256],119850:[[113],256],119851:[[114],256],119852:[[115],256],119853:[[116],256],119854:[[117],256],119855:[[118],256],119856:[[119],256],119857:[[120],256],119858:[[121],256],119859:[[122],256],119860:[[65],256],119861:[[66],256],119862:[[67],256],119863:[[68],256],119864:[[69],256],119865:[[70],256],119866:[[71],256],119867:[[72],256],119868:[[73],256],119869:[[74],256],119870:[[75],256],119871:[[76],256],119872:[[77],256],119873:[[78],256],119874:[[79],256],119875:[[80],256],119876:[[81],256],119877:[[82],256],119878:[[83],256],119879:[[84],256],119880:[[85],256],119881:[[86],256],119882:[[87],256],119883:[[88],256],119884:[[89],256],119885:[[90],256],119886:[[97],256],119887:[[98],256],119888:[[99],256],119889:[[100],256],119890:[[101],256],119891:[[102],256],119892:[[103],256],119894:[[105],256],119895:[[106],256],119896:[[107],256],119897:[[108],256],119898:[[109],256],119899:[[110],256],119900:[[111],256],119901:[[112],256],119902:[[113],256],119903:[[114],256],119904:[[115],256],119905:[[116],256],119906:[[117],256],119907:[[118],256],119908:[[119],256],119909:[[120],256],119910:[[121],256],119911:[[122],256],119912:[[65],256],119913:[[66],256],119914:[[67],256],119915:[[68],256],119916:[[69],256],119917:[[70],256],119918:[[71],256],119919:[[72],256],119920:[[73],256],119921:[[74],256],119922:[[75],256],119923:[[76],256],119924:[[77],256],119925:[[78],256],119926:[[79],256],119927:[[80],256],119928:[[81],256],119929:[[82],256],119930:[[83],256],119931:[[84],256],119932:[[85],256],119933:[[86],256],119934:[[87],256],119935:[[88],256],119936:[[89],256],119937:[[90],256],119938:[[97],256],119939:[[98],256],119940:[[99],256],119941:[[100],256],119942:[[101],256],119943:[[102],256],119944:[[103],256],119945:[[104],256],119946:[[105],256],119947:[[106],256],119948:[[107],256],119949:[[108],256],119950:[[109],256],119951:[[110],256],119952:[[111],256],119953:[[112],256],119954:[[113],256],119955:[[114],256],119956:[[115],256],119957:[[116],256],119958:[[117],256],119959:[[118],256],119960:[[119],256],119961:[[120],256],119962:[[121],256],119963:[[122],256],119964:[[65],256],119966:[[67],256],119967:[[68],256],119970:[[71],256],119973:[[74],256],119974:[[75],256],119977:[[78],256],119978:[[79],256],119979:[[80],256],119980:[[81],256],119982:[[83],256],119983:[[84],256],119984:[[85],256],119985:[[86],256],119986:[[87],256],119987:[[88],256],119988:[[89],256],119989:[[90],256],119990:[[97],256],119991:[[98],256],119992:[[99],256],119993:[[100],256],119995:[[102],256],119997:[[104],256],119998:[[105],256],119999:[[106],256],120000:[[107],256],120001:[[108],256],120002:[[109],256],120003:[[110],256],120005:[[112],256],120006:[[113],256],120007:[[114],256],120008:[[115],256],120009:[[116],256],120010:[[117],256],120011:[[118],256],120012:[[119],256],120013:[[120],256],120014:[[121],256],120015:[[122],256],120016:[[65],256],120017:[[66],256],120018:[[67],256],120019:[[68],256],120020:[[69],256],120021:[[70],256],120022:[[71],256],120023:[[72],256],120024:[[73],256],120025:[[74],256],120026:[[75],256],120027:[[76],256],120028:[[77],256],120029:[[78],256],120030:[[79],256],120031:[[80],256],120032:[[81],256],120033:[[82],256],120034:[[83],256],120035:[[84],256],120036:[[85],256],120037:[[86],256],120038:[[87],256],120039:[[88],256],120040:[[89],256],120041:[[90],256],120042:[[97],256],120043:[[98],256],120044:[[99],256],120045:[[100],256],120046:[[101],256],120047:[[102],256],120048:[[103],256],120049:[[104],256],120050:[[105],256],120051:[[106],256],120052:[[107],256],120053:[[108],256],120054:[[109],256],120055:[[110],256],120056:[[111],256],120057:[[112],256],120058:[[113],256],120059:[[114],256],120060:[[115],256],120061:[[116],256],120062:[[117],256],120063:[[118],256]},\n54528:{120064:[[119],256],120065:[[120],256],120066:[[121],256],120067:[[122],256],120068:[[65],256],120069:[[66],256],120071:[[68],256],120072:[[69],256],120073:[[70],256],120074:[[71],256],120077:[[74],256],120078:[[75],256],120079:[[76],256],120080:[[77],256],120081:[[78],256],120082:[[79],256],120083:[[80],256],120084:[[81],256],120086:[[83],256],120087:[[84],256],120088:[[85],256],120089:[[86],256],120090:[[87],256],120091:[[88],256],120092:[[89],256],120094:[[97],256],120095:[[98],256],120096:[[99],256],120097:[[100],256],120098:[[101],256],120099:[[102],256],120100:[[103],256],120101:[[104],256],120102:[[105],256],120103:[[106],256],120104:[[107],256],120105:[[108],256],120106:[[109],256],120107:[[110],256],120108:[[111],256],120109:[[112],256],120110:[[113],256],120111:[[114],256],120112:[[115],256],120113:[[116],256],120114:[[117],256],120115:[[118],256],120116:[[119],256],120117:[[120],256],120118:[[121],256],120119:[[122],256],120120:[[65],256],120121:[[66],256],120123:[[68],256],120124:[[69],256],120125:[[70],256],120126:[[71],256],120128:[[73],256],120129:[[74],256],120130:[[75],256],120131:[[76],256],120132:[[77],256],120134:[[79],256],120138:[[83],256],120139:[[84],256],120140:[[85],256],120141:[[86],256],120142:[[87],256],120143:[[88],256],120144:[[89],256],120146:[[97],256],120147:[[98],256],120148:[[99],256],120149:[[100],256],120150:[[101],256],120151:[[102],256],120152:[[103],256],120153:[[104],256],120154:[[105],256],120155:[[106],256],120156:[[107],256],120157:[[108],256],120158:[[109],256],120159:[[110],256],120160:[[111],256],120161:[[112],256],120162:[[113],256],120163:[[114],256],120164:[[115],256],120165:[[116],256],120166:[[117],256],120167:[[118],256],120168:[[119],256],120169:[[120],256],120170:[[121],256],120171:[[122],256],120172:[[65],256],120173:[[66],256],120174:[[67],256],120175:[[68],256],120176:[[69],256],120177:[[70],256],120178:[[71],256],120179:[[72],256],120180:[[73],256],120181:[[74],256],120182:[[75],256],120183:[[76],256],120184:[[77],256],120185:[[78],256],120186:[[79],256],120187:[[80],256],120188:[[81],256],120189:[[82],256],120190:[[83],256],120191:[[84],256],120192:[[85],256],120193:[[86],256],120194:[[87],256],120195:[[88],256],120196:[[89],256],120197:[[90],256],120198:[[97],256],120199:[[98],256],120200:[[99],256],120201:[[100],256],120202:[[101],256],120203:[[102],256],120204:[[103],256],120205:[[104],256],120206:[[105],256],120207:[[106],256],120208:[[107],256],120209:[[108],256],120210:[[109],256],120211:[[110],256],120212:[[111],256],120213:[[112],256],120214:[[113],256],120215:[[114],256],120216:[[115],256],120217:[[116],256],120218:[[117],256],120219:[[118],256],120220:[[119],256],120221:[[120],256],120222:[[121],256],120223:[[122],256],120224:[[65],256],120225:[[66],256],120226:[[67],256],120227:[[68],256],120228:[[69],256],120229:[[70],256],120230:[[71],256],120231:[[72],256],120232:[[73],256],120233:[[74],256],120234:[[75],256],120235:[[76],256],120236:[[77],256],120237:[[78],256],120238:[[79],256],120239:[[80],256],120240:[[81],256],120241:[[82],256],120242:[[83],256],120243:[[84],256],120244:[[85],256],120245:[[86],256],120246:[[87],256],120247:[[88],256],120248:[[89],256],120249:[[90],256],120250:[[97],256],120251:[[98],256],120252:[[99],256],120253:[[100],256],120254:[[101],256],120255:[[102],256],120256:[[103],256],120257:[[104],256],120258:[[105],256],120259:[[106],256],120260:[[107],256],120261:[[108],256],120262:[[109],256],120263:[[110],256],120264:[[111],256],120265:[[112],256],120266:[[113],256],120267:[[114],256],120268:[[115],256],120269:[[116],256],120270:[[117],256],120271:[[118],256],120272:[[119],256],120273:[[120],256],120274:[[121],256],120275:[[122],256],120276:[[65],256],120277:[[66],256],120278:[[67],256],120279:[[68],256],120280:[[69],256],120281:[[70],256],120282:[[71],256],120283:[[72],256],120284:[[73],256],120285:[[74],256],120286:[[75],256],120287:[[76],256],120288:[[77],256],120289:[[78],256],120290:[[79],256],120291:[[80],256],120292:[[81],256],120293:[[82],256],120294:[[83],256],120295:[[84],256],120296:[[85],256],120297:[[86],256],120298:[[87],256],120299:[[88],256],120300:[[89],256],120301:[[90],256],120302:[[97],256],120303:[[98],256],120304:[[99],256],120305:[[100],256],120306:[[101],256],120307:[[102],256],120308:[[103],256],120309:[[104],256],120310:[[105],256],120311:[[106],256],120312:[[107],256],120313:[[108],256],120314:[[109],256],120315:[[110],256],120316:[[111],256],120317:[[112],256],120318:[[113],256],120319:[[114],256]},\n54784:{120320:[[115],256],120321:[[116],256],120322:[[117],256],120323:[[118],256],120324:[[119],256],120325:[[120],256],120326:[[121],256],120327:[[122],256],120328:[[65],256],120329:[[66],256],120330:[[67],256],120331:[[68],256],120332:[[69],256],120333:[[70],256],120334:[[71],256],120335:[[72],256],120336:[[73],256],120337:[[74],256],120338:[[75],256],120339:[[76],256],120340:[[77],256],120341:[[78],256],120342:[[79],256],120343:[[80],256],120344:[[81],256],120345:[[82],256],120346:[[83],256],120347:[[84],256],120348:[[85],256],120349:[[86],256],120350:[[87],256],120351:[[88],256],120352:[[89],256],120353:[[90],256],120354:[[97],256],120355:[[98],256],120356:[[99],256],120357:[[100],256],120358:[[101],256],120359:[[102],256],120360:[[103],256],120361:[[104],256],120362:[[105],256],120363:[[106],256],120364:[[107],256],120365:[[108],256],120366:[[109],256],120367:[[110],256],120368:[[111],256],120369:[[112],256],120370:[[113],256],120371:[[114],256],120372:[[115],256],120373:[[116],256],120374:[[117],256],120375:[[118],256],120376:[[119],256],120377:[[120],256],120378:[[121],256],120379:[[122],256],120380:[[65],256],120381:[[66],256],120382:[[67],256],120383:[[68],256],120384:[[69],256],120385:[[70],256],120386:[[71],256],120387:[[72],256],120388:[[73],256],120389:[[74],256],120390:[[75],256],120391:[[76],256],120392:[[77],256],120393:[[78],256],120394:[[79],256],120395:[[80],256],120396:[[81],256],120397:[[82],256],120398:[[83],256],120399:[[84],256],120400:[[85],256],120401:[[86],256],120402:[[87],256],120403:[[88],256],120404:[[89],256],120405:[[90],256],120406:[[97],256],120407:[[98],256],120408:[[99],256],120409:[[100],256],120410:[[101],256],120411:[[102],256],120412:[[103],256],120413:[[104],256],120414:[[105],256],120415:[[106],256],120416:[[107],256],120417:[[108],256],120418:[[109],256],120419:[[110],256],120420:[[111],256],120421:[[112],256],120422:[[113],256],120423:[[114],256],120424:[[115],256],120425:[[116],256],120426:[[117],256],120427:[[118],256],120428:[[119],256],120429:[[120],256],120430:[[121],256],120431:[[122],256],120432:[[65],256],120433:[[66],256],120434:[[67],256],120435:[[68],256],120436:[[69],256],120437:[[70],256],120438:[[71],256],120439:[[72],256],120440:[[73],256],120441:[[74],256],120442:[[75],256],120443:[[76],256],120444:[[77],256],120445:[[78],256],120446:[[79],256],120447:[[80],256],120448:[[81],256],120449:[[82],256],120450:[[83],256],120451:[[84],256],120452:[[85],256],120453:[[86],256],120454:[[87],256],120455:[[88],256],120456:[[89],256],120457:[[90],256],120458:[[97],256],120459:[[98],256],120460:[[99],256],120461:[[100],256],120462:[[101],256],120463:[[102],256],120464:[[103],256],120465:[[104],256],120466:[[105],256],120467:[[106],256],120468:[[107],256],120469:[[108],256],120470:[[109],256],120471:[[110],256],120472:[[111],256],120473:[[112],256],120474:[[113],256],120475:[[114],256],120476:[[115],256],120477:[[116],256],120478:[[117],256],120479:[[118],256],120480:[[119],256],120481:[[120],256],120482:[[121],256],120483:[[122],256],120484:[[305],256],120485:[[567],256],120488:[[913],256],120489:[[914],256],120490:[[915],256],120491:[[916],256],120492:[[917],256],120493:[[918],256],120494:[[919],256],120495:[[920],256],120496:[[921],256],120497:[[922],256],120498:[[923],256],120499:[[924],256],120500:[[925],256],120501:[[926],256],120502:[[927],256],120503:[[928],256],120504:[[929],256],120505:[[1012],256],120506:[[931],256],120507:[[932],256],120508:[[933],256],120509:[[934],256],120510:[[935],256],120511:[[936],256],120512:[[937],256],120513:[[8711],256],120514:[[945],256],120515:[[946],256],120516:[[947],256],120517:[[948],256],120518:[[949],256],120519:[[950],256],120520:[[951],256],120521:[[952],256],120522:[[953],256],120523:[[954],256],120524:[[955],256],120525:[[956],256],120526:[[957],256],120527:[[958],256],120528:[[959],256],120529:[[960],256],120530:[[961],256],120531:[[962],256],120532:[[963],256],120533:[[964],256],120534:[[965],256],120535:[[966],256],120536:[[967],256],120537:[[968],256],120538:[[969],256],120539:[[8706],256],120540:[[1013],256],120541:[[977],256],120542:[[1008],256],120543:[[981],256],120544:[[1009],256],120545:[[982],256],120546:[[913],256],120547:[[914],256],120548:[[915],256],120549:[[916],256],120550:[[917],256],120551:[[918],256],120552:[[919],256],120553:[[920],256],120554:[[921],256],120555:[[922],256],120556:[[923],256],120557:[[924],256],120558:[[925],256],120559:[[926],256],120560:[[927],256],120561:[[928],256],120562:[[929],256],120563:[[1012],256],120564:[[931],256],120565:[[932],256],120566:[[933],256],120567:[[934],256],120568:[[935],256],120569:[[936],256],120570:[[937],256],120571:[[8711],256],120572:[[945],256],120573:[[946],256],120574:[[947],256],120575:[[948],256]},\n55040:{120576:[[949],256],120577:[[950],256],120578:[[951],256],120579:[[952],256],120580:[[953],256],120581:[[954],256],120582:[[955],256],120583:[[956],256],120584:[[957],256],120585:[[958],256],120586:[[959],256],120587:[[960],256],120588:[[961],256],120589:[[962],256],120590:[[963],256],120591:[[964],256],120592:[[965],256],120593:[[966],256],120594:[[967],256],120595:[[968],256],120596:[[969],256],120597:[[8706],256],120598:[[1013],256],120599:[[977],256],120600:[[1008],256],120601:[[981],256],120602:[[1009],256],120603:[[982],256],120604:[[913],256],120605:[[914],256],120606:[[915],256],120607:[[916],256],120608:[[917],256],120609:[[918],256],120610:[[919],256],120611:[[920],256],120612:[[921],256],120613:[[922],256],120614:[[923],256],120615:[[924],256],120616:[[925],256],120617:[[926],256],120618:[[927],256],120619:[[928],256],120620:[[929],256],120621:[[1012],256],120622:[[931],256],120623:[[932],256],120624:[[933],256],120625:[[934],256],120626:[[935],256],120627:[[936],256],120628:[[937],256],120629:[[8711],256],120630:[[945],256],120631:[[946],256],120632:[[947],256],120633:[[948],256],120634:[[949],256],120635:[[950],256],120636:[[951],256],120637:[[952],256],120638:[[953],256],120639:[[954],256],120640:[[955],256],120641:[[956],256],120642:[[957],256],120643:[[958],256],120644:[[959],256],120645:[[960],256],120646:[[961],256],120647:[[962],256],120648:[[963],256],120649:[[964],256],120650:[[965],256],120651:[[966],256],120652:[[967],256],120653:[[968],256],120654:[[969],256],120655:[[8706],256],120656:[[1013],256],120657:[[977],256],120658:[[1008],256],120659:[[981],256],120660:[[1009],256],120661:[[982],256],120662:[[913],256],120663:[[914],256],120664:[[915],256],120665:[[916],256],120666:[[917],256],120667:[[918],256],120668:[[919],256],120669:[[920],256],120670:[[921],256],120671:[[922],256],120672:[[923],256],120673:[[924],256],120674:[[925],256],120675:[[926],256],120676:[[927],256],120677:[[928],256],120678:[[929],256],120679:[[1012],256],120680:[[931],256],120681:[[932],256],120682:[[933],256],120683:[[934],256],120684:[[935],256],120685:[[936],256],120686:[[937],256],120687:[[8711],256],120688:[[945],256],120689:[[946],256],120690:[[947],256],120691:[[948],256],120692:[[949],256],120693:[[950],256],120694:[[951],256],120695:[[952],256],120696:[[953],256],120697:[[954],256],120698:[[955],256],120699:[[956],256],120700:[[957],256],120701:[[958],256],120702:[[959],256],120703:[[960],256],120704:[[961],256],120705:[[962],256],120706:[[963],256],120707:[[964],256],120708:[[965],256],120709:[[966],256],120710:[[967],256],120711:[[968],256],120712:[[969],256],120713:[[8706],256],120714:[[1013],256],120715:[[977],256],120716:[[1008],256],120717:[[981],256],120718:[[1009],256],120719:[[982],256],120720:[[913],256],120721:[[914],256],120722:[[915],256],120723:[[916],256],120724:[[917],256],120725:[[918],256],120726:[[919],256],120727:[[920],256],120728:[[921],256],120729:[[922],256],120730:[[923],256],120731:[[924],256],120732:[[925],256],120733:[[926],256],120734:[[927],256],120735:[[928],256],120736:[[929],256],120737:[[1012],256],120738:[[931],256],120739:[[932],256],120740:[[933],256],120741:[[934],256],120742:[[935],256],120743:[[936],256],120744:[[937],256],120745:[[8711],256],120746:[[945],256],120747:[[946],256],120748:[[947],256],120749:[[948],256],120750:[[949],256],120751:[[950],256],120752:[[951],256],120753:[[952],256],120754:[[953],256],120755:[[954],256],120756:[[955],256],120757:[[956],256],120758:[[957],256],120759:[[958],256],120760:[[959],256],120761:[[960],256],120762:[[961],256],120763:[[962],256],120764:[[963],256],120765:[[964],256],120766:[[965],256],120767:[[966],256],120768:[[967],256],120769:[[968],256],120770:[[969],256],120771:[[8706],256],120772:[[1013],256],120773:[[977],256],120774:[[1008],256],120775:[[981],256],120776:[[1009],256],120777:[[982],256],120778:[[988],256],120779:[[989],256],120782:[[48],256],120783:[[49],256],120784:[[50],256],120785:[[51],256],120786:[[52],256],120787:[[53],256],120788:[[54],256],120789:[[55],256],120790:[[56],256],120791:[[57],256],120792:[[48],256],120793:[[49],256],120794:[[50],256],120795:[[51],256],120796:[[52],256],120797:[[53],256],120798:[[54],256],120799:[[55],256],120800:[[56],256],120801:[[57],256],120802:[[48],256],120803:[[49],256],120804:[[50],256],120805:[[51],256],120806:[[52],256],120807:[[53],256],120808:[[54],256],120809:[[55],256],120810:[[56],256],120811:[[57],256],120812:[[48],256],120813:[[49],256],120814:[[50],256],120815:[[51],256],120816:[[52],256],120817:[[53],256],120818:[[54],256],120819:[[55],256],120820:[[56],256],120821:[[57],256],120822:[[48],256],120823:[[49],256],120824:[[50],256],120825:[[51],256],120826:[[52],256],120827:[[53],256],120828:[[54],256],120829:[[55],256],120830:[[56],256],120831:[[57],256]},\n59392:{125136:[,220],125137:[,220],125138:[,220],125139:[,220],125140:[,220],125141:[,220],125142:[,220]},\n60928:{126464:[[1575],256],126465:[[1576],256],126466:[[1580],256],126467:[[1583],256],126469:[[1608],256],126470:[[1586],256],126471:[[1581],256],126472:[[1591],256],126473:[[1610],256],126474:[[1603],256],126475:[[1604],256],126476:[[1605],256],126477:[[1606],256],126478:[[1587],256],126479:[[1593],256],126480:[[1601],256],126481:[[1589],256],126482:[[1602],256],126483:[[1585],256],126484:[[1588],256],126485:[[1578],256],126486:[[1579],256],126487:[[1582],256],126488:[[1584],256],126489:[[1590],256],126490:[[1592],256],126491:[[1594],256],126492:[[1646],256],126493:[[1722],256],126494:[[1697],256],126495:[[1647],256],126497:[[1576],256],126498:[[1580],256],126500:[[1607],256],126503:[[1581],256],126505:[[1610],256],126506:[[1603],256],126507:[[1604],256],126508:[[1605],256],126509:[[1606],256],126510:[[1587],256],126511:[[1593],256],126512:[[1601],256],126513:[[1589],256],126514:[[1602],256],126516:[[1588],256],126517:[[1578],256],126518:[[1579],256],126519:[[1582],256],126521:[[1590],256],126523:[[1594],256],126530:[[1580],256],126535:[[1581],256],126537:[[1610],256],126539:[[1604],256],126541:[[1606],256],126542:[[1587],256],126543:[[1593],256],126545:[[1589],256],126546:[[1602],256],126548:[[1588],256],126551:[[1582],256],126553:[[1590],256],126555:[[1594],256],126557:[[1722],256],126559:[[1647],256],126561:[[1576],256],126562:[[1580],256],126564:[[1607],256],126567:[[1581],256],126568:[[1591],256],126569:[[1610],256],126570:[[1603],256],126572:[[1605],256],126573:[[1606],256],126574:[[1587],256],126575:[[1593],256],126576:[[1601],256],126577:[[1589],256],126578:[[1602],256],126580:[[1588],256],126581:[[1578],256],126582:[[1579],256],126583:[[1582],256],126585:[[1590],256],126586:[[1592],256],126587:[[1594],256],126588:[[1646],256],126590:[[1697],256],126592:[[1575],256],126593:[[1576],256],126594:[[1580],256],126595:[[1583],256],126596:[[1607],256],126597:[[1608],256],126598:[[1586],256],126599:[[1581],256],126600:[[1591],256],126601:[[1610],256],126603:[[1604],256],126604:[[1605],256],126605:[[1606],256],126606:[[1587],256],126607:[[1593],256],126608:[[1601],256],126609:[[1589],256],126610:[[1602],256],126611:[[1585],256],126612:[[1588],256],126613:[[1578],256],126614:[[1579],256],126615:[[1582],256],126616:[[1584],256],126617:[[1590],256],126618:[[1592],256],126619:[[1594],256],126625:[[1576],256],126626:[[1580],256],126627:[[1583],256],126629:[[1608],256],126630:[[1586],256],126631:[[1581],256],126632:[[1591],256],126633:[[1610],256],126635:[[1604],256],126636:[[1605],256],126637:[[1606],256],126638:[[1587],256],126639:[[1593],256],126640:[[1601],256],126641:[[1589],256],126642:[[1602],256],126643:[[1585],256],126644:[[1588],256],126645:[[1578],256],126646:[[1579],256],126647:[[1582],256],126648:[[1584],256],126649:[[1590],256],126650:[[1592],256],126651:[[1594],256]},\n61696:{127232:[[48,46],256],127233:[[48,44],256],127234:[[49,44],256],127235:[[50,44],256],127236:[[51,44],256],127237:[[52,44],256],127238:[[53,44],256],127239:[[54,44],256],127240:[[55,44],256],127241:[[56,44],256],127242:[[57,44],256],127248:[[40,65,41],256],127249:[[40,66,41],256],127250:[[40,67,41],256],127251:[[40,68,41],256],127252:[[40,69,41],256],127253:[[40,70,41],256],127254:[[40,71,41],256],127255:[[40,72,41],256],127256:[[40,73,41],256],127257:[[40,74,41],256],127258:[[40,75,41],256],127259:[[40,76,41],256],127260:[[40,77,41],256],127261:[[40,78,41],256],127262:[[40,79,41],256],127263:[[40,80,41],256],127264:[[40,81,41],256],127265:[[40,82,41],256],127266:[[40,83,41],256],127267:[[40,84,41],256],127268:[[40,85,41],256],127269:[[40,86,41],256],127270:[[40,87,41],256],127271:[[40,88,41],256],127272:[[40,89,41],256],127273:[[40,90,41],256],127274:[[12308,83,12309],256],127275:[[67],256],127276:[[82],256],127277:[[67,68],256],127278:[[87,90],256],127280:[[65],256],127281:[[66],256],127282:[[67],256],127283:[[68],256],127284:[[69],256],127285:[[70],256],127286:[[71],256],127287:[[72],256],127288:[[73],256],127289:[[74],256],127290:[[75],256],127291:[[76],256],127292:[[77],256],127293:[[78],256],127294:[[79],256],127295:[[80],256],127296:[[81],256],127297:[[82],256],127298:[[83],256],127299:[[84],256],127300:[[85],256],127301:[[86],256],127302:[[87],256],127303:[[88],256],127304:[[89],256],127305:[[90],256],127306:[[72,86],256],127307:[[77,86],256],127308:[[83,68],256],127309:[[83,83],256],127310:[[80,80,86],256],127311:[[87,67],256],127338:[[77,67],256],127339:[[77,68],256],127376:[[68,74],256]},\n61952:{},\n63488:{194560:[[20029]],194561:[[20024]],194562:[[20033]],194563:[[131362]],194564:[[20320]],194565:[[20398]],194566:[[20411]],194567:[[20482]],194568:[[20602]],194569:[[20633]],194570:[[20711]],194571:[[20687]],194572:[[13470]],194573:[[132666]],194574:[[20813]],194575:[[20820]],194576:[[20836]],194577:[[20855]],194578:[[132380]],194579:[[13497]],194580:[[20839]],194581:[[20877]],194582:[[132427]],194583:[[20887]],194584:[[20900]],194585:[[20172]],194586:[[20908]],194587:[[20917]],194588:[[168415]],194589:[[20981]],194590:[[20995]],194591:[[13535]],194592:[[21051]],194593:[[21062]],194594:[[21106]],194595:[[21111]],194596:[[13589]],194597:[[21191]],194598:[[21193]],194599:[[21220]],194600:[[21242]],194601:[[21253]],194602:[[21254]],194603:[[21271]],194604:[[21321]],194605:[[21329]],194606:[[21338]],194607:[[21363]],194608:[[21373]],194609:[[21375]],194610:[[21375]],194611:[[21375]],194612:[[133676]],194613:[[28784]],194614:[[21450]],194615:[[21471]],194616:[[133987]],194617:[[21483]],194618:[[21489]],194619:[[21510]],194620:[[21662]],194621:[[21560]],194622:[[21576]],194623:[[21608]],194624:[[21666]],194625:[[21750]],194626:[[21776]],194627:[[21843]],194628:[[21859]],194629:[[21892]],194630:[[21892]],194631:[[21913]],194632:[[21931]],194633:[[21939]],194634:[[21954]],194635:[[22294]],194636:[[22022]],194637:[[22295]],194638:[[22097]],194639:[[22132]],194640:[[20999]],194641:[[22766]],194642:[[22478]],194643:[[22516]],194644:[[22541]],194645:[[22411]],194646:[[22578]],194647:[[22577]],194648:[[22700]],194649:[[136420]],194650:[[22770]],194651:[[22775]],194652:[[22790]],194653:[[22810]],194654:[[22818]],194655:[[22882]],194656:[[136872]],194657:[[136938]],194658:[[23020]],194659:[[23067]],194660:[[23079]],194661:[[23000]],194662:[[23142]],194663:[[14062]],194664:[[14076]],194665:[[23304]],194666:[[23358]],194667:[[23358]],194668:[[137672]],194669:[[23491]],194670:[[23512]],194671:[[23527]],194672:[[23539]],194673:[[138008]],194674:[[23551]],194675:[[23558]],194676:[[24403]],194677:[[23586]],194678:[[14209]],194679:[[23648]],194680:[[23662]],194681:[[23744]],194682:[[23693]],194683:[[138724]],194684:[[23875]],194685:[[138726]],194686:[[23918]],194687:[[23915]],194688:[[23932]],194689:[[24033]],194690:[[24034]],194691:[[14383]],194692:[[24061]],194693:[[24104]],194694:[[24125]],194695:[[24169]],194696:[[14434]],194697:[[139651]],194698:[[14460]],194699:[[24240]],194700:[[24243]],194701:[[24246]],194702:[[24266]],194703:[[172946]],194704:[[24318]],194705:[[140081]],194706:[[140081]],194707:[[33281]],194708:[[24354]],194709:[[24354]],194710:[[14535]],194711:[[144056]],194712:[[156122]],194713:[[24418]],194714:[[24427]],194715:[[14563]],194716:[[24474]],194717:[[24525]],194718:[[24535]],194719:[[24569]],194720:[[24705]],194721:[[14650]],194722:[[14620]],194723:[[24724]],194724:[[141012]],194725:[[24775]],194726:[[24904]],194727:[[24908]],194728:[[24910]],194729:[[24908]],194730:[[24954]],194731:[[24974]],194732:[[25010]],194733:[[24996]],194734:[[25007]],194735:[[25054]],194736:[[25074]],194737:[[25078]],194738:[[25104]],194739:[[25115]],194740:[[25181]],194741:[[25265]],194742:[[25300]],194743:[[25424]],194744:[[142092]],194745:[[25405]],194746:[[25340]],194747:[[25448]],194748:[[25475]],194749:[[25572]],194750:[[142321]],194751:[[25634]],194752:[[25541]],194753:[[25513]],194754:[[14894]],194755:[[25705]],194756:[[25726]],194757:[[25757]],194758:[[25719]],194759:[[14956]],194760:[[25935]],194761:[[25964]],194762:[[143370]],194763:[[26083]],194764:[[26360]],194765:[[26185]],194766:[[15129]],194767:[[26257]],194768:[[15112]],194769:[[15076]],194770:[[20882]],194771:[[20885]],194772:[[26368]],194773:[[26268]],194774:[[32941]],194775:[[17369]],194776:[[26391]],194777:[[26395]],194778:[[26401]],194779:[[26462]],194780:[[26451]],194781:[[144323]],194782:[[15177]],194783:[[26618]],194784:[[26501]],194785:[[26706]],194786:[[26757]],194787:[[144493]],194788:[[26766]],194789:[[26655]],194790:[[26900]],194791:[[15261]],194792:[[26946]],194793:[[27043]],194794:[[27114]],194795:[[27304]],194796:[[145059]],194797:[[27355]],194798:[[15384]],194799:[[27425]],194800:[[145575]],194801:[[27476]],194802:[[15438]],194803:[[27506]],194804:[[27551]],194805:[[27578]],194806:[[27579]],194807:[[146061]],194808:[[138507]],194809:[[146170]],194810:[[27726]],194811:[[146620]],194812:[[27839]],194813:[[27853]],194814:[[27751]],194815:[[27926]]},\n63744:{63744:[[35912]],63745:[[26356]],63746:[[36554]],63747:[[36040]],63748:[[28369]],63749:[[20018]],63750:[[21477]],63751:[[40860]],63752:[[40860]],63753:[[22865]],63754:[[37329]],63755:[[21895]],63756:[[22856]],63757:[[25078]],63758:[[30313]],63759:[[32645]],63760:[[34367]],63761:[[34746]],63762:[[35064]],63763:[[37007]],63764:[[27138]],63765:[[27931]],63766:[[28889]],63767:[[29662]],63768:[[33853]],63769:[[37226]],63770:[[39409]],63771:[[20098]],63772:[[21365]],63773:[[27396]],63774:[[29211]],63775:[[34349]],63776:[[40478]],63777:[[23888]],63778:[[28651]],63779:[[34253]],63780:[[35172]],63781:[[25289]],63782:[[33240]],63783:[[34847]],63784:[[24266]],63785:[[26391]],63786:[[28010]],63787:[[29436]],63788:[[37070]],63789:[[20358]],63790:[[20919]],63791:[[21214]],63792:[[25796]],63793:[[27347]],63794:[[29200]],63795:[[30439]],63796:[[32769]],63797:[[34310]],63798:[[34396]],63799:[[36335]],63800:[[38706]],63801:[[39791]],63802:[[40442]],63803:[[30860]],63804:[[31103]],63805:[[32160]],63806:[[33737]],63807:[[37636]],63808:[[40575]],63809:[[35542]],63810:[[22751]],63811:[[24324]],63812:[[31840]],63813:[[32894]],63814:[[29282]],63815:[[30922]],63816:[[36034]],63817:[[38647]],63818:[[22744]],63819:[[23650]],63820:[[27155]],63821:[[28122]],63822:[[28431]],63823:[[32047]],63824:[[32311]],63825:[[38475]],63826:[[21202]],63827:[[32907]],63828:[[20956]],63829:[[20940]],63830:[[31260]],63831:[[32190]],63832:[[33777]],63833:[[38517]],63834:[[35712]],63835:[[25295]],63836:[[27138]],63837:[[35582]],63838:[[20025]],63839:[[23527]],63840:[[24594]],63841:[[29575]],63842:[[30064]],63843:[[21271]],63844:[[30971]],63845:[[20415]],63846:[[24489]],63847:[[19981]],63848:[[27852]],63849:[[25976]],63850:[[32034]],63851:[[21443]],63852:[[22622]],63853:[[30465]],63854:[[33865]],63855:[[35498]],63856:[[27578]],63857:[[36784]],63858:[[27784]],63859:[[25342]],63860:[[33509]],63861:[[25504]],63862:[[30053]],63863:[[20142]],63864:[[20841]],63865:[[20937]],63866:[[26753]],63867:[[31975]],63868:[[33391]],63869:[[35538]],63870:[[37327]],63871:[[21237]],63872:[[21570]],63873:[[22899]],63874:[[24300]],63875:[[26053]],63876:[[28670]],63877:[[31018]],63878:[[38317]],63879:[[39530]],63880:[[40599]],63881:[[40654]],63882:[[21147]],63883:[[26310]],63884:[[27511]],63885:[[36706]],63886:[[24180]],63887:[[24976]],63888:[[25088]],63889:[[25754]],63890:[[28451]],63891:[[29001]],63892:[[29833]],63893:[[31178]],63894:[[32244]],63895:[[32879]],63896:[[36646]],63897:[[34030]],63898:[[36899]],63899:[[37706]],63900:[[21015]],63901:[[21155]],63902:[[21693]],63903:[[28872]],63904:[[35010]],63905:[[35498]],63906:[[24265]],63907:[[24565]],63908:[[25467]],63909:[[27566]],63910:[[31806]],63911:[[29557]],63912:[[20196]],63913:[[22265]],63914:[[23527]],63915:[[23994]],63916:[[24604]],63917:[[29618]],63918:[[29801]],63919:[[32666]],63920:[[32838]],63921:[[37428]],63922:[[38646]],63923:[[38728]],63924:[[38936]],63925:[[20363]],63926:[[31150]],63927:[[37300]],63928:[[38584]],63929:[[24801]],63930:[[20102]],63931:[[20698]],63932:[[23534]],63933:[[23615]],63934:[[26009]],63935:[[27138]],63936:[[29134]],63937:[[30274]],63938:[[34044]],63939:[[36988]],63940:[[40845]],63941:[[26248]],63942:[[38446]],63943:[[21129]],63944:[[26491]],63945:[[26611]],63946:[[27969]],63947:[[28316]],63948:[[29705]],63949:[[30041]],63950:[[30827]],63951:[[32016]],63952:[[39006]],63953:[[20845]],63954:[[25134]],63955:[[38520]],63956:[[20523]],63957:[[23833]],63958:[[28138]],63959:[[36650]],63960:[[24459]],63961:[[24900]],63962:[[26647]],63963:[[29575]],63964:[[38534]],63965:[[21033]],63966:[[21519]],63967:[[23653]],63968:[[26131]],63969:[[26446]],63970:[[26792]],63971:[[27877]],63972:[[29702]],63973:[[30178]],63974:[[32633]],63975:[[35023]],63976:[[35041]],63977:[[37324]],63978:[[38626]],63979:[[21311]],63980:[[28346]],63981:[[21533]],63982:[[29136]],63983:[[29848]],63984:[[34298]],63985:[[38563]],63986:[[40023]],63987:[[40607]],63988:[[26519]],63989:[[28107]],63990:[[33256]],63991:[[31435]],63992:[[31520]],63993:[[31890]],63994:[[29376]],63995:[[28825]],63996:[[35672]],63997:[[20160]],63998:[[33590]],63999:[[21050]],194816:[[27966]],194817:[[28023]],194818:[[27969]],194819:[[28009]],194820:[[28024]],194821:[[28037]],194822:[[146718]],194823:[[27956]],194824:[[28207]],194825:[[28270]],194826:[[15667]],194827:[[28363]],194828:[[28359]],194829:[[147153]],194830:[[28153]],194831:[[28526]],194832:[[147294]],194833:[[147342]],194834:[[28614]],194835:[[28729]],194836:[[28702]],194837:[[28699]],194838:[[15766]],194839:[[28746]],194840:[[28797]],194841:[[28791]],194842:[[28845]],194843:[[132389]],194844:[[28997]],194845:[[148067]],194846:[[29084]],194847:[[148395]],194848:[[29224]],194849:[[29237]],194850:[[29264]],194851:[[149000]],194852:[[29312]],194853:[[29333]],194854:[[149301]],194855:[[149524]],194856:[[29562]],194857:[[29579]],194858:[[16044]],194859:[[29605]],194860:[[16056]],194861:[[16056]],194862:[[29767]],194863:[[29788]],194864:[[29809]],194865:[[29829]],194866:[[29898]],194867:[[16155]],194868:[[29988]],194869:[[150582]],194870:[[30014]],194871:[[150674]],194872:[[30064]],194873:[[139679]],194874:[[30224]],194875:[[151457]],194876:[[151480]],194877:[[151620]],194878:[[16380]],194879:[[16392]],194880:[[30452]],194881:[[151795]],194882:[[151794]],194883:[[151833]],194884:[[151859]],194885:[[30494]],194886:[[30495]],194887:[[30495]],194888:[[30538]],194889:[[16441]],194890:[[30603]],194891:[[16454]],194892:[[16534]],194893:[[152605]],194894:[[30798]],194895:[[30860]],194896:[[30924]],194897:[[16611]],194898:[[153126]],194899:[[31062]],194900:[[153242]],194901:[[153285]],194902:[[31119]],194903:[[31211]],194904:[[16687]],194905:[[31296]],194906:[[31306]],194907:[[31311]],194908:[[153980]],194909:[[154279]],194910:[[154279]],194911:[[31470]],194912:[[16898]],194913:[[154539]],194914:[[31686]],194915:[[31689]],194916:[[16935]],194917:[[154752]],194918:[[31954]],194919:[[17056]],194920:[[31976]],194921:[[31971]],194922:[[32000]],194923:[[155526]],194924:[[32099]],194925:[[17153]],194926:[[32199]],194927:[[32258]],194928:[[32325]],194929:[[17204]],194930:[[156200]],194931:[[156231]],194932:[[17241]],194933:[[156377]],194934:[[32634]],194935:[[156478]],194936:[[32661]],194937:[[32762]],194938:[[32773]],194939:[[156890]],194940:[[156963]],194941:[[32864]],194942:[[157096]],194943:[[32880]],194944:[[144223]],194945:[[17365]],194946:[[32946]],194947:[[33027]],194948:[[17419]],194949:[[33086]],194950:[[23221]],194951:[[157607]],194952:[[157621]],194953:[[144275]],194954:[[144284]],194955:[[33281]],194956:[[33284]],194957:[[36766]],194958:[[17515]],194959:[[33425]],194960:[[33419]],194961:[[33437]],194962:[[21171]],194963:[[33457]],194964:[[33459]],194965:[[33469]],194966:[[33510]],194967:[[158524]],194968:[[33509]],194969:[[33565]],194970:[[33635]],194971:[[33709]],194972:[[33571]],194973:[[33725]],194974:[[33767]],194975:[[33879]],194976:[[33619]],194977:[[33738]],194978:[[33740]],194979:[[33756]],194980:[[158774]],194981:[[159083]],194982:[[158933]],194983:[[17707]],194984:[[34033]],194985:[[34035]],194986:[[34070]],194987:[[160714]],194988:[[34148]],194989:[[159532]],194990:[[17757]],194991:[[17761]],194992:[[159665]],194993:[[159954]],194994:[[17771]],194995:[[34384]],194996:[[34396]],194997:[[34407]],194998:[[34409]],194999:[[34473]],195000:[[34440]],195001:[[34574]],195002:[[34530]],195003:[[34681]],195004:[[34600]],195005:[[34667]],195006:[[34694]],195007:[[17879]],195008:[[34785]],195009:[[34817]],195010:[[17913]],195011:[[34912]],195012:[[34915]],195013:[[161383]],195014:[[35031]],195015:[[35038]],195016:[[17973]],195017:[[35066]],195018:[[13499]],195019:[[161966]],195020:[[162150]],195021:[[18110]],195022:[[18119]],195023:[[35488]],195024:[[35565]],195025:[[35722]],195026:[[35925]],195027:[[162984]],195028:[[36011]],195029:[[36033]],195030:[[36123]],195031:[[36215]],195032:[[163631]],195033:[[133124]],195034:[[36299]],195035:[[36284]],195036:[[36336]],195037:[[133342]],195038:[[36564]],195039:[[36664]],195040:[[165330]],195041:[[165357]],195042:[[37012]],195043:[[37105]],195044:[[37137]],195045:[[165678]],195046:[[37147]],195047:[[37432]],195048:[[37591]],195049:[[37592]],195050:[[37500]],195051:[[37881]],195052:[[37909]],195053:[[166906]],195054:[[38283]],195055:[[18837]],195056:[[38327]],195057:[[167287]],195058:[[18918]],195059:[[38595]],195060:[[23986]],195061:[[38691]],195062:[[168261]],195063:[[168474]],195064:[[19054]],195065:[[19062]],195066:[[38880]],195067:[[168970]],195068:[[19122]],195069:[[169110]],195070:[[38923]],195071:[[38923]]},\n64000:{64000:[[20999]],64001:[[24230]],64002:[[25299]],64003:[[31958]],64004:[[23429]],64005:[[27934]],64006:[[26292]],64007:[[36667]],64008:[[34892]],64009:[[38477]],64010:[[35211]],64011:[[24275]],64012:[[20800]],64013:[[21952]],64016:[[22618]],64018:[[26228]],64021:[[20958]],64022:[[29482]],64023:[[30410]],64024:[[31036]],64025:[[31070]],64026:[[31077]],64027:[[31119]],64028:[[38742]],64029:[[31934]],64030:[[32701]],64032:[[34322]],64034:[[35576]],64037:[[36920]],64038:[[37117]],64042:[[39151]],64043:[[39164]],64044:[[39208]],64045:[[40372]],64046:[[37086]],64047:[[38583]],64048:[[20398]],64049:[[20711]],64050:[[20813]],64051:[[21193]],64052:[[21220]],64053:[[21329]],64054:[[21917]],64055:[[22022]],64056:[[22120]],64057:[[22592]],64058:[[22696]],64059:[[23652]],64060:[[23662]],64061:[[24724]],64062:[[24936]],64063:[[24974]],64064:[[25074]],64065:[[25935]],64066:[[26082]],64067:[[26257]],64068:[[26757]],64069:[[28023]],64070:[[28186]],64071:[[28450]],64072:[[29038]],64073:[[29227]],64074:[[29730]],64075:[[30865]],64076:[[31038]],64077:[[31049]],64078:[[31048]],64079:[[31056]],64080:[[31062]],64081:[[31069]],64082:[[31117]],64083:[[31118]],64084:[[31296]],64085:[[31361]],64086:[[31680]],64087:[[32244]],64088:[[32265]],64089:[[32321]],64090:[[32626]],64091:[[32773]],64092:[[33261]],64093:[[33401]],64094:[[33401]],64095:[[33879]],64096:[[35088]],64097:[[35222]],64098:[[35585]],64099:[[35641]],64100:[[36051]],64101:[[36104]],64102:[[36790]],64103:[[36920]],64104:[[38627]],64105:[[38911]],64106:[[38971]],64107:[[24693]],64108:[[148206]],64109:[[33304]],64112:[[20006]],64113:[[20917]],64114:[[20840]],64115:[[20352]],64116:[[20805]],64117:[[20864]],64118:[[21191]],64119:[[21242]],64120:[[21917]],64121:[[21845]],64122:[[21913]],64123:[[21986]],64124:[[22618]],64125:[[22707]],64126:[[22852]],64127:[[22868]],64128:[[23138]],64129:[[23336]],64130:[[24274]],64131:[[24281]],64132:[[24425]],64133:[[24493]],64134:[[24792]],64135:[[24910]],64136:[[24840]],64137:[[24974]],64138:[[24928]],64139:[[25074]],64140:[[25140]],64141:[[25540]],64142:[[25628]],64143:[[25682]],64144:[[25942]],64145:[[26228]],64146:[[26391]],64147:[[26395]],64148:[[26454]],64149:[[27513]],64150:[[27578]],64151:[[27969]],64152:[[28379]],64153:[[28363]],64154:[[28450]],64155:[[28702]],64156:[[29038]],64157:[[30631]],64158:[[29237]],64159:[[29359]],64160:[[29482]],64161:[[29809]],64162:[[29958]],64163:[[30011]],64164:[[30237]],64165:[[30239]],64166:[[30410]],64167:[[30427]],64168:[[30452]],64169:[[30538]],64170:[[30528]],64171:[[30924]],64172:[[31409]],64173:[[31680]],64174:[[31867]],64175:[[32091]],64176:[[32244]],64177:[[32574]],64178:[[32773]],64179:[[33618]],64180:[[33775]],64181:[[34681]],64182:[[35137]],64183:[[35206]],64184:[[35222]],64185:[[35519]],64186:[[35576]],64187:[[35531]],64188:[[35585]],64189:[[35582]],64190:[[35565]],64191:[[35641]],64192:[[35722]],64193:[[36104]],64194:[[36664]],64195:[[36978]],64196:[[37273]],64197:[[37494]],64198:[[38524]],64199:[[38627]],64200:[[38742]],64201:[[38875]],64202:[[38911]],64203:[[38923]],64204:[[38971]],64205:[[39698]],64206:[[40860]],64207:[[141386]],64208:[[141380]],64209:[[144341]],64210:[[15261]],64211:[[16408]],64212:[[16441]],64213:[[152137]],64214:[[154832]],64215:[[163539]],64216:[[40771]],64217:[[40846]],195072:[[38953]],195073:[[169398]],195074:[[39138]],195075:[[19251]],195076:[[39209]],195077:[[39335]],195078:[[39362]],195079:[[39422]],195080:[[19406]],195081:[[170800]],195082:[[39698]],195083:[[40000]],195084:[[40189]],195085:[[19662]],195086:[[19693]],195087:[[40295]],195088:[[172238]],195089:[[19704]],195090:[[172293]],195091:[[172558]],195092:[[172689]],195093:[[40635]],195094:[[19798]],195095:[[40697]],195096:[[40702]],195097:[[40709]],195098:[[40719]],195099:[[40726]],195100:[[40763]],195101:[[173568]]},\n64256:{64256:[[102,102],256],64257:[[102,105],256],64258:[[102,108],256],64259:[[102,102,105],256],64260:[[102,102,108],256],64261:[[383,116],256],64262:[[115,116],256],64275:[[1396,1398],256],64276:[[1396,1381],256],64277:[[1396,1387],256],64278:[[1406,1398],256],64279:[[1396,1389],256],64285:[[1497,1460],512],64286:[,26],64287:[[1522,1463],512],64288:[[1506],256],64289:[[1488],256],64290:[[1491],256],64291:[[1492],256],64292:[[1499],256],64293:[[1500],256],64294:[[1501],256],64295:[[1512],256],64296:[[1514],256],64297:[[43],256],64298:[[1513,1473],512],64299:[[1513,1474],512],64300:[[64329,1473],512],64301:[[64329,1474],512],64302:[[1488,1463],512],64303:[[1488,1464],512],64304:[[1488,1468],512],64305:[[1489,1468],512],64306:[[1490,1468],512],64307:[[1491,1468],512],64308:[[1492,1468],512],64309:[[1493,1468],512],64310:[[1494,1468],512],64312:[[1496,1468],512],64313:[[1497,1468],512],64314:[[1498,1468],512],64315:[[1499,1468],512],64316:[[1500,1468],512],64318:[[1502,1468],512],64320:[[1504,1468],512],64321:[[1505,1468],512],64323:[[1507,1468],512],64324:[[1508,1468],512],64326:[[1510,1468],512],64327:[[1511,1468],512],64328:[[1512,1468],512],64329:[[1513,1468],512],64330:[[1514,1468],512],64331:[[1493,1465],512],64332:[[1489,1471],512],64333:[[1499,1471],512],64334:[[1508,1471],512],64335:[[1488,1500],256],64336:[[1649],256],64337:[[1649],256],64338:[[1659],256],64339:[[1659],256],64340:[[1659],256],64341:[[1659],256],64342:[[1662],256],64343:[[1662],256],64344:[[1662],256],64345:[[1662],256],64346:[[1664],256],64347:[[1664],256],64348:[[1664],256],64349:[[1664],256],64350:[[1658],256],64351:[[1658],256],64352:[[1658],256],64353:[[1658],256],64354:[[1663],256],64355:[[1663],256],64356:[[1663],256],64357:[[1663],256],64358:[[1657],256],64359:[[1657],256],64360:[[1657],256],64361:[[1657],256],64362:[[1700],256],64363:[[1700],256],64364:[[1700],256],64365:[[1700],256],64366:[[1702],256],64367:[[1702],256],64368:[[1702],256],64369:[[1702],256],64370:[[1668],256],64371:[[1668],256],64372:[[1668],256],64373:[[1668],256],64374:[[1667],256],64375:[[1667],256],64376:[[1667],256],64377:[[1667],256],64378:[[1670],256],64379:[[1670],256],64380:[[1670],256],64381:[[1670],256],64382:[[1671],256],64383:[[1671],256],64384:[[1671],256],64385:[[1671],256],64386:[[1677],256],64387:[[1677],256],64388:[[1676],256],64389:[[1676],256],64390:[[1678],256],64391:[[1678],256],64392:[[1672],256],64393:[[1672],256],64394:[[1688],256],64395:[[1688],256],64396:[[1681],256],64397:[[1681],256],64398:[[1705],256],64399:[[1705],256],64400:[[1705],256],64401:[[1705],256],64402:[[1711],256],64403:[[1711],256],64404:[[1711],256],64405:[[1711],256],64406:[[1715],256],64407:[[1715],256],64408:[[1715],256],64409:[[1715],256],64410:[[1713],256],64411:[[1713],256],64412:[[1713],256],64413:[[1713],256],64414:[[1722],256],64415:[[1722],256],64416:[[1723],256],64417:[[1723],256],64418:[[1723],256],64419:[[1723],256],64420:[[1728],256],64421:[[1728],256],64422:[[1729],256],64423:[[1729],256],64424:[[1729],256],64425:[[1729],256],64426:[[1726],256],64427:[[1726],256],64428:[[1726],256],64429:[[1726],256],64430:[[1746],256],64431:[[1746],256],64432:[[1747],256],64433:[[1747],256],64467:[[1709],256],64468:[[1709],256],64469:[[1709],256],64470:[[1709],256],64471:[[1735],256],64472:[[1735],256],64473:[[1734],256],64474:[[1734],256],64475:[[1736],256],64476:[[1736],256],64477:[[1655],256],64478:[[1739],256],64479:[[1739],256],64480:[[1733],256],64481:[[1733],256],64482:[[1737],256],64483:[[1737],256],64484:[[1744],256],64485:[[1744],256],64486:[[1744],256],64487:[[1744],256],64488:[[1609],256],64489:[[1609],256],64490:[[1574,1575],256],64491:[[1574,1575],256],64492:[[1574,1749],256],64493:[[1574,1749],256],64494:[[1574,1608],256],64495:[[1574,1608],256],64496:[[1574,1735],256],64497:[[1574,1735],256],64498:[[1574,1734],256],64499:[[1574,1734],256],64500:[[1574,1736],256],64501:[[1574,1736],256],64502:[[1574,1744],256],64503:[[1574,1744],256],64504:[[1574,1744],256],64505:[[1574,1609],256],64506:[[1574,1609],256],64507:[[1574,1609],256],64508:[[1740],256],64509:[[1740],256],64510:[[1740],256],64511:[[1740],256]},\n64512:{64512:[[1574,1580],256],64513:[[1574,1581],256],64514:[[1574,1605],256],64515:[[1574,1609],256],64516:[[1574,1610],256],64517:[[1576,1580],256],64518:[[1576,1581],256],64519:[[1576,1582],256],64520:[[1576,1605],256],64521:[[1576,1609],256],64522:[[1576,1610],256],64523:[[1578,1580],256],64524:[[1578,1581],256],64525:[[1578,1582],256],64526:[[1578,1605],256],64527:[[1578,1609],256],64528:[[1578,1610],256],64529:[[1579,1580],256],64530:[[1579,1605],256],64531:[[1579,1609],256],64532:[[1579,1610],256],64533:[[1580,1581],256],64534:[[1580,1605],256],64535:[[1581,1580],256],64536:[[1581,1605],256],64537:[[1582,1580],256],64538:[[1582,1581],256],64539:[[1582,1605],256],64540:[[1587,1580],256],64541:[[1587,1581],256],64542:[[1587,1582],256],64543:[[1587,1605],256],64544:[[1589,1581],256],64545:[[1589,1605],256],64546:[[1590,1580],256],64547:[[1590,1581],256],64548:[[1590,1582],256],64549:[[1590,1605],256],64550:[[1591,1581],256],64551:[[1591,1605],256],64552:[[1592,1605],256],64553:[[1593,1580],256],64554:[[1593,1605],256],64555:[[1594,1580],256],64556:[[1594,1605],256],64557:[[1601,1580],256],64558:[[1601,1581],256],64559:[[1601,1582],256],64560:[[1601,1605],256],64561:[[1601,1609],256],64562:[[1601,1610],256],64563:[[1602,1581],256],64564:[[1602,1605],256],64565:[[1602,1609],256],64566:[[1602,1610],256],64567:[[1603,1575],256],64568:[[1603,1580],256],64569:[[1603,1581],256],64570:[[1603,1582],256],64571:[[1603,1604],256],64572:[[1603,1605],256],64573:[[1603,1609],256],64574:[[1603,1610],256],64575:[[1604,1580],256],64576:[[1604,1581],256],64577:[[1604,1582],256],64578:[[1604,1605],256],64579:[[1604,1609],256],64580:[[1604,1610],256],64581:[[1605,1580],256],64582:[[1605,1581],256],64583:[[1605,1582],256],64584:[[1605,1605],256],64585:[[1605,1609],256],64586:[[1605,1610],256],64587:[[1606,1580],256],64588:[[1606,1581],256],64589:[[1606,1582],256],64590:[[1606,1605],256],64591:[[1606,1609],256],64592:[[1606,1610],256],64593:[[1607,1580],256],64594:[[1607,1605],256],64595:[[1607,1609],256],64596:[[1607,1610],256],64597:[[1610,1580],256],64598:[[1610,1581],256],64599:[[1610,1582],256],64600:[[1610,1605],256],64601:[[1610,1609],256],64602:[[1610,1610],256],64603:[[1584,1648],256],64604:[[1585,1648],256],64605:[[1609,1648],256],64606:[[32,1612,1617],256],64607:[[32,1613,1617],256],64608:[[32,1614,1617],256],64609:[[32,1615,1617],256],64610:[[32,1616,1617],256],64611:[[32,1617,1648],256],64612:[[1574,1585],256],64613:[[1574,1586],256],64614:[[1574,1605],256],64615:[[1574,1606],256],64616:[[1574,1609],256],64617:[[1574,1610],256],64618:[[1576,1585],256],64619:[[1576,1586],256],64620:[[1576,1605],256],64621:[[1576,1606],256],64622:[[1576,1609],256],64623:[[1576,1610],256],64624:[[1578,1585],256],64625:[[1578,1586],256],64626:[[1578,1605],256],64627:[[1578,1606],256],64628:[[1578,1609],256],64629:[[1578,1610],256],64630:[[1579,1585],256],64631:[[1579,1586],256],64632:[[1579,1605],256],64633:[[1579,1606],256],64634:[[1579,1609],256],64635:[[1579,1610],256],64636:[[1601,1609],256],64637:[[1601,1610],256],64638:[[1602,1609],256],64639:[[1602,1610],256],64640:[[1603,1575],256],64641:[[1603,1604],256],64642:[[1603,1605],256],64643:[[1603,1609],256],64644:[[1603,1610],256],64645:[[1604,1605],256],64646:[[1604,1609],256],64647:[[1604,1610],256],64648:[[1605,1575],256],64649:[[1605,1605],256],64650:[[1606,1585],256],64651:[[1606,1586],256],64652:[[1606,1605],256],64653:[[1606,1606],256],64654:[[1606,1609],256],64655:[[1606,1610],256],64656:[[1609,1648],256],64657:[[1610,1585],256],64658:[[1610,1586],256],64659:[[1610,1605],256],64660:[[1610,1606],256],64661:[[1610,1609],256],64662:[[1610,1610],256],64663:[[1574,1580],256],64664:[[1574,1581],256],64665:[[1574,1582],256],64666:[[1574,1605],256],64667:[[1574,1607],256],64668:[[1576,1580],256],64669:[[1576,1581],256],64670:[[1576,1582],256],64671:[[1576,1605],256],64672:[[1576,1607],256],64673:[[1578,1580],256],64674:[[1578,1581],256],64675:[[1578,1582],256],64676:[[1578,1605],256],64677:[[1578,1607],256],64678:[[1579,1605],256],64679:[[1580,1581],256],64680:[[1580,1605],256],64681:[[1581,1580],256],64682:[[1581,1605],256],64683:[[1582,1580],256],64684:[[1582,1605],256],64685:[[1587,1580],256],64686:[[1587,1581],256],64687:[[1587,1582],256],64688:[[1587,1605],256],64689:[[1589,1581],256],64690:[[1589,1582],256],64691:[[1589,1605],256],64692:[[1590,1580],256],64693:[[1590,1581],256],64694:[[1590,1582],256],64695:[[1590,1605],256],64696:[[1591,1581],256],64697:[[1592,1605],256],64698:[[1593,1580],256],64699:[[1593,1605],256],64700:[[1594,1580],256],64701:[[1594,1605],256],64702:[[1601,1580],256],64703:[[1601,1581],256],64704:[[1601,1582],256],64705:[[1601,1605],256],64706:[[1602,1581],256],64707:[[1602,1605],256],64708:[[1603,1580],256],64709:[[1603,1581],256],64710:[[1603,1582],256],64711:[[1603,1604],256],64712:[[1603,1605],256],64713:[[1604,1580],256],64714:[[1604,1581],256],64715:[[1604,1582],256],64716:[[1604,1605],256],64717:[[1604,1607],256],64718:[[1605,1580],256],64719:[[1605,1581],256],64720:[[1605,1582],256],64721:[[1605,1605],256],64722:[[1606,1580],256],64723:[[1606,1581],256],64724:[[1606,1582],256],64725:[[1606,1605],256],64726:[[1606,1607],256],64727:[[1607,1580],256],64728:[[1607,1605],256],64729:[[1607,1648],256],64730:[[1610,1580],256],64731:[[1610,1581],256],64732:[[1610,1582],256],64733:[[1610,1605],256],64734:[[1610,1607],256],64735:[[1574,1605],256],64736:[[1574,1607],256],64737:[[1576,1605],256],64738:[[1576,1607],256],64739:[[1578,1605],256],64740:[[1578,1607],256],64741:[[1579,1605],256],64742:[[1579,1607],256],64743:[[1587,1605],256],64744:[[1587,1607],256],64745:[[1588,1605],256],64746:[[1588,1607],256],64747:[[1603,1604],256],64748:[[1603,1605],256],64749:[[1604,1605],256],64750:[[1606,1605],256],64751:[[1606,1607],256],64752:[[1610,1605],256],64753:[[1610,1607],256],64754:[[1600,1614,1617],256],64755:[[1600,1615,1617],256],64756:[[1600,1616,1617],256],64757:[[1591,1609],256],64758:[[1591,1610],256],64759:[[1593,1609],256],64760:[[1593,1610],256],64761:[[1594,1609],256],64762:[[1594,1610],256],64763:[[1587,1609],256],64764:[[1587,1610],256],64765:[[1588,1609],256],64766:[[1588,1610],256],64767:[[1581,1609],256]},\n64768:{64768:[[1581,1610],256],64769:[[1580,1609],256],64770:[[1580,1610],256],64771:[[1582,1609],256],64772:[[1582,1610],256],64773:[[1589,1609],256],64774:[[1589,1610],256],64775:[[1590,1609],256],64776:[[1590,1610],256],64777:[[1588,1580],256],64778:[[1588,1581],256],64779:[[1588,1582],256],64780:[[1588,1605],256],64781:[[1588,1585],256],64782:[[1587,1585],256],64783:[[1589,1585],256],64784:[[1590,1585],256],64785:[[1591,1609],256],64786:[[1591,1610],256],64787:[[1593,1609],256],64788:[[1593,1610],256],64789:[[1594,1609],256],64790:[[1594,1610],256],64791:[[1587,1609],256],64792:[[1587,1610],256],64793:[[1588,1609],256],64794:[[1588,1610],256],64795:[[1581,1609],256],64796:[[1581,1610],256],64797:[[1580,1609],256],64798:[[1580,1610],256],64799:[[1582,1609],256],64800:[[1582,1610],256],64801:[[1589,1609],256],64802:[[1589,1610],256],64803:[[1590,1609],256],64804:[[1590,1610],256],64805:[[1588,1580],256],64806:[[1588,1581],256],64807:[[1588,1582],256],64808:[[1588,1605],256],64809:[[1588,1585],256],64810:[[1587,1585],256],64811:[[1589,1585],256],64812:[[1590,1585],256],64813:[[1588,1580],256],64814:[[1588,1581],256],64815:[[1588,1582],256],64816:[[1588,1605],256],64817:[[1587,1607],256],64818:[[1588,1607],256],64819:[[1591,1605],256],64820:[[1587,1580],256],64821:[[1587,1581],256],64822:[[1587,1582],256],64823:[[1588,1580],256],64824:[[1588,1581],256],64825:[[1588,1582],256],64826:[[1591,1605],256],64827:[[1592,1605],256],64828:[[1575,1611],256],64829:[[1575,1611],256],64848:[[1578,1580,1605],256],64849:[[1578,1581,1580],256],64850:[[1578,1581,1580],256],64851:[[1578,1581,1605],256],64852:[[1578,1582,1605],256],64853:[[1578,1605,1580],256],64854:[[1578,1605,1581],256],64855:[[1578,1605,1582],256],64856:[[1580,1605,1581],256],64857:[[1580,1605,1581],256],64858:[[1581,1605,1610],256],64859:[[1581,1605,1609],256],64860:[[1587,1581,1580],256],64861:[[1587,1580,1581],256],64862:[[1587,1580,1609],256],64863:[[1587,1605,1581],256],64864:[[1587,1605,1581],256],64865:[[1587,1605,1580],256],64866:[[1587,1605,1605],256],64867:[[1587,1605,1605],256],64868:[[1589,1581,1581],256],64869:[[1589,1581,1581],256],64870:[[1589,1605,1605],256],64871:[[1588,1581,1605],256],64872:[[1588,1581,1605],256],64873:[[1588,1580,1610],256],64874:[[1588,1605,1582],256],64875:[[1588,1605,1582],256],64876:[[1588,1605,1605],256],64877:[[1588,1605,1605],256],64878:[[1590,1581,1609],256],64879:[[1590,1582,1605],256],64880:[[1590,1582,1605],256],64881:[[1591,1605,1581],256],64882:[[1591,1605,1581],256],64883:[[1591,1605,1605],256],64884:[[1591,1605,1610],256],64885:[[1593,1580,1605],256],64886:[[1593,1605,1605],256],64887:[[1593,1605,1605],256],64888:[[1593,1605,1609],256],64889:[[1594,1605,1605],256],64890:[[1594,1605,1610],256],64891:[[1594,1605,1609],256],64892:[[1601,1582,1605],256],64893:[[1601,1582,1605],256],64894:[[1602,1605,1581],256],64895:[[1602,1605,1605],256],64896:[[1604,1581,1605],256],64897:[[1604,1581,1610],256],64898:[[1604,1581,1609],256],64899:[[1604,1580,1580],256],64900:[[1604,1580,1580],256],64901:[[1604,1582,1605],256],64902:[[1604,1582,1605],256],64903:[[1604,1605,1581],256],64904:[[1604,1605,1581],256],64905:[[1605,1581,1580],256],64906:[[1605,1581,1605],256],64907:[[1605,1581,1610],256],64908:[[1605,1580,1581],256],64909:[[1605,1580,1605],256],64910:[[1605,1582,1580],256],64911:[[1605,1582,1605],256],64914:[[1605,1580,1582],256],64915:[[1607,1605,1580],256],64916:[[1607,1605,1605],256],64917:[[1606,1581,1605],256],64918:[[1606,1581,1609],256],64919:[[1606,1580,1605],256],64920:[[1606,1580,1605],256],64921:[[1606,1580,1609],256],64922:[[1606,1605,1610],256],64923:[[1606,1605,1609],256],64924:[[1610,1605,1605],256],64925:[[1610,1605,1605],256],64926:[[1576,1582,1610],256],64927:[[1578,1580,1610],256],64928:[[1578,1580,1609],256],64929:[[1578,1582,1610],256],64930:[[1578,1582,1609],256],64931:[[1578,1605,1610],256],64932:[[1578,1605,1609],256],64933:[[1580,1605,1610],256],64934:[[1580,1581,1609],256],64935:[[1580,1605,1609],256],64936:[[1587,1582,1609],256],64937:[[1589,1581,1610],256],64938:[[1588,1581,1610],256],64939:[[1590,1581,1610],256],64940:[[1604,1580,1610],256],64941:[[1604,1605,1610],256],64942:[[1610,1581,1610],256],64943:[[1610,1580,1610],256],64944:[[1610,1605,1610],256],64945:[[1605,1605,1610],256],64946:[[1602,1605,1610],256],64947:[[1606,1581,1610],256],64948:[[1602,1605,1581],256],64949:[[1604,1581,1605],256],64950:[[1593,1605,1610],256],64951:[[1603,1605,1610],256],64952:[[1606,1580,1581],256],64953:[[1605,1582,1610],256],64954:[[1604,1580,1605],256],64955:[[1603,1605,1605],256],64956:[[1604,1580,1605],256],64957:[[1606,1580,1581],256],64958:[[1580,1581,1610],256],64959:[[1581,1580,1610],256],64960:[[1605,1580,1610],256],64961:[[1601,1605,1610],256],64962:[[1576,1581,1610],256],64963:[[1603,1605,1605],256],64964:[[1593,1580,1605],256],64965:[[1589,1605,1605],256],64966:[[1587,1582,1610],256],64967:[[1606,1580,1610],256],65008:[[1589,1604,1746],256],65009:[[1602,1604,1746],256],65010:[[1575,1604,1604,1607],256],65011:[[1575,1603,1576,1585],256],65012:[[1605,1581,1605,1583],256],65013:[[1589,1604,1593,1605],256],65014:[[1585,1587,1608,1604],256],65015:[[1593,1604,1610,1607],256],65016:[[1608,1587,1604,1605],256],65017:[[1589,1604,1609],256],65018:[[1589,1604,1609,32,1575,1604,1604,1607,32,1593,1604,1610,1607,32,1608,1587,1604,1605],256],65019:[[1580,1604,32,1580,1604,1575,1604,1607],256],65020:[[1585,1740,1575,1604],256]},\n65024:{65040:[[44],256],65041:[[12289],256],65042:[[12290],256],65043:[[58],256],65044:[[59],256],65045:[[33],256],65046:[[63],256],65047:[[12310],256],65048:[[12311],256],65049:[[8230],256],65056:[,230],65057:[,230],65058:[,230],65059:[,230],65060:[,230],65061:[,230],65062:[,230],65063:[,220],65064:[,220],65065:[,220],65066:[,220],65067:[,220],65068:[,220],65069:[,220],65072:[[8229],256],65073:[[8212],256],65074:[[8211],256],65075:[[95],256],65076:[[95],256],65077:[[40],256],65078:[[41],256],65079:[[123],256],65080:[[125],256],65081:[[12308],256],65082:[[12309],256],65083:[[12304],256],65084:[[12305],256],65085:[[12298],256],65086:[[12299],256],65087:[[12296],256],65088:[[12297],256],65089:[[12300],256],65090:[[12301],256],65091:[[12302],256],65092:[[12303],256],65095:[[91],256],65096:[[93],256],65097:[[8254],256],65098:[[8254],256],65099:[[8254],256],65100:[[8254],256],65101:[[95],256],65102:[[95],256],65103:[[95],256],65104:[[44],256],65105:[[12289],256],65106:[[46],256],65108:[[59],256],65109:[[58],256],65110:[[63],256],65111:[[33],256],65112:[[8212],256],65113:[[40],256],65114:[[41],256],65115:[[123],256],65116:[[125],256],65117:[[12308],256],65118:[[12309],256],65119:[[35],256],65120:[[38],256],65121:[[42],256],65122:[[43],256],65123:[[45],256],65124:[[60],256],65125:[[62],256],65126:[[61],256],65128:[[92],256],65129:[[36],256],65130:[[37],256],65131:[[64],256],65136:[[32,1611],256],65137:[[1600,1611],256],65138:[[32,1612],256],65140:[[32,1613],256],65142:[[32,1614],256],65143:[[1600,1614],256],65144:[[32,1615],256],65145:[[1600,1615],256],65146:[[32,1616],256],65147:[[1600,1616],256],65148:[[32,1617],256],65149:[[1600,1617],256],65150:[[32,1618],256],65151:[[1600,1618],256],65152:[[1569],256],65153:[[1570],256],65154:[[1570],256],65155:[[1571],256],65156:[[1571],256],65157:[[1572],256],65158:[[1572],256],65159:[[1573],256],65160:[[1573],256],65161:[[1574],256],65162:[[1574],256],65163:[[1574],256],65164:[[1574],256],65165:[[1575],256],65166:[[1575],256],65167:[[1576],256],65168:[[1576],256],65169:[[1576],256],65170:[[1576],256],65171:[[1577],256],65172:[[1577],256],65173:[[1578],256],65174:[[1578],256],65175:[[1578],256],65176:[[1578],256],65177:[[1579],256],65178:[[1579],256],65179:[[1579],256],65180:[[1579],256],65181:[[1580],256],65182:[[1580],256],65183:[[1580],256],65184:[[1580],256],65185:[[1581],256],65186:[[1581],256],65187:[[1581],256],65188:[[1581],256],65189:[[1582],256],65190:[[1582],256],65191:[[1582],256],65192:[[1582],256],65193:[[1583],256],65194:[[1583],256],65195:[[1584],256],65196:[[1584],256],65197:[[1585],256],65198:[[1585],256],65199:[[1586],256],65200:[[1586],256],65201:[[1587],256],65202:[[1587],256],65203:[[1587],256],65204:[[1587],256],65205:[[1588],256],65206:[[1588],256],65207:[[1588],256],65208:[[1588],256],65209:[[1589],256],65210:[[1589],256],65211:[[1589],256],65212:[[1589],256],65213:[[1590],256],65214:[[1590],256],65215:[[1590],256],65216:[[1590],256],65217:[[1591],256],65218:[[1591],256],65219:[[1591],256],65220:[[1591],256],65221:[[1592],256],65222:[[1592],256],65223:[[1592],256],65224:[[1592],256],65225:[[1593],256],65226:[[1593],256],65227:[[1593],256],65228:[[1593],256],65229:[[1594],256],65230:[[1594],256],65231:[[1594],256],65232:[[1594],256],65233:[[1601],256],65234:[[1601],256],65235:[[1601],256],65236:[[1601],256],65237:[[1602],256],65238:[[1602],256],65239:[[1602],256],65240:[[1602],256],65241:[[1603],256],65242:[[1603],256],65243:[[1603],256],65244:[[1603],256],65245:[[1604],256],65246:[[1604],256],65247:[[1604],256],65248:[[1604],256],65249:[[1605],256],65250:[[1605],256],65251:[[1605],256],65252:[[1605],256],65253:[[1606],256],65254:[[1606],256],65255:[[1606],256],65256:[[1606],256],65257:[[1607],256],65258:[[1607],256],65259:[[1607],256],65260:[[1607],256],65261:[[1608],256],65262:[[1608],256],65263:[[1609],256],65264:[[1609],256],65265:[[1610],256],65266:[[1610],256],65267:[[1610],256],65268:[[1610],256],65269:[[1604,1570],256],65270:[[1604,1570],256],65271:[[1604,1571],256],65272:[[1604,1571],256],65273:[[1604,1573],256],65274:[[1604,1573],256],65275:[[1604,1575],256],65276:[[1604,1575],256]},\n65280:{65281:[[33],256],65282:[[34],256],65283:[[35],256],65284:[[36],256],65285:[[37],256],65286:[[38],256],65287:[[39],256],65288:[[40],256],65289:[[41],256],65290:[[42],256],65291:[[43],256],65292:[[44],256],65293:[[45],256],65294:[[46],256],65295:[[47],256],65296:[[48],256],65297:[[49],256],65298:[[50],256],65299:[[51],256],65300:[[52],256],65301:[[53],256],65302:[[54],256],65303:[[55],256],65304:[[56],256],65305:[[57],256],65306:[[58],256],65307:[[59],256],65308:[[60],256],65309:[[61],256],65310:[[62],256],65311:[[63],256],65312:[[64],256],65313:[[65],256],65314:[[66],256],65315:[[67],256],65316:[[68],256],65317:[[69],256],65318:[[70],256],65319:[[71],256],65320:[[72],256],65321:[[73],256],65322:[[74],256],65323:[[75],256],65324:[[76],256],65325:[[77],256],65326:[[78],256],65327:[[79],256],65328:[[80],256],65329:[[81],256],65330:[[82],256],65331:[[83],256],65332:[[84],256],65333:[[85],256],65334:[[86],256],65335:[[87],256],65336:[[88],256],65337:[[89],256],65338:[[90],256],65339:[[91],256],65340:[[92],256],65341:[[93],256],65342:[[94],256],65343:[[95],256],65344:[[96],256],65345:[[97],256],65346:[[98],256],65347:[[99],256],65348:[[100],256],65349:[[101],256],65350:[[102],256],65351:[[103],256],65352:[[104],256],65353:[[105],256],65354:[[106],256],65355:[[107],256],65356:[[108],256],65357:[[109],256],65358:[[110],256],65359:[[111],256],65360:[[112],256],65361:[[113],256],65362:[[114],256],65363:[[115],256],65364:[[116],256],65365:[[117],256],65366:[[118],256],65367:[[119],256],65368:[[120],256],65369:[[121],256],65370:[[122],256],65371:[[123],256],65372:[[124],256],65373:[[125],256],65374:[[126],256],65375:[[10629],256],65376:[[10630],256],65377:[[12290],256],65378:[[12300],256],65379:[[12301],256],65380:[[12289],256],65381:[[12539],256],65382:[[12530],256],65383:[[12449],256],65384:[[12451],256],65385:[[12453],256],65386:[[12455],256],65387:[[12457],256],65388:[[12515],256],65389:[[12517],256],65390:[[12519],256],65391:[[12483],256],65392:[[12540],256],65393:[[12450],256],65394:[[12452],256],65395:[[12454],256],65396:[[12456],256],65397:[[12458],256],65398:[[12459],256],65399:[[12461],256],65400:[[12463],256],65401:[[12465],256],65402:[[12467],256],65403:[[12469],256],65404:[[12471],256],65405:[[12473],256],65406:[[12475],256],65407:[[12477],256],65408:[[12479],256],65409:[[12481],256],65410:[[12484],256],65411:[[12486],256],65412:[[12488],256],65413:[[12490],256],65414:[[12491],256],65415:[[12492],256],65416:[[12493],256],65417:[[12494],256],65418:[[12495],256],65419:[[12498],256],65420:[[12501],256],65421:[[12504],256],65422:[[12507],256],65423:[[12510],256],65424:[[12511],256],65425:[[12512],256],65426:[[12513],256],65427:[[12514],256],65428:[[12516],256],65429:[[12518],256],65430:[[12520],256],65431:[[12521],256],65432:[[12522],256],65433:[[12523],256],65434:[[12524],256],65435:[[12525],256],65436:[[12527],256],65437:[[12531],256],65438:[[12441],256],65439:[[12442],256],65440:[[12644],256],65441:[[12593],256],65442:[[12594],256],65443:[[12595],256],65444:[[12596],256],65445:[[12597],256],65446:[[12598],256],65447:[[12599],256],65448:[[12600],256],65449:[[12601],256],65450:[[12602],256],65451:[[12603],256],65452:[[12604],256],65453:[[12605],256],65454:[[12606],256],65455:[[12607],256],65456:[[12608],256],65457:[[12609],256],65458:[[12610],256],65459:[[12611],256],65460:[[12612],256],65461:[[12613],256],65462:[[12614],256],65463:[[12615],256],65464:[[12616],256],65465:[[12617],256],65466:[[12618],256],65467:[[12619],256],65468:[[12620],256],65469:[[12621],256],65470:[[12622],256],65474:[[12623],256],65475:[[12624],256],65476:[[12625],256],65477:[[12626],256],65478:[[12627],256],65479:[[12628],256],65482:[[12629],256],65483:[[12630],256],65484:[[12631],256],65485:[[12632],256],65486:[[12633],256],65487:[[12634],256],65490:[[12635],256],65491:[[12636],256],65492:[[12637],256],65493:[[12638],256],65494:[[12639],256],65495:[[12640],256],65498:[[12641],256],65499:[[12642],256],65500:[[12643],256],65504:[[162],256],65505:[[163],256],65506:[[172],256],65507:[[175],256],65508:[[166],256],65509:[[165],256],65510:[[8361],256],65512:[[9474],256],65513:[[8592],256],65514:[[8593],256],65515:[[8594],256],65516:[[8595],256],65517:[[9632],256],65518:[[9675],256]}\n\n};\n\n   /***** Module to export */\n   var unorm = {\n      nfc: nfc,\n      nfd: nfd,\n      nfkc: nfkc,\n      nfkd: nfkd\n   };\n\n   /*globals module:true,define:true*/\n\n   // CommonJS\n   if (typeof module === \"object\") {\n      module.exports = unorm;\n\n   // AMD\n   } else if (typeof define === \"function\" && define.amd) {\n      define(\"unorm\", function () {\n         return unorm;\n      });\n\n   // Global\n   } else {\n      root.unorm = unorm;\n   }\n\n   /***** Export as shim for String::normalize method *****/\n   /*\n      http://wiki.ecmascript.org/doku.php?id=harmony:specification_drafts#november_8_2013_draft_rev_21\n\n      21.1.3.12 String.prototype.normalize(form=\"NFC\")\n      When the normalize method is called with one argument form, the following steps are taken:\n\n      1. Let O be CheckObjectCoercible(this value).\n      2. Let S be ToString(O).\n      3. ReturnIfAbrupt(S).\n      4. If form is not provided or undefined let form be \"NFC\".\n      5. Let f be ToString(form).\n      6. ReturnIfAbrupt(f).\n      7. If f is not one of \"NFC\", \"NFD\", \"NFKC\", or \"NFKD\", then throw a RangeError Exception.\n      8. Let ns be the String value is the result of normalizing S into the normalization form named by f as specified in Unicode Standard Annex #15, UnicodeNormalizatoin Forms.\n      9. Return ns.\n\n      The length property of the normalize method is 0.\n\n      *NOTE* The normalize function is intentionally generic; it does not require that its this value be a String object. Therefore it can be transferred to other kinds of objects for use as a method.\n   */\n    unorm.shimApplied = false;\n\n   if (!String.prototype.normalize) {\n      Object.defineProperty(String.prototype, \"normalize\", {\n         enumerable: false,\n         configurable: true,\n         writable: true,\n         value: function normalize (/*form*/) {\n            \n            var str = \"\" + this;\n            var form = arguments[0] === undefined ? \"NFC\" : arguments[0];\n\n            if (this === null || this === undefined) {\n               throw new TypeError(\"Cannot call method on \" + Object.prototype.toString.call(this));\n            }\n\n            if (form === \"NFC\") {\n               return unorm.nfc(str);\n            } else if (form === \"NFD\") {\n               return unorm.nfd(str);\n            } else if (form === \"NFKC\") {\n               return unorm.nfkc(str);\n            } else if (form === \"NFKD\") {\n               return unorm.nfkd(str);\n            } else {\n               throw new RangeError(\"Invalid normalization form: \" + form);\n            }\n         }\n      });\n\n      unorm.shimApplied = true;\n   }\n}(this));\n","/*\n * List of Unicode code that are flagged as separator.\n *\n * Contains Unicode code of:\n * - Zs = Separator, space\n * - Zl = Separator, line\n * - Zp = Separator, paragraph\n *\n * This list has been computed from http://unicode.org/Public/UNIDATA/UnicodeData.txt\n * curl -s http://unicode.org/Public/UNIDATA/UnicodeData.txt | grep -E ';Zs;|;Zl;|;Zp;' | cut -d \\; -f 1 | xargs -I{} printf '%d, ' 0x{}\n *\n */\nexports.Z = [32, 160, 5760, 8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8232, 8233, 8239, 8287, 12288];\n","export default \"# 从0开始搭建Fabric网络:Channel\\n## 定义channel\\n上一节，小明定义了一个联盟X1，并且把企业Ming加入至联盟中。Channel与联盟，其实是同一个东西的不同表现。联盟在Fabric技术上的实现就是channel。企业之间结成联盟，在技术上就是指企业对应的peer节点加入同一个channel。\\n\\n## 现在开始添加channel\\n第一，创建目录04-creating-a-channel, 进入该目录：\\n```\\nmkdir 04-creating-a-channel\\ncd 04-creating-a-channel\\n```\\n\\n第二，在configtx.yaml中定义channel\\n```\\n    CC1:\\n        Consortium: X1\\n        <<: *ChannelDefaults\\n        Application:\\n            <<: *ApplicationDefaults\\n            Organizations:\\n                - *Ming\\n            Capabilities:\\n                <<: *ApplicationCapabilities\\n```\\n第三，在docker-compose.yaml中定义cli容器，用于创建channel\\n```\\n  cli:\\n    container_name: cli\\n    image: hyperledger/fabric-tools:$IMAGE_TAG\\n    tty: true\\n    stdin_open: true\\n    environment:\\n      - GOPATH=/opt/gopath\\n      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock\\n      #- FABRIC_LOGGING_SPEC=DEBUG\\n      - FABRIC_LOGGING_SPEC=INFO\\n      - CORE_PEER_ID=cli\\n      - CORE_PEER_ADDRESS=ming.coffeeshop.com:7051\\n      - CORE_PEER_LOCALMSPID=MingMSP\\n      - CORE_PEER_TLS_ENABLED=true\\n      - CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/ming.coffeeshop.com/peers/peer0.ming.coffeeshop.com/tls/server.crt\\n      - CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/ming.coffeeshop.com/peers/peer0.ming.coffeeshop.com/tls/server.key\\n      - CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/ming.coffeeshop.com/peers/peer0.ming.coffeeshop.com/tls/ca.crt\\n      - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/ming.coffeeshop.com/users/Admin@ming.coffeeshop.com/msp\\n    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer\\n    command: /bin/bash\\n    volumes:\\n        - /var/run/:/host/var/run/\\n        - ./organizations:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/\\n        - ./channel-artifacts:/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts\\n    depends_on:\\n      - orderer.coffeeshop.com\\n    networks:\\n      - basic\\n```\\n第四，启动网络:\\n```\\n./network.sh custom\\n```\\n## 检查docker容器状态\\n```\\ndocker ps\\nCONTAINER ID        IMAGE                              COMMAND             CREATED             STATUS              PORTS                    NAMES\\ne04af9c615ad        hyperledger/fabric-tools:2.2.0     \\\"/bin/bash\\\"         5 minutes ago       Up 5 minutes                                 cli\\n9fccfa81938a        hyperledger/fabric-orderer:2.2.0   \\\"orderer\\\"           5 minutes ago       Up 5 minutes        0.0.0.0:7050->7050/tcp   orderer.coffeeshop.com\\n```\\n## 网络示意图\\n![consortium](/book/fabric/coffee04.png)\\n\\n## 解释命令\\n执行./network.sh custom过程中，分别执行了下列的命令：\\n- clear： 清空上一次创建的网络\\n- crypto： 创建证书文件\\n- genesis： 创建创世块\\n- up：启动docker容器(orderer和cli)\\n- createChanTx: 这是本节新加的命令，用于创建交易数据./channel-artifacts/c1.tx\\n- createChan: 这是本节新加的命令，用于创建区块数据./channel-artifacts/c1.block\\n\\n注：\\n- 本节源码位于：[04-creating-a-channel](https://github.com/stephenwu2020/hfcoffeeshop/tree/master/04-creating-a-channel)\";","/* \n * List of Unicode code that are flagged as letter.\n *\n * Contains Unicode code of:\n * - Lu = Letter, uppercase\n * - Ll = Letter, lowercase\n * - Lt = Letter, titlecase\n * - Lm = Letter, modifier\n * - Lo = Letter, other\n *\n * This list has been computed from http://unicode.org/Public/UNIDATA/UnicodeData.txt\n *\n */\n\nexports.L = [65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 170, 181, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 736, 737, 738, 739, 740, 748, 750, 880, 881, 882, 883, 884, 886, 887, 890, 891, 892, 893, 895, 902, 904, 905, 906, 908, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1369, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1520, 1521, 1522, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1646, 1647, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1749, 1765, 1766, 1774, 1775, 1786, 1787, 1788, 1791, 1808, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1969, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2036, 2037, 2042, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2074, 2084, 2088, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315, 2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336, 2337, 2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361, 2365, 2384, 2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2447, 2448, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2474, 2475, 2476, 2477, 2478, 2479, 2480, 2482, 2486, 2487, 2488, 2489, 2493, 2510, 2524, 2525, 2527, 2528, 2529, 2544, 2545, 2565, 2566, 2567, 2568, 2569, 2570, 2575, 2576, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2610, 2611, 2613, 2614, 2616, 2617, 2649, 2650, 2651, 2652, 2654, 2674, 2675, 2676, 2693, 2694, 2695, 2696, 2697, 2698, 2699, 2700, 2701, 2703, 2704, 2705, 2707, 2708, 2709, 2710, 2711, 2712, 2713, 2714, 2715, 2716, 2717, 2718, 2719, 2720, 2721, 2722, 2723, 2724, 2725, 2726, 2727, 2728, 2730, 2731, 2732, 2733, 2734, 2735, 2736, 2738, 2739, 2741, 2742, 2743, 2744, 2745, 2749, 2768, 2784, 2785, 2809, 2821, 2822, 2823, 2824, 2825, 2826, 2827, 2828, 2831, 2832, 2835, 2836, 2837, 2838, 2839, 2840, 2841, 2842, 2843, 2844, 2845, 2846, 2847, 2848, 2849, 2850, 2851, 2852, 2853, 2854, 2855, 2856, 2858, 2859, 2860, 2861, 2862, 2863, 2864, 2866, 2867, 2869, 2870, 2871, 2872, 2873, 2877, 2908, 2909, 2911, 2912, 2913, 2929, 2947, 2949, 2950, 2951, 2952, 2953, 2954, 2958, 2959, 2960, 2962, 2963, 2964, 2965, 2969, 2970, 2972, 2974, 2975, 2979, 2980, 2984, 2985, 2986, 2990, 2991, 2992, 2993, 2994, 2995, 2996, 2997, 2998, 2999, 3000, 3001, 3024, 3077, 3078, 3079, 3080, 3081, 3082, 3083, 3084, 3086, 3087, 3088, 3090, 3091, 3092, 3093, 3094, 3095, 3096, 3097, 3098, 3099, 3100, 3101, 3102, 3103, 3104, 3105, 3106, 3107, 3108, 3109, 3110, 3111, 3112, 3114, 3115, 3116, 3117, 3118, 3119, 3120, 3121, 3122, 3123, 3124, 3125, 3126, 3127, 3128, 3129, 3133, 3160, 3161, 3162, 3168, 3169, 3205, 3206, 3207, 3208, 3209, 3210, 3211, 3212, 3214, 3215, 3216, 3218, 3219, 3220, 3221, 3222, 3223, 3224, 3225, 3226, 3227, 3228, 3229, 3230, 3231, 3232, 3233, 3234, 3235, 3236, 3237, 3238, 3239, 3240, 3242, 3243, 3244, 3245, 3246, 3247, 3248, 3249, 3250, 3251, 3253, 3254, 3255, 3256, 3257, 3261, 3294, 3296, 3297, 3313, 3314, 3333, 3334, 3335, 3336, 3337, 3338, 3339, 3340, 3342, 3343, 3344, 3346, 3347, 3348, 3349, 3350, 3351, 3352, 3353, 3354, 3355, 3356, 3357, 3358, 3359, 3360, 3361, 3362, 3363, 3364, 3365, 3366, 3367, 3368, 3369, 3370, 3371, 3372, 3373, 3374, 3375, 3376, 3377, 3378, 3379, 3380, 3381, 3382, 3383, 3384, 3385, 3386, 3389, 3406, 3423, 3424, 3425, 3450, 3451, 3452, 3453, 3454, 3455, 3461, 3462, 3463, 3464, 3465, 3466, 3467, 3468, 3469, 3470, 3471, 3472, 3473, 3474, 3475, 3476, 3477, 3478, 3482, 3483, 3484, 3485, 3486, 3487, 3488, 3489, 3490, 3491, 3492, 3493, 3494, 3495, 3496, 3497, 3498, 3499, 3500, 3501, 3502, 3503, 3504, 3505, 3507, 3508, 3509, 3510, 3511, 3512, 3513, 3514, 3515, 3517, 3520, 3521, 3522, 3523, 3524, 3525, 3526, 3585, 3586, 3587, 3588, 3589, 3590, 3591, 3592, 3593, 3594, 3595, 3596, 3597, 3598, 3599, 3600, 3601, 3602, 3603, 3604, 3605, 3606, 3607, 3608, 3609, 3610, 3611, 3612, 3613, 3614, 3615, 3616, 3617, 3618, 3619, 3620, 3621, 3622, 3623, 3624, 3625, 3626, 3627, 3628, 3629, 3630, 3631, 3632, 3634, 3635, 3648, 3649, 3650, 3651, 3652, 3653, 3654, 3713, 3714, 3716, 3719, 3720, 3722, 3725, 3732, 3733, 3734, 3735, 3737, 3738, 3739, 3740, 3741, 3742, 3743, 3745, 3746, 3747, 3749, 3751, 3754, 3755, 3757, 3758, 3759, 3760, 3762, 3763, 3773, 3776, 3777, 3778, 3779, 3780, 3782, 3804, 3805, 3806, 3807, 3840, 3904, 3905, 3906, 3907, 3908, 3909, 3910, 3911, 3913, 3914, 3915, 3916, 3917, 3918, 3919, 3920, 3921, 3922, 3923, 3924, 3925, 3926, 3927, 3928, 3929, 3930, 3931, 3932, 3933, 3934, 3935, 3936, 3937, 3938, 3939, 3940, 3941, 3942, 3943, 3944, 3945, 3946, 3947, 3948, 3976, 3977, 3978, 3979, 3980, 4096, 4097, 4098, 4099, 4100, 4101, 4102, 4103, 4104, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4115, 4116, 4117, 4118, 4119, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4132, 4133, 4134, 4135, 4136, 4137, 4138, 4159, 4176, 4177, 4178, 4179, 4180, 4181, 4186, 4187, 4188, 4189, 4193, 4197, 4198, 4206, 4207, 4208, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4238, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4274, 4275, 4276, 4277, 4278, 4279, 4280, 4281, 4282, 4283, 4284, 4285, 4286, 4287, 4288, 4289, 4290, 4291, 4292, 4293, 4295, 4301, 4304, 4305, 4306, 4307, 4308, 4309, 4310, 4311, 4312, 4313, 4314, 4315, 4316, 4317, 4318, 4319, 4320, 4321, 4322, 4323, 4324, 4325, 4326, 4327, 4328, 4329, 4330, 4331, 4332, 4333, 4334, 4335, 4336, 4337, 4338, 4339, 4340, 4341, 4342, 4343, 4344, 4345, 4346, 4348, 4349, 4350, 4351, 4352, 4353, 4354, 4355, 4356, 4357, 4358, 4359, 4360, 4361, 4362, 4363, 4364, 4365, 4366, 4367, 4368, 4369, 4370, 4371, 4372, 4373, 4374, 4375, 4376, 4377, 4378, 4379, 4380, 4381, 4382, 4383, 4384, 4385, 4386, 4387, 4388, 4389, 4390, 4391, 4392, 4393, 4394, 4395, 4396, 4397, 4398, 4399, 4400, 4401, 4402, 4403, 4404, 4405, 4406, 4407, 4408, 4409, 4410, 4411, 4412, 4413, 4414, 4415, 4416, 4417, 4418, 4419, 4420, 4421, 4422, 4423, 4424, 4425, 4426, 4427, 4428, 4429, 4430, 4431, 4432, 4433, 4434, 4435, 4436, 4437, 4438, 4439, 4440, 4441, 4442, 4443, 4444, 4445, 4446, 4447, 4448, 4449, 4450, 4451, 4452, 4453, 4454, 4455, 4456, 4457, 4458, 4459, 4460, 4461, 4462, 4463, 4464, 4465, 4466, 4467, 4468, 4469, 4470, 4471, 4472, 4473, 4474, 4475, 4476, 4477, 4478, 4479, 4480, 4481, 4482, 4483, 4484, 4485, 4486, 4487, 4488, 4489, 4490, 4491, 4492, 4493, 4494, 4495, 4496, 4497, 4498, 4499, 4500, 4501, 4502, 4503, 4504, 4505, 4506, 4507, 4508, 4509, 4510, 4511, 4512, 4513, 4514, 4515, 4516, 4517, 4518, 4519, 4520, 4521, 4522, 4523, 4524, 4525, 4526, 4527, 4528, 4529, 4530, 4531, 4532, 4533, 4534, 4535, 4536, 4537, 4538, 4539, 4540, 4541, 4542, 4543, 4544, 4545, 4546, 4547, 4548, 4549, 4550, 4551, 4552, 4553, 4554, 4555, 4556, 4557, 4558, 4559, 4560, 4561, 4562, 4563, 4564, 4565, 4566, 4567, 4568, 4569, 4570, 4571, 4572, 4573, 4574, 4575, 4576, 4577, 4578, 4579, 4580, 4581, 4582, 4583, 4584, 4585, 4586, 4587, 4588, 4589, 4590, 4591, 4592, 4593, 4594, 4595, 4596, 4597, 4598, 4599, 4600, 4601, 4602, 4603, 4604, 4605, 4606, 4607, 4608, 4609, 4610, 4611, 4612, 4613, 4614, 4615, 4616, 4617, 4618, 4619, 4620, 4621, 4622, 4623, 4624, 4625, 4626, 4627, 4628, 4629, 4630, 4631, 4632, 4633, 4634, 4635, 4636, 4637, 4638, 4639, 4640, 4641, 4642, 4643, 4644, 4645, 4646, 4647, 4648, 4649, 4650, 4651, 4652, 4653, 4654, 4655, 4656, 4657, 4658, 4659, 4660, 4661, 4662, 4663, 4664, 4665, 4666, 4667, 4668, 4669, 4670, 4671, 4672, 4673, 4674, 4675, 4676, 4677, 4678, 4679, 4680, 4682, 4683, 4684, 4685, 4688, 4689, 4690, 4691, 4692, 4693, 4694, 4696, 4698, 4699, 4700, 4701, 4704, 4705, 4706, 4707, 4708, 4709, 4710, 4711, 4712, 4713, 4714, 4715, 4716, 4717, 4718, 4719, 4720, 4721, 4722, 4723, 4724, 4725, 4726, 4727, 4728, 4729, 4730, 4731, 4732, 4733, 4734, 4735, 4736, 4737, 4738, 4739, 4740, 4741, 4742, 4743, 4744, 4746, 4747, 4748, 4749, 4752, 4753, 4754, 4755, 4756, 4757, 4758, 4759, 4760, 4761, 4762, 4763, 4764, 4765, 4766, 4767, 4768, 4769, 4770, 4771, 4772, 4773, 4774, 4775, 4776, 4777, 4778, 4779, 4780, 4781, 4782, 4783, 4784, 4786, 4787, 4788, 4789, 4792, 4793, 4794, 4795, 4796, 4797, 4798, 4800, 4802, 4803, 4804, 4805, 4808, 4809, 4810, 4811, 4812, 4813, 4814, 4815, 4816, 4817, 4818, 4819, 4820, 4821, 4822, 4824, 4825, 4826, 4827, 4828, 4829, 4830, 4831, 4832, 4833, 4834, 4835, 4836, 4837, 4838, 4839, 4840, 4841, 4842, 4843, 4844, 4845, 4846, 4847, 4848, 4849, 4850, 4851, 4852, 4853, 4854, 4855, 4856, 4857, 4858, 4859, 4860, 4861, 4862, 4863, 4864, 4865, 4866, 4867, 4868, 4869, 4870, 4871, 4872, 4873, 4874, 4875, 4876, 4877, 4878, 4879, 4880, 4882, 4883, 4884, 4885, 4888, 4889, 4890, 4891, 4892, 4893, 4894, 4895, 4896, 4897, 4898, 4899, 4900, 4901, 4902, 4903, 4904, 4905, 4906, 4907, 4908, 4909, 4910, 4911, 4912, 4913, 4914, 4915, 4916, 4917, 4918, 4919, 4920, 4921, 4922, 4923, 4924, 4925, 4926, 4927, 4928, 4929, 4930, 4931, 4932, 4933, 4934, 4935, 4936, 4937, 4938, 4939, 4940, 4941, 4942, 4943, 4944, 4945, 4946, 4947, 4948, 4949, 4950, 4951, 4952, 4953, 4954, 4992, 4993, 4994, 4995, 4996, 4997, 4998, 4999, 5000, 5001, 5002, 5003, 5004, 5005, 5006, 5007, 5024, 5025, 5026, 5027, 5028, 5029, 5030, 5031, 5032, 5033, 5034, 5035, 5036, 5037, 5038, 5039, 5040, 5041, 5042, 5043, 5044, 5045, 5046, 5047, 5048, 5049, 5050, 5051, 5052, 5053, 5054, 5055, 5056, 5057, 5058, 5059, 5060, 5061, 5062, 5063, 5064, 5065, 5066, 5067, 5068, 5069, 5070, 5071, 5072, 5073, 5074, 5075, 5076, 5077, 5078, 5079, 5080, 5081, 5082, 5083, 5084, 5085, 5086, 5087, 5088, 5089, 5090, 5091, 5092, 5093, 5094, 5095, 5096, 5097, 5098, 5099, 5100, 5101, 5102, 5103, 5104, 5105, 5106, 5107, 5108, 5109, 5112, 5113, 5114, 5115, 5116, 5117, 5121, 5122, 5123, 5124, 5125, 5126, 5127, 5128, 5129, 5130, 5131, 5132, 5133, 5134, 5135, 5136, 5137, 5138, 5139, 5140, 5141, 5142, 5143, 5144, 5145, 5146, 5147, 5148, 5149, 5150, 5151, 5152, 5153, 5154, 5155, 5156, 5157, 5158, 5159, 5160, 5161, 5162, 5163, 5164, 5165, 5166, 5167, 5168, 5169, 5170, 5171, 5172, 5173, 5174, 5175, 5176, 5177, 5178, 5179, 5180, 5181, 5182, 5183, 5184, 5185, 5186, 5187, 5188, 5189, 5190, 5191, 5192, 5193, 5194, 5195, 5196, 5197, 5198, 5199, 5200, 5201, 5202, 5203, 5204, 5205, 5206, 5207, 5208, 5209, 5210, 5211, 5212, 5213, 5214, 5215, 5216, 5217, 5218, 5219, 5220, 5221, 5222, 5223, 5224, 5225, 5226, 5227, 5228, 5229, 5230, 5231, 5232, 5233, 5234, 5235, 5236, 5237, 5238, 5239, 5240, 5241, 5242, 5243, 5244, 5245, 5246, 5247, 5248, 5249, 5250, 5251, 5252, 5253, 5254, 5255, 5256, 5257, 5258, 5259, 5260, 5261, 5262, 5263, 5264, 5265, 5266, 5267, 5268, 5269, 5270, 5271, 5272, 5273, 5274, 5275, 5276, 5277, 5278, 5279, 5280, 5281, 5282, 5283, 5284, 5285, 5286, 5287, 5288, 5289, 5290, 5291, 5292, 5293, 5294, 5295, 5296, 5297, 5298, 5299, 5300, 5301, 5302, 5303, 5304, 5305, 5306, 5307, 5308, 5309, 5310, 5311, 5312, 5313, 5314, 5315, 5316, 5317, 5318, 5319, 5320, 5321, 5322, 5323, 5324, 5325, 5326, 5327, 5328, 5329, 5330, 5331, 5332, 5333, 5334, 5335, 5336, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5346, 5347, 5348, 5349, 5350, 5351, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5360, 5361, 5362, 5363, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5371, 5372, 5373, 5374, 5375, 5376, 5377, 5378, 5379, 5380, 5381, 5382, 5383, 5384, 5385, 5386, 5387, 5388, 5389, 5390, 5391, 5392, 5393, 5394, 5395, 5396, 5397, 5398, 5399, 5400, 5401, 5402, 5403, 5404, 5405, 5406, 5407, 5408, 5409, 5410, 5411, 5412, 5413, 5414, 5415, 5416, 5417, 5418, 5419, 5420, 5421, 5422, 5423, 5424, 5425, 5426, 5427, 5428, 5429, 5430, 5431, 5432, 5433, 5434, 5435, 5436, 5437, 5438, 5439, 5440, 5441, 5442, 5443, 5444, 5445, 5446, 5447, 5448, 5449, 5450, 5451, 5452, 5453, 5454, 5455, 5456, 5457, 5458, 5459, 5460, 5461, 5462, 5463, 5464, 5465, 5466, 5467, 5468, 5469, 5470, 5471, 5472, 5473, 5474, 5475, 5476, 5477, 5478, 5479, 5480, 5481, 5482, 5483, 5484, 5485, 5486, 5487, 5488, 5489, 5490, 5491, 5492, 5493, 5494, 5495, 5496, 5497, 5498, 5499, 5500, 5501, 5502, 5503, 5504, 5505, 5506, 5507, 5508, 5509, 5510, 5511, 5512, 5513, 5514, 5515, 5516, 5517, 5518, 5519, 5520, 5521, 5522, 5523, 5524, 5525, 5526, 5527, 5528, 5529, 5530, 5531, 5532, 5533, 5534, 5535, 5536, 5537, 5538, 5539, 5540, 5541, 5542, 5543, 5544, 5545, 5546, 5547, 5548, 5549, 5550, 5551, 5552, 5553, 5554, 5555, 5556, 5557, 5558, 5559, 5560, 5561, 5562, 5563, 5564, 5565, 5566, 5567, 5568, 5569, 5570, 5571, 5572, 5573, 5574, 5575, 5576, 5577, 5578, 5579, 5580, 5581, 5582, 5583, 5584, 5585, 5586, 5587, 5588, 5589, 5590, 5591, 5592, 5593, 5594, 5595, 5596, 5597, 5598, 5599, 5600, 5601, 5602, 5603, 5604, 5605, 5606, 5607, 5608, 5609, 5610, 5611, 5612, 5613, 5614, 5615, 5616, 5617, 5618, 5619, 5620, 5621, 5622, 5623, 5624, 5625, 5626, 5627, 5628, 5629, 5630, 5631, 5632, 5633, 5634, 5635, 5636, 5637, 5638, 5639, 5640, 5641, 5642, 5643, 5644, 5645, 5646, 5647, 5648, 5649, 5650, 5651, 5652, 5653, 5654, 5655, 5656, 5657, 5658, 5659, 5660, 5661, 5662, 5663, 5664, 5665, 5666, 5667, 5668, 5669, 5670, 5671, 5672, 5673, 5674, 5675, 5676, 5677, 5678, 5679, 5680, 5681, 5682, 5683, 5684, 5685, 5686, 5687, 5688, 5689, 5690, 5691, 5692, 5693, 5694, 5695, 5696, 5697, 5698, 5699, 5700, 5701, 5702, 5703, 5704, 5705, 5706, 5707, 5708, 5709, 5710, 5711, 5712, 5713, 5714, 5715, 5716, 5717, 5718, 5719, 5720, 5721, 5722, 5723, 5724, 5725, 5726, 5727, 5728, 5729, 5730, 5731, 5732, 5733, 5734, 5735, 5736, 5737, 5738, 5739, 5740, 5743, 5744, 5745, 5746, 5747, 5748, 5749, 5750, 5751, 5752, 5753, 5754, 5755, 5756, 5757, 5758, 5759, 5761, 5762, 5763, 5764, 5765, 5766, 5767, 5768, 5769, 5770, 5771, 5772, 5773, 5774, 5775, 5776, 5777, 5778, 5779, 5780, 5781, 5782, 5783, 5784, 5785, 5786, 5792, 5793, 5794, 5795, 5796, 5797, 5798, 5799, 5800, 5801, 5802, 5803, 5804, 5805, 5806, 5807, 5808, 5809, 5810, 5811, 5812, 5813, 5814, 5815, 5816, 5817, 5818, 5819, 5820, 5821, 5822, 5823, 5824, 5825, 5826, 5827, 5828, 5829, 5830, 5831, 5832, 5833, 5834, 5835, 5836, 5837, 5838, 5839, 5840, 5841, 5842, 5843, 5844, 5845, 5846, 5847, 5848, 5849, 5850, 5851, 5852, 5853, 5854, 5855, 5856, 5857, 5858, 5859, 5860, 5861, 5862, 5863, 5864, 5865, 5866, 5873, 5874, 5875, 5876, 5877, 5878, 5879, 5880, 5888, 5889, 5890, 5891, 5892, 5893, 5894, 5895, 5896, 5897, 5898, 5899, 5900, 5902, 5903, 5904, 5905, 5920, 5921, 5922, 5923, 5924, 5925, 5926, 5927, 5928, 5929, 5930, 5931, 5932, 5933, 5934, 5935, 5936, 5937, 5952, 5953, 5954, 5955, 5956, 5957, 5958, 5959, 5960, 5961, 5962, 5963, 5964, 5965, 5966, 5967, 5968, 5969, 5984, 5985, 5986, 5987, 5988, 5989, 5990, 5991, 5992, 5993, 5994, 5995, 5996, 5998, 5999, 6000, 6016, 6017, 6018, 6019, 6020, 6021, 6022, 6023, 6024, 6025, 6026, 6027, 6028, 6029, 6030, 6031, 6032, 6033, 6034, 6035, 6036, 6037, 6038, 6039, 6040, 6041, 6042, 6043, 6044, 6045, 6046, 6047, 6048, 6049, 6050, 6051, 6052, 6053, 6054, 6055, 6056, 6057, 6058, 6059, 6060, 6061, 6062, 6063, 6064, 6065, 6066, 6067, 6103, 6108, 6176, 6177, 6178, 6179, 6180, 6181, 6182, 6183, 6184, 6185, 6186, 6187, 6188, 6189, 6190, 6191, 6192, 6193, 6194, 6195, 6196, 6197, 6198, 6199, 6200, 6201, 6202, 6203, 6204, 6205, 6206, 6207, 6208, 6209, 6210, 6211, 6212, 6213, 6214, 6215, 6216, 6217, 6218, 6219, 6220, 6221, 6222, 6223, 6224, 6225, 6226, 6227, 6228, 6229, 6230, 6231, 6232, 6233, 6234, 6235, 6236, 6237, 6238, 6239, 6240, 6241, 6242, 6243, 6244, 6245, 6246, 6247, 6248, 6249, 6250, 6251, 6252, 6253, 6254, 6255, 6256, 6257, 6258, 6259, 6260, 6261, 6262, 6263, 6272, 6273, 6274, 6275, 6276, 6277, 6278, 6279, 6280, 6281, 6282, 6283, 6284, 6285, 6286, 6287, 6288, 6289, 6290, 6291, 6292, 6293, 6294, 6295, 6296, 6297, 6298, 6299, 6300, 6301, 6302, 6303, 6304, 6305, 6306, 6307, 6308, 6309, 6310, 6311, 6312, 6314, 6320, 6321, 6322, 6323, 6324, 6325, 6326, 6327, 6328, 6329, 6330, 6331, 6332, 6333, 6334, 6335, 6336, 6337, 6338, 6339, 6340, 6341, 6342, 6343, 6344, 6345, 6346, 6347, 6348, 6349, 6350, 6351, 6352, 6353, 6354, 6355, 6356, 6357, 6358, 6359, 6360, 6361, 6362, 6363, 6364, 6365, 6366, 6367, 6368, 6369, 6370, 6371, 6372, 6373, 6374, 6375, 6376, 6377, 6378, 6379, 6380, 6381, 6382, 6383, 6384, 6385, 6386, 6387, 6388, 6389, 6400, 6401, 6402, 6403, 6404, 6405, 6406, 6407, 6408, 6409, 6410, 6411, 6412, 6413, 6414, 6415, 6416, 6417, 6418, 6419, 6420, 6421, 6422, 6423, 6424, 6425, 6426, 6427, 6428, 6429, 6430, 6480, 6481, 6482, 6483, 6484, 6485, 6486, 6487, 6488, 6489, 6490, 6491, 6492, 6493, 6494, 6495, 6496, 6497, 6498, 6499, 6500, 6501, 6502, 6503, 6504, 6505, 6506, 6507, 6508, 6509, 6512, 6513, 6514, 6515, 6516, 6528, 6529, 6530, 6531, 6532, 6533, 6534, 6535, 6536, 6537, 6538, 6539, 6540, 6541, 6542, 6543, 6544, 6545, 6546, 6547, 6548, 6549, 6550, 6551, 6552, 6553, 6554, 6555, 6556, 6557, 6558, 6559, 6560, 6561, 6562, 6563, 6564, 6565, 6566, 6567, 6568, 6569, 6570, 6571, 6576, 6577, 6578, 6579, 6580, 6581, 6582, 6583, 6584, 6585, 6586, 6587, 6588, 6589, 6590, 6591, 6592, 6593, 6594, 6595, 6596, 6597, 6598, 6599, 6600, 6601, 6656, 6657, 6658, 6659, 6660, 6661, 6662, 6663, 6664, 6665, 6666, 6667, 6668, 6669, 6670, 6671, 6672, 6673, 6674, 6675, 6676, 6677, 6678, 6688, 6689, 6690, 6691, 6692, 6693, 6694, 6695, 6696, 6697, 6698, 6699, 6700, 6701, 6702, 6703, 6704, 6705, 6706, 6707, 6708, 6709, 6710, 6711, 6712, 6713, 6714, 6715, 6716, 6717, 6718, 6719, 6720, 6721, 6722, 6723, 6724, 6725, 6726, 6727, 6728, 6729, 6730, 6731, 6732, 6733, 6734, 6735, 6736, 6737, 6738, 6739, 6740, 6823, 6917, 6918, 6919, 6920, 6921, 6922, 6923, 6924, 6925, 6926, 6927, 6928, 6929, 6930, 6931, 6932, 6933, 6934, 6935, 6936, 6937, 6938, 6939, 6940, 6941, 6942, 6943, 6944, 6945, 6946, 6947, 6948, 6949, 6950, 6951, 6952, 6953, 6954, 6955, 6956, 6957, 6958, 6959, 6960, 6961, 6962, 6963, 6981, 6982, 6983, 6984, 6985, 6986, 6987, 7043, 7044, 7045, 7046, 7047, 7048, 7049, 7050, 7051, 7052, 7053, 7054, 7055, 7056, 7057, 7058, 7059, 7060, 7061, 7062, 7063, 7064, 7065, 7066, 7067, 7068, 7069, 7070, 7071, 7072, 7086, 7087, 7098, 7099, 7100, 7101, 7102, 7103, 7104, 7105, 7106, 7107, 7108, 7109, 7110, 7111, 7112, 7113, 7114, 7115, 7116, 7117, 7118, 7119, 7120, 7121, 7122, 7123, 7124, 7125, 7126, 7127, 7128, 7129, 7130, 7131, 7132, 7133, 7134, 7135, 7136, 7137, 7138, 7139, 7140, 7141, 7168, 7169, 7170, 7171, 7172, 7173, 7174, 7175, 7176, 7177, 7178, 7179, 7180, 7181, 7182, 7183, 7184, 7185, 7186, 7187, 7188, 7189, 7190, 7191, 7192, 7193, 7194, 7195, 7196, 7197, 7198, 7199, 7200, 7201, 7202, 7203, 7245, 7246, 7247, 7258, 7259, 7260, 7261, 7262, 7263, 7264, 7265, 7266, 7267, 7268, 7269, 7270, 7271, 7272, 7273, 7274, 7275, 7276, 7277, 7278, 7279, 7280, 7281, 7282, 7283, 7284, 7285, 7286, 7287, 7288, 7289, 7290, 7291, 7292, 7293, 7401, 7402, 7403, 7404, 7406, 7407, 7408, 7409, 7413, 7414, 7424, 7425, 7426, 7427, 7428, 7429, 7430, 7431, 7432, 7433, 7434, 7435, 7436, 7437, 7438, 7439, 7440, 7441, 7442, 7443, 7444, 7445, 7446, 7447, 7448, 7449, 7450, 7451, 7452, 7453, 7454, 7455, 7456, 7457, 7458, 7459, 7460, 7461, 7462, 7463, 7464, 7465, 7466, 7467, 7468, 7469, 7470, 7471, 7472, 7473, 7474, 7475, 7476, 7477, 7478, 7479, 7480, 7481, 7482, 7483, 7484, 7485, 7486, 7487, 7488, 7489, 7490, 7491, 7492, 7493, 7494, 7495, 7496, 7497, 7498, 7499, 7500, 7501, 7502, 7503, 7504, 7505, 7506, 7507, 7508, 7509, 7510, 7511, 7512, 7513, 7514, 7515, 7516, 7517, 7518, 7519, 7520, 7521, 7522, 7523, 7524, 7525, 7526, 7527, 7528, 7529, 7530, 7531, 7532, 7533, 7534, 7535, 7536, 7537, 7538, 7539, 7540, 7541, 7542, 7543, 7544, 7545, 7546, 7547, 7548, 7549, 7550, 7551, 7552, 7553, 7554, 7555, 7556, 7557, 7558, 7559, 7560, 7561, 7562, 7563, 7564, 7565, 7566, 7567, 7568, 7569, 7570, 7571, 7572, 7573, 7574, 7575, 7576, 7577, 7578, 7579, 7580, 7581, 7582, 7583, 7584, 7585, 7586, 7587, 7588, 7589, 7590, 7591, 7592, 7593, 7594, 7595, 7596, 7597, 7598, 7599, 7600, 7601, 7602, 7603, 7604, 7605, 7606, 7607, 7608, 7609, 7610, 7611, 7612, 7613, 7614, 7615, 7680, 7681, 7682, 7683, 7684, 7685, 7686, 7687, 7688, 7689, 7690, 7691, 7692, 7693, 7694, 7695, 7696, 7697, 7698, 7699, 7700, 7701, 7702, 7703, 7704, 7705, 7706, 7707, 7708, 7709, 7710, 7711, 7712, 7713, 7714, 7715, 7716, 7717, 7718, 7719, 7720, 7721, 7722, 7723, 7724, 7725, 7726, 7727, 7728, 7729, 7730, 7731, 7732, 7733, 7734, 7735, 7736, 7737, 7738, 7739, 7740, 7741, 7742, 7743, 7744, 7745, 7746, 7747, 7748, 7749, 7750, 7751, 7752, 7753, 7754, 7755, 7756, 7757, 7758, 7759, 7760, 7761, 7762, 7763, 7764, 7765, 7766, 7767, 7768, 7769, 7770, 7771, 7772, 7773, 7774, 7775, 7776, 7777, 7778, 7779, 7780, 7781, 7782, 7783, 7784, 7785, 7786, 7787, 7788, 7789, 7790, 7791, 7792, 7793, 7794, 7795, 7796, 7797, 7798, 7799, 7800, 7801, 7802, 7803, 7804, 7805, 7806, 7807, 7808, 7809, 7810, 7811, 7812, 7813, 7814, 7815, 7816, 7817, 7818, 7819, 7820, 7821, 7822, 7823, 7824, 7825, 7826, 7827, 7828, 7829, 7830, 7831, 7832, 7833, 7834, 7835, 7836, 7837, 7838, 7839, 7840, 7841, 7842, 7843, 7844, 7845, 7846, 7847, 7848, 7849, 7850, 7851, 7852, 7853, 7854, 7855, 7856, 7857, 7858, 7859, 7860, 7861, 7862, 7863, 7864, 7865, 7866, 7867, 7868, 7869, 7870, 7871, 7872, 7873, 7874, 7875, 7876, 7877, 7878, 7879, 7880, 7881, 7882, 7883, 7884, 7885, 7886, 7887, 7888, 7889, 7890, 7891, 7892, 7893, 7894, 7895, 7896, 7897, 7898, 7899, 7900, 7901, 7902, 7903, 7904, 7905, 7906, 7907, 7908, 7909, 7910, 7911, 7912, 7913, 7914, 7915, 7916, 7917, 7918, 7919, 7920, 7921, 7922, 7923, 7924, 7925, 7926, 7927, 7928, 7929, 7930, 7931, 7932, 7933, 7934, 7935, 7936, 7937, 7938, 7939, 7940, 7941, 7942, 7943, 7944, 7945, 7946, 7947, 7948, 7949, 7950, 7951, 7952, 7953, 7954, 7955, 7956, 7957, 7960, 7961, 7962, 7963, 7964, 7965, 7968, 7969, 7970, 7971, 7972, 7973, 7974, 7975, 7976, 7977, 7978, 7979, 7980, 7981, 7982, 7983, 7984, 7985, 7986, 7987, 7988, 7989, 7990, 7991, 7992, 7993, 7994, 7995, 7996, 7997, 7998, 7999, 8000, 8001, 8002, 8003, 8004, 8005, 8008, 8009, 8010, 8011, 8012, 8013, 8016, 8017, 8018, 8019, 8020, 8021, 8022, 8023, 8025, 8027, 8029, 8031, 8032, 8033, 8034, 8035, 8036, 8037, 8038, 8039, 8040, 8041, 8042, 8043, 8044, 8045, 8046, 8047, 8048, 8049, 8050, 8051, 8052, 8053, 8054, 8055, 8056, 8057, 8058, 8059, 8060, 8061, 8064, 8065, 8066, 8067, 8068, 8069, 8070, 8071, 8072, 8073, 8074, 8075, 8076, 8077, 8078, 8079, 8080, 8081, 8082, 8083, 8084, 8085, 8086, 8087, 8088, 8089, 8090, 8091, 8092, 8093, 8094, 8095, 8096, 8097, 8098, 8099, 8100, 8101, 8102, 8103, 8104, 8105, 8106, 8107, 8108, 8109, 8110, 8111, 8112, 8113, 8114, 8115, 8116, 8118, 8119, 8120, 8121, 8122, 8123, 8124, 8126, 8130, 8131, 8132, 8134, 8135, 8136, 8137, 8138, 8139, 8140, 8144, 8145, 8146, 8147, 8150, 8151, 8152, 8153, 8154, 8155, 8160, 8161, 8162, 8163, 8164, 8165, 8166, 8167, 8168, 8169, 8170, 8171, 8172, 8178, 8179, 8180, 8182, 8183, 8184, 8185, 8186, 8187, 8188, 8305, 8319, 8336, 8337, 8338, 8339, 8340, 8341, 8342, 8343, 8344, 8345, 8346, 8347, 8348, 8450, 8455, 8458, 8459, 8460, 8461, 8462, 8463, 8464, 8465, 8466, 8467, 8469, 8473, 8474, 8475, 8476, 8477, 8484, 8486, 8488, 8490, 8491, 8492, 8493, 8495, 8496, 8497, 8498, 8499, 8500, 8501, 8502, 8503, 8504, 8505, 8508, 8509, 8510, 8511, 8517, 8518, 8519, 8520, 8521, 8526, 8579, 8580, 11264, 11265, 11266, 11267, 11268, 11269, 11270, 11271, 11272, 11273, 11274, 11275, 11276, 11277, 11278, 11279, 11280, 11281, 11282, 11283, 11284, 11285, 11286, 11287, 11288, 11289, 11290, 11291, 11292, 11293, 11294, 11295, 11296, 11297, 11298, 11299, 11300, 11301, 11302, 11303, 11304, 11305, 11306, 11307, 11308, 11309, 11310, 11312, 11313, 11314, 11315, 11316, 11317, 11318, 11319, 11320, 11321, 11322, 11323, 11324, 11325, 11326, 11327, 11328, 11329, 11330, 11331, 11332, 11333, 11334, 11335, 11336, 11337, 11338, 11339, 11340, 11341, 11342, 11343, 11344, 11345, 11346, 11347, 11348, 11349, 11350, 11351, 11352, 11353, 11354, 11355, 11356, 11357, 11358, 11360, 11361, 11362, 11363, 11364, 11365, 11366, 11367, 11368, 11369, 11370, 11371, 11372, 11373, 11374, 11375, 11376, 11377, 11378, 11379, 11380, 11381, 11382, 11383, 11384, 11385, 11386, 11387, 11388, 11389, 11390, 11391, 11392, 11393, 11394, 11395, 11396, 11397, 11398, 11399, 11400, 11401, 11402, 11403, 11404, 11405, 11406, 11407, 11408, 11409, 11410, 11411, 11412, 11413, 11414, 11415, 11416, 11417, 11418, 11419, 11420, 11421, 11422, 11423, 11424, 11425, 11426, 11427, 11428, 11429, 11430, 11431, 11432, 11433, 11434, 11435, 11436, 11437, 11438, 11439, 11440, 11441, 11442, 11443, 11444, 11445, 11446, 11447, 11448, 11449, 11450, 11451, 11452, 11453, 11454, 11455, 11456, 11457, 11458, 11459, 11460, 11461, 11462, 11463, 11464, 11465, 11466, 11467, 11468, 11469, 11470, 11471, 11472, 11473, 11474, 11475, 11476, 11477, 11478, 11479, 11480, 11481, 11482, 11483, 11484, 11485, 11486, 11487, 11488, 11489, 11490, 11491, 11492, 11499, 11500, 11501, 11502, 11506, 11507, 11520, 11521, 11522, 11523, 11524, 11525, 11526, 11527, 11528, 11529, 11530, 11531, 11532, 11533, 11534, 11535, 11536, 11537, 11538, 11539, 11540, 11541, 11542, 11543, 11544, 11545, 11546, 11547, 11548, 11549, 11550, 11551, 11552, 11553, 11554, 11555, 11556, 11557, 11559, 11565, 11568, 11569, 11570, 11571, 11572, 11573, 11574, 11575, 11576, 11577, 11578, 11579, 11580, 11581, 11582, 11583, 11584, 11585, 11586, 11587, 11588, 11589, 11590, 11591, 11592, 11593, 11594, 11595, 11596, 11597, 11598, 11599, 11600, 11601, 11602, 11603, 11604, 11605, 11606, 11607, 11608, 11609, 11610, 11611, 11612, 11613, 11614, 11615, 11616, 11617, 11618, 11619, 11620, 11621, 11622, 11623, 11631, 11648, 11649, 11650, 11651, 11652, 11653, 11654, 11655, 11656, 11657, 11658, 11659, 11660, 11661, 11662, 11663, 11664, 11665, 11666, 11667, 11668, 11669, 11670, 11680, 11681, 11682, 11683, 11684, 11685, 11686, 11688, 11689, 11690, 11691, 11692, 11693, 11694, 11696, 11697, 11698, 11699, 11700, 11701, 11702, 11704, 11705, 11706, 11707, 11708, 11709, 11710, 11712, 11713, 11714, 11715, 11716, 11717, 11718, 11720, 11721, 11722, 11723, 11724, 11725, 11726, 11728, 11729, 11730, 11731, 11732, 11733, 11734, 11736, 11737, 11738, 11739, 11740, 11741, 11742, 11823, 12293, 12294, 12337, 12338, 12339, 12340, 12341, 12347, 12348, 12353, 12354, 12355, 12356, 12357, 12358, 12359, 12360, 12361, 12362, 12363, 12364, 12365, 12366, 12367, 12368, 12369, 12370, 12371, 12372, 12373, 12374, 12375, 12376, 12377, 12378, 12379, 12380, 12381, 12382, 12383, 12384, 12385, 12386, 12387, 12388, 12389, 12390, 12391, 12392, 12393, 12394, 12395, 12396, 12397, 12398, 12399, 12400, 12401, 12402, 12403, 12404, 12405, 12406, 12407, 12408, 12409, 12410, 12411, 12412, 12413, 12414, 12415, 12416, 12417, 12418, 12419, 12420, 12421, 12422, 12423, 12424, 12425, 12426, 12427, 12428, 12429, 12430, 12431, 12432, 12433, 12434, 12435, 12436, 12437, 12438, 12445, 12446, 12447, 12449, 12450, 12451, 12452, 12453, 12454, 12455, 12456, 12457, 12458, 12459, 12460, 12461, 12462, 12463, 12464, 12465, 12466, 12467, 12468, 12469, 12470, 12471, 12472, 12473, 12474, 12475, 12476, 12477, 12478, 12479, 12480, 12481, 12482, 12483, 12484, 12485, 12486, 12487, 12488, 12489, 12490, 12491, 12492, 12493, 12494, 12495, 12496, 12497, 12498, 12499, 12500, 12501, 12502, 12503, 12504, 12505, 12506, 12507, 12508, 12509, 12510, 12511, 12512, 12513, 12514, 12515, 12516, 12517, 12518, 12519, 12520, 12521, 12522, 12523, 12524, 12525, 12526, 12527, 12528, 12529, 12530, 12531, 12532, 12533, 12534, 12535, 12536, 12537, 12538, 12540, 12541, 12542, 12543, 12549, 12550, 12551, 12552, 12553, 12554, 12555, 12556, 12557, 12558, 12559, 12560, 12561, 12562, 12563, 12564, 12565, 12566, 12567, 12568, 12569, 12570, 12571, 12572, 12573, 12574, 12575, 12576, 12577, 12578, 12579, 12580, 12581, 12582, 12583, 12584, 12585, 12586, 12587, 12588, 12589, 12593, 12594, 12595, 12596, 12597, 12598, 12599, 12600, 12601, 12602, 12603, 12604, 12605, 12606, 12607, 12608, 12609, 12610, 12611, 12612, 12613, 12614, 12615, 12616, 12617, 12618, 12619, 12620, 12621, 12622, 12623, 12624, 12625, 12626, 12627, 12628, 12629, 12630, 12631, 12632, 12633, 12634, 12635, 12636, 12637, 12638, 12639, 12640, 12641, 12642, 12643, 12644, 12645, 12646, 12647, 12648, 12649, 12650, 12651, 12652, 12653, 12654, 12655, 12656, 12657, 12658, 12659, 12660, 12661, 12662, 12663, 12664, 12665, 12666, 12667, 12668, 12669, 12670, 12671, 12672, 12673, 12674, 12675, 12676, 12677, 12678, 12679, 12680, 12681, 12682, 12683, 12684, 12685, 12686, 12704, 12705, 12706, 12707, 12708, 12709, 12710, 12711, 12712, 12713, 12714, 12715, 12716, 12717, 12718, 12719, 12720, 12721, 12722, 12723, 12724, 12725, 12726, 12727, 12728, 12729, 12730, 12784, 12785, 12786, 12787, 12788, 12789, 12790, 12791, 12792, 12793, 12794, 12795, 12796, 12797, 12798, 12799, 13312, 19893, 19968, 40917, 40960, 40961, 40962, 40963, 40964, 40965, 40966, 40967, 40968, 40969, 40970, 40971, 40972, 40973, 40974, 40975, 40976, 40977, 40978, 40979, 40980, 40981, 40982, 40983, 40984, 40985, 40986, 40987, 40988, 40989, 40990, 40991, 40992, 40993, 40994, 40995, 40996, 40997, 40998, 40999, 41000, 41001, 41002, 41003, 41004, 41005, 41006, 41007, 41008, 41009, 41010, 41011, 41012, 41013, 41014, 41015, 41016, 41017, 41018, 41019, 41020, 41021, 41022, 41023, 41024, 41025, 41026, 41027, 41028, 41029, 41030, 41031, 41032, 41033, 41034, 41035, 41036, 41037, 41038, 41039, 41040, 41041, 41042, 41043, 41044, 41045, 41046, 41047, 41048, 41049, 41050, 41051, 41052, 41053, 41054, 41055, 41056, 41057, 41058, 41059, 41060, 41061, 41062, 41063, 41064, 41065, 41066, 41067, 41068, 41069, 41070, 41071, 41072, 41073, 41074, 41075, 41076, 41077, 41078, 41079, 41080, 41081, 41082, 41083, 41084, 41085, 41086, 41087, 41088, 41089, 41090, 41091, 41092, 41093, 41094, 41095, 41096, 41097, 41098, 41099, 41100, 41101, 41102, 41103, 41104, 41105, 41106, 41107, 41108, 41109, 41110, 41111, 41112, 41113, 41114, 41115, 41116, 41117, 41118, 41119, 41120, 41121, 41122, 41123, 41124, 41125, 41126, 41127, 41128, 41129, 41130, 41131, 41132, 41133, 41134, 41135, 41136, 41137, 41138, 41139, 41140, 41141, 41142, 41143, 41144, 41145, 41146, 41147, 41148, 41149, 41150, 41151, 41152, 41153, 41154, 41155, 41156, 41157, 41158, 41159, 41160, 41161, 41162, 41163, 41164, 41165, 41166, 41167, 41168, 41169, 41170, 41171, 41172, 41173, 41174, 41175, 41176, 41177, 41178, 41179, 41180, 41181, 41182, 41183, 41184, 41185, 41186, 41187, 41188, 41189, 41190, 41191, 41192, 41193, 41194, 41195, 41196, 41197, 41198, 41199, 41200, 41201, 41202, 41203, 41204, 41205, 41206, 41207, 41208, 41209, 41210, 41211, 41212, 41213, 41214, 41215, 41216, 41217, 41218, 41219, 41220, 41221, 41222, 41223, 41224, 41225, 41226, 41227, 41228, 41229, 41230, 41231, 41232, 41233, 41234, 41235, 41236, 41237, 41238, 41239, 41240, 41241, 41242, 41243, 41244, 41245, 41246, 41247, 41248, 41249, 41250, 41251, 41252, 41253, 41254, 41255, 41256, 41257, 41258, 41259, 41260, 41261, 41262, 41263, 41264, 41265, 41266, 41267, 41268, 41269, 41270, 41271, 41272, 41273, 41274, 41275, 41276, 41277, 41278, 41279, 41280, 41281, 41282, 41283, 41284, 41285, 41286, 41287, 41288, 41289, 41290, 41291, 41292, 41293, 41294, 41295, 41296, 41297, 41298, 41299, 41300, 41301, 41302, 41303, 41304, 41305, 41306, 41307, 41308, 41309, 41310, 41311, 41312, 41313, 41314, 41315, 41316, 41317, 41318, 41319, 41320, 41321, 41322, 41323, 41324, 41325, 41326, 41327, 41328, 41329, 41330, 41331, 41332, 41333, 41334, 41335, 41336, 41337, 41338, 41339, 41340, 41341, 41342, 41343, 41344, 41345, 41346, 41347, 41348, 41349, 41350, 41351, 41352, 41353, 41354, 41355, 41356, 41357, 41358, 41359, 41360, 41361, 41362, 41363, 41364, 41365, 41366, 41367, 41368, 41369, 41370, 41371, 41372, 41373, 41374, 41375, 41376, 41377, 41378, 41379, 41380, 41381, 41382, 41383, 41384, 41385, 41386, 41387, 41388, 41389, 41390, 41391, 41392, 41393, 41394, 41395, 41396, 41397, 41398, 41399, 41400, 41401, 41402, 41403, 41404, 41405, 41406, 41407, 41408, 41409, 41410, 41411, 41412, 41413, 41414, 41415, 41416, 41417, 41418, 41419, 41420, 41421, 41422, 41423, 41424, 41425, 41426, 41427, 41428, 41429, 41430, 41431, 41432, 41433, 41434, 41435, 41436, 41437, 41438, 41439, 41440, 41441, 41442, 41443, 41444, 41445, 41446, 41447, 41448, 41449, 41450, 41451, 41452, 41453, 41454, 41455, 41456, 41457, 41458, 41459, 41460, 41461, 41462, 41463, 41464, 41465, 41466, 41467, 41468, 41469, 41470, 41471, 41472, 41473, 41474, 41475, 41476, 41477, 41478, 41479, 41480, 41481, 41482, 41483, 41484, 41485, 41486, 41487, 41488, 41489, 41490, 41491, 41492, 41493, 41494, 41495, 41496, 41497, 41498, 41499, 41500, 41501, 41502, 41503, 41504, 41505, 41506, 41507, 41508, 41509, 41510, 41511, 41512, 41513, 41514, 41515, 41516, 41517, 41518, 41519, 41520, 41521, 41522, 41523, 41524, 41525, 41526, 41527, 41528, 41529, 41530, 41531, 41532, 41533, 41534, 41535, 41536, 41537, 41538, 41539, 41540, 41541, 41542, 41543, 41544, 41545, 41546, 41547, 41548, 41549, 41550, 41551, 41552, 41553, 41554, 41555, 41556, 41557, 41558, 41559, 41560, 41561, 41562, 41563, 41564, 41565, 41566, 41567, 41568, 41569, 41570, 41571, 41572, 41573, 41574, 41575, 41576, 41577, 41578, 41579, 41580, 41581, 41582, 41583, 41584, 41585, 41586, 41587, 41588, 41589, 41590, 41591, 41592, 41593, 41594, 41595, 41596, 41597, 41598, 41599, 41600, 41601, 41602, 41603, 41604, 41605, 41606, 41607, 41608, 41609, 41610, 41611, 41612, 41613, 41614, 41615, 41616, 41617, 41618, 41619, 41620, 41621, 41622, 41623, 41624, 41625, 41626, 41627, 41628, 41629, 41630, 41631, 41632, 41633, 41634, 41635, 41636, 41637, 41638, 41639, 41640, 41641, 41642, 41643, 41644, 41645, 41646, 41647, 41648, 41649, 41650, 41651, 41652, 41653, 41654, 41655, 41656, 41657, 41658, 41659, 41660, 41661, 41662, 41663, 41664, 41665, 41666, 41667, 41668, 41669, 41670, 41671, 41672, 41673, 41674, 41675, 41676, 41677, 41678, 41679, 41680, 41681, 41682, 41683, 41684, 41685, 41686, 41687, 41688, 41689, 41690, 41691, 41692, 41693, 41694, 41695, 41696, 41697, 41698, 41699, 41700, 41701, 41702, 41703, 41704, 41705, 41706, 41707, 41708, 41709, 41710, 41711, 41712, 41713, 41714, 41715, 41716, 41717, 41718, 41719, 41720, 41721, 41722, 41723, 41724, 41725, 41726, 41727, 41728, 41729, 41730, 41731, 41732, 41733, 41734, 41735, 41736, 41737, 41738, 41739, 41740, 41741, 41742, 41743, 41744, 41745, 41746, 41747, 41748, 41749, 41750, 41751, 41752, 41753, 41754, 41755, 41756, 41757, 41758, 41759, 41760, 41761, 41762, 41763, 41764, 41765, 41766, 41767, 41768, 41769, 41770, 41771, 41772, 41773, 41774, 41775, 41776, 41777, 41778, 41779, 41780, 41781, 41782, 41783, 41784, 41785, 41786, 41787, 41788, 41789, 41790, 41791, 41792, 41793, 41794, 41795, 41796, 41797, 41798, 41799, 41800, 41801, 41802, 41803, 41804, 41805, 41806, 41807, 41808, 41809, 41810, 41811, 41812, 41813, 41814, 41815, 41816, 41817, 41818, 41819, 41820, 41821, 41822, 41823, 41824, 41825, 41826, 41827, 41828, 41829, 41830, 41831, 41832, 41833, 41834, 41835, 41836, 41837, 41838, 41839, 41840, 41841, 41842, 41843, 41844, 41845, 41846, 41847, 41848, 41849, 41850, 41851, 41852, 41853, 41854, 41855, 41856, 41857, 41858, 41859, 41860, 41861, 41862, 41863, 41864, 41865, 41866, 41867, 41868, 41869, 41870, 41871, 41872, 41873, 41874, 41875, 41876, 41877, 41878, 41879, 41880, 41881, 41882, 41883, 41884, 41885, 41886, 41887, 41888, 41889, 41890, 41891, 41892, 41893, 41894, 41895, 41896, 41897, 41898, 41899, 41900, 41901, 41902, 41903, 41904, 41905, 41906, 41907, 41908, 41909, 41910, 41911, 41912, 41913, 41914, 41915, 41916, 41917, 41918, 41919, 41920, 41921, 41922, 41923, 41924, 41925, 41926, 41927, 41928, 41929, 41930, 41931, 41932, 41933, 41934, 41935, 41936, 41937, 41938, 41939, 41940, 41941, 41942, 41943, 41944, 41945, 41946, 41947, 41948, 41949, 41950, 41951, 41952, 41953, 41954, 41955, 41956, 41957, 41958, 41959, 41960, 41961, 41962, 41963, 41964, 41965, 41966, 41967, 41968, 41969, 41970, 41971, 41972, 41973, 41974, 41975, 41976, 41977, 41978, 41979, 41980, 41981, 41982, 41983, 41984, 41985, 41986, 41987, 41988, 41989, 41990, 41991, 41992, 41993, 41994, 41995, 41996, 41997, 41998, 41999, 42000, 42001, 42002, 42003, 42004, 42005, 42006, 42007, 42008, 42009, 42010, 42011, 42012, 42013, 42014, 42015, 42016, 42017, 42018, 42019, 42020, 42021, 42022, 42023, 42024, 42025, 42026, 42027, 42028, 42029, 42030, 42031, 42032, 42033, 42034, 42035, 42036, 42037, 42038, 42039, 42040, 42041, 42042, 42043, 42044, 42045, 42046, 42047, 42048, 42049, 42050, 42051, 42052, 42053, 42054, 42055, 42056, 42057, 42058, 42059, 42060, 42061, 42062, 42063, 42064, 42065, 42066, 42067, 42068, 42069, 42070, 42071, 42072, 42073, 42074, 42075, 42076, 42077, 42078, 42079, 42080, 42081, 42082, 42083, 42084, 42085, 42086, 42087, 42088, 42089, 42090, 42091, 42092, 42093, 42094, 42095, 42096, 42097, 42098, 42099, 42100, 42101, 42102, 42103, 42104, 42105, 42106, 42107, 42108, 42109, 42110, 42111, 42112, 42113, 42114, 42115, 42116, 42117, 42118, 42119, 42120, 42121, 42122, 42123, 42124, 42192, 42193, 42194, 42195, 42196, 42197, 42198, 42199, 42200, 42201, 42202, 42203, 42204, 42205, 42206, 42207, 42208, 42209, 42210, 42211, 42212, 42213, 42214, 42215, 42216, 42217, 42218, 42219, 42220, 42221, 42222, 42223, 42224, 42225, 42226, 42227, 42228, 42229, 42230, 42231, 42232, 42233, 42234, 42235, 42236, 42237, 42240, 42241, 42242, 42243, 42244, 42245, 42246, 42247, 42248, 42249, 42250, 42251, 42252, 42253, 42254, 42255, 42256, 42257, 42258, 42259, 42260, 42261, 42262, 42263, 42264, 42265, 42266, 42267, 42268, 42269, 42270, 42271, 42272, 42273, 42274, 42275, 42276, 42277, 42278, 42279, 42280, 42281, 42282, 42283, 42284, 42285, 42286, 42287, 42288, 42289, 42290, 42291, 42292, 42293, 42294, 42295, 42296, 42297, 42298, 42299, 42300, 42301, 42302, 42303, 42304, 42305, 42306, 42307, 42308, 42309, 42310, 42311, 42312, 42313, 42314, 42315, 42316, 42317, 42318, 42319, 42320, 42321, 42322, 42323, 42324, 42325, 42326, 42327, 42328, 42329, 42330, 42331, 42332, 42333, 42334, 42335, 42336, 42337, 42338, 42339, 42340, 42341, 42342, 42343, 42344, 42345, 42346, 42347, 42348, 42349, 42350, 42351, 42352, 42353, 42354, 42355, 42356, 42357, 42358, 42359, 42360, 42361, 42362, 42363, 42364, 42365, 42366, 42367, 42368, 42369, 42370, 42371, 42372, 42373, 42374, 42375, 42376, 42377, 42378, 42379, 42380, 42381, 42382, 42383, 42384, 42385, 42386, 42387, 42388, 42389, 42390, 42391, 42392, 42393, 42394, 42395, 42396, 42397, 42398, 42399, 42400, 42401, 42402, 42403, 42404, 42405, 42406, 42407, 42408, 42409, 42410, 42411, 42412, 42413, 42414, 42415, 42416, 42417, 42418, 42419, 42420, 42421, 42422, 42423, 42424, 42425, 42426, 42427, 42428, 42429, 42430, 42431, 42432, 42433, 42434, 42435, 42436, 42437, 42438, 42439, 42440, 42441, 42442, 42443, 42444, 42445, 42446, 42447, 42448, 42449, 42450, 42451, 42452, 42453, 42454, 42455, 42456, 42457, 42458, 42459, 42460, 42461, 42462, 42463, 42464, 42465, 42466, 42467, 42468, 42469, 42470, 42471, 42472, 42473, 42474, 42475, 42476, 42477, 42478, 42479, 42480, 42481, 42482, 42483, 42484, 42485, 42486, 42487, 42488, 42489, 42490, 42491, 42492, 42493, 42494, 42495, 42496, 42497, 42498, 42499, 42500, 42501, 42502, 42503, 42504, 42505, 42506, 42507, 42508, 42512, 42513, 42514, 42515, 42516, 42517, 42518, 42519, 42520, 42521, 42522, 42523, 42524, 42525, 42526, 42527, 42538, 42539, 42560, 42561, 42562, 42563, 42564, 42565, 42566, 42567, 42568, 42569, 42570, 42571, 42572, 42573, 42574, 42575, 42576, 42577, 42578, 42579, 42580, 42581, 42582, 42583, 42584, 42585, 42586, 42587, 42588, 42589, 42590, 42591, 42592, 42593, 42594, 42595, 42596, 42597, 42598, 42599, 42600, 42601, 42602, 42603, 42604, 42605, 42606, 42623, 42624, 42625, 42626, 42627, 42628, 42629, 42630, 42631, 42632, 42633, 42634, 42635, 42636, 42637, 42638, 42639, 42640, 42641, 42642, 42643, 42644, 42645, 42646, 42647, 42648, 42649, 42650, 42651, 42652, 42653, 42656, 42657, 42658, 42659, 42660, 42661, 42662, 42663, 42664, 42665, 42666, 42667, 42668, 42669, 42670, 42671, 42672, 42673, 42674, 42675, 42676, 42677, 42678, 42679, 42680, 42681, 42682, 42683, 42684, 42685, 42686, 42687, 42688, 42689, 42690, 42691, 42692, 42693, 42694, 42695, 42696, 42697, 42698, 42699, 42700, 42701, 42702, 42703, 42704, 42705, 42706, 42707, 42708, 42709, 42710, 42711, 42712, 42713, 42714, 42715, 42716, 42717, 42718, 42719, 42720, 42721, 42722, 42723, 42724, 42725, 42775, 42776, 42777, 42778, 42779, 42780, 42781, 42782, 42783, 42786, 42787, 42788, 42789, 42790, 42791, 42792, 42793, 42794, 42795, 42796, 42797, 42798, 42799, 42800, 42801, 42802, 42803, 42804, 42805, 42806, 42807, 42808, 42809, 42810, 42811, 42812, 42813, 42814, 42815, 42816, 42817, 42818, 42819, 42820, 42821, 42822, 42823, 42824, 42825, 42826, 42827, 42828, 42829, 42830, 42831, 42832, 42833, 42834, 42835, 42836, 42837, 42838, 42839, 42840, 42841, 42842, 42843, 42844, 42845, 42846, 42847, 42848, 42849, 42850, 42851, 42852, 42853, 42854, 42855, 42856, 42857, 42858, 42859, 42860, 42861, 42862, 42863, 42864, 42865, 42866, 42867, 42868, 42869, 42870, 42871, 42872, 42873, 42874, 42875, 42876, 42877, 42878, 42879, 42880, 42881, 42882, 42883, 42884, 42885, 42886, 42887, 42888, 42891, 42892, 42893, 42894, 42895, 42896, 42897, 42898, 42899, 42900, 42901, 42902, 42903, 42904, 42905, 42906, 42907, 42908, 42909, 42910, 42911, 42912, 42913, 42914, 42915, 42916, 42917, 42918, 42919, 42920, 42921, 42922, 42923, 42924, 42925, 42928, 42929, 42930, 42931, 42932, 42933, 42934, 42935, 42999, 43000, 43001, 43002, 43003, 43004, 43005, 43006, 43007, 43008, 43009, 43011, 43012, 43013, 43015, 43016, 43017, 43018, 43020, 43021, 43022, 43023, 43024, 43025, 43026, 43027, 43028, 43029, 43030, 43031, 43032, 43033, 43034, 43035, 43036, 43037, 43038, 43039, 43040, 43041, 43042, 43072, 43073, 43074, 43075, 43076, 43077, 43078, 43079, 43080, 43081, 43082, 43083, 43084, 43085, 43086, 43087, 43088, 43089, 43090, 43091, 43092, 43093, 43094, 43095, 43096, 43097, 43098, 43099, 43100, 43101, 43102, 43103, 43104, 43105, 43106, 43107, 43108, 43109, 43110, 43111, 43112, 43113, 43114, 43115, 43116, 43117, 43118, 43119, 43120, 43121, 43122, 43123, 43138, 43139, 43140, 43141, 43142, 43143, 43144, 43145, 43146, 43147, 43148, 43149, 43150, 43151, 43152, 43153, 43154, 43155, 43156, 43157, 43158, 43159, 43160, 43161, 43162, 43163, 43164, 43165, 43166, 43167, 43168, 43169, 43170, 43171, 43172, 43173, 43174, 43175, 43176, 43177, 43178, 43179, 43180, 43181, 43182, 43183, 43184, 43185, 43186, 43187, 43250, 43251, 43252, 43253, 43254, 43255, 43259, 43261, 43274, 43275, 43276, 43277, 43278, 43279, 43280, 43281, 43282, 43283, 43284, 43285, 43286, 43287, 43288, 43289, 43290, 43291, 43292, 43293, 43294, 43295, 43296, 43297, 43298, 43299, 43300, 43301, 43312, 43313, 43314, 43315, 43316, 43317, 43318, 43319, 43320, 43321, 43322, 43323, 43324, 43325, 43326, 43327, 43328, 43329, 43330, 43331, 43332, 43333, 43334, 43360, 43361, 43362, 43363, 43364, 43365, 43366, 43367, 43368, 43369, 43370, 43371, 43372, 43373, 43374, 43375, 43376, 43377, 43378, 43379, 43380, 43381, 43382, 43383, 43384, 43385, 43386, 43387, 43388, 43396, 43397, 43398, 43399, 43400, 43401, 43402, 43403, 43404, 43405, 43406, 43407, 43408, 43409, 43410, 43411, 43412, 43413, 43414, 43415, 43416, 43417, 43418, 43419, 43420, 43421, 43422, 43423, 43424, 43425, 43426, 43427, 43428, 43429, 43430, 43431, 43432, 43433, 43434, 43435, 43436, 43437, 43438, 43439, 43440, 43441, 43442, 43471, 43488, 43489, 43490, 43491, 43492, 43494, 43495, 43496, 43497, 43498, 43499, 43500, 43501, 43502, 43503, 43514, 43515, 43516, 43517, 43518, 43520, 43521, 43522, 43523, 43524, 43525, 43526, 43527, 43528, 43529, 43530, 43531, 43532, 43533, 43534, 43535, 43536, 43537, 43538, 43539, 43540, 43541, 43542, 43543, 43544, 43545, 43546, 43547, 43548, 43549, 43550, 43551, 43552, 43553, 43554, 43555, 43556, 43557, 43558, 43559, 43560, 43584, 43585, 43586, 43588, 43589, 43590, 43591, 43592, 43593, 43594, 43595, 43616, 43617, 43618, 43619, 43620, 43621, 43622, 43623, 43624, 43625, 43626, 43627, 43628, 43629, 43630, 43631, 43632, 43633, 43634, 43635, 43636, 43637, 43638, 43642, 43646, 43647, 43648, 43649, 43650, 43651, 43652, 43653, 43654, 43655, 43656, 43657, 43658, 43659, 43660, 43661, 43662, 43663, 43664, 43665, 43666, 43667, 43668, 43669, 43670, 43671, 43672, 43673, 43674, 43675, 43676, 43677, 43678, 43679, 43680, 43681, 43682, 43683, 43684, 43685, 43686, 43687, 43688, 43689, 43690, 43691, 43692, 43693, 43694, 43695, 43697, 43701, 43702, 43705, 43706, 43707, 43708, 43709, 43712, 43714, 43739, 43740, 43741, 43744, 43745, 43746, 43747, 43748, 43749, 43750, 43751, 43752, 43753, 43754, 43762, 43763, 43764, 43777, 43778, 43779, 43780, 43781, 43782, 43785, 43786, 43787, 43788, 43789, 43790, 43793, 43794, 43795, 43796, 43797, 43798, 43808, 43809, 43810, 43811, 43812, 43813, 43814, 43816, 43817, 43818, 43819, 43820, 43821, 43822, 43824, 43825, 43826, 43827, 43828, 43829, 43830, 43831, 43832, 43833, 43834, 43835, 43836, 43837, 43838, 43839, 43840, 43841, 43842, 43843, 43844, 43845, 43846, 43847, 43848, 43849, 43850, 43851, 43852, 43853, 43854, 43855, 43856, 43857, 43858, 43859, 43860, 43861, 43862, 43863, 43864, 43865, 43866, 43868, 43869, 43870, 43871, 43872, 43873, 43874, 43875, 43876, 43877, 43888, 43889, 43890, 43891, 43892, 43893, 43894, 43895, 43896, 43897, 43898, 43899, 43900, 43901, 43902, 43903, 43904, 43905, 43906, 43907, 43908, 43909, 43910, 43911, 43912, 43913, 43914, 43915, 43916, 43917, 43918, 43919, 43920, 43921, 43922, 43923, 43924, 43925, 43926, 43927, 43928, 43929, 43930, 43931, 43932, 43933, 43934, 43935, 43936, 43937, 43938, 43939, 43940, 43941, 43942, 43943, 43944, 43945, 43946, 43947, 43948, 43949, 43950, 43951, 43952, 43953, 43954, 43955, 43956, 43957, 43958, 43959, 43960, 43961, 43962, 43963, 43964, 43965, 43966, 43967, 43968, 43969, 43970, 43971, 43972, 43973, 43974, 43975, 43976, 43977, 43978, 43979, 43980, 43981, 43982, 43983, 43984, 43985, 43986, 43987, 43988, 43989, 43990, 43991, 43992, 43993, 43994, 43995, 43996, 43997, 43998, 43999, 44000, 44001, 44002, 44032, 55203, 55216, 55217, 55218, 55219, 55220, 55221, 55222, 55223, 55224, 55225, 55226, 55227, 55228, 55229, 55230, 55231, 55232, 55233, 55234, 55235, 55236, 55237, 55238, 55243, 55244, 55245, 55246, 55247, 55248, 55249, 55250, 55251, 55252, 55253, 55254, 55255, 55256, 55257, 55258, 55259, 55260, 55261, 55262, 55263, 55264, 55265, 55266, 55267, 55268, 55269, 55270, 55271, 55272, 55273, 55274, 55275, 55276, 55277, 55278, 55279, 55280, 55281, 55282, 55283, 55284, 55285, 55286, 55287, 55288, 55289, 55290, 55291, 63744, 63745, 63746, 63747, 63748, 63749, 63750, 63751, 63752, 63753, 63754, 63755, 63756, 63757, 63758, 63759, 63760, 63761, 63762, 63763, 63764, 63765, 63766, 63767, 63768, 63769, 63770, 63771, 63772, 63773, 63774, 63775, 63776, 63777, 63778, 63779, 63780, 63781, 63782, 63783, 63784, 63785, 63786, 63787, 63788, 63789, 63790, 63791, 63792, 63793, 63794, 63795, 63796, 63797, 63798, 63799, 63800, 63801, 63802, 63803, 63804, 63805, 63806, 63807, 63808, 63809, 63810, 63811, 63812, 63813, 63814, 63815, 63816, 63817, 63818, 63819, 63820, 63821, 63822, 63823, 63824, 63825, 63826, 63827, 63828, 63829, 63830, 63831, 63832, 63833, 63834, 63835, 63836, 63837, 63838, 63839, 63840, 63841, 63842, 63843, 63844, 63845, 63846, 63847, 63848, 63849, 63850, 63851, 63852, 63853, 63854, 63855, 63856, 63857, 63858, 63859, 63860, 63861, 63862, 63863, 63864, 63865, 63866, 63867, 63868, 63869, 63870, 63871, 63872, 63873, 63874, 63875, 63876, 63877, 63878, 63879, 63880, 63881, 63882, 63883, 63884, 63885, 63886, 63887, 63888, 63889, 63890, 63891, 63892, 63893, 63894, 63895, 63896, 63897, 63898, 63899, 63900, 63901, 63902, 63903, 63904, 63905, 63906, 63907, 63908, 63909, 63910, 63911, 63912, 63913, 63914, 63915, 63916, 63917, 63918, 63919, 63920, 63921, 63922, 63923, 63924, 63925, 63926, 63927, 63928, 63929, 63930, 63931, 63932, 63933, 63934, 63935, 63936, 63937, 63938, 63939, 63940, 63941, 63942, 63943, 63944, 63945, 63946, 63947, 63948, 63949, 63950, 63951, 63952, 63953, 63954, 63955, 63956, 63957, 63958, 63959, 63960, 63961, 63962, 63963, 63964, 63965, 63966, 63967, 63968, 63969, 63970, 63971, 63972, 63973, 63974, 63975, 63976, 63977, 63978, 63979, 63980, 63981, 63982, 63983, 63984, 63985, 63986, 63987, 63988, 63989, 63990, 63991, 63992, 63993, 63994, 63995, 63996, 63997, 63998, 63999, 64000, 64001, 64002, 64003, 64004, 64005, 64006, 64007, 64008, 64009, 64010, 64011, 64012, 64013, 64014, 64015, 64016, 64017, 64018, 64019, 64020, 64021, 64022, 64023, 64024, 64025, 64026, 64027, 64028, 64029, 64030, 64031, 64032, 64033, 64034, 64035, 64036, 64037, 64038, 64039, 64040, 64041, 64042, 64043, 64044, 64045, 64046, 64047, 64048, 64049, 64050, 64051, 64052, 64053, 64054, 64055, 64056, 64057, 64058, 64059, 64060, 64061, 64062, 64063, 64064, 64065, 64066, 64067, 64068, 64069, 64070, 64071, 64072, 64073, 64074, 64075, 64076, 64077, 64078, 64079, 64080, 64081, 64082, 64083, 64084, 64085, 64086, 64087, 64088, 64089, 64090, 64091, 64092, 64093, 64094, 64095, 64096, 64097, 64098, 64099, 64100, 64101, 64102, 64103, 64104, 64105, 64106, 64107, 64108, 64109, 64112, 64113, 64114, 64115, 64116, 64117, 64118, 64119, 64120, 64121, 64122, 64123, 64124, 64125, 64126, 64127, 64128, 64129, 64130, 64131, 64132, 64133, 64134, 64135, 64136, 64137, 64138, 64139, 64140, 64141, 64142, 64143, 64144, 64145, 64146, 64147, 64148, 64149, 64150, 64151, 64152, 64153, 64154, 64155, 64156, 64157, 64158, 64159, 64160, 64161, 64162, 64163, 64164, 64165, 64166, 64167, 64168, 64169, 64170, 64171, 64172, 64173, 64174, 64175, 64176, 64177, 64178, 64179, 64180, 64181, 64182, 64183, 64184, 64185, 64186, 64187, 64188, 64189, 64190, 64191, 64192, 64193, 64194, 64195, 64196, 64197, 64198, 64199, 64200, 64201, 64202, 64203, 64204, 64205, 64206, 64207, 64208, 64209, 64210, 64211, 64212, 64213, 64214, 64215, 64216, 64217, 64256, 64257, 64258, 64259, 64260, 64261, 64262, 64275, 64276, 64277, 64278, 64279, 64285, 64287, 64288, 64289, 64290, 64291, 64292, 64293, 64294, 64295, 64296, 64298, 64299, 64300, 64301, 64302, 64303, 64304, 64305, 64306, 64307, 64308, 64309, 64310, 64312, 64313, 64314, 64315, 64316, 64318, 64320, 64321, 64323, 64324, 64326, 64327, 64328, 64329, 64330, 64331, 64332, 64333, 64334, 64335, 64336, 64337, 64338, 64339, 64340, 64341, 64342, 64343, 64344, 64345, 64346, 64347, 64348, 64349, 64350, 64351, 64352, 64353, 64354, 64355, 64356, 64357, 64358, 64359, 64360, 64361, 64362, 64363, 64364, 64365, 64366, 64367, 64368, 64369, 64370, 64371, 64372, 64373, 64374, 64375, 64376, 64377, 64378, 64379, 64380, 64381, 64382, 64383, 64384, 64385, 64386, 64387, 64388, 64389, 64390, 64391, 64392, 64393, 64394, 64395, 64396, 64397, 64398, 64399, 64400, 64401, 64402, 64403, 64404, 64405, 64406, 64407, 64408, 64409, 64410, 64411, 64412, 64413, 64414, 64415, 64416, 64417, 64418, 64419, 64420, 64421, 64422, 64423, 64424, 64425, 64426, 64427, 64428, 64429, 64430, 64431, 64432, 64433, 64467, 64468, 64469, 64470, 64471, 64472, 64473, 64474, 64475, 64476, 64477, 64478, 64479, 64480, 64481, 64482, 64483, 64484, 64485, 64486, 64487, 64488, 64489, 64490, 64491, 64492, 64493, 64494, 64495, 64496, 64497, 64498, 64499, 64500, 64501, 64502, 64503, 64504, 64505, 64506, 64507, 64508, 64509, 64510, 64511, 64512, 64513, 64514, 64515, 64516, 64517, 64518, 64519, 64520, 64521, 64522, 64523, 64524, 64525, 64526, 64527, 64528, 64529, 64530, 64531, 64532, 64533, 64534, 64535, 64536, 64537, 64538, 64539, 64540, 64541, 64542, 64543, 64544, 64545, 64546, 64547, 64548, 64549, 64550, 64551, 64552, 64553, 64554, 64555, 64556, 64557, 64558, 64559, 64560, 64561, 64562, 64563, 64564, 64565, 64566, 64567, 64568, 64569, 64570, 64571, 64572, 64573, 64574, 64575, 64576, 64577, 64578, 64579, 64580, 64581, 64582, 64583, 64584, 64585, 64586, 64587, 64588, 64589, 64590, 64591, 64592, 64593, 64594, 64595, 64596, 64597, 64598, 64599, 64600, 64601, 64602, 64603, 64604, 64605, 64606, 64607, 64608, 64609, 64610, 64611, 64612, 64613, 64614, 64615, 64616, 64617, 64618, 64619, 64620, 64621, 64622, 64623, 64624, 64625, 64626, 64627, 64628, 64629, 64630, 64631, 64632, 64633, 64634, 64635, 64636, 64637, 64638, 64639, 64640, 64641, 64642, 64643, 64644, 64645, 64646, 64647, 64648, 64649, 64650, 64651, 64652, 64653, 64654, 64655, 64656, 64657, 64658, 64659, 64660, 64661, 64662, 64663, 64664, 64665, 64666, 64667, 64668, 64669, 64670, 64671, 64672, 64673, 64674, 64675, 64676, 64677, 64678, 64679, 64680, 64681, 64682, 64683, 64684, 64685, 64686, 64687, 64688, 64689, 64690, 64691, 64692, 64693, 64694, 64695, 64696, 64697, 64698, 64699, 64700, 64701, 64702, 64703, 64704, 64705, 64706, 64707, 64708, 64709, 64710, 64711, 64712, 64713, 64714, 64715, 64716, 64717, 64718, 64719, 64720, 64721, 64722, 64723, 64724, 64725, 64726, 64727, 64728, 64729, 64730, 64731, 64732, 64733, 64734, 64735, 64736, 64737, 64738, 64739, 64740, 64741, 64742, 64743, 64744, 64745, 64746, 64747, 64748, 64749, 64750, 64751, 64752, 64753, 64754, 64755, 64756, 64757, 64758, 64759, 64760, 64761, 64762, 64763, 64764, 64765, 64766, 64767, 64768, 64769, 64770, 64771, 64772, 64773, 64774, 64775, 64776, 64777, 64778, 64779, 64780, 64781, 64782, 64783, 64784, 64785, 64786, 64787, 64788, 64789, 64790, 64791, 64792, 64793, 64794, 64795, 64796, 64797, 64798, 64799, 64800, 64801, 64802, 64803, 64804, 64805, 64806, 64807, 64808, 64809, 64810, 64811, 64812, 64813, 64814, 64815, 64816, 64817, 64818, 64819, 64820, 64821, 64822, 64823, 64824, 64825, 64826, 64827, 64828, 64829, 64848, 64849, 64850, 64851, 64852, 64853, 64854, 64855, 64856, 64857, 64858, 64859, 64860, 64861, 64862, 64863, 64864, 64865, 64866, 64867, 64868, 64869, 64870, 64871, 64872, 64873, 64874, 64875, 64876, 64877, 64878, 64879, 64880, 64881, 64882, 64883, 64884, 64885, 64886, 64887, 64888, 64889, 64890, 64891, 64892, 64893, 64894, 64895, 64896, 64897, 64898, 64899, 64900, 64901, 64902, 64903, 64904, 64905, 64906, 64907, 64908, 64909, 64910, 64911, 64914, 64915, 64916, 64917, 64918, 64919, 64920, 64921, 64922, 64923, 64924, 64925, 64926, 64927, 64928, 64929, 64930, 64931, 64932, 64933, 64934, 64935, 64936, 64937, 64938, 64939, 64940, 64941, 64942, 64943, 64944, 64945, 64946, 64947, 64948, 64949, 64950, 64951, 64952, 64953, 64954, 64955, 64956, 64957, 64958, 64959, 64960, 64961, 64962, 64963, 64964, 64965, 64966, 64967, 65008, 65009, 65010, 65011, 65012, 65013, 65014, 65015, 65016, 65017, 65018, 65019, 65136, 65137, 65138, 65139, 65140, 65142, 65143, 65144, 65145, 65146, 65147, 65148, 65149, 65150, 65151, 65152, 65153, 65154, 65155, 65156, 65157, 65158, 65159, 65160, 65161, 65162, 65163, 65164, 65165, 65166, 65167, 65168, 65169, 65170, 65171, 65172, 65173, 65174, 65175, 65176, 65177, 65178, 65179, 65180, 65181, 65182, 65183, 65184, 65185, 65186, 65187, 65188, 65189, 65190, 65191, 65192, 65193, 65194, 65195, 65196, 65197, 65198, 65199, 65200, 65201, 65202, 65203, 65204, 65205, 65206, 65207, 65208, 65209, 65210, 65211, 65212, 65213, 65214, 65215, 65216, 65217, 65218, 65219, 65220, 65221, 65222, 65223, 65224, 65225, 65226, 65227, 65228, 65229, 65230, 65231, 65232, 65233, 65234, 65235, 65236, 65237, 65238, 65239, 65240, 65241, 65242, 65243, 65244, 65245, 65246, 65247, 65248, 65249, 65250, 65251, 65252, 65253, 65254, 65255, 65256, 65257, 65258, 65259, 65260, 65261, 65262, 65263, 65264, 65265, 65266, 65267, 65268, 65269, 65270, 65271, 65272, 65273, 65274, 65275, 65276, 65313, 65314, 65315, 65316, 65317, 65318, 65319, 65320, 65321, 65322, 65323, 65324, 65325, 65326, 65327, 65328, 65329, 65330, 65331, 65332, 65333, 65334, 65335, 65336, 65337, 65338, 65345, 65346, 65347, 65348, 65349, 65350, 65351, 65352, 65353, 65354, 65355, 65356, 65357, 65358, 65359, 65360, 65361, 65362, 65363, 65364, 65365, 65366, 65367, 65368, 65369, 65370, 65382, 65383, 65384, 65385, 65386, 65387, 65388, 65389, 65390, 65391, 65392, 65393, 65394, 65395, 65396, 65397, 65398, 65399, 65400, 65401, 65402, 65403, 65404, 65405, 65406, 65407, 65408, 65409, 65410, 65411, 65412, 65413, 65414, 65415, 65416, 65417, 65418, 65419, 65420, 65421, 65422, 65423, 65424, 65425, 65426, 65427, 65428, 65429, 65430, 65431, 65432, 65433, 65434, 65435, 65436, 65437, 65438, 65439, 65440, 65441, 65442, 65443, 65444, 65445, 65446, 65447, 65448, 65449, 65450, 65451, 65452, 65453, 65454, 65455, 65456, 65457, 65458, 65459, 65460, 65461, 65462, 65463, 65464, 65465, 65466, 65467, 65468, 65469, 65470, 65474, 65475, 65476, 65477, 65478, 65479, 65482, 65483, 65484, 65485, 65486, 65487, 65490, 65491, 65492, 65493, 65494, 65495, 65498, 65499, 65500, 65536, 65537, 65538, 65539, 65540, 65541, 65542, 65543, 65544, 65545, 65546, 65547, 65549, 65550, 65551, 65552, 65553, 65554, 65555, 65556, 65557, 65558, 65559, 65560, 65561, 65562, 65563, 65564, 65565, 65566, 65567, 65568, 65569, 65570, 65571, 65572, 65573, 65574, 65576, 65577, 65578, 65579, 65580, 65581, 65582, 65583, 65584, 65585, 65586, 65587, 65588, 65589, 65590, 65591, 65592, 65593, 65594, 65596, 65597, 65599, 65600, 65601, 65602, 65603, 65604, 65605, 65606, 65607, 65608, 65609, 65610, 65611, 65612, 65613, 65616, 65617, 65618, 65619, 65620, 65621, 65622, 65623, 65624, 65625, 65626, 65627, 65628, 65629, 65664, 65665, 65666, 65667, 65668, 65669, 65670, 65671, 65672, 65673, 65674, 65675, 65676, 65677, 65678, 65679, 65680, 65681, 65682, 65683, 65684, 65685, 65686, 65687, 65688, 65689, 65690, 65691, 65692, 65693, 65694, 65695, 65696, 65697, 65698, 65699, 65700, 65701, 65702, 65703, 65704, 65705, 65706, 65707, 65708, 65709, 65710, 65711, 65712, 65713, 65714, 65715, 65716, 65717, 65718, 65719, 65720, 65721, 65722, 65723, 65724, 65725, 65726, 65727, 65728, 65729, 65730, 65731, 65732, 65733, 65734, 65735, 65736, 65737, 65738, 65739, 65740, 65741, 65742, 65743, 65744, 65745, 65746, 65747, 65748, 65749, 65750, 65751, 65752, 65753, 65754, 65755, 65756, 65757, 65758, 65759, 65760, 65761, 65762, 65763, 65764, 65765, 65766, 65767, 65768, 65769, 65770, 65771, 65772, 65773, 65774, 65775, 65776, 65777, 65778, 65779, 65780, 65781, 65782, 65783, 65784, 65785, 65786, 66176, 66177, 66178, 66179, 66180, 66181, 66182, 66183, 66184, 66185, 66186, 66187, 66188, 66189, 66190, 66191, 66192, 66193, 66194, 66195, 66196, 66197, 66198, 66199, 66200, 66201, 66202, 66203, 66204, 66208, 66209, 66210, 66211, 66212, 66213, 66214, 66215, 66216, 66217, 66218, 66219, 66220, 66221, 66222, 66223, 66224, 66225, 66226, 66227, 66228, 66229, 66230, 66231, 66232, 66233, 66234, 66235, 66236, 66237, 66238, 66239, 66240, 66241, 66242, 66243, 66244, 66245, 66246, 66247, 66248, 66249, 66250, 66251, 66252, 66253, 66254, 66255, 66256, 66304, 66305, 66306, 66307, 66308, 66309, 66310, 66311, 66312, 66313, 66314, 66315, 66316, 66317, 66318, 66319, 66320, 66321, 66322, 66323, 66324, 66325, 66326, 66327, 66328, 66329, 66330, 66331, 66332, 66333, 66334, 66335, 66352, 66353, 66354, 66355, 66356, 66357, 66358, 66359, 66360, 66361, 66362, 66363, 66364, 66365, 66366, 66367, 66368, 66370, 66371, 66372, 66373, 66374, 66375, 66376, 66377, 66384, 66385, 66386, 66387, 66388, 66389, 66390, 66391, 66392, 66393, 66394, 66395, 66396, 66397, 66398, 66399, 66400, 66401, 66402, 66403, 66404, 66405, 66406, 66407, 66408, 66409, 66410, 66411, 66412, 66413, 66414, 66415, 66416, 66417, 66418, 66419, 66420, 66421, 66432, 66433, 66434, 66435, 66436, 66437, 66438, 66439, 66440, 66441, 66442, 66443, 66444, 66445, 66446, 66447, 66448, 66449, 66450, 66451, 66452, 66453, 66454, 66455, 66456, 66457, 66458, 66459, 66460, 66461, 66464, 66465, 66466, 66467, 66468, 66469, 66470, 66471, 66472, 66473, 66474, 66475, 66476, 66477, 66478, 66479, 66480, 66481, 66482, 66483, 66484, 66485, 66486, 66487, 66488, 66489, 66490, 66491, 66492, 66493, 66494, 66495, 66496, 66497, 66498, 66499, 66504, 66505, 66506, 66507, 66508, 66509, 66510, 66511, 66560, 66561, 66562, 66563, 66564, 66565, 66566, 66567, 66568, 66569, 66570, 66571, 66572, 66573, 66574, 66575, 66576, 66577, 66578, 66579, 66580, 66581, 66582, 66583, 66584, 66585, 66586, 66587, 66588, 66589, 66590, 66591, 66592, 66593, 66594, 66595, 66596, 66597, 66598, 66599, 66600, 66601, 66602, 66603, 66604, 66605, 66606, 66607, 66608, 66609, 66610, 66611, 66612, 66613, 66614, 66615, 66616, 66617, 66618, 66619, 66620, 66621, 66622, 66623, 66624, 66625, 66626, 66627, 66628, 66629, 66630, 66631, 66632, 66633, 66634, 66635, 66636, 66637, 66638, 66639, 66640, 66641, 66642, 66643, 66644, 66645, 66646, 66647, 66648, 66649, 66650, 66651, 66652, 66653, 66654, 66655, 66656, 66657, 66658, 66659, 66660, 66661, 66662, 66663, 66664, 66665, 66666, 66667, 66668, 66669, 66670, 66671, 66672, 66673, 66674, 66675, 66676, 66677, 66678, 66679, 66680, 66681, 66682, 66683, 66684, 66685, 66686, 66687, 66688, 66689, 66690, 66691, 66692, 66693, 66694, 66695, 66696, 66697, 66698, 66699, 66700, 66701, 66702, 66703, 66704, 66705, 66706, 66707, 66708, 66709, 66710, 66711, 66712, 66713, 66714, 66715, 66716, 66717, 66816, 66817, 66818, 66819, 66820, 66821, 66822, 66823, 66824, 66825, 66826, 66827, 66828, 66829, 66830, 66831, 66832, 66833, 66834, 66835, 66836, 66837, 66838, 66839, 66840, 66841, 66842, 66843, 66844, 66845, 66846, 66847, 66848, 66849, 66850, 66851, 66852, 66853, 66854, 66855, 66864, 66865, 66866, 66867, 66868, 66869, 66870, 66871, 66872, 66873, 66874, 66875, 66876, 66877, 66878, 66879, 66880, 66881, 66882, 66883, 66884, 66885, 66886, 66887, 66888, 66889, 66890, 66891, 66892, 66893, 66894, 66895, 66896, 66897, 66898, 66899, 66900, 66901, 66902, 66903, 66904, 66905, 66906, 66907, 66908, 66909, 66910, 66911, 66912, 66913, 66914, 66915, 67072, 67073, 67074, 67075, 67076, 67077, 67078, 67079, 67080, 67081, 67082, 67083, 67084, 67085, 67086, 67087, 67088, 67089, 67090, 67091, 67092, 67093, 67094, 67095, 67096, 67097, 67098, 67099, 67100, 67101, 67102, 67103, 67104, 67105, 67106, 67107, 67108, 67109, 67110, 67111, 67112, 67113, 67114, 67115, 67116, 67117, 67118, 67119, 67120, 67121, 67122, 67123, 67124, 67125, 67126, 67127, 67128, 67129, 67130, 67131, 67132, 67133, 67134, 67135, 67136, 67137, 67138, 67139, 67140, 67141, 67142, 67143, 67144, 67145, 67146, 67147, 67148, 67149, 67150, 67151, 67152, 67153, 67154, 67155, 67156, 67157, 67158, 67159, 67160, 67161, 67162, 67163, 67164, 67165, 67166, 67167, 67168, 67169, 67170, 67171, 67172, 67173, 67174, 67175, 67176, 67177, 67178, 67179, 67180, 67181, 67182, 67183, 67184, 67185, 67186, 67187, 67188, 67189, 67190, 67191, 67192, 67193, 67194, 67195, 67196, 67197, 67198, 67199, 67200, 67201, 67202, 67203, 67204, 67205, 67206, 67207, 67208, 67209, 67210, 67211, 67212, 67213, 67214, 67215, 67216, 67217, 67218, 67219, 67220, 67221, 67222, 67223, 67224, 67225, 67226, 67227, 67228, 67229, 67230, 67231, 67232, 67233, 67234, 67235, 67236, 67237, 67238, 67239, 67240, 67241, 67242, 67243, 67244, 67245, 67246, 67247, 67248, 67249, 67250, 67251, 67252, 67253, 67254, 67255, 67256, 67257, 67258, 67259, 67260, 67261, 67262, 67263, 67264, 67265, 67266, 67267, 67268, 67269, 67270, 67271, 67272, 67273, 67274, 67275, 67276, 67277, 67278, 67279, 67280, 67281, 67282, 67283, 67284, 67285, 67286, 67287, 67288, 67289, 67290, 67291, 67292, 67293, 67294, 67295, 67296, 67297, 67298, 67299, 67300, 67301, 67302, 67303, 67304, 67305, 67306, 67307, 67308, 67309, 67310, 67311, 67312, 67313, 67314, 67315, 67316, 67317, 67318, 67319, 67320, 67321, 67322, 67323, 67324, 67325, 67326, 67327, 67328, 67329, 67330, 67331, 67332, 67333, 67334, 67335, 67336, 67337, 67338, 67339, 67340, 67341, 67342, 67343, 67344, 67345, 67346, 67347, 67348, 67349, 67350, 67351, 67352, 67353, 67354, 67355, 67356, 67357, 67358, 67359, 67360, 67361, 67362, 67363, 67364, 67365, 67366, 67367, 67368, 67369, 67370, 67371, 67372, 67373, 67374, 67375, 67376, 67377, 67378, 67379, 67380, 67381, 67382, 67392, 67393, 67394, 67395, 67396, 67397, 67398, 67399, 67400, 67401, 67402, 67403, 67404, 67405, 67406, 67407, 67408, 67409, 67410, 67411, 67412, 67413, 67424, 67425, 67426, 67427, 67428, 67429, 67430, 67431, 67584, 67585, 67586, 67587, 67588, 67589, 67592, 67594, 67595, 67596, 67597, 67598, 67599, 67600, 67601, 67602, 67603, 67604, 67605, 67606, 67607, 67608, 67609, 67610, 67611, 67612, 67613, 67614, 67615, 67616, 67617, 67618, 67619, 67620, 67621, 67622, 67623, 67624, 67625, 67626, 67627, 67628, 67629, 67630, 67631, 67632, 67633, 67634, 67635, 67636, 67637, 67639, 67640, 67644, 67647, 67648, 67649, 67650, 67651, 67652, 67653, 67654, 67655, 67656, 67657, 67658, 67659, 67660, 67661, 67662, 67663, 67664, 67665, 67666, 67667, 67668, 67669, 67680, 67681, 67682, 67683, 67684, 67685, 67686, 67687, 67688, 67689, 67690, 67691, 67692, 67693, 67694, 67695, 67696, 67697, 67698, 67699, 67700, 67701, 67702, 67712, 67713, 67714, 67715, 67716, 67717, 67718, 67719, 67720, 67721, 67722, 67723, 67724, 67725, 67726, 67727, 67728, 67729, 67730, 67731, 67732, 67733, 67734, 67735, 67736, 67737, 67738, 67739, 67740, 67741, 67742, 67808, 67809, 67810, 67811, 67812, 67813, 67814, 67815, 67816, 67817, 67818, 67819, 67820, 67821, 67822, 67823, 67824, 67825, 67826, 67828, 67829, 67840, 67841, 67842, 67843, 67844, 67845, 67846, 67847, 67848, 67849, 67850, 67851, 67852, 67853, 67854, 67855, 67856, 67857, 67858, 67859, 67860, 67861, 67872, 67873, 67874, 67875, 67876, 67877, 67878, 67879, 67880, 67881, 67882, 67883, 67884, 67885, 67886, 67887, 67888, 67889, 67890, 67891, 67892, 67893, 67894, 67895, 67896, 67897, 67968, 67969, 67970, 67971, 67972, 67973, 67974, 67975, 67976, 67977, 67978, 67979, 67980, 67981, 67982, 67983, 67984, 67985, 67986, 67987, 67988, 67989, 67990, 67991, 67992, 67993, 67994, 67995, 67996, 67997, 67998, 67999, 68000, 68001, 68002, 68003, 68004, 68005, 68006, 68007, 68008, 68009, 68010, 68011, 68012, 68013, 68014, 68015, 68016, 68017, 68018, 68019, 68020, 68021, 68022, 68023, 68030, 68031, 68096, 68112, 68113, 68114, 68115, 68117, 68118, 68119, 68121, 68122, 68123, 68124, 68125, 68126, 68127, 68128, 68129, 68130, 68131, 68132, 68133, 68134, 68135, 68136, 68137, 68138, 68139, 68140, 68141, 68142, 68143, 68144, 68145, 68146, 68147, 68192, 68193, 68194, 68195, 68196, 68197, 68198, 68199, 68200, 68201, 68202, 68203, 68204, 68205, 68206, 68207, 68208, 68209, 68210, 68211, 68212, 68213, 68214, 68215, 68216, 68217, 68218, 68219, 68220, 68224, 68225, 68226, 68227, 68228, 68229, 68230, 68231, 68232, 68233, 68234, 68235, 68236, 68237, 68238, 68239, 68240, 68241, 68242, 68243, 68244, 68245, 68246, 68247, 68248, 68249, 68250, 68251, 68252, 68288, 68289, 68290, 68291, 68292, 68293, 68294, 68295, 68297, 68298, 68299, 68300, 68301, 68302, 68303, 68304, 68305, 68306, 68307, 68308, 68309, 68310, 68311, 68312, 68313, 68314, 68315, 68316, 68317, 68318, 68319, 68320, 68321, 68322, 68323, 68324, 68352, 68353, 68354, 68355, 68356, 68357, 68358, 68359, 68360, 68361, 68362, 68363, 68364, 68365, 68366, 68367, 68368, 68369, 68370, 68371, 68372, 68373, 68374, 68375, 68376, 68377, 68378, 68379, 68380, 68381, 68382, 68383, 68384, 68385, 68386, 68387, 68388, 68389, 68390, 68391, 68392, 68393, 68394, 68395, 68396, 68397, 68398, 68399, 68400, 68401, 68402, 68403, 68404, 68405, 68416, 68417, 68418, 68419, 68420, 68421, 68422, 68423, 68424, 68425, 68426, 68427, 68428, 68429, 68430, 68431, 68432, 68433, 68434, 68435, 68436, 68437, 68448, 68449, 68450, 68451, 68452, 68453, 68454, 68455, 68456, 68457, 68458, 68459, 68460, 68461, 68462, 68463, 68464, 68465, 68466, 68480, 68481, 68482, 68483, 68484, 68485, 68486, 68487, 68488, 68489, 68490, 68491, 68492, 68493, 68494, 68495, 68496, 68497, 68608, 68609, 68610, 68611, 68612, 68613, 68614, 68615, 68616, 68617, 68618, 68619, 68620, 68621, 68622, 68623, 68624, 68625, 68626, 68627, 68628, 68629, 68630, 68631, 68632, 68633, 68634, 68635, 68636, 68637, 68638, 68639, 68640, 68641, 68642, 68643, 68644, 68645, 68646, 68647, 68648, 68649, 68650, 68651, 68652, 68653, 68654, 68655, 68656, 68657, 68658, 68659, 68660, 68661, 68662, 68663, 68664, 68665, 68666, 68667, 68668, 68669, 68670, 68671, 68672, 68673, 68674, 68675, 68676, 68677, 68678, 68679, 68680, 68736, 68737, 68738, 68739, 68740, 68741, 68742, 68743, 68744, 68745, 68746, 68747, 68748, 68749, 68750, 68751, 68752, 68753, 68754, 68755, 68756, 68757, 68758, 68759, 68760, 68761, 68762, 68763, 68764, 68765, 68766, 68767, 68768, 68769, 68770, 68771, 68772, 68773, 68774, 68775, 68776, 68777, 68778, 68779, 68780, 68781, 68782, 68783, 68784, 68785, 68786, 68800, 68801, 68802, 68803, 68804, 68805, 68806, 68807, 68808, 68809, 68810, 68811, 68812, 68813, 68814, 68815, 68816, 68817, 68818, 68819, 68820, 68821, 68822, 68823, 68824, 68825, 68826, 68827, 68828, 68829, 68830, 68831, 68832, 68833, 68834, 68835, 68836, 68837, 68838, 68839, 68840, 68841, 68842, 68843, 68844, 68845, 68846, 68847, 68848, 68849, 68850, 69635, 69636, 69637, 69638, 69639, 69640, 69641, 69642, 69643, 69644, 69645, 69646, 69647, 69648, 69649, 69650, 69651, 69652, 69653, 69654, 69655, 69656, 69657, 69658, 69659, 69660, 69661, 69662, 69663, 69664, 69665, 69666, 69667, 69668, 69669, 69670, 69671, 69672, 69673, 69674, 69675, 69676, 69677, 69678, 69679, 69680, 69681, 69682, 69683, 69684, 69685, 69686, 69687, 69763, 69764, 69765, 69766, 69767, 69768, 69769, 69770, 69771, 69772, 69773, 69774, 69775, 69776, 69777, 69778, 69779, 69780, 69781, 69782, 69783, 69784, 69785, 69786, 69787, 69788, 69789, 69790, 69791, 69792, 69793, 69794, 69795, 69796, 69797, 69798, 69799, 69800, 69801, 69802, 69803, 69804, 69805, 69806, 69807, 69840, 69841, 69842, 69843, 69844, 69845, 69846, 69847, 69848, 69849, 69850, 69851, 69852, 69853, 69854, 69855, 69856, 69857, 69858, 69859, 69860, 69861, 69862, 69863, 69864, 69891, 69892, 69893, 69894, 69895, 69896, 69897, 69898, 69899, 69900, 69901, 69902, 69903, 69904, 69905, 69906, 69907, 69908, 69909, 69910, 69911, 69912, 69913, 69914, 69915, 69916, 69917, 69918, 69919, 69920, 69921, 69922, 69923, 69924, 69925, 69926, 69968, 69969, 69970, 69971, 69972, 69973, 69974, 69975, 69976, 69977, 69978, 69979, 69980, 69981, 69982, 69983, 69984, 69985, 69986, 69987, 69988, 69989, 69990, 69991, 69992, 69993, 69994, 69995, 69996, 69997, 69998, 69999, 70000, 70001, 70002, 70006, 70019, 70020, 70021, 70022, 70023, 70024, 70025, 70026, 70027, 70028, 70029, 70030, 70031, 70032, 70033, 70034, 70035, 70036, 70037, 70038, 70039, 70040, 70041, 70042, 70043, 70044, 70045, 70046, 70047, 70048, 70049, 70050, 70051, 70052, 70053, 70054, 70055, 70056, 70057, 70058, 70059, 70060, 70061, 70062, 70063, 70064, 70065, 70066, 70081, 70082, 70083, 70084, 70106, 70108, 70144, 70145, 70146, 70147, 70148, 70149, 70150, 70151, 70152, 70153, 70154, 70155, 70156, 70157, 70158, 70159, 70160, 70161, 70163, 70164, 70165, 70166, 70167, 70168, 70169, 70170, 70171, 70172, 70173, 70174, 70175, 70176, 70177, 70178, 70179, 70180, 70181, 70182, 70183, 70184, 70185, 70186, 70187, 70272, 70273, 70274, 70275, 70276, 70277, 70278, 70280, 70282, 70283, 70284, 70285, 70287, 70288, 70289, 70290, 70291, 70292, 70293, 70294, 70295, 70296, 70297, 70298, 70299, 70300, 70301, 70303, 70304, 70305, 70306, 70307, 70308, 70309, 70310, 70311, 70312, 70320, 70321, 70322, 70323, 70324, 70325, 70326, 70327, 70328, 70329, 70330, 70331, 70332, 70333, 70334, 70335, 70336, 70337, 70338, 70339, 70340, 70341, 70342, 70343, 70344, 70345, 70346, 70347, 70348, 70349, 70350, 70351, 70352, 70353, 70354, 70355, 70356, 70357, 70358, 70359, 70360, 70361, 70362, 70363, 70364, 70365, 70366, 70405, 70406, 70407, 70408, 70409, 70410, 70411, 70412, 70415, 70416, 70419, 70420, 70421, 70422, 70423, 70424, 70425, 70426, 70427, 70428, 70429, 70430, 70431, 70432, 70433, 70434, 70435, 70436, 70437, 70438, 70439, 70440, 70442, 70443, 70444, 70445, 70446, 70447, 70448, 70450, 70451, 70453, 70454, 70455, 70456, 70457, 70461, 70480, 70493, 70494, 70495, 70496, 70497, 70784, 70785, 70786, 70787, 70788, 70789, 70790, 70791, 70792, 70793, 70794, 70795, 70796, 70797, 70798, 70799, 70800, 70801, 70802, 70803, 70804, 70805, 70806, 70807, 70808, 70809, 70810, 70811, 70812, 70813, 70814, 70815, 70816, 70817, 70818, 70819, 70820, 70821, 70822, 70823, 70824, 70825, 70826, 70827, 70828, 70829, 70830, 70831, 70852, 70853, 70855, 71040, 71041, 71042, 71043, 71044, 71045, 71046, 71047, 71048, 71049, 71050, 71051, 71052, 71053, 71054, 71055, 71056, 71057, 71058, 71059, 71060, 71061, 71062, 71063, 71064, 71065, 71066, 71067, 71068, 71069, 71070, 71071, 71072, 71073, 71074, 71075, 71076, 71077, 71078, 71079, 71080, 71081, 71082, 71083, 71084, 71085, 71086, 71128, 71129, 71130, 71131, 71168, 71169, 71170, 71171, 71172, 71173, 71174, 71175, 71176, 71177, 71178, 71179, 71180, 71181, 71182, 71183, 71184, 71185, 71186, 71187, 71188, 71189, 71190, 71191, 71192, 71193, 71194, 71195, 71196, 71197, 71198, 71199, 71200, 71201, 71202, 71203, 71204, 71205, 71206, 71207, 71208, 71209, 71210, 71211, 71212, 71213, 71214, 71215, 71236, 71296, 71297, 71298, 71299, 71300, 71301, 71302, 71303, 71304, 71305, 71306, 71307, 71308, 71309, 71310, 71311, 71312, 71313, 71314, 71315, 71316, 71317, 71318, 71319, 71320, 71321, 71322, 71323, 71324, 71325, 71326, 71327, 71328, 71329, 71330, 71331, 71332, 71333, 71334, 71335, 71336, 71337, 71338, 71424, 71425, 71426, 71427, 71428, 71429, 71430, 71431, 71432, 71433, 71434, 71435, 71436, 71437, 71438, 71439, 71440, 71441, 71442, 71443, 71444, 71445, 71446, 71447, 71448, 71449, 71840, 71841, 71842, 71843, 71844, 71845, 71846, 71847, 71848, 71849, 71850, 71851, 71852, 71853, 71854, 71855, 71856, 71857, 71858, 71859, 71860, 71861, 71862, 71863, 71864, 71865, 71866, 71867, 71868, 71869, 71870, 71871, 71872, 71873, 71874, 71875, 71876, 71877, 71878, 71879, 71880, 71881, 71882, 71883, 71884, 71885, 71886, 71887, 71888, 71889, 71890, 71891, 71892, 71893, 71894, 71895, 71896, 71897, 71898, 71899, 71900, 71901, 71902, 71903, 71935, 72384, 72385, 72386, 72387, 72388, 72389, 72390, 72391, 72392, 72393, 72394, 72395, 72396, 72397, 72398, 72399, 72400, 72401, 72402, 72403, 72404, 72405, 72406, 72407, 72408, 72409, 72410, 72411, 72412, 72413, 72414, 72415, 72416, 72417, 72418, 72419, 72420, 72421, 72422, 72423, 72424, 72425, 72426, 72427, 72428, 72429, 72430, 72431, 72432, 72433, 72434, 72435, 72436, 72437, 72438, 72439, 72440, 73728, 73729, 73730, 73731, 73732, 73733, 73734, 73735, 73736, 73737, 73738, 73739, 73740, 73741, 73742, 73743, 73744, 73745, 73746, 73747, 73748, 73749, 73750, 73751, 73752, 73753, 73754, 73755, 73756, 73757, 73758, 73759, 73760, 73761, 73762, 73763, 73764, 73765, 73766, 73767, 73768, 73769, 73770, 73771, 73772, 73773, 73774, 73775, 73776, 73777, 73778, 73779, 73780, 73781, 73782, 73783, 73784, 73785, 73786, 73787, 73788, 73789, 73790, 73791, 73792, 73793, 73794, 73795, 73796, 73797, 73798, 73799, 73800, 73801, 73802, 73803, 73804, 73805, 73806, 73807, 73808, 73809, 73810, 73811, 73812, 73813, 73814, 73815, 73816, 73817, 73818, 73819, 73820, 73821, 73822, 73823, 73824, 73825, 73826, 73827, 73828, 73829, 73830, 73831, 73832, 73833, 73834, 73835, 73836, 73837, 73838, 73839, 73840, 73841, 73842, 73843, 73844, 73845, 73846, 73847, 73848, 73849, 73850, 73851, 73852, 73853, 73854, 73855, 73856, 73857, 73858, 73859, 73860, 73861, 73862, 73863, 73864, 73865, 73866, 73867, 73868, 73869, 73870, 73871, 73872, 73873, 73874, 73875, 73876, 73877, 73878, 73879, 73880, 73881, 73882, 73883, 73884, 73885, 73886, 73887, 73888, 73889, 73890, 73891, 73892, 73893, 73894, 73895, 73896, 73897, 73898, 73899, 73900, 73901, 73902, 73903, 73904, 73905, 73906, 73907, 73908, 73909, 73910, 73911, 73912, 73913, 73914, 73915, 73916, 73917, 73918, 73919, 73920, 73921, 73922, 73923, 73924, 73925, 73926, 73927, 73928, 73929, 73930, 73931, 73932, 73933, 73934, 73935, 73936, 73937, 73938, 73939, 73940, 73941, 73942, 73943, 73944, 73945, 73946, 73947, 73948, 73949, 73950, 73951, 73952, 73953, 73954, 73955, 73956, 73957, 73958, 73959, 73960, 73961, 73962, 73963, 73964, 73965, 73966, 73967, 73968, 73969, 73970, 73971, 73972, 73973, 73974, 73975, 73976, 73977, 73978, 73979, 73980, 73981, 73982, 73983, 73984, 73985, 73986, 73987, 73988, 73989, 73990, 73991, 73992, 73993, 73994, 73995, 73996, 73997, 73998, 73999, 74000, 74001, 74002, 74003, 74004, 74005, 74006, 74007, 74008, 74009, 74010, 74011, 74012, 74013, 74014, 74015, 74016, 74017, 74018, 74019, 74020, 74021, 74022, 74023, 74024, 74025, 74026, 74027, 74028, 74029, 74030, 74031, 74032, 74033, 74034, 74035, 74036, 74037, 74038, 74039, 74040, 74041, 74042, 74043, 74044, 74045, 74046, 74047, 74048, 74049, 74050, 74051, 74052, 74053, 74054, 74055, 74056, 74057, 74058, 74059, 74060, 74061, 74062, 74063, 74064, 74065, 74066, 74067, 74068, 74069, 74070, 74071, 74072, 74073, 74074, 74075, 74076, 74077, 74078, 74079, 74080, 74081, 74082, 74083, 74084, 74085, 74086, 74087, 74088, 74089, 74090, 74091, 74092, 74093, 74094, 74095, 74096, 74097, 74098, 74099, 74100, 74101, 74102, 74103, 74104, 74105, 74106, 74107, 74108, 74109, 74110, 74111, 74112, 74113, 74114, 74115, 74116, 74117, 74118, 74119, 74120, 74121, 74122, 74123, 74124, 74125, 74126, 74127, 74128, 74129, 74130, 74131, 74132, 74133, 74134, 74135, 74136, 74137, 74138, 74139, 74140, 74141, 74142, 74143, 74144, 74145, 74146, 74147, 74148, 74149, 74150, 74151, 74152, 74153, 74154, 74155, 74156, 74157, 74158, 74159, 74160, 74161, 74162, 74163, 74164, 74165, 74166, 74167, 74168, 74169, 74170, 74171, 74172, 74173, 74174, 74175, 74176, 74177, 74178, 74179, 74180, 74181, 74182, 74183, 74184, 74185, 74186, 74187, 74188, 74189, 74190, 74191, 74192, 74193, 74194, 74195, 74196, 74197, 74198, 74199, 74200, 74201, 74202, 74203, 74204, 74205, 74206, 74207, 74208, 74209, 74210, 74211, 74212, 74213, 74214, 74215, 74216, 74217, 74218, 74219, 74220, 74221, 74222, 74223, 74224, 74225, 74226, 74227, 74228, 74229, 74230, 74231, 74232, 74233, 74234, 74235, 74236, 74237, 74238, 74239, 74240, 74241, 74242, 74243, 74244, 74245, 74246, 74247, 74248, 74249, 74250, 74251, 74252, 74253, 74254, 74255, 74256, 74257, 74258, 74259, 74260, 74261, 74262, 74263, 74264, 74265, 74266, 74267, 74268, 74269, 74270, 74271, 74272, 74273, 74274, 74275, 74276, 74277, 74278, 74279, 74280, 74281, 74282, 74283, 74284, 74285, 74286, 74287, 74288, 74289, 74290, 74291, 74292, 74293, 74294, 74295, 74296, 74297, 74298, 74299, 74300, 74301, 74302, 74303, 74304, 74305, 74306, 74307, 74308, 74309, 74310, 74311, 74312, 74313, 74314, 74315, 74316, 74317, 74318, 74319, 74320, 74321, 74322, 74323, 74324, 74325, 74326, 74327, 74328, 74329, 74330, 74331, 74332, 74333, 74334, 74335, 74336, 74337, 74338, 74339, 74340, 74341, 74342, 74343, 74344, 74345, 74346, 74347, 74348, 74349, 74350, 74351, 74352, 74353, 74354, 74355, 74356, 74357, 74358, 74359, 74360, 74361, 74362, 74363, 74364, 74365, 74366, 74367, 74368, 74369, 74370, 74371, 74372, 74373, 74374, 74375, 74376, 74377, 74378, 74379, 74380, 74381, 74382, 74383, 74384, 74385, 74386, 74387, 74388, 74389, 74390, 74391, 74392, 74393, 74394, 74395, 74396, 74397, 74398, 74399, 74400, 74401, 74402, 74403, 74404, 74405, 74406, 74407, 74408, 74409, 74410, 74411, 74412, 74413, 74414, 74415, 74416, 74417, 74418, 74419, 74420, 74421, 74422, 74423, 74424, 74425, 74426, 74427, 74428, 74429, 74430, 74431, 74432, 74433, 74434, 74435, 74436, 74437, 74438, 74439, 74440, 74441, 74442, 74443, 74444, 74445, 74446, 74447, 74448, 74449, 74450, 74451, 74452, 74453, 74454, 74455, 74456, 74457, 74458, 74459, 74460, 74461, 74462, 74463, 74464, 74465, 74466, 74467, 74468, 74469, 74470, 74471, 74472, 74473, 74474, 74475, 74476, 74477, 74478, 74479, 74480, 74481, 74482, 74483, 74484, 74485, 74486, 74487, 74488, 74489, 74490, 74491, 74492, 74493, 74494, 74495, 74496, 74497, 74498, 74499, 74500, 74501, 74502, 74503, 74504, 74505, 74506, 74507, 74508, 74509, 74510, 74511, 74512, 74513, 74514, 74515, 74516, 74517, 74518, 74519, 74520, 74521, 74522, 74523, 74524, 74525, 74526, 74527, 74528, 74529, 74530, 74531, 74532, 74533, 74534, 74535, 74536, 74537, 74538, 74539, 74540, 74541, 74542, 74543, 74544, 74545, 74546, 74547, 74548, 74549, 74550, 74551, 74552, 74553, 74554, 74555, 74556, 74557, 74558, 74559, 74560, 74561, 74562, 74563, 74564, 74565, 74566, 74567, 74568, 74569, 74570, 74571, 74572, 74573, 74574, 74575, 74576, 74577, 74578, 74579, 74580, 74581, 74582, 74583, 74584, 74585, 74586, 74587, 74588, 74589, 74590, 74591, 74592, 74593, 74594, 74595, 74596, 74597, 74598, 74599, 74600, 74601, 74602, 74603, 74604, 74605, 74606, 74607, 74608, 74609, 74610, 74611, 74612, 74613, 74614, 74615, 74616, 74617, 74618, 74619, 74620, 74621, 74622, 74623, 74624, 74625, 74626, 74627, 74628, 74629, 74630, 74631, 74632, 74633, 74634, 74635, 74636, 74637, 74638, 74639, 74640, 74641, 74642, 74643, 74644, 74645, 74646, 74647, 74648, 74649, 74880, 74881, 74882, 74883, 74884, 74885, 74886, 74887, 74888, 74889, 74890, 74891, 74892, 74893, 74894, 74895, 74896, 74897, 74898, 74899, 74900, 74901, 74902, 74903, 74904, 74905, 74906, 74907, 74908, 74909, 74910, 74911, 74912, 74913, 74914, 74915, 74916, 74917, 74918, 74919, 74920, 74921, 74922, 74923, 74924, 74925, 74926, 74927, 74928, 74929, 74930, 74931, 74932, 74933, 74934, 74935, 74936, 74937, 74938, 74939, 74940, 74941, 74942, 74943, 74944, 74945, 74946, 74947, 74948, 74949, 74950, 74951, 74952, 74953, 74954, 74955, 74956, 74957, 74958, 74959, 74960, 74961, 74962, 74963, 74964, 74965, 74966, 74967, 74968, 74969, 74970, 74971, 74972, 74973, 74974, 74975, 74976, 74977, 74978, 74979, 74980, 74981, 74982, 74983, 74984, 74985, 74986, 74987, 74988, 74989, 74990, 74991, 74992, 74993, 74994, 74995, 74996, 74997, 74998, 74999, 75000, 75001, 75002, 75003, 75004, 75005, 75006, 75007, 75008, 75009, 75010, 75011, 75012, 75013, 75014, 75015, 75016, 75017, 75018, 75019, 75020, 75021, 75022, 75023, 75024, 75025, 75026, 75027, 75028, 75029, 75030, 75031, 75032, 75033, 75034, 75035, 75036, 75037, 75038, 75039, 75040, 75041, 75042, 75043, 75044, 75045, 75046, 75047, 75048, 75049, 75050, 75051, 75052, 75053, 75054, 75055, 75056, 75057, 75058, 75059, 75060, 75061, 75062, 75063, 75064, 75065, 75066, 75067, 75068, 75069, 75070, 75071, 75072, 75073, 75074, 75075, 77824, 77825, 77826, 77827, 77828, 77829, 77830, 77831, 77832, 77833, 77834, 77835, 77836, 77837, 77838, 77839, 77840, 77841, 77842, 77843, 77844, 77845, 77846, 77847, 77848, 77849, 77850, 77851, 77852, 77853, 77854, 77855, 77856, 77857, 77858, 77859, 77860, 77861, 77862, 77863, 77864, 77865, 77866, 77867, 77868, 77869, 77870, 77871, 77872, 77873, 77874, 77875, 77876, 77877, 77878, 77879, 77880, 77881, 77882, 77883, 77884, 77885, 77886, 77887, 77888, 77889, 77890, 77891, 77892, 77893, 77894, 77895, 77896, 77897, 77898, 77899, 77900, 77901, 77902, 77903, 77904, 77905, 77906, 77907, 77908, 77909, 77910, 77911, 77912, 77913, 77914, 77915, 77916, 77917, 77918, 77919, 77920, 77921, 77922, 77923, 77924, 77925, 77926, 77927, 77928, 77929, 77930, 77931, 77932, 77933, 77934, 77935, 77936, 77937, 77938, 77939, 77940, 77941, 77942, 77943, 77944, 77945, 77946, 77947, 77948, 77949, 77950, 77951, 77952, 77953, 77954, 77955, 77956, 77957, 77958, 77959, 77960, 77961, 77962, 77963, 77964, 77965, 77966, 77967, 77968, 77969, 77970, 77971, 77972, 77973, 77974, 77975, 77976, 77977, 77978, 77979, 77980, 77981, 77982, 77983, 77984, 77985, 77986, 77987, 77988, 77989, 77990, 77991, 77992, 77993, 77994, 77995, 77996, 77997, 77998, 77999, 78000, 78001, 78002, 78003, 78004, 78005, 78006, 78007, 78008, 78009, 78010, 78011, 78012, 78013, 78014, 78015, 78016, 78017, 78018, 78019, 78020, 78021, 78022, 78023, 78024, 78025, 78026, 78027, 78028, 78029, 78030, 78031, 78032, 78033, 78034, 78035, 78036, 78037, 78038, 78039, 78040, 78041, 78042, 78043, 78044, 78045, 78046, 78047, 78048, 78049, 78050, 78051, 78052, 78053, 78054, 78055, 78056, 78057, 78058, 78059, 78060, 78061, 78062, 78063, 78064, 78065, 78066, 78067, 78068, 78069, 78070, 78071, 78072, 78073, 78074, 78075, 78076, 78077, 78078, 78079, 78080, 78081, 78082, 78083, 78084, 78085, 78086, 78087, 78088, 78089, 78090, 78091, 78092, 78093, 78094, 78095, 78096, 78097, 78098, 78099, 78100, 78101, 78102, 78103, 78104, 78105, 78106, 78107, 78108, 78109, 78110, 78111, 78112, 78113, 78114, 78115, 78116, 78117, 78118, 78119, 78120, 78121, 78122, 78123, 78124, 78125, 78126, 78127, 78128, 78129, 78130, 78131, 78132, 78133, 78134, 78135, 78136, 78137, 78138, 78139, 78140, 78141, 78142, 78143, 78144, 78145, 78146, 78147, 78148, 78149, 78150, 78151, 78152, 78153, 78154, 78155, 78156, 78157, 78158, 78159, 78160, 78161, 78162, 78163, 78164, 78165, 78166, 78167, 78168, 78169, 78170, 78171, 78172, 78173, 78174, 78175, 78176, 78177, 78178, 78179, 78180, 78181, 78182, 78183, 78184, 78185, 78186, 78187, 78188, 78189, 78190, 78191, 78192, 78193, 78194, 78195, 78196, 78197, 78198, 78199, 78200, 78201, 78202, 78203, 78204, 78205, 78206, 78207, 78208, 78209, 78210, 78211, 78212, 78213, 78214, 78215, 78216, 78217, 78218, 78219, 78220, 78221, 78222, 78223, 78224, 78225, 78226, 78227, 78228, 78229, 78230, 78231, 78232, 78233, 78234, 78235, 78236, 78237, 78238, 78239, 78240, 78241, 78242, 78243, 78244, 78245, 78246, 78247, 78248, 78249, 78250, 78251, 78252, 78253, 78254, 78255, 78256, 78257, 78258, 78259, 78260, 78261, 78262, 78263, 78264, 78265, 78266, 78267, 78268, 78269, 78270, 78271, 78272, 78273, 78274, 78275, 78276, 78277, 78278, 78279, 78280, 78281, 78282, 78283, 78284, 78285, 78286, 78287, 78288, 78289, 78290, 78291, 78292, 78293, 78294, 78295, 78296, 78297, 78298, 78299, 78300, 78301, 78302, 78303, 78304, 78305, 78306, 78307, 78308, 78309, 78310, 78311, 78312, 78313, 78314, 78315, 78316, 78317, 78318, 78319, 78320, 78321, 78322, 78323, 78324, 78325, 78326, 78327, 78328, 78329, 78330, 78331, 78332, 78333, 78334, 78335, 78336, 78337, 78338, 78339, 78340, 78341, 78342, 78343, 78344, 78345, 78346, 78347, 78348, 78349, 78350, 78351, 78352, 78353, 78354, 78355, 78356, 78357, 78358, 78359, 78360, 78361, 78362, 78363, 78364, 78365, 78366, 78367, 78368, 78369, 78370, 78371, 78372, 78373, 78374, 78375, 78376, 78377, 78378, 78379, 78380, 78381, 78382, 78383, 78384, 78385, 78386, 78387, 78388, 78389, 78390, 78391, 78392, 78393, 78394, 78395, 78396, 78397, 78398, 78399, 78400, 78401, 78402, 78403, 78404, 78405, 78406, 78407, 78408, 78409, 78410, 78411, 78412, 78413, 78414, 78415, 78416, 78417, 78418, 78419, 78420, 78421, 78422, 78423, 78424, 78425, 78426, 78427, 78428, 78429, 78430, 78431, 78432, 78433, 78434, 78435, 78436, 78437, 78438, 78439, 78440, 78441, 78442, 78443, 78444, 78445, 78446, 78447, 78448, 78449, 78450, 78451, 78452, 78453, 78454, 78455, 78456, 78457, 78458, 78459, 78460, 78461, 78462, 78463, 78464, 78465, 78466, 78467, 78468, 78469, 78470, 78471, 78472, 78473, 78474, 78475, 78476, 78477, 78478, 78479, 78480, 78481, 78482, 78483, 78484, 78485, 78486, 78487, 78488, 78489, 78490, 78491, 78492, 78493, 78494, 78495, 78496, 78497, 78498, 78499, 78500, 78501, 78502, 78503, 78504, 78505, 78506, 78507, 78508, 78509, 78510, 78511, 78512, 78513, 78514, 78515, 78516, 78517, 78518, 78519, 78520, 78521, 78522, 78523, 78524, 78525, 78526, 78527, 78528, 78529, 78530, 78531, 78532, 78533, 78534, 78535, 78536, 78537, 78538, 78539, 78540, 78541, 78542, 78543, 78544, 78545, 78546, 78547, 78548, 78549, 78550, 78551, 78552, 78553, 78554, 78555, 78556, 78557, 78558, 78559, 78560, 78561, 78562, 78563, 78564, 78565, 78566, 78567, 78568, 78569, 78570, 78571, 78572, 78573, 78574, 78575, 78576, 78577, 78578, 78579, 78580, 78581, 78582, 78583, 78584, 78585, 78586, 78587, 78588, 78589, 78590, 78591, 78592, 78593, 78594, 78595, 78596, 78597, 78598, 78599, 78600, 78601, 78602, 78603, 78604, 78605, 78606, 78607, 78608, 78609, 78610, 78611, 78612, 78613, 78614, 78615, 78616, 78617, 78618, 78619, 78620, 78621, 78622, 78623, 78624, 78625, 78626, 78627, 78628, 78629, 78630, 78631, 78632, 78633, 78634, 78635, 78636, 78637, 78638, 78639, 78640, 78641, 78642, 78643, 78644, 78645, 78646, 78647, 78648, 78649, 78650, 78651, 78652, 78653, 78654, 78655, 78656, 78657, 78658, 78659, 78660, 78661, 78662, 78663, 78664, 78665, 78666, 78667, 78668, 78669, 78670, 78671, 78672, 78673, 78674, 78675, 78676, 78677, 78678, 78679, 78680, 78681, 78682, 78683, 78684, 78685, 78686, 78687, 78688, 78689, 78690, 78691, 78692, 78693, 78694, 78695, 78696, 78697, 78698, 78699, 78700, 78701, 78702, 78703, 78704, 78705, 78706, 78707, 78708, 78709, 78710, 78711, 78712, 78713, 78714, 78715, 78716, 78717, 78718, 78719, 78720, 78721, 78722, 78723, 78724, 78725, 78726, 78727, 78728, 78729, 78730, 78731, 78732, 78733, 78734, 78735, 78736, 78737, 78738, 78739, 78740, 78741, 78742, 78743, 78744, 78745, 78746, 78747, 78748, 78749, 78750, 78751, 78752, 78753, 78754, 78755, 78756, 78757, 78758, 78759, 78760, 78761, 78762, 78763, 78764, 78765, 78766, 78767, 78768, 78769, 78770, 78771, 78772, 78773, 78774, 78775, 78776, 78777, 78778, 78779, 78780, 78781, 78782, 78783, 78784, 78785, 78786, 78787, 78788, 78789, 78790, 78791, 78792, 78793, 78794, 78795, 78796, 78797, 78798, 78799, 78800, 78801, 78802, 78803, 78804, 78805, 78806, 78807, 78808, 78809, 78810, 78811, 78812, 78813, 78814, 78815, 78816, 78817, 78818, 78819, 78820, 78821, 78822, 78823, 78824, 78825, 78826, 78827, 78828, 78829, 78830, 78831, 78832, 78833, 78834, 78835, 78836, 78837, 78838, 78839, 78840, 78841, 78842, 78843, 78844, 78845, 78846, 78847, 78848, 78849, 78850, 78851, 78852, 78853, 78854, 78855, 78856, 78857, 78858, 78859, 78860, 78861, 78862, 78863, 78864, 78865, 78866, 78867, 78868, 78869, 78870, 78871, 78872, 78873, 78874, 78875, 78876, 78877, 78878, 78879, 78880, 78881, 78882, 78883, 78884, 78885, 78886, 78887, 78888, 78889, 78890, 78891, 78892, 78893, 78894, 82944, 82945, 82946, 82947, 82948, 82949, 82950, 82951, 82952, 82953, 82954, 82955, 82956, 82957, 82958, 82959, 82960, 82961, 82962, 82963, 82964, 82965, 82966, 82967, 82968, 82969, 82970, 82971, 82972, 82973, 82974, 82975, 82976, 82977, 82978, 82979, 82980, 82981, 82982, 82983, 82984, 82985, 82986, 82987, 82988, 82989, 82990, 82991, 82992, 82993, 82994, 82995, 82996, 82997, 82998, 82999, 83000, 83001, 83002, 83003, 83004, 83005, 83006, 83007, 83008, 83009, 83010, 83011, 83012, 83013, 83014, 83015, 83016, 83017, 83018, 83019, 83020, 83021, 83022, 83023, 83024, 83025, 83026, 83027, 83028, 83029, 83030, 83031, 83032, 83033, 83034, 83035, 83036, 83037, 83038, 83039, 83040, 83041, 83042, 83043, 83044, 83045, 83046, 83047, 83048, 83049, 83050, 83051, 83052, 83053, 83054, 83055, 83056, 83057, 83058, 83059, 83060, 83061, 83062, 83063, 83064, 83065, 83066, 83067, 83068, 83069, 83070, 83071, 83072, 83073, 83074, 83075, 83076, 83077, 83078, 83079, 83080, 83081, 83082, 83083, 83084, 83085, 83086, 83087, 83088, 83089, 83090, 83091, 83092, 83093, 83094, 83095, 83096, 83097, 83098, 83099, 83100, 83101, 83102, 83103, 83104, 83105, 83106, 83107, 83108, 83109, 83110, 83111, 83112, 83113, 83114, 83115, 83116, 83117, 83118, 83119, 83120, 83121, 83122, 83123, 83124, 83125, 83126, 83127, 83128, 83129, 83130, 83131, 83132, 83133, 83134, 83135, 83136, 83137, 83138, 83139, 83140, 83141, 83142, 83143, 83144, 83145, 83146, 83147, 83148, 83149, 83150, 83151, 83152, 83153, 83154, 83155, 83156, 83157, 83158, 83159, 83160, 83161, 83162, 83163, 83164, 83165, 83166, 83167, 83168, 83169, 83170, 83171, 83172, 83173, 83174, 83175, 83176, 83177, 83178, 83179, 83180, 83181, 83182, 83183, 83184, 83185, 83186, 83187, 83188, 83189, 83190, 83191, 83192, 83193, 83194, 83195, 83196, 83197, 83198, 83199, 83200, 83201, 83202, 83203, 83204, 83205, 83206, 83207, 83208, 83209, 83210, 83211, 83212, 83213, 83214, 83215, 83216, 83217, 83218, 83219, 83220, 83221, 83222, 83223, 83224, 83225, 83226, 83227, 83228, 83229, 83230, 83231, 83232, 83233, 83234, 83235, 83236, 83237, 83238, 83239, 83240, 83241, 83242, 83243, 83244, 83245, 83246, 83247, 83248, 83249, 83250, 83251, 83252, 83253, 83254, 83255, 83256, 83257, 83258, 83259, 83260, 83261, 83262, 83263, 83264, 83265, 83266, 83267, 83268, 83269, 83270, 83271, 83272, 83273, 83274, 83275, 83276, 83277, 83278, 83279, 83280, 83281, 83282, 83283, 83284, 83285, 83286, 83287, 83288, 83289, 83290, 83291, 83292, 83293, 83294, 83295, 83296, 83297, 83298, 83299, 83300, 83301, 83302, 83303, 83304, 83305, 83306, 83307, 83308, 83309, 83310, 83311, 83312, 83313, 83314, 83315, 83316, 83317, 83318, 83319, 83320, 83321, 83322, 83323, 83324, 83325, 83326, 83327, 83328, 83329, 83330, 83331, 83332, 83333, 83334, 83335, 83336, 83337, 83338, 83339, 83340, 83341, 83342, 83343, 83344, 83345, 83346, 83347, 83348, 83349, 83350, 83351, 83352, 83353, 83354, 83355, 83356, 83357, 83358, 83359, 83360, 83361, 83362, 83363, 83364, 83365, 83366, 83367, 83368, 83369, 83370, 83371, 83372, 83373, 83374, 83375, 83376, 83377, 83378, 83379, 83380, 83381, 83382, 83383, 83384, 83385, 83386, 83387, 83388, 83389, 83390, 83391, 83392, 83393, 83394, 83395, 83396, 83397, 83398, 83399, 83400, 83401, 83402, 83403, 83404, 83405, 83406, 83407, 83408, 83409, 83410, 83411, 83412, 83413, 83414, 83415, 83416, 83417, 83418, 83419, 83420, 83421, 83422, 83423, 83424, 83425, 83426, 83427, 83428, 83429, 83430, 83431, 83432, 83433, 83434, 83435, 83436, 83437, 83438, 83439, 83440, 83441, 83442, 83443, 83444, 83445, 83446, 83447, 83448, 83449, 83450, 83451, 83452, 83453, 83454, 83455, 83456, 83457, 83458, 83459, 83460, 83461, 83462, 83463, 83464, 83465, 83466, 83467, 83468, 83469, 83470, 83471, 83472, 83473, 83474, 83475, 83476, 83477, 83478, 83479, 83480, 83481, 83482, 83483, 83484, 83485, 83486, 83487, 83488, 83489, 83490, 83491, 83492, 83493, 83494, 83495, 83496, 83497, 83498, 83499, 83500, 83501, 83502, 83503, 83504, 83505, 83506, 83507, 83508, 83509, 83510, 83511, 83512, 83513, 83514, 83515, 83516, 83517, 83518, 83519, 83520, 83521, 83522, 83523, 83524, 83525, 83526, 92160, 92161, 92162, 92163, 92164, 92165, 92166, 92167, 92168, 92169, 92170, 92171, 92172, 92173, 92174, 92175, 92176, 92177, 92178, 92179, 92180, 92181, 92182, 92183, 92184, 92185, 92186, 92187, 92188, 92189, 92190, 92191, 92192, 92193, 92194, 92195, 92196, 92197, 92198, 92199, 92200, 92201, 92202, 92203, 92204, 92205, 92206, 92207, 92208, 92209, 92210, 92211, 92212, 92213, 92214, 92215, 92216, 92217, 92218, 92219, 92220, 92221, 92222, 92223, 92224, 92225, 92226, 92227, 92228, 92229, 92230, 92231, 92232, 92233, 92234, 92235, 92236, 92237, 92238, 92239, 92240, 92241, 92242, 92243, 92244, 92245, 92246, 92247, 92248, 92249, 92250, 92251, 92252, 92253, 92254, 92255, 92256, 92257, 92258, 92259, 92260, 92261, 92262, 92263, 92264, 92265, 92266, 92267, 92268, 92269, 92270, 92271, 92272, 92273, 92274, 92275, 92276, 92277, 92278, 92279, 92280, 92281, 92282, 92283, 92284, 92285, 92286, 92287, 92288, 92289, 92290, 92291, 92292, 92293, 92294, 92295, 92296, 92297, 92298, 92299, 92300, 92301, 92302, 92303, 92304, 92305, 92306, 92307, 92308, 92309, 92310, 92311, 92312, 92313, 92314, 92315, 92316, 92317, 92318, 92319, 92320, 92321, 92322, 92323, 92324, 92325, 92326, 92327, 92328, 92329, 92330, 92331, 92332, 92333, 92334, 92335, 92336, 92337, 92338, 92339, 92340, 92341, 92342, 92343, 92344, 92345, 92346, 92347, 92348, 92349, 92350, 92351, 92352, 92353, 92354, 92355, 92356, 92357, 92358, 92359, 92360, 92361, 92362, 92363, 92364, 92365, 92366, 92367, 92368, 92369, 92370, 92371, 92372, 92373, 92374, 92375, 92376, 92377, 92378, 92379, 92380, 92381, 92382, 92383, 92384, 92385, 92386, 92387, 92388, 92389, 92390, 92391, 92392, 92393, 92394, 92395, 92396, 92397, 92398, 92399, 92400, 92401, 92402, 92403, 92404, 92405, 92406, 92407, 92408, 92409, 92410, 92411, 92412, 92413, 92414, 92415, 92416, 92417, 92418, 92419, 92420, 92421, 92422, 92423, 92424, 92425, 92426, 92427, 92428, 92429, 92430, 92431, 92432, 92433, 92434, 92435, 92436, 92437, 92438, 92439, 92440, 92441, 92442, 92443, 92444, 92445, 92446, 92447, 92448, 92449, 92450, 92451, 92452, 92453, 92454, 92455, 92456, 92457, 92458, 92459, 92460, 92461, 92462, 92463, 92464, 92465, 92466, 92467, 92468, 92469, 92470, 92471, 92472, 92473, 92474, 92475, 92476, 92477, 92478, 92479, 92480, 92481, 92482, 92483, 92484, 92485, 92486, 92487, 92488, 92489, 92490, 92491, 92492, 92493, 92494, 92495, 92496, 92497, 92498, 92499, 92500, 92501, 92502, 92503, 92504, 92505, 92506, 92507, 92508, 92509, 92510, 92511, 92512, 92513, 92514, 92515, 92516, 92517, 92518, 92519, 92520, 92521, 92522, 92523, 92524, 92525, 92526, 92527, 92528, 92529, 92530, 92531, 92532, 92533, 92534, 92535, 92536, 92537, 92538, 92539, 92540, 92541, 92542, 92543, 92544, 92545, 92546, 92547, 92548, 92549, 92550, 92551, 92552, 92553, 92554, 92555, 92556, 92557, 92558, 92559, 92560, 92561, 92562, 92563, 92564, 92565, 92566, 92567, 92568, 92569, 92570, 92571, 92572, 92573, 92574, 92575, 92576, 92577, 92578, 92579, 92580, 92581, 92582, 92583, 92584, 92585, 92586, 92587, 92588, 92589, 92590, 92591, 92592, 92593, 92594, 92595, 92596, 92597, 92598, 92599, 92600, 92601, 92602, 92603, 92604, 92605, 92606, 92607, 92608, 92609, 92610, 92611, 92612, 92613, 92614, 92615, 92616, 92617, 92618, 92619, 92620, 92621, 92622, 92623, 92624, 92625, 92626, 92627, 92628, 92629, 92630, 92631, 92632, 92633, 92634, 92635, 92636, 92637, 92638, 92639, 92640, 92641, 92642, 92643, 92644, 92645, 92646, 92647, 92648, 92649, 92650, 92651, 92652, 92653, 92654, 92655, 92656, 92657, 92658, 92659, 92660, 92661, 92662, 92663, 92664, 92665, 92666, 92667, 92668, 92669, 92670, 92671, 92672, 92673, 92674, 92675, 92676, 92677, 92678, 92679, 92680, 92681, 92682, 92683, 92684, 92685, 92686, 92687, 92688, 92689, 92690, 92691, 92692, 92693, 92694, 92695, 92696, 92697, 92698, 92699, 92700, 92701, 92702, 92703, 92704, 92705, 92706, 92707, 92708, 92709, 92710, 92711, 92712, 92713, 92714, 92715, 92716, 92717, 92718, 92719, 92720, 92721, 92722, 92723, 92724, 92725, 92726, 92727, 92728, 92736, 92737, 92738, 92739, 92740, 92741, 92742, 92743, 92744, 92745, 92746, 92747, 92748, 92749, 92750, 92751, 92752, 92753, 92754, 92755, 92756, 92757, 92758, 92759, 92760, 92761, 92762, 92763, 92764, 92765, 92766, 92880, 92881, 92882, 92883, 92884, 92885, 92886, 92887, 92888, 92889, 92890, 92891, 92892, 92893, 92894, 92895, 92896, 92897, 92898, 92899, 92900, 92901, 92902, 92903, 92904, 92905, 92906, 92907, 92908, 92909, 92928, 92929, 92930, 92931, 92932, 92933, 92934, 92935, 92936, 92937, 92938, 92939, 92940, 92941, 92942, 92943, 92944, 92945, 92946, 92947, 92948, 92949, 92950, 92951, 92952, 92953, 92954, 92955, 92956, 92957, 92958, 92959, 92960, 92961, 92962, 92963, 92964, 92965, 92966, 92967, 92968, 92969, 92970, 92971, 92972, 92973, 92974, 92975, 92992, 92993, 92994, 92995, 93027, 93028, 93029, 93030, 93031, 93032, 93033, 93034, 93035, 93036, 93037, 93038, 93039, 93040, 93041, 93042, 93043, 93044, 93045, 93046, 93047, 93053, 93054, 93055, 93056, 93057, 93058, 93059, 93060, 93061, 93062, 93063, 93064, 93065, 93066, 93067, 93068, 93069, 93070, 93071, 93952, 93953, 93954, 93955, 93956, 93957, 93958, 93959, 93960, 93961, 93962, 93963, 93964, 93965, 93966, 93967, 93968, 93969, 93970, 93971, 93972, 93973, 93974, 93975, 93976, 93977, 93978, 93979, 93980, 93981, 93982, 93983, 93984, 93985, 93986, 93987, 93988, 93989, 93990, 93991, 93992, 93993, 93994, 93995, 93996, 93997, 93998, 93999, 94000, 94001, 94002, 94003, 94004, 94005, 94006, 94007, 94008, 94009, 94010, 94011, 94012, 94013, 94014, 94015, 94016, 94017, 94018, 94019, 94020, 94032, 94099, 94100, 94101, 94102, 94103, 94104, 94105, 94106, 94107, 94108, 94109, 94110, 94111, 110592, 110593, 113664, 113665, 113666, 113667, 113668, 113669, 113670, 113671, 113672, 113673, 113674, 113675, 113676, 113677, 113678, 113679, 113680, 113681, 113682, 113683, 113684, 113685, 113686, 113687, 113688, 113689, 113690, 113691, 113692, 113693, 113694, 113695, 113696, 113697, 113698, 113699, 113700, 113701, 113702, 113703, 113704, 113705, 113706, 113707, 113708, 113709, 113710, 113711, 113712, 113713, 113714, 113715, 113716, 113717, 113718, 113719, 113720, 113721, 113722, 113723, 113724, 113725, 113726, 113727, 113728, 113729, 113730, 113731, 113732, 113733, 113734, 113735, 113736, 113737, 113738, 113739, 113740, 113741, 113742, 113743, 113744, 113745, 113746, 113747, 113748, 113749, 113750, 113751, 113752, 113753, 113754, 113755, 113756, 113757, 113758, 113759, 113760, 113761, 113762, 113763, 113764, 113765, 113766, 113767, 113768, 113769, 113770, 113776, 113777, 113778, 113779, 113780, 113781, 113782, 113783, 113784, 113785, 113786, 113787, 113788, 113792, 113793, 113794, 113795, 113796, 113797, 113798, 113799, 113800, 113808, 113809, 113810, 113811, 113812, 113813, 113814, 113815, 113816, 113817, 119808, 119809, 119810, 119811, 119812, 119813, 119814, 119815, 119816, 119817, 119818, 119819, 119820, 119821, 119822, 119823, 119824, 119825, 119826, 119827, 119828, 119829, 119830, 119831, 119832, 119833, 119834, 119835, 119836, 119837, 119838, 119839, 119840, 119841, 119842, 119843, 119844, 119845, 119846, 119847, 119848, 119849, 119850, 119851, 119852, 119853, 119854, 119855, 119856, 119857, 119858, 119859, 119860, 119861, 119862, 119863, 119864, 119865, 119866, 119867, 119868, 119869, 119870, 119871, 119872, 119873, 119874, 119875, 119876, 119877, 119878, 119879, 119880, 119881, 119882, 119883, 119884, 119885, 119886, 119887, 119888, 119889, 119890, 119891, 119892, 119894, 119895, 119896, 119897, 119898, 119899, 119900, 119901, 119902, 119903, 119904, 119905, 119906, 119907, 119908, 119909, 119910, 119911, 119912, 119913, 119914, 119915, 119916, 119917, 119918, 119919, 119920, 119921, 119922, 119923, 119924, 119925, 119926, 119927, 119928, 119929, 119930, 119931, 119932, 119933, 119934, 119935, 119936, 119937, 119938, 119939, 119940, 119941, 119942, 119943, 119944, 119945, 119946, 119947, 119948, 119949, 119950, 119951, 119952, 119953, 119954, 119955, 119956, 119957, 119958, 119959, 119960, 119961, 119962, 119963, 119964, 119966, 119967, 119970, 119973, 119974, 119977, 119978, 119979, 119980, 119982, 119983, 119984, 119985, 119986, 119987, 119988, 119989, 119990, 119991, 119992, 119993, 119995, 119997, 119998, 119999, 120000, 120001, 120002, 120003, 120005, 120006, 120007, 120008, 120009, 120010, 120011, 120012, 120013, 120014, 120015, 120016, 120017, 120018, 120019, 120020, 120021, 120022, 120023, 120024, 120025, 120026, 120027, 120028, 120029, 120030, 120031, 120032, 120033, 120034, 120035, 120036, 120037, 120038, 120039, 120040, 120041, 120042, 120043, 120044, 120045, 120046, 120047, 120048, 120049, 120050, 120051, 120052, 120053, 120054, 120055, 120056, 120057, 120058, 120059, 120060, 120061, 120062, 120063, 120064, 120065, 120066, 120067, 120068, 120069, 120071, 120072, 120073, 120074, 120077, 120078, 120079, 120080, 120081, 120082, 120083, 120084, 120086, 120087, 120088, 120089, 120090, 120091, 120092, 120094, 120095, 120096, 120097, 120098, 120099, 120100, 120101, 120102, 120103, 120104, 120105, 120106, 120107, 120108, 120109, 120110, 120111, 120112, 120113, 120114, 120115, 120116, 120117, 120118, 120119, 120120, 120121, 120123, 120124, 120125, 120126, 120128, 120129, 120130, 120131, 120132, 120134, 120138, 120139, 120140, 120141, 120142, 120143, 120144, 120146, 120147, 120148, 120149, 120150, 120151, 120152, 120153, 120154, 120155, 120156, 120157, 120158, 120159, 120160, 120161, 120162, 120163, 120164, 120165, 120166, 120167, 120168, 120169, 120170, 120171, 120172, 120173, 120174, 120175, 120176, 120177, 120178, 120179, 120180, 120181, 120182, 120183, 120184, 120185, 120186, 120187, 120188, 120189, 120190, 120191, 120192, 120193, 120194, 120195, 120196, 120197, 120198, 120199, 120200, 120201, 120202, 120203, 120204, 120205, 120206, 120207, 120208, 120209, 120210, 120211, 120212, 120213, 120214, 120215, 120216, 120217, 120218, 120219, 120220, 120221, 120222, 120223, 120224, 120225, 120226, 120227, 120228, 120229, 120230, 120231, 120232, 120233, 120234, 120235, 120236, 120237, 120238, 120239, 120240, 120241, 120242, 120243, 120244, 120245, 120246, 120247, 120248, 120249, 120250, 120251, 120252, 120253, 120254, 120255, 120256, 120257, 120258, 120259, 120260, 120261, 120262, 120263, 120264, 120265, 120266, 120267, 120268, 120269, 120270, 120271, 120272, 120273, 120274, 120275, 120276, 120277, 120278, 120279, 120280, 120281, 120282, 120283, 120284, 120285, 120286, 120287, 120288, 120289, 120290, 120291, 120292, 120293, 120294, 120295, 120296, 120297, 120298, 120299, 120300, 120301, 120302, 120303, 120304, 120305, 120306, 120307, 120308, 120309, 120310, 120311, 120312, 120313, 120314, 120315, 120316, 120317, 120318, 120319, 120320, 120321, 120322, 120323, 120324, 120325, 120326, 120327, 120328, 120329, 120330, 120331, 120332, 120333, 120334, 120335, 120336, 120337, 120338, 120339, 120340, 120341, 120342, 120343, 120344, 120345, 120346, 120347, 120348, 120349, 120350, 120351, 120352, 120353, 120354, 120355, 120356, 120357, 120358, 120359, 120360, 120361, 120362, 120363, 120364, 120365, 120366, 120367, 120368, 120369, 120370, 120371, 120372, 120373, 120374, 120375, 120376, 120377, 120378, 120379, 120380, 120381, 120382, 120383, 120384, 120385, 120386, 120387, 120388, 120389, 120390, 120391, 120392, 120393, 120394, 120395, 120396, 120397, 120398, 120399, 120400, 120401, 120402, 120403, 120404, 120405, 120406, 120407, 120408, 120409, 120410, 120411, 120412, 120413, 120414, 120415, 120416, 120417, 120418, 120419, 120420, 120421, 120422, 120423, 120424, 120425, 120426, 120427, 120428, 120429, 120430, 120431, 120432, 120433, 120434, 120435, 120436, 120437, 120438, 120439, 120440, 120441, 120442, 120443, 120444, 120445, 120446, 120447, 120448, 120449, 120450, 120451, 120452, 120453, 120454, 120455, 120456, 120457, 120458, 120459, 120460, 120461, 120462, 120463, 120464, 120465, 120466, 120467, 120468, 120469, 120470, 120471, 120472, 120473, 120474, 120475, 120476, 120477, 120478, 120479, 120480, 120481, 120482, 120483, 120484, 120485, 120488, 120489, 120490, 120491, 120492, 120493, 120494, 120495, 120496, 120497, 120498, 120499, 120500, 120501, 120502, 120503, 120504, 120505, 120506, 120507, 120508, 120509, 120510, 120511, 120512, 120514, 120515, 120516, 120517, 120518, 120519, 120520, 120521, 120522, 120523, 120524, 120525, 120526, 120527, 120528, 120529, 120530, 120531, 120532, 120533, 120534, 120535, 120536, 120537, 120538, 120540, 120541, 120542, 120543, 120544, 120545, 120546, 120547, 120548, 120549, 120550, 120551, 120552, 120553, 120554, 120555, 120556, 120557, 120558, 120559, 120560, 120561, 120562, 120563, 120564, 120565, 120566, 120567, 120568, 120569, 120570, 120572, 120573, 120574, 120575, 120576, 120577, 120578, 120579, 120580, 120581, 120582, 120583, 120584, 120585, 120586, 120587, 120588, 120589, 120590, 120591, 120592, 120593, 120594, 120595, 120596, 120598, 120599, 120600, 120601, 120602, 120603, 120604, 120605, 120606, 120607, 120608, 120609, 120610, 120611, 120612, 120613, 120614, 120615, 120616, 120617, 120618, 120619, 120620, 120621, 120622, 120623, 120624, 120625, 120626, 120627, 120628, 120630, 120631, 120632, 120633, 120634, 120635, 120636, 120637, 120638, 120639, 120640, 120641, 120642, 120643, 120644, 120645, 120646, 120647, 120648, 120649, 120650, 120651, 120652, 120653, 120654, 120656, 120657, 120658, 120659, 120660, 120661, 120662, 120663, 120664, 120665, 120666, 120667, 120668, 120669, 120670, 120671, 120672, 120673, 120674, 120675, 120676, 120677, 120678, 120679, 120680, 120681, 120682, 120683, 120684, 120685, 120686, 120688, 120689, 120690, 120691, 120692, 120693, 120694, 120695, 120696, 120697, 120698, 120699, 120700, 120701, 120702, 120703, 120704, 120705, 120706, 120707, 120708, 120709, 120710, 120711, 120712, 120714, 120715, 120716, 120717, 120718, 120719, 120720, 120721, 120722, 120723, 120724, 120725, 120726, 120727, 120728, 120729, 120730, 120731, 120732, 120733, 120734, 120735, 120736, 120737, 120738, 120739, 120740, 120741, 120742, 120743, 120744, 120746, 120747, 120748, 120749, 120750, 120751, 120752, 120753, 120754, 120755, 120756, 120757, 120758, 120759, 120760, 120761, 120762, 120763, 120764, 120765, 120766, 120767, 120768, 120769, 120770, 120772, 120773, 120774, 120775, 120776, 120777, 120778, 120779, 124928, 124929, 124930, 124931, 124932, 124933, 124934, 124935, 124936, 124937, 124938, 124939, 124940, 124941, 124942, 124943, 124944, 124945, 124946, 124947, 124948, 124949, 124950, 124951, 124952, 124953, 124954, 124955, 124956, 124957, 124958, 124959, 124960, 124961, 124962, 124963, 124964, 124965, 124966, 124967, 124968, 124969, 124970, 124971, 124972, 124973, 124974, 124975, 124976, 124977, 124978, 124979, 124980, 124981, 124982, 124983, 124984, 124985, 124986, 124987, 124988, 124989, 124990, 124991, 124992, 124993, 124994, 124995, 124996, 124997, 124998, 124999, 125000, 125001, 125002, 125003, 125004, 125005, 125006, 125007, 125008, 125009, 125010, 125011, 125012, 125013, 125014, 125015, 125016, 125017, 125018, 125019, 125020, 125021, 125022, 125023, 125024, 125025, 125026, 125027, 125028, 125029, 125030, 125031, 125032, 125033, 125034, 125035, 125036, 125037, 125038, 125039, 125040, 125041, 125042, 125043, 125044, 125045, 125046, 125047, 125048, 125049, 125050, 125051, 125052, 125053, 125054, 125055, 125056, 125057, 125058, 125059, 125060, 125061, 125062, 125063, 125064, 125065, 125066, 125067, 125068, 125069, 125070, 125071, 125072, 125073, 125074, 125075, 125076, 125077, 125078, 125079, 125080, 125081, 125082, 125083, 125084, 125085, 125086, 125087, 125088, 125089, 125090, 125091, 125092, 125093, 125094, 125095, 125096, 125097, 125098, 125099, 125100, 125101, 125102, 125103, 125104, 125105, 125106, 125107, 125108, 125109, 125110, 125111, 125112, 125113, 125114, 125115, 125116, 125117, 125118, 125119, 125120, 125121, 125122, 125123, 125124, 126464, 126465, 126466, 126467, 126469, 126470, 126471, 126472, 126473, 126474, 126475, 126476, 126477, 126478, 126479, 126480, 126481, 126482, 126483, 126484, 126485, 126486, 126487, 126488, 126489, 126490, 126491, 126492, 126493, 126494, 126495, 126497, 126498, 126500, 126503, 126505, 126506, 126507, 126508, 126509, 126510, 126511, 126512, 126513, 126514, 126516, 126517, 126518, 126519, 126521, 126523, 126530, 126535, 126537, 126539, 126541, 126542, 126543, 126545, 126546, 126548, 126551, 126553, 126555, 126557, 126559, 126561, 126562, 126564, 126567, 126568, 126569, 126570, 126572, 126573, 126574, 126575, 126576, 126577, 126578, 126580, 126581, 126582, 126583, 126585, 126586, 126587, 126588, 126590, 126592, 126593, 126594, 126595, 126596, 126597, 126598, 126599, 126600, 126601, 126603, 126604, 126605, 126606, 126607, 126608, 126609, 126610, 126611, 126612, 126613, 126614, 126615, 126616, 126617, 126618, 126619, 126625, 126626, 126627, 126629, 126630, 126631, 126632, 126633, 126635, 126636, 126637, 126638, 126639, 126640, 126641, 126642, 126643, 126644, 126645, 126646, 126647, 126648, 126649, 126650, 126651, 131072, 173782, 173824, 177972, 177984, 178205, 178208, 183969, 194560, 194561, 194562, 194563, 194564, 194565, 194566, 194567, 194568, 194569, 194570, 194571, 194572, 194573, 194574, 194575, 194576, 194577, 194578, 194579, 194580, 194581, 194582, 194583, 194584, 194585, 194586, 194587, 194588, 194589, 194590, 194591, 194592, 194593, 194594, 194595, 194596, 194597, 194598, 194599, 194600, 194601, 194602, 194603, 194604, 194605, 194606, 194607, 194608, 194609, 194610, 194611, 194612, 194613, 194614, 194615, 194616, 194617, 194618, 194619, 194620, 194621, 194622, 194623, 194624, 194625, 194626, 194627, 194628, 194629, 194630, 194631, 194632, 194633, 194634, 194635, 194636, 194637, 194638, 194639, 194640, 194641, 194642, 194643, 194644, 194645, 194646, 194647, 194648, 194649, 194650, 194651, 194652, 194653, 194654, 194655, 194656, 194657, 194658, 194659, 194660, 194661, 194662, 194663, 194664, 194665, 194666, 194667, 194668, 194669, 194670, 194671, 194672, 194673, 194674, 194675, 194676, 194677, 194678, 194679, 194680, 194681, 194682, 194683, 194684, 194685, 194686, 194687, 194688, 194689, 194690, 194691, 194692, 194693, 194694, 194695, 194696, 194697, 194698, 194699, 194700, 194701, 194702, 194703, 194704, 194705, 194706, 194707, 194708, 194709, 194710, 194711, 194712, 194713, 194714, 194715, 194716, 194717, 194718, 194719, 194720, 194721, 194722, 194723, 194724, 194725, 194726, 194727, 194728, 194729, 194730, 194731, 194732, 194733, 194734, 194735, 194736, 194737, 194738, 194739, 194740, 194741, 194742, 194743, 194744, 194745, 194746, 194747, 194748, 194749, 194750, 194751, 194752, 194753, 194754, 194755, 194756, 194757, 194758, 194759, 194760, 194761, 194762, 194763, 194764, 194765, 194766, 194767, 194768, 194769, 194770, 194771, 194772, 194773, 194774, 194775, 194776, 194777, 194778, 194779, 194780, 194781, 194782, 194783, 194784, 194785, 194786, 194787, 194788, 194789, 194790, 194791, 194792, 194793, 194794, 194795, 194796, 194797, 194798, 194799, 194800, 194801, 194802, 194803, 194804, 194805, 194806, 194807, 194808, 194809, 194810, 194811, 194812, 194813, 194814, 194815, 194816, 194817, 194818, 194819, 194820, 194821, 194822, 194823, 194824, 194825, 194826, 194827, 194828, 194829, 194830, 194831, 194832, 194833, 194834, 194835, 194836, 194837, 194838, 194839, 194840, 194841, 194842, 194843, 194844, 194845, 194846, 194847, 194848, 194849, 194850, 194851, 194852, 194853, 194854, 194855, 194856, 194857, 194858, 194859, 194860, 194861, 194862, 194863, 194864, 194865, 194866, 194867, 194868, 194869, 194870, 194871, 194872, 194873, 194874, 194875, 194876, 194877, 194878, 194879, 194880, 194881, 194882, 194883, 194884, 194885, 194886, 194887, 194888, 194889, 194890, 194891, 194892, 194893, 194894, 194895, 194896, 194897, 194898, 194899, 194900, 194901, 194902, 194903, 194904, 194905, 194906, 194907, 194908, 194909, 194910, 194911, 194912, 194913, 194914, 194915, 194916, 194917, 194918, 194919, 194920, 194921, 194922, 194923, 194924, 194925, 194926, 194927, 194928, 194929, 194930, 194931, 194932, 194933, 194934, 194935, 194936, 194937, 194938, 194939, 194940, 194941, 194942, 194943, 194944, 194945, 194946, 194947, 194948, 194949, 194950, 194951, 194952, 194953, 194954, 194955, 194956, 194957, 194958, 194959, 194960, 194961, 194962, 194963, 194964, 194965, 194966, 194967, 194968, 194969, 194970, 194971, 194972, 194973, 194974, 194975, 194976, 194977, 194978, 194979, 194980, 194981, 194982, 194983, 194984, 194985, 194986, 194987, 194988, 194989, 194990, 194991, 194992, 194993, 194994, 194995, 194996, 194997, 194998, 194999, 195000, 195001, 195002, 195003, 195004, 195005, 195006, 195007, 195008, 195009, 195010, 195011, 195012, 195013, 195014, 195015, 195016, 195017, 195018, 195019, 195020, 195021, 195022, 195023, 195024, 195025, 195026, 195027, 195028, 195029, 195030, 195031, 195032, 195033, 195034, 195035, 195036, 195037, 195038, 195039, 195040, 195041, 195042, 195043, 195044, 195045, 195046, 195047, 195048, 195049, 195050, 195051, 195052, 195053, 195054, 195055, 195056, 195057, 195058, 195059, 195060, 195061, 195062, 195063, 195064, 195065, 195066, 195067, 195068, 195069, 195070, 195071, 195072, 195073, 195074, 195075, 195076, 195077, 195078, 195079, 195080, 195081, 195082, 195083, 195084, 195085, 195086, 195087, 195088, 195089, 195090, 195091, 195092, 195093, 195094, 195095, 195096, 195097, 195098, 195099, 195100, 195101];\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nvar _clone = _interopRequireDefault(require(\"clone\"));\n\nvar _uslug = _interopRequireDefault(require(\"uslug\"));\n\nvar _token = _interopRequireDefault(require(\"markdown-it/lib/token\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar TOC = \"@[toc]\";\nvar TOC_RE = /^@\\[toc\\]/im;\n\nvar markdownItSecondInstance = function markdownItSecondInstance() {};\n\nvar headingIds = {};\nvar tocHtml = \"\";\n\nvar repeat = function repeat(string, num) {\n  return new Array(num + 1).join(string);\n};\n\nvar makeSafe = function makeSafe(string, headingIds, slugifyFn) {\n  var key = slugifyFn(string); // slugify\n\n  if (!headingIds[key]) {\n    headingIds[key] = 0;\n  }\n\n  headingIds[key]++;\n  return key + (headingIds[key] > 1 ? \"-\".concat(headingIds[key]) : \"\");\n};\n\nvar space = function space() {\n  return _objectSpread({}, new _token.default(\"text\", \"\", 0), {\n    content: \" \"\n  });\n};\n\nvar renderAnchorLinkSymbol = function renderAnchorLinkSymbol(options) {\n  if (options.anchorLinkSymbolClassName) {\n    return [_objectSpread({}, new _token.default(\"span_open\", \"span\", 1), {\n      attrs: [[\"class\", options.anchorLinkSymbolClassName]]\n    }), _objectSpread({}, new _token.default(\"text\", \"\", 0), {\n      content: options.anchorLinkSymbol\n    }), new _token.default(\"span_close\", \"span\", -1)];\n  } else {\n    return [_objectSpread({}, new _token.default(\"text\", \"\", 0), {\n      content: options.anchorLinkSymbol\n    })];\n  }\n};\n\nvar renderAnchorLink = function renderAnchorLink(anchor, options, tokens, idx) {\n  var attrs = [];\n\n  if (options.anchorClassName != null) {\n    attrs.push([\"class\", options.anchorClassName]);\n  }\n\n  attrs.push([\"href\", \"#\".concat(anchor)]);\n\n  var openLinkToken = _objectSpread({}, new _token.default(\"link_open\", \"a\", 1), {\n    attrs: attrs\n  });\n\n  var closeLinkToken = new _token.default(\"link_close\", \"a\", -1);\n\n  if (options.wrapHeadingTextInAnchor) {\n    tokens[idx + 1].children.unshift(openLinkToken);\n    tokens[idx + 1].children.push(closeLinkToken);\n  } else {\n    var _tokens$children;\n\n    var linkTokens = [openLinkToken].concat(_toConsumableArray(renderAnchorLinkSymbol(options)), [closeLinkToken]); // `push` or `unshift` according to anchorLinkBefore option\n    // space is at the opposite side.\n\n    var actionOnArray = {\n      false: \"push\",\n      true: \"unshift\"\n    }; // insert space between anchor link and heading ?\n\n    if (options.anchorLinkSpace) {\n      linkTokens[actionOnArray[!options.anchorLinkBefore]](space());\n    }\n\n    (_tokens$children = tokens[idx + 1].children)[actionOnArray[options.anchorLinkBefore]].apply(_tokens$children, _toConsumableArray(linkTokens));\n  }\n};\n\nvar treeToMarkdownBulletList = function treeToMarkdownBulletList(tree) {\n  var indent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  return tree.map(function (item) {\n    var indentation = \"  \";\n    var node = \"\".concat(repeat(indentation, indent), \"*\");\n\n    if (item.heading.content) {\n      var contentWithoutAnchor = item.heading.content.replace(/\\[([^\\]]*)\\]\\([^)]*\\)/g, \"$1\");\n      node += \" \" + \"[\".concat(contentWithoutAnchor, \"](#\").concat(item.heading.anchor, \")\\n\");\n    } else {\n      node += \"\\n\";\n    }\n\n    if (item.nodes.length) {\n      node += treeToMarkdownBulletList(item.nodes, indent + 1);\n    }\n\n    return node;\n  }).join(\"\");\n};\n\nvar generateTocMarkdownFromArray = function generateTocMarkdownFromArray(headings, options) {\n  var tree = {\n    nodes: []\n  }; // create an ast\n\n  headings.forEach(function (heading) {\n    if (heading.level < options.tocFirstLevel || heading.level > options.tocLastLevel) {\n      return;\n    }\n\n    var i = 1;\n    var lastItem = tree;\n\n    for (; i < heading.level - options.tocFirstLevel + 1; i++) {\n      if (lastItem.nodes.length === 0) {\n        lastItem.nodes.push({\n          heading: {},\n          nodes: []\n        });\n      }\n\n      lastItem = lastItem.nodes[lastItem.nodes.length - 1];\n    }\n\n    lastItem.nodes.push({\n      heading: heading,\n      nodes: []\n    });\n  });\n  return treeToMarkdownBulletList(tree.nodes);\n};\n\nfunction _default(md, options) {\n  options = _objectSpread({\n    toc: true,\n    tocClassName: \"markdownIt-TOC\",\n    tocFirstLevel: 1,\n    tocLastLevel: 6,\n    tocCallback: null,\n    anchorLink: true,\n    anchorLinkSymbol: \"#\",\n    anchorLinkBefore: true,\n    anchorClassName: \"markdownIt-Anchor\",\n    resetIds: true,\n    anchorLinkSpace: true,\n    anchorLinkSymbolClassName: null,\n    wrapHeadingTextInAnchor: false\n  }, options);\n  markdownItSecondInstance = (0, _clone.default)(md); // initialize key ids for each instance\n\n  headingIds = {};\n  md.core.ruler.push(\"init_toc\", function (state) {\n    var tokens = state.tokens; // reset key ids for each document\n\n    if (options.resetIds) {\n      headingIds = {};\n    }\n\n    var tocArray = [];\n    var tocMarkdown = \"\";\n    var tocTokens = [];\n    var slugifyFn = typeof options.slugify === \"function\" && options.slugify || _uslug.default;\n\n    for (var i = 0; i < tokens.length; i++) {\n      if (tokens[i].type !== \"heading_close\") {\n        continue;\n      }\n\n      var heading = tokens[i - 1];\n      var heading_close = tokens[i];\n\n      if (heading.type === \"inline\") {\n        var content = void 0;\n\n        if (heading.children && heading.children.length > 0 && heading.children[0].type === \"link_open\") {\n          // headings that contain links have to be processed\n          // differently since nested links aren't allowed in markdown\n          content = heading.children[1].content;\n          heading._tocAnchor = makeSafe(content, headingIds, slugifyFn);\n        } else {\n          content = heading.content;\n          heading._tocAnchor = makeSafe(heading.children.reduce(function (acc, t) {\n            return acc + t.content;\n          }, \"\"), headingIds, slugifyFn);\n        }\n\n        if (options.anchorLinkPrefix) {\n          heading._tocAnchor = options.anchorLinkPrefix + heading._tocAnchor;\n        }\n\n        tocArray.push({\n          content: content,\n          anchor: heading._tocAnchor,\n          level: +heading_close.tag.substr(1, 1)\n        });\n      }\n    }\n\n    tocMarkdown = generateTocMarkdownFromArray(tocArray, options);\n    tocTokens = markdownItSecondInstance.parse(tocMarkdown, {}); // Adding tocClassName to 'ul' element\n\n    if (_typeof(tocTokens[0]) === \"object\" && tocTokens[0].type === \"bullet_list_open\") {\n      var attrs = tocTokens[0].attrs = tocTokens[0].attrs || [];\n\n      if (options.tocClassName != null) {\n        attrs.push([\"class\", options.tocClassName]);\n      }\n    }\n\n    tocHtml = markdownItSecondInstance.renderer.render(tocTokens, markdownItSecondInstance.options);\n\n    if (typeof state.env.tocCallback === \"function\") {\n      state.env.tocCallback.call(undefined, tocMarkdown, tocArray, tocHtml);\n    } else if (typeof options.tocCallback === \"function\") {\n      options.tocCallback.call(undefined, tocMarkdown, tocArray, tocHtml);\n    } else if (typeof md.options.tocCallback === \"function\") {\n      md.options.tocCallback.call(undefined, tocMarkdown, tocArray, tocHtml);\n    }\n  });\n  md.inline.ruler.after(\"emphasis\", \"toc\", function (state, silent) {\n    var token;\n    var match;\n\n    if ( // Reject if the token does not start with @[\n    state.src.charCodeAt(state.pos) !== 0x40 || state.src.charCodeAt(state.pos + 1) !== 0x5b || // Don’t run any pairs in validation mode\n    silent) {\n      return false;\n    } // Detect TOC markdown\n\n\n    match = TOC_RE.exec(state.src);\n    match = !match ? [] : match.filter(function (m) {\n      return m;\n    });\n\n    if (match.length < 1) {\n      return false;\n    } // Build content\n\n\n    token = state.push(\"toc_open\", \"toc\", 1);\n    token.markup = TOC;\n    token = state.push(\"toc_body\", \"\", 0);\n    token = state.push(\"toc_close\", \"toc\", -1); // Update pos so the parser can continue\n\n    state.pos = state.pos + 6;\n    return true;\n  });\n\n  var originalHeadingOpen = md.renderer.rules.heading_open || function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var tokens = args[0],\n        idx = args[1],\n        options = args[2],\n        self = args[4];\n    return self.renderToken(tokens, idx, options);\n  };\n\n  md.renderer.rules.heading_open = function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var tokens = args[0],\n        idx = args[1];\n    var attrs = tokens[idx].attrs = tokens[idx].attrs || [];\n    var anchor = tokens[idx + 1]._tocAnchor;\n    attrs.push([\"id\", anchor]);\n\n    if (options.anchorLink) {\n      renderAnchorLink.apply(void 0, [anchor, options].concat(args));\n    }\n\n    return originalHeadingOpen.apply(this, args);\n  };\n\n  md.renderer.rules.toc_open = function () {\n    return \"\";\n  };\n\n  md.renderer.rules.toc_close = function () {\n    return \"\";\n  };\n\n  md.renderer.rules.toc_body = function () {\n    return \"\";\n  };\n\n  if (options.toc) {\n    md.renderer.rules.toc_body = function () {\n      return tocHtml;\n    };\n  }\n}","var buildHTML = require(\"./buildHTML\");\nvar buildMathML = require(\"./buildMathML\");\nvar buildCommon = require(\"./buildCommon\");\nvar Options = require(\"./Options\");\nvar Settings = require(\"./Settings\");\nvar Style = require(\"./Style\");\n\nvar makeSpan = buildCommon.makeSpan;\n\nvar buildTree = function(tree, expression, settings) {\n    settings = settings || new Settings({});\n\n    var startStyle = Style.TEXT;\n    if (settings.displayMode) {\n        startStyle = Style.DISPLAY;\n    }\n\n    // Setup the default options\n    var options = new Options({\n        style: startStyle,\n        size: \"size5\",\n    });\n\n    // `buildHTML` sometimes messes with the parse tree (like turning bins ->\n    // ords), so we build the MathML version first.\n    var mathMLNode = buildMathML(tree, expression, options);\n    var htmlNode = buildHTML(tree, options);\n\n    var katexNode = makeSpan([\"katex\"], [\n        mathMLNode, htmlNode,\n    ]);\n\n    if (settings.displayMode) {\n        return makeSpan([\"katex-display\"], [katexNode]);\n    } else {\n        return katexNode;\n    }\n};\n\nmodule.exports = buildTree;\n","'use strict';\n\n\nmodule.exports = function block(state) {\n  var token;\n\n  if (state.inlineMode) {\n    token          = new state.Token('inline', '', 0);\n    token.content  = state.src;\n    token.map      = [ 0, 1 ];\n    token.children = [];\n    state.tokens.push(token);\n  } else {\n    state.md.block.parse(state.src, state.md, state.env, state.tokens);\n  }\n};\n","'use strict';\n\n\nvar emojies_defs      = require('./lib/data/full.json');\nvar emojies_shortcuts = require('./lib/data/shortcuts');\nvar emoji_html        = require('./lib/render');\nvar emoji_replace     = require('./lib/replace');\nvar normalize_opts    = require('./lib/normalize_opts');\n\n\nmodule.exports = function emoji_plugin(md, options) {\n  var defaults = {\n    defs: emojies_defs,\n    shortcuts: emojies_shortcuts,\n    enabled: []\n  };\n\n  var opts = normalize_opts(md.utils.assign({}, defaults, options || {}));\n\n  md.renderer.rules.emoji = emoji_html;\n\n  md.core.ruler.push('emoji', emoji_replace(md, opts.defs, opts.shortcuts, opts.scanRE, opts.replaceRE));\n};\n","// Convert input options to more useable format\n// and compile search regexp\n\n'use strict';\n\n\nfunction quoteRE(str) {\n  return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&');\n}\n\n\nmodule.exports = function normalize_opts(options) {\n  var emojies = options.defs,\n      shortcuts;\n\n  // Filter emojies by whitelist, if needed\n  if (options.enabled.length) {\n    emojies = Object.keys(emojies).reduce(function (acc, key) {\n      if (options.enabled.indexOf(key) >= 0) {\n        acc[key] = emojies[key];\n      }\n      return acc;\n    }, {});\n  }\n\n  // Flatten shortcuts to simple object: { alias: emoji_name }\n  shortcuts = Object.keys(options.shortcuts).reduce(function (acc, key) {\n    // Skip aliases for filtered emojies, to reduce regexp\n    if (!emojies[key]) { return acc; }\n\n    if (Array.isArray(options.shortcuts[key])) {\n      options.shortcuts[key].forEach(function (alias) {\n        acc[alias] = key;\n      });\n      return acc;\n    }\n\n    acc[options.shortcuts[key]] = key;\n    return acc;\n  }, {});\n\n  // Compile regexp\n  var names = Object.keys(emojies)\n                .map(function (name) { return ':' + name + ':'; })\n                .concat(Object.keys(shortcuts))\n                .sort()\n                .reverse()\n                .map(function (name) { return quoteRE(name); })\n                .join('|');\n  var scanRE = RegExp(names);\n  var replaceRE = RegExp(names, 'g');\n\n  return {\n    defs: emojies,\n    shortcuts: shortcuts,\n    scanRE: scanRE,\n    replaceRE: replaceRE\n  };\n};\n","'use strict';\nvar charAt = require('../internals/string-multibyte').charAt;\nvar InternalStateModule = require('../internals/internal-state');\nvar defineIterator = require('../internals/define-iterator');\n\nvar STRING_ITERATOR = 'String Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(STRING_ITERATOR);\n\n// `String.prototype[@@iterator]` method\n// https://tc39.github.io/ecma262/#sec-string.prototype-@@iterator\ndefineIterator(String, 'String', function (iterated) {\n  setInternalState(this, {\n    type: STRING_ITERATOR,\n    string: String(iterated),\n    index: 0\n  });\n// `%StringIteratorPrototype%.next` method\n// https://tc39.github.io/ecma262/#sec-%stringiteratorprototype%.next\n}, function next() {\n  var state = getInternalState(this);\n  var string = state.string;\n  var index = state.index;\n  var point;\n  if (index >= string.length) return { value: undefined, done: true };\n  point = charAt(string, index);\n  state.index += point.length;\n  return { value: point, done: false };\n});\n","export default \"# 花名册\\n使用Hyperledger Fabric技术搭建的花名册应用。\\n\\n## 拉取仓库\\n1. 仓库地址: [fabric-cases](https://github.com/stephenwu2020/fabric-cases)\\n2. 首先，阅读devnet的介绍，确保devnet能够正常启动、关闭\\n\\n## 启动网络\\n```\\ncd roster\\nmake new\\n```\\n\\n## 运行 roster cli\\n查看帮助手册:\\n```\\n$ go run .\\nRoster records person info on Hyperledger Fabric blockchain\\n\\nUsage:\\n  roster [flags]\\n  roster [command]\\n\\nAvailable Commands:\\n  group       Mark person with group tag\\n  help        Help about any command\\n  history     Person history operations\\n  person      Add person, delete person and modify person\\n  version     Print the version number of roster\\n\\nFlags:\\n  -h, --help   help for roster\\n\\nUse \\\"roster [command] --help\\\" for more information about a command.\\n```\\n添加人物:\\n```\\n$ go run . person add -n \\\"小明\\\"\\nAdd person with name: 小明\\nAdd person success.\\n```\\n搜索人物:\\n```\\n$ go run . person search -n \\\"小明\\\"\\nSearch person by name: 小明\\n(0) 小明: \\n  Id\\t\\t: person_1000\\n  Name\\t\\t: 小明\\n  Age\\t\\t: 0\\n  Gender\\t: 0\\n  Birth\\t\\t: 2020-08-25\\n  BirthPlace\\t: \\n  GroupTags\\t: []\\n  HistroyId\\t: history_1000\\n```\\n添加记录:\\n```\\n$ go run . history add --id person_1000 -c \\\"上班\\\" -C \\\"勤奋工作好榜样\\\"\\nAdd record into history: 上班 勤奋工作好榜样\\nAdd history record success.\\n```\\n列出记录:\\n```\\n$ go run . history show --id person_1000\\nShow history with person id: person_1000\\n(0) Record: \\n  Id\\t\\t: 0\\n  Content\\t: 上班\\n  Comment\\t: 勤奋工作好榜样\\n  Time\\t\\t: 2020-08-25\\n```\\n\\n更多功能请查看帮助手册.\\n\\n## 网络操作\\n- 新建: make new\\n- 销毁: make destroy\\n- 启动: make up\\n- 关闭: make down\\n- 更新链码: make upgradeCC\\n\\n更多操作细节请查看devnet的介绍.\";","export default \"# 虚拟机EVM\\n\\n处理器是运行一系列计算机指令的集成电路，每个处理器包含一组它自己能够运行的操作。一条指令由操作码和运算数据组成。x86指令集是当今最常用的指令集，含有超过1000个独立的操作码。\\n\\n程序是一组有序的指令集合，所有的程序，包括打孔机代码，汇编，高级语言如 Python，都被编译和解释成一系列原生字节码。这些字节码对应着能被处理器理解，按顺序运行的指令，下图展示了 Hello World 程序在 x86 架构的汇编集：\\n\\n![img](/book/assembly.png)\\n\\n虚拟机，VM，是尝试成为处理器的软件程序。它有自身的操作码，能够运行根据这些操作码编写的指令。这些底层的字节数据，能够被 VM 读取，对应 VM 的指令，通常被称为字节码。编程语言能够编译成字节码，让虚拟机运行。Java 虚拟机，JVM，是当今最流行的虚拟机，支持多种语言的运行，包括 Java，Scala，Groovy，和 Jython。\\n\\n因为虚拟机是处理器的模拟，它的优势之一，是可以忽略底层的硬件。一旦虚拟机接入了新的平台，如 Windows, Linux, 或者嵌入式系统，能够在虚拟机运行的程序，也就能够在对应的操作系统运行。如 Java 名言，一次编写，处处可运行。\\n\\nEthereum 拥有自身的虚拟机，叫做 Ethereum Virtual Machine，EVM。Ethereum 之所以实现自身的虚拟机， 因为它的每个指令都对应 gas 小费。小费一方面防止垃圾攻击，一方面让 EVM 成为无需许可的公共资源。EVM 每个操作码都有自己的小费，意味着，优秀的 contract 运行花费更便宜。例如，SSTORE 操作码，将数据写入状态树，这是一个昂贵的操作，因为写入的数据会复制到网络的所有节点上。\\n\\nTransaction 字节码的所有指令的 gas 小费的总和，就是 transaction 的小费。\\n\";","// Proceess '\\n'\n\n'use strict';\n\nmodule.exports = function newline(state, silent) {\n  var pmax, max, pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false; }\n\n  pmax = state.pending.length - 1;\n  max = state.posMax;\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        state.pending = state.pending.replace(/ +$/, '');\n        state.push('hardbreak', 'br', 0);\n      } else {\n        state.pending = state.pending.slice(0, -1);\n        state.push('softbreak', 'br', 0);\n      }\n\n    } else {\n      state.push('softbreak', 'br', 0);\n    }\n  }\n\n  pos++;\n\n  // skip heading spaces for next line\n  while (pos < max && state.src.charCodeAt(pos) === 0x20) { pos++; }\n\n  state.pos = pos;\n  return true;\n};\n","export default \"# 哈希函数与Merkle Tree\\n密码学是隐藏数据的艺术和科学，更多的是艺术。科学在其中的地位，\\n仅仅是将妙想转变为数学公式的工具。\\n\\n# 哈希函数\\n用一幅图来说明哈希函数的作用：\\n\\n![img](/book/hash.jpg)\\n\\n哈希函数，接收一个输入，通常是很大的数据，像电影，歌曲，电子书，图片或其它电子数据，输出一个固定字节的结果，并且大小远远小于输入。然而，仅仅改变输入的一个字节，输出的结果会截然不同。这是哈希函数最重要的特性之一。另一个重要的特性是，给出函数的结果，几乎不可能找到它的输入。\\n\\n如果对哈希函数的结果，再进行一次哈希函数操作，得到的是另外一个全然不同的结果，这样子，原本的结果也无法认出来了。\\n\\n# Merkle Tree\\nMerkle首先是树的数据结构，树的每个节点是它的字节点的组合哈希结果。一般来说，都是2叉树，每一个节点是它的两个孩子节点组合起来的哈希结果。最终会形成树的根，成为Merkle Root。如图所示：\\n\\n![img](/book/merkle.jpg)\\n\\n进一步对上图进行阐述，假设现在有两个值，2ad5, 3ce9, 它们拼在一起，经过哈希函数处理，得到结果23a2。由于哈希函数是单向的，每次对2ad5和3ce9进行哈希处理，总是得到23a2，但是只有23a2的话，是不能够确定原来的输入是2ad5和3ce9的。对其它节点进行相同的处理，最后会得到根0123。如果得到根0123，是不可能得到原始的数据D0, D1, D2, D3的。\\n\\n现在假设我是D2的拥有者，根据分布式系统的共识规则，同时知道root哈希是0123，现在请求该系统证明，D2是其中的一块数据。这时候，系统给我提供哈希结果：3ce9, 01e3, 0123，证明如下：\\n\\n- 对D2进行哈希操作，得到2ad5\\n- 对[2ad5 + 3ce9]进行哈希操作，得到23a2\\n- 对[01e3 + 23a2]进行哈希操作，得到0123\\n\\n由于我们知道根是0123，通过上述证明，也能推导根是0123，因此，D2是该系统记录的一部分。如果D2不是该系统的一部分，系统不能提供相对应的哈希值用于证明。另外，证明过程也是很便捷的，需要的信息也非常少。这就是Merkle Tree的优势。\\n\";","// Commonmark default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         true,         // Enable HTML tags in source\n    xhtmlOut:     true,         // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline'\n      ]\n    },\n\n    block: {\n      rules: [\n        'blockquote',\n        'code',\n        'fence',\n        'heading',\n        'hr',\n        'html_block',\n        'lheading',\n        'list',\n        'reference',\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'autolink',\n        'backticks',\n        'emphasis',\n        'entity',\n        'escape',\n        'html_inline',\n        'image',\n        'link',\n        'newline',\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'emphasis',\n        'text_collapse'\n      ]\n    }\n  }\n};\n","\n'use strict';\n\n\nmodule.exports = function format(url) {\n  var result = '';\n\n  result += url.protocol || '';\n  result += url.slashes ? '//' : '';\n  result += url.auth ? url.auth + '@' : '';\n\n  if (url.hostname && url.hostname.indexOf(':') !== -1) {\n    // ipv6 address\n    result += '[' + url.hostname + ']';\n  } else {\n    result += url.hostname || '';\n  }\n\n  result += url.port ? ':' + url.port : '';\n  result += url.pathname || '';\n  result += url.search || '';\n  result += url.hash || '';\n\n  return result;\n};\n","// Paragraph\n\n'use strict';\n\n\nmodule.exports = function paragraph(state, startLine/*, endLine*/) {\n  var content, terminate, i, l, token,\n      nextLine = startLine + 1,\n      terminatorRules = state.md.block.ruler.getRules('paragraph'),\n      endLine = state.lineMax;\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine;\n\n  token          = state.push('paragraph_open', 'p', 1);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token          = state.push('paragraph_close', 'p', -1);\n\n  return true;\n};\n","/**\n * class Ruler\n *\n * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and\n * [[MarkdownIt#inline]] to manage sequences of functions (rules):\n *\n * - keep rules in defined order\n * - assign the name to each rule\n * - enable/disable rules\n * - add/replace rules\n * - allow assign rules to additional named chains (in the same)\n * - cacheing lists of active rules\n *\n * You will not need use this class directly until write plugins. For simple\n * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and\n * [[MarkdownIt.use]].\n **/\n'use strict';\n\n\n/**\n * new Ruler()\n **/\nfunction Ruler() {\n  // List of added rules. Each element is:\n  //\n  // {\n  //   name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ]\n  // }\n  //\n  this.__rules__ = [];\n\n  // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - diginal anchor for fast filtering by charcodes.\n  //\n  this.__cache__ = null;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Helper methods, should not be used directly\n\n\n// Find rule index by name\n//\nRuler.prototype.__find__ = function (name) {\n  for (var i = 0; i < this.__rules__.length; i++) {\n    if (this.__rules__[i].name === name) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n\n// Build rules lookup cache\n//\nRuler.prototype.__compile__ = function () {\n  var self = this;\n  var chains = [ '' ];\n\n  // collect unique names\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) { return; }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName);\n      }\n    });\n  });\n\n  self.__cache__ = {};\n\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = [];\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) { return; }\n\n      if (chain && rule.alt.indexOf(chain) < 0) { return; }\n\n      self.__cache__[chain].push(rule.fn);\n    });\n  });\n};\n\n\n/**\n * Ruler.at(name, fn [, options])\n * - name (String): rule name to replace.\n * - fn (Function): new rule function.\n * - options (Object): new rule options (not mandatory).\n *\n * Replace rule by name with new function & options. Throws error if name not\n * found.\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * Replace existing typorgapher replacement rule with new one:\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.at('replacements', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.at = function (name, fn, options) {\n  var index = this.__find__(name);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + name); }\n\n  this.__rules__[index].fn = fn;\n  this.__rules__[index].alt = opt.alt || [];\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.before(beforeName, ruleName, fn [, options])\n * - beforeName (String): new rule will be added before this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain before one with given name. See also\n * [[Ruler.after]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  var index = this.__find__(beforeName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + beforeName); }\n\n  this.__rules__.splice(index, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.after(afterName, ruleName, fn [, options])\n * - afterName (String): new rule will be added after this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain after one with given name. See also\n * [[Ruler.before]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.inline.ruler.after('text', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  var index = this.__find__(afterName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + afterName); }\n\n  this.__rules__.splice(index + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n/**\n * Ruler.push(ruleName, fn [, options])\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Push new rule to the end of chain. See also\n * [[Ruler.before]], [[Ruler.after]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.push('my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.push = function (ruleName, fn, options) {\n  var opt = options || {};\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.enable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to enable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.disable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.enable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and enable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = true;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.enableOnly(list [, ignoreInvalid])\n * - list (String|Array): list of rule names to enable (whitelist).\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names, and disable everything else. If any rule name\n * not found - throw Error. Errors can be disabled by second param.\n *\n * See also [[Ruler.disable]], [[Ruler.enable]].\n **/\nRuler.prototype.enableOnly = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  this.__rules__.forEach(function (rule) { rule.enabled = false; });\n\n  this.enable(list, ignoreInvalid);\n};\n\n\n/**\n * Ruler.disable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Disable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.enable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.disable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and disable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = false;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.getRules(chainName) -> Array\n *\n * Return array of active functions (rules) for given chain name. It analyzes\n * rules configuration, compiles caches if not exists and returns result.\n *\n * Default chain name is `''` (empty string). It can't be skipped. That's\n * done intentionally, to keep signature monomorphic for high speed.\n **/\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__();\n  }\n\n  // Chain can be empty, if rules disabled. But we still have to return Array.\n  return this.__cache__[chainName] || [];\n};\n\nmodule.exports = Ruler;\n","// Emojies & shortcuts replacement logic.\n//\n// Note: In theory, it could be faster to parse :smile: in inline chain and\n// leave only shortcuts here. But, who care...\n//\n\n'use strict';\n\n\nmodule.exports = function create_rule(md, emojies, shortcuts, scanRE, replaceRE) {\n  var arrayReplaceAt = md.utils.arrayReplaceAt,\n      ucm = md.utils.lib.ucmicro,\n      ZPCc = new RegExp([ ucm.Z.source, ucm.P.source, ucm.Cc.source ].join('|'));\n\n  function splitTextToken(text, level, Token) {\n    var token, last_pos = 0, nodes = [];\n\n    text.replace(replaceRE, function (match, offset, src) {\n      var emoji_name;\n      // Validate emoji name\n      if (shortcuts.hasOwnProperty(match)) {\n        // replace shortcut with full name\n        emoji_name = shortcuts[match];\n\n        // Don't allow letters before any shortcut (as in no \":/\" in http://)\n        if (offset > 0 && !ZPCc.test(src[offset - 1])) {\n          return;\n        }\n\n        // Don't allow letters after any shortcut\n        if (offset + match.length < src.length && !ZPCc.test(src[offset + match.length])) {\n          return;\n        }\n      } else {\n        emoji_name = match.slice(1, -1);\n      }\n\n      // Add new tokens to pending list\n      if (offset > last_pos) {\n        token         = new Token('text', '', 0);\n        token.content = text.slice(last_pos, offset);\n        nodes.push(token);\n      }\n\n      token         = new Token('emoji', '', 0);\n      token.markup  = emoji_name;\n      token.content = emojies[emoji_name];\n      nodes.push(token);\n\n      last_pos = offset + match.length;\n    });\n\n    if (last_pos < text.length) {\n      token         = new Token('text', '', 0);\n      token.content = text.slice(last_pos);\n      nodes.push(token);\n    }\n\n    return nodes;\n  }\n\n  return function emoji_replace(state) {\n    var i, j, l, tokens, token,\n        blockTokens = state.tokens,\n        autolinkLevel = 0;\n\n    for (j = 0, l = blockTokens.length; j < l; j++) {\n      if (blockTokens[j].type !== 'inline') { continue; }\n      tokens = blockTokens[j].children;\n\n      // We scan from the end, to keep position when new tags added.\n      // Use reversed logic in links start/end match\n      for (i = tokens.length - 1; i >= 0; i--) {\n        token = tokens[i];\n\n        if (token.type === 'link_open' || token.type === 'link_close') {\n          if (token.info === 'auto') { autolinkLevel -= token.nesting; }\n        }\n\n        if (token.type === 'text' && autolinkLevel === 0 && scanRE.test(token.content)) {\n          // replace current node\n          blockTokens[j].children = tokens = arrayReplaceAt(\n            tokens, i, splitTextToken(token.content, token.level, state.Token)\n          );\n        }\n      }\n    }\n  };\n};\n","// Parse backticks\n\n'use strict';\n\nmodule.exports = function backtick(state, silent) {\n  var start, max, marker, matchStart, matchEnd, token,\n      pos = state.pos,\n      ch = state.src.charCodeAt(pos);\n\n  if (ch !== 0x60/* ` */) { return false; }\n\n  start = pos;\n  pos++;\n  max = state.posMax;\n\n  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++; }\n\n  marker = state.src.slice(start, pos);\n\n  matchStart = matchEnd = pos;\n\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1;\n\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++; }\n\n    if (matchEnd - matchStart === marker.length) {\n      if (!silent) {\n        token         = state.push('code_inline', 'code', 0);\n        token.markup  = marker;\n        token.content = state.src.slice(pos, matchStart)\n                                 .replace(/[ \\n]+/g, ' ')\n                                 .trim();\n      }\n      state.pos = matchEnd;\n      return true;\n    }\n  }\n\n  if (!silent) { state.pending += marker; }\n  state.pos += marker.length;\n  return true;\n};\n","export default \"# 深入Solidity\\nSolidity 是 EVM 最主要的编程语言。EVM 的操作码与传统的处理器支持的操作码相差很大，现有的编程语言很难适配 EVM，所以，Solidity被设计成专门在 Ethereum 开发 smart contract 的语言。\\n\\n许多人将 Solidity 与 JavaScript 做对比，但它最接近的是 C。Solidity 是强类型语言，实现最基本的功能，强调存储和 CPU 资源的有限性。它支持256位的数，一般语言仅仅支持32位或者64位的数。\\n\\n没有使用过强类型语言的开发者，初次接触 Solidity 不会觉得很难，许多人觉得指定类型，比没有类型制定的语言更加容易上手。\\n\\n在生产环境里，所有的开发者必须适应 gas 的约束，尽量少地使用存储，内存，CPU运算资源。嵌入式系统的开发者，通常在有限的资源环境开发，会觉得 Solidity 非常的自然。\\n\\n# 与黑客共舞\\nSmart contract 内部维持着 ether balance，成为黑客喜欢的获利目标。包括 DAO 攻击，Parity 多重签名攻击在内的黑客行为，导致数百万美元的丢失。绝大多数的 Solidity 程序都是开源的，使用经过验证的开发方法，避免安全漏洞是很重要的。这些技术，包括使用取款函数替代发送资金的函数等等。\\n\\n一般来说，Solidity 开发更像是建造一座桥而不是开发一个网站。整个过程不是可迭代的。一旦部署，contract 的代码就不能修改和更新了。像资金转移的操作，是不可能回退的。\\n\\n只要是有可能，旧的经过验证的代码总比新的代码更可靠，contract 在部署到主网之前，必须反复测试和验证。\\n\";","// Lists\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\n// Search `[-+*][\\n ]`, returns next pos arter marker on success\n// or -1 on fail.\nfunction skipBulletListMarker(state, startLine) {\n  var marker, pos, max, ch;\n\n  pos = state.bMarks[startLine] + state.tShift[startLine];\n  max = state.eMarks[startLine];\n\n  marker = state.src.charCodeAt(pos++);\n  // Check bullet\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x2B/* + */) {\n    return -1;\n  }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" -test \" - is not a list item\n      return -1;\n    }\n  }\n\n  return pos;\n}\n\n// Search `\\d+[.)][\\n ]`, returns next pos arter marker on success\n// or -1 on fail.\nfunction skipOrderedListMarker(state, startLine) {\n  var ch,\n      start = state.bMarks[startLine] + state.tShift[startLine],\n      pos = start,\n      max = state.eMarks[startLine];\n\n  // List marker should have at least 2 chars (digit + dot)\n  if (pos + 1 >= max) { return -1; }\n\n  ch = state.src.charCodeAt(pos++);\n\n  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1; }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) { return -1; }\n\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {\n\n      // List marker should have no more than 9 digits\n      // (prevents integer overflow in browsers)\n      if (pos - start >= 10) { return -1; }\n\n      continue;\n    }\n\n    // found valid marker\n    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {\n      break;\n    }\n\n    return -1;\n  }\n\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" 1.test \" - is not a list item\n      return -1;\n    }\n  }\n  return pos;\n}\n\nfunction markTightParagraphs(state, idx) {\n  var i, l,\n      level = state.level + 2;\n\n  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].hidden = true;\n      state.tokens[i].hidden = true;\n      i += 2;\n    }\n  }\n}\n\n\nmodule.exports = function list(state, startLine, endLine, silent) {\n  var nextLine,\n      initial,\n      offset,\n      indent,\n      oldTShift,\n      oldIndent,\n      oldLIndent,\n      oldTight,\n      oldParentType,\n      start,\n      posAfterMarker,\n      ch,\n      pos,\n      max,\n      indentAfterMarker,\n      markerValue,\n      markerCharCode,\n      isOrdered,\n      contentStart,\n      listTokIdx,\n      prevEmptyEnd,\n      listLines,\n      itemLines,\n      tight = true,\n      terminatorRules,\n      token,\n      i, l, terminate;\n\n  // Detect list type and position after marker\n  if ((posAfterMarker = skipOrderedListMarker(state, startLine)) >= 0) {\n    isOrdered = true;\n  } else if ((posAfterMarker = skipBulletListMarker(state, startLine)) >= 0) {\n    isOrdered = false;\n  } else {\n    return false;\n  }\n\n  // We should terminate list on style change. Remember first one to compare.\n  markerCharCode = state.src.charCodeAt(posAfterMarker - 1);\n\n  // For validation mode we can terminate immediately\n  if (silent) { return true; }\n\n  // Start list\n  listTokIdx = state.tokens.length;\n\n  if (isOrdered) {\n    start = state.bMarks[startLine] + state.tShift[startLine];\n    markerValue = Number(state.src.substr(start, posAfterMarker - start - 1));\n\n    token       = state.push('ordered_list_open', 'ol', 1);\n    if (markerValue !== 1) {\n      token.attrs = [ [ 'start', markerValue ] ];\n    }\n\n  } else {\n    token       = state.push('bullet_list_open', 'ul', 1);\n  }\n\n  token.map    = listLines = [ startLine, 0 ];\n  token.markup = String.fromCharCode(markerCharCode);\n\n  //\n  // Iterate list items\n  //\n\n  nextLine = startLine;\n  prevEmptyEnd = false;\n  terminatorRules = state.md.block.ruler.getRules('list');\n\n  while (nextLine < endLine) {\n    pos = posAfterMarker;\n    max = state.eMarks[nextLine];\n\n    initial = offset = state.sCount[nextLine] + posAfterMarker - (state.bMarks[startLine] + state.tShift[startLine]);\n\n    while (pos < max) {\n      ch = state.src.charCodeAt(pos);\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          offset += 4 - offset % 4;\n        } else {\n          offset++;\n        }\n      } else {\n        break;\n      }\n\n      pos++;\n    }\n\n    contentStart = pos;\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1;\n    } else {\n      indentAfterMarker = offset - initial;\n    }\n\n    // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n    if (indentAfterMarker > 4) { indentAfterMarker = 1; }\n\n    // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n    indent = initial + indentAfterMarker;\n\n    // Run subparser & write tokens\n    token        = state.push('list_item_open', 'li', 1);\n    token.markup = String.fromCharCode(markerCharCode);\n    token.map    = itemLines = [ startLine, 0 ];\n\n    oldIndent = state.blkIndent;\n    oldTight = state.tight;\n    oldTShift = state.tShift[startLine];\n    oldLIndent = state.sCount[startLine];\n    oldParentType = state.parentType;\n    state.blkIndent = indent;\n    state.tight = true;\n    state.parentType = 'list';\n    state.tShift[startLine] = contentStart - state.bMarks[startLine];\n    state.sCount[startLine] = offset;\n\n    if (contentStart >= max && state.isEmpty(startLine + 1)) {\n      // workaround for this case\n      // (list item is empty, list terminates before \"foo\"):\n      // ~~~~~~~~\n      //   -\n      //\n      //     foo\n      // ~~~~~~~~\n      state.line = Math.min(state.line + 2, endLine);\n    } else {\n      state.md.block.tokenize(state, startLine, endLine, true);\n    }\n\n    // If any of list item is tight, mark list as tight\n    if (!state.tight || prevEmptyEnd) {\n      tight = false;\n    }\n    // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n    prevEmptyEnd = (state.line - startLine) > 1 && state.isEmpty(state.line - 1);\n\n    state.blkIndent = oldIndent;\n    state.tShift[startLine] = oldTShift;\n    state.sCount[startLine] = oldLIndent;\n    state.tight = oldTight;\n    state.parentType = oldParentType;\n\n    token        = state.push('list_item_close', 'li', -1);\n    token.markup = String.fromCharCode(markerCharCode);\n\n    nextLine = startLine = state.line;\n    itemLines[1] = nextLine;\n    contentStart = state.bMarks[startLine];\n\n    if (nextLine >= endLine) { break; }\n\n    if (state.isEmpty(nextLine)) {\n      break;\n    }\n\n    //\n    // Try to check if list is terminated or continued.\n    //\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    // fail if terminating block found\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n\n    // fail if list has another type\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break; }\n  }\n\n  // Finilize list\n  if (isOrdered) {\n    token = state.push('ordered_list_close', 'ol', -1);\n  } else {\n    token = state.push('bullet_list_close', 'ul', -1);\n  }\n  token.markup = String.fromCharCode(markerCharCode);\n\n  listLines[1] = nextLine;\n  state.line = nextLine;\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs(state, listTokIdx);\n  }\n\n  return true;\n};\n","'use strict';\n\n\nmodule.exports = function ins_plugin(md) {\n  // Insert each marker as a separate text token, and add it to delimiter list\n  //\n  function tokenize(state, silent) {\n    var i, scanned, token, len, ch,\n        start = state.pos,\n        marker = state.src.charCodeAt(start);\n\n    if (silent) { return false; }\n\n    if (marker !== 0x3D/* = */) { return false; }\n\n    scanned = state.scanDelims(state.pos, true);\n    len = scanned.length;\n    ch = String.fromCharCode(marker);\n\n    if (len < 2) { return false; }\n\n    if (len % 2) {\n      token         = state.push('text', '', 0);\n      token.content = ch;\n      len--;\n    }\n\n    for (i = 0; i < len; i += 2) {\n      token         = state.push('text', '', 0);\n      token.content = ch + ch;\n\n      state.delimiters.push({\n        marker: marker,\n        jump:   i,\n        token:  state.tokens.length - 1,\n        level:  state.level,\n        end:    -1,\n        open:   scanned.can_open,\n        close:  scanned.can_close\n      });\n    }\n\n    state.pos += scanned.length;\n\n    return true;\n  }\n\n\n  // Walk through delimiter list and replace text tokens with tags\n  //\n  function postProcess(state) {\n    var i, j,\n        startDelim,\n        endDelim,\n        token,\n        loneMarkers = [],\n        delimiters = state.delimiters,\n        max = state.delimiters.length;\n\n    for (i = 0; i < max; i++) {\n      startDelim = delimiters[i];\n\n      if (startDelim.marker !== 0x3D/* = */) {\n        continue;\n      }\n\n      if (startDelim.end === -1) {\n        continue;\n      }\n\n      endDelim = delimiters[startDelim.end];\n\n      token         = state.tokens[startDelim.token];\n      token.type    = 'mark_open';\n      token.tag     = 'mark';\n      token.nesting = 1;\n      token.markup  = '==';\n      token.content = '';\n\n      token         = state.tokens[endDelim.token];\n      token.type    = 'mark_close';\n      token.tag     = 'mark';\n      token.nesting = -1;\n      token.markup  = '==';\n      token.content = '';\n\n      if (state.tokens[endDelim.token - 1].type === 'text' &&\n          state.tokens[endDelim.token - 1].content === '=') {\n\n        loneMarkers.push(endDelim.token - 1);\n      }\n    }\n\n    // If a marker sequence has an odd number of characters, it's splitted\n    // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n    // start of the sequence.\n    //\n    // So, we have to move all those markers after subsequent s_close tags.\n    //\n    while (loneMarkers.length) {\n      i = loneMarkers.pop();\n      j = i + 1;\n\n      while (j < state.tokens.length && state.tokens[j].type === 'mark_close') {\n        j++;\n      }\n\n      j--;\n\n      if (i !== j) {\n        token = state.tokens[j];\n        state.tokens[j] = state.tokens[i];\n        state.tokens[i] = token;\n      }\n    }\n  }\n\n  md.inline.ruler.before('emphasis', 'mark', tokenize);\n  md.inline.ruler2.before('emphasis', 'mark', postProcess);\n};\n","// Normalize input string\n\n'use strict';\n\n\nvar NEWLINES_RE  = /\\r[\\n\\u0085]?|[\\u2424\\u2028\\u0085]/g;\nvar NULL_RE      = /\\u0000/g;\n\n\nmodule.exports = function inline(state) {\n  var str;\n\n  // Normalize newlines\n  str = state.src.replace(NEWLINES_RE, '\\n');\n\n  // Replace NULL characters\n  str = str.replace(NULL_RE, '\\uFFFD');\n\n  state.src = str;\n};\n","/** internal\n * class ParserInline\n *\n * Tokenizes paragraph content.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Parser rules\n\nvar _rules = [\n  [ 'text',            require('./rules_inline/text') ],\n  [ 'newline',         require('./rules_inline/newline') ],\n  [ 'escape',          require('./rules_inline/escape') ],\n  [ 'backticks',       require('./rules_inline/backticks') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').tokenize ],\n  [ 'emphasis',        require('./rules_inline/emphasis').tokenize ],\n  [ 'link',            require('./rules_inline/link') ],\n  [ 'image',           require('./rules_inline/image') ],\n  [ 'autolink',        require('./rules_inline/autolink') ],\n  [ 'html_inline',     require('./rules_inline/html_inline') ],\n  [ 'entity',          require('./rules_inline/entity') ]\n];\n\nvar _rules2 = [\n  [ 'balance_pairs',   require('./rules_inline/balance_pairs') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').postProcess ],\n  [ 'emphasis',        require('./rules_inline/emphasis').postProcess ],\n  [ 'text_collapse',   require('./rules_inline/text_collapse') ]\n];\n\n\n/**\n * new ParserInline()\n **/\nfunction ParserInline() {\n  var i;\n\n  /**\n   * ParserInline#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of inline rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n\n  /**\n   * ParserInline#ruler2 -> Ruler\n   *\n   * [[Ruler]] instance. Second ruler used for post-processing\n   * (e.g. in emphasis-like rules).\n   **/\n  this.ruler2 = new Ruler();\n\n  for (i = 0; i < _rules2.length; i++) {\n    this.ruler2.push(_rules2[i][0], _rules2[i][1]);\n  }\n}\n\n\n// Skip single token by running all rules in validation mode;\n// returns `true` if any rule reported success\n//\nParserInline.prototype.skipToken = function (state) {\n  var ok, i, pos = state.pos,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      maxNesting = state.md.options.maxNesting,\n      cache = state.cache;\n\n\n  if (typeof cache[pos] !== 'undefined') {\n    state.pos = cache[pos];\n    return;\n  }\n\n  if (state.level < maxNesting) {\n    for (i = 0; i < len; i++) {\n      // Increment state.level and decrement it later to limit recursion.\n      // It's harmless to do here, because no tokens are created. But ideally,\n      // we'd need a separate private state variable for this purpose.\n      //\n      state.level++;\n      ok = rules[i](state, true);\n      state.level--;\n\n      if (ok) { break; }\n    }\n  } else {\n    // Too much nesting, just skip until the end of the paragraph.\n    //\n    // NOTE: this will cause links to behave incorrectly in the following case,\n    //       when an amount of `[` is exactly equal to `maxNesting + 1`:\n    //\n    //       [[[[[[[[[[[[[[[[[[[[[foo]()\n    //\n    // TODO: remove this workaround when CM standard will allow nested links\n    //       (we can replace it by preventing links from being parsed in\n    //       validation mode)\n    //\n    state.pos = state.posMax;\n  }\n\n  if (!ok) { state.pos++; }\n  cache[pos] = state.pos;\n};\n\n\n// Generate tokens for input range\n//\nParserInline.prototype.tokenize = function (state) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      end = state.posMax,\n      maxNesting = state.md.options.maxNesting;\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n\n    if (state.level < maxNesting) {\n      for (i = 0; i < len; i++) {\n        ok = rules[i](state, false);\n        if (ok) { break; }\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) { break; }\n      continue;\n    }\n\n    state.pending += state.src[state.pos++];\n  }\n\n  if (state.pending) {\n    state.pushPending();\n  }\n};\n\n\n/**\n * ParserInline.parse(str, md, env, outTokens)\n *\n * Process input string and push inline tokens into `outTokens`\n **/\nParserInline.prototype.parse = function (str, md, env, outTokens) {\n  var i, rules, len;\n  var state = new this.State(str, md, env, outTokens);\n\n  this.tokenize(state);\n\n  rules = this.ruler2.getRules('');\n  len = rules.length;\n\n  for (i = 0; i < len; i++) {\n    rules[i](state);\n  }\n};\n\n\nParserInline.prototype.State = require('./rules_inline/state_inline');\n\n\nmodule.exports = ParserInline;\n","'use strict';\nvar $ = require('../internals/export');\nvar $filter = require('../internals/array-iteration').filter;\nvar fails = require('../internals/fails');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('filter');\n// Edge 14- issue\nvar USES_TO_LENGTH = HAS_SPECIES_SUPPORT && !fails(function () {\n  [].filter.call({ length: -1, 0: 1 }, function (it) { throw it; });\n});\n\n// `Array.prototype.filter` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.filter\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {\n  filter: function filter(callbackfn /* , thisArg */) {\n    return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","export default \"# Token\\n\\nToken派生于旧单词tacen，意为标记，符号。通常用它代表私人发行的，有着特殊用途的，代表一些不是那么重要的东西的价值，类似货币的样子。例如邮票，洗衣店票，游戏币等等。Blockchain对Token赋予了新的意义，它是资产，现金，权益在Blockchain的抽象代表。过去物理版本的Token有很多限制，只能用于某一种生意，在某个组织内有效，有地域限制，通常只有一个用途，交易困难。Blockchain颠覆了过往Token的定义，它常常拥有多种用途，全球化通用，交易方便，可以与其它货币兑换，在多个市场流通，再也不是什么没啥用的东西了。\\n\\n# Token如何使用\\n\\nToken最明显的用途是作为一种私人电子货币，但这只是它最基本的功能，人们可以对它编程，赋予更多的功能，满足更多的需求。例如，Token可以同时拥有投票权，产权，资源的拥有权。\\n\\n### 货币\\n> Token可以作为是一种货币，其价值由使用它的私人交易决定\\n\\n### 资源\\n> Token可以作为一种资源，在开放的市场中被制作和交易，例如，CPU，硬盘Token可以被视为网络中的计算资源\\n\\n### 资产\\n> Token可以代表固定资产或者金融资产的所有权，如黄金，不动产，汽车，石油，能源等等\\n\\n### 使用权\\n> Token可以代表一种物品的使用权，例如论坛，网站，酒店，租赁汽车等等。\\n\\n### 权益\\n> Token可以代表一家公司的股权\\n\\n### 投票权\\n> Token可以代表某个机构的投票权\\n\\n### 收藏品\\n> Token可以代表艺术收藏品\\n\\n### 身份\\n> Token可以代编一种身份\\n\\n### 证明\\n> Token可以代表某些关系的证明，结婚证，出生证，大学学位等等\\n\\n### 工具\\n> Token可以用于访问某些服务，或者用于支付\\n\\n一种Token往往具有上述的多个功能，有时候这些功能之间难以区分，常常是相互联系的。就像驾照，它证明了该人拥有驾驶的技术，同时也是该人的身份证明。在电子Token的世界里，这些功能是可以独立开发的。\\n\\n# Token与可替代性\\n经济学上，可替代性是商品的属性，商品作为特定的个体，是可以用其它特定的个体取代的。如果每一个特定的Token，都可以用另外一个Token来替代，而价值和功能没有发生变化，那么这种Token是可替代性的。如果Token的历史轨迹可以被追踪，那么这种Token就不是可替代性的，不同历史轨迹的Token，价值和作用也许不相同。\\n\\n不可替代Token通常代表唯一的资产，它们之间不是平等的，因此不能相互替代。例如，代表梵高一幅画的Token，跟代表毕加索一幅画的Token是不等的，即使它们都属于同一个艺术Token系统。著名的Blockchain游戏CryptoKitty的某一只宠物，与另外一只宠物是不可替换的，尽管它们都属于该游戏里的收藏品。每个不可替代Token都对应一个唯一的ID，例如一个唯一的哈希值。\\n\\n# 交易对手风险\\n交易对手风险是指交易中的另一方可能不履行义务。多于两个交易方的交易可能面临更大的风险。举个例子，前不久你把一块金属卖入给某人，此刻正拿着他开给你的押金凭证。此交易至少有三方，出售者，购买者，金属托管者，其中一方保管这块金属，它成为了此次交易的履行方，增加了交易风险。托管人的到底有没有这块金属？它能认可我手上的Token，把金属给我吗？在电子Token代表资产的交易市场里，搞明白谁拥有某个资产和潜在的交易规则是非常重要的。\\n\\n# Token的内部价值与外部价值\\n有一些Token代表的电子物品，其价值是在Blockchain内部的，这些电子物品由Blockchain的共识规则管理，就像Token本身一样。这里有一个重要的意思，Token代表Blockchain内部资产不会产生交易对手风险。例如，你拥有CryptoKitty里的某一只宠物，不存在第三方帮你托管这只宠物，你直接拥有它，Blockchain的共识规则认为，你是该私钥的拥有者，等同于你是该私钥控制的宠物的拥有者，不需要第三方来做认证。\\n\\n相对的是，有一些Token代表的是外部的资产，比如房地产，公司投票权，商标权，金条等，这些资产的所有权不在Blockchain内部，而是由法律，规定，政策规定的，不是Blockchain的共识规则决定的。换句话说，发行这种Token依赖于现实生活中的机构，组织，因此，使用这种Token会存在交易风险，发行者可能为不会为Token兑换等价的资产，具体的规则由现实世界的法律，政策，制度控制。\\n\\n有一些Token能够把Blockchain外部的资产转化为内部管理的资产，从而移除交易风险。举个例子，将公司的股票权，转化为DAO组织具有投票权的Token.\\n\\n# Token作为工具，作为权益\\nEthereum上几乎所有的项目都发行Token，但是他们真的需要吗？使用Token有没有不利之处呢？或者就像人们欢呼的：将所有东西Token化？原则上，Token是一个管理工具，实际上，Blockchain平台正在融入到社会框架之中，有很多地方需要互相适应调整。\\n                    \\n在一个Blockchain项目中，Token有两种主要属性，功能性的Token与权益性的Token。有时候同时是功能性与权益性的。功能性Token，一般用来访问某些服务，使用某种应用，使用某种资源所需要的。权益性的Token，一般代表某种机构，某些公司所有权的占比，也可以是利息与分红的所有权。\\n\\n功能性Token会给初创公司带来巨大的风险和障碍。每个创新都代表这风险，接受市场的洗礼，走少人走的路，孤独的路。如果走技术创新的路，比如在P2P网络上开发应用服务，更是一条孤独得很的路。发行功能性的Token，让人民接受这种Token来使用你的服务，真的风险很大，阻碍重重。\\n\\n# Ethereum上的Token\\nBlockchain Token在Ethereum出现之前已经存在，最早的Blockchain货币，比特币就是一种Token。然而，Ethereum上首个Token标准的发布，导致了Token爆发式的出现。Ethereum上的Token不等于ether, 每个账户拥有多少ether是协议层控制管理的，而Token的数目是由相对应的Smart Contract管理的。Token一旦发行，相对应的Smart Contract控制着一切，包括所有权，使用权等等。\\n\\n第一个个Token标准由Fabian Vogelsteller在2015年退出，名为ERC20。目前绝大部分的Token都是依据ERC20标准开发的。ERC20标准开发的Token是可替代的，每个Token的一个基本单元与其它单元可以互换，不存在特殊性。ERC20定义了一系列的接口，要求Token开发必须实现这些接口，从而使各种Token在使用上都是一样的。具体来说，必须实现下列的函数和事件：\\n\\n### totalSuppy\\n> 返回当前所有Token的数目\\n\\n### balanceOf\\n> 输入地址，返回对应的Token的数目\\n\\n### transfer\\n> 输入地址和数量，从发起这个交易的地址，将相应数量的Token转到参数地址\\n\\n### transferFrom\\n> 输入转出地址，转入地址和数量，将Token从转出地址转到转入地址\\n\\n### approve\\n> 输入地址和数量，批准该地址从自身的账户转移不超过指定数目的Token\\n\\n### allowance\\n> 输入拥有者地址和使用者地址，返回使用者还能从拥有者那里获得多少Token\\n\\n### Transfer\\n> 转账成功发出的事件\\n\\n### Approval\\n> approve调用成功触发的事件\\n\\nERC20可选择实现的函数有以下\\n### name\\n> 返回Token的名字\\n\\n### symbol\\n> 返回代表该Token的符号\\n\\n### decimals\\n> 小数位，例如，账户数目是1000，decimals为2，实际是1000 / 100 = 10 Token\\n\\n# ERC20存在的问题\\n\\nERC20标准的诞生，使得Token爆发式出现，广泛用于新功能的开发与筹资。然而也暴露除了Token自身的一些问题。首先，不同于ether，ether的传输发生与一个交易之中，目的地是另外一个账户地址，Token的传输发生在运行Token的contract程序状态之中，目的地也是这个contract的state，不是Token接受者的地址。Token的从一个人，转移到另外一个人，并没有交易消息发送给第二个人，仅仅修改了第二个人在Token contract中的状态。\\n\\n现实生活中，人们会回跟踪自己在所有contract中Token的资金状况，除了一些常用的Token得到关注，其它的大部分就像垃圾邮件一样。Token Contract自动为用户们创建用户，是为了吸引他们使用，如果一个账号使用时间很长，很有可能与之关联着一大推无用的Token。\\n\\nToken的行为与ether也不同，在contract中，ether通过send函数发送，通过payable函数接收;Token使用contract实现的transfer, apporve等函数转移，不会触发自身的payable函数。另外，ether的转移需要用ether来支付gas，而转移Token也需要ether来支付gas，不能用Token来支付gas，在用户体验上略微别扭。\\n\\n# Token与ICO\\n所有技术刚刚开始的阶段，第一批产品，公司，几乎都会失败，有一些失败的非常壮观，目前很多Token是通过诈骗，传销，钓鱼等手段骗钱的。各种疯狂ICO，关键是让人们相信它的未来一片光明，然而，改变未来的，将会是ICO下面的平台和标准。\\n\\n\\n\";","'use strict';\nvar collection = require('../internals/collection');\nvar collectionStrong = require('../internals/collection-strong');\n\n// `Map` constructor\n// https://tc39.github.io/ecma262/#sec-map-objects\nmodule.exports = collection('Map', function (init) {\n  return function Map() { return init(this, arguments.length ? arguments[0] : undefined); };\n}, collectionStrong);\n","export default \"# 客户端\\n\\nEthereum客户端，是指按照Ethereum参考规格，实现了各种功能的软件，在Blockchain中，可以与其它客户端进行交流。这些客户端由不同的团队的开发，使用不同的编程语言开发，由于它们使用相同的交流协议，遵循的规则也是相同的。因此，它们都可以用于访问Ethereum Blockchain。\\n\\n Ethereum是开源项目，在开源证书的规定下，所有主要的客户端的源代码可以随意下载和修改。开源不仅意味着可以免费使用，同时意味着Ethereum是由一组志愿者开发的，任何人都可以在上面修改。更多人看到的代码，意味着更加信任的软件。\\n\\n# Ethereum网络\\n\\n由于Ethereum的成功，许多其它Blockchain采取类似Ethereum的架构，实现了大部分Ethereum黄页里规定的功能，且把它们称为类似Ethereum的网络。然而，这些类似Ethereum的网络，如Ethereum Classic, Ella, Expanse,Ubiq, Musicoin等等，它们之间不能够直接交流，尽管它们使用的交流协议是一样的。有一些功能强大的客户端，根据类似Ethereum网络之间的差异，做适配，从而可以访问多个网络。当前主要有6个，使用不同编程语言开发的客户端：\\n\\n* Parity, Rust语言开发\\n* Geth, Go语言开发\\n* cpp-ethereum, C++语言开发\\n* pyethereum, Python语言开发\\n* Mantis, Scala语言开发\\n* Harmony, Java语言开发\\n\\n# 是否应该运行一个全节点\\n\\n许许多多的独立运行，地理上隔离的全节点，是Blockchain保持健康，保持弹性，避免被追踪审查的关键。每个全节点能够帮助新进来的节点同步数据，引导它进入网络，同时对网络上的交易进行验证。但是，运行全节点需要消耗硬盘资源，网络带宽。全节点必须下载80～100G的数据，存储在本地磁盘中。随着新的交易和Block的产生，要下载的数据会越来越多。\\n\\n在应用开发阶段，没有必要运行主网的全节点。在本地使用Ganache搭建一个私有网络，或者连接云端提供服务的网络，提供的功能几乎是一样的。还可以运行远程客户端，本地不需要下载已验证的交易数据和Block，可以通过远程客户端可以发送交易信息，或者连接本地的私有网络。\\n\\n# 全节点的优缺点\\n\\n运行全节点，可以使用网络的全部功能，但会消耗本地的资源，下面列出优点和缺点：\\n\\n### 优点\\n\\n* 支持Ethereum保持弹性，避免追踪审查\\n* 绝对可信地验证所有的交易\\n* 不需要第三方即可调用网络上全部Smart Contract\\n* 不需要第三方即可部署自己的Smart Contract\\n* 可以访问当前网络的环境状态信息\\n* 随意访问各种信息，不需要担心第三方追踪我们的行动\\n\\n### 缺点\\n\\n* 需要消耗越老越多的存储和网络带宽\\n* 首次启动，同步所有数据需要很多天\\n* 必须保持更新，保持在线，以同步后续的所有交易\\n\";","module.exports=/[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/","/**\n * These objects store data about MathML nodes. This is the MathML equivalent\n * of the types in domTree.js. Since MathML handles its own rendering, and\n * since we're mainly using MathML to improve accessibility, we don't manage\n * any of the styling state that the plain DOM nodes do.\n *\n * The `toNode` and `toMarkup` functions work simlarly to how they do in\n * domTree.js, creating namespaced DOM nodes and HTML text markup respectively.\n */\n\nvar utils = require(\"./utils\");\n\n/**\n * This node represents a general purpose MathML node of any type. The\n * constructor requires the type of node to create (for example, `\"mo\"` or\n * `\"mspace\"`, corresponding to `<mo>` and `<mspace>` tags).\n */\nfunction MathNode(type, children) {\n    this.type = type;\n    this.attributes = {};\n    this.children = children || [];\n}\n\n/**\n * Sets an attribute on a MathML node. MathML depends on attributes to convey a\n * semantic content, so this is used heavily.\n */\nMathNode.prototype.setAttribute = function(name, value) {\n    this.attributes[name] = value;\n};\n\n/**\n * Converts the math node into a MathML-namespaced DOM element.\n */\nMathNode.prototype.toNode = function() {\n    var node = document.createElementNS(\n        \"http://www.w3.org/1998/Math/MathML\", this.type);\n\n    for (var attr in this.attributes) {\n        if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n            node.setAttribute(attr, this.attributes[attr]);\n        }\n    }\n\n    for (var i = 0; i < this.children.length; i++) {\n        node.appendChild(this.children[i].toNode());\n    }\n\n    return node;\n};\n\n/**\n * Converts the math node into an HTML markup string.\n */\nMathNode.prototype.toMarkup = function() {\n    var markup = \"<\" + this.type;\n\n    // Add the attributes\n    for (var attr in this.attributes) {\n        if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n            markup += \" \" + attr + \"=\\\"\";\n            markup += utils.escape(this.attributes[attr]);\n            markup += \"\\\"\";\n        }\n    }\n\n    markup += \">\";\n\n    for (var i = 0; i < this.children.length; i++) {\n        markup += this.children[i].toMarkup();\n    }\n\n    markup += \"</\" + this.type + \">\";\n\n    return markup;\n};\n\n/**\n * This node represents a piece of text.\n */\nfunction TextNode(text) {\n    this.text = text;\n}\n\n/**\n * Converts the text node into a DOM text node.\n */\nTextNode.prototype.toNode = function() {\n    return document.createTextNode(this.text);\n};\n\n/**\n * Converts the text node into HTML markup (which is just the text itself).\n */\nTextNode.prototype.toMarkup = function() {\n    return utils.escape(this.text);\n};\n\nmodule.exports = {\n    MathNode: MathNode,\n    TextNode: TextNode,\n};\n","// Enclose abbreviations in <abbr> tags\n//\n'use strict';\n\n\nmodule.exports = function sub_plugin(md) {\n  var escapeRE        = md.utils.escapeRE,\n      arrayReplaceAt  = md.utils.arrayReplaceAt;\n\n  // ASCII characters in Cc, Sc, Sm, Sk categories we should terminate on;\n  // you can check character classes here:\n  // http://www.unicode.org/Public/UNIDATA/UnicodeData.txt\n  var OTHER_CHARS      = ' \\r\\n$+<=>^`|~';\n\n  var UNICODE_PUNCT_RE = md.utils.lib.ucmicro.P.source;\n  var UNICODE_SPACE_RE = md.utils.lib.ucmicro.Z.source;\n\n\n  function abbr_def(state, startLine, endLine, silent) {\n    var label, title, ch, labelStart, labelEnd,\n        pos = state.bMarks[startLine] + state.tShift[startLine],\n        max = state.eMarks[startLine];\n\n    if (pos + 2 >= max) { return false; }\n\n    if (state.src.charCodeAt(pos++) !== 0x2A/* * */) { return false; }\n    if (state.src.charCodeAt(pos++) !== 0x5B/* [ */) { return false; }\n\n    labelStart = pos;\n\n    for (; pos < max; pos++) {\n      ch = state.src.charCodeAt(pos);\n      if (ch === 0x5B /* [ */) {\n        return false;\n      } else if (ch === 0x5D /* ] */) {\n        labelEnd = pos;\n        break;\n      } else if (ch === 0x5C /* \\ */) {\n        pos++;\n      }\n    }\n\n    if (labelEnd < 0 || state.src.charCodeAt(labelEnd + 1) !== 0x3A/* : */) {\n      return false;\n    }\n\n    if (silent) { return true; }\n\n    label = state.src.slice(labelStart, labelEnd).replace(/\\\\(.)/g, '$1');\n    title = state.src.slice(labelEnd + 2, max).trim();\n    if (label.length === 0) { return false; }\n    if (title.length === 0) { return false; }\n    if (!state.env.abbreviations) { state.env.abbreviations = {}; }\n    // prepend ':' to avoid conflict with Object.prototype members\n    if (typeof state.env.abbreviations[':' + label] === 'undefined') {\n      state.env.abbreviations[':' + label] = title;\n    }\n\n    state.line = startLine + 1;\n    return true;\n  }\n\n\n  function abbr_replace(state) {\n    var i, j, l, tokens, token, text, nodes, pos, reg, m, regText, regSimple,\n        currentToken,\n        blockTokens = state.tokens;\n\n    if (!state.env.abbreviations) { return; }\n\n    regSimple = new RegExp('(?:' +\n      Object.keys(state.env.abbreviations).map(function (x) {\n        return x.substr(1);\n      }).sort(function (a, b) {\n        return b.length - a.length;\n      }).map(escapeRE).join('|') +\n    ')');\n\n    regText = '(^|' + UNICODE_PUNCT_RE + '|' + UNICODE_SPACE_RE +\n                    '|[' + OTHER_CHARS.split('').map(escapeRE).join('') + '])'\n            + '(' + Object.keys(state.env.abbreviations).map(function (x) {\n                      return x.substr(1);\n                    }).sort(function (a, b) {\n                      return b.length - a.length;\n                    }).map(escapeRE).join('|') + ')'\n            + '($|' + UNICODE_PUNCT_RE + '|' + UNICODE_SPACE_RE +\n                    '|[' + OTHER_CHARS.split('').map(escapeRE).join('') + '])';\n\n    reg = new RegExp(regText, 'g');\n\n    for (j = 0, l = blockTokens.length; j < l; j++) {\n      if (blockTokens[j].type !== 'inline') { continue; }\n      tokens = blockTokens[j].children;\n\n      // We scan from the end, to keep position when new tags added.\n      for (i = tokens.length - 1; i >= 0; i--) {\n        currentToken = tokens[i];\n        if (currentToken.type !== 'text') { continue; }\n\n        pos = 0;\n        text = currentToken.content;\n        reg.lastIndex = 0;\n        nodes = [];\n\n        // fast regexp run to determine whether there are any abbreviated words\n        // in the current token\n        if (!regSimple.test(text)) { continue; }\n\n        while ((m = reg.exec(text))) {\n          if (m.index > 0 || m[1].length > 0) {\n            token         = new state.Token('text', '', 0);\n            token.content = text.slice(pos, m.index + m[1].length);\n            nodes.push(token);\n          }\n\n          token         = new state.Token('abbr_open', 'abbr', 1);\n          token.attrs   = [ [ 'title', state.env.abbreviations[':' + m[2]] ] ];\n          nodes.push(token);\n\n          token         = new state.Token('text', '', 0);\n          token.content = m[2];\n          nodes.push(token);\n\n          token         = new state.Token('abbr_close', 'abbr', -1);\n          nodes.push(token);\n\n          reg.lastIndex -= m[3].length;\n          pos = reg.lastIndex;\n        }\n\n        if (!nodes.length) { continue; }\n\n        if (pos < text.length) {\n          token         = new state.Token('text', '', 0);\n          token.content = text.slice(pos);\n          nodes.push(token);\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);\n      }\n    }\n  }\n\n  md.block.ruler.before('reference', 'abbr_def', abbr_def, { alt: [ 'paragraph', 'reference' ] });\n\n  md.core.ruler.after('linkify', 'abbr_replace', abbr_replace);\n};\n","module.exports = __webpack_public_path__ + \"img/ship.5ec7b813.gif\";","'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar anObject = require('../internals/an-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar toInteger = require('../internals/to-integer');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar regExpExec = require('../internals/regexp-exec-abstract');\n\nvar max = Math.max;\nvar min = Math.min;\nvar floor = Math.floor;\nvar SUBSTITUTION_SYMBOLS = /\\$([$&'`]|\\d\\d?|<[^>]*>)/g;\nvar SUBSTITUTION_SYMBOLS_NO_NAMED = /\\$([$&'`]|\\d\\d?)/g;\n\nvar maybeToString = function (it) {\n  return it === undefined ? it : String(it);\n};\n\n// @@replace logic\nfixRegExpWellKnownSymbolLogic('replace', 2, function (REPLACE, nativeReplace, maybeCallNative, reason) {\n  return [\n    // `String.prototype.replace` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.replace\n    function replace(searchValue, replaceValue) {\n      var O = requireObjectCoercible(this);\n      var replacer = searchValue == undefined ? undefined : searchValue[REPLACE];\n      return replacer !== undefined\n        ? replacer.call(searchValue, O, replaceValue)\n        : nativeReplace.call(String(O), searchValue, replaceValue);\n    },\n    // `RegExp.prototype[@@replace]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace\n    function (regexp, replaceValue) {\n      if (reason.REPLACE_KEEPS_$0 || (typeof replaceValue === 'string' && replaceValue.indexOf('$0') === -1)) {\n        var res = maybeCallNative(nativeReplace, regexp, this, replaceValue);\n        if (res.done) return res.value;\n      }\n\n      var rx = anObject(regexp);\n      var S = String(this);\n\n      var functionalReplace = typeof replaceValue === 'function';\n      if (!functionalReplace) replaceValue = String(replaceValue);\n\n      var global = rx.global;\n      if (global) {\n        var fullUnicode = rx.unicode;\n        rx.lastIndex = 0;\n      }\n      var results = [];\n      while (true) {\n        var result = regExpExec(rx, S);\n        if (result === null) break;\n\n        results.push(result);\n        if (!global) break;\n\n        var matchStr = String(result[0]);\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n      }\n\n      var accumulatedResult = '';\n      var nextSourcePosition = 0;\n      for (var i = 0; i < results.length; i++) {\n        result = results[i];\n\n        var matched = String(result[0]);\n        var position = max(min(toInteger(result.index), S.length), 0);\n        var captures = [];\n        // NOTE: This is equivalent to\n        //   captures = result.slice(1).map(maybeToString)\n        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in\n        // the slice polyfill when slicing native arrays) \"doesn't work\" in safari 9 and\n        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.\n        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));\n        var namedCaptures = result.groups;\n        if (functionalReplace) {\n          var replacerArgs = [matched].concat(captures, position, S);\n          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);\n          var replacement = String(replaceValue.apply(undefined, replacerArgs));\n        } else {\n          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);\n        }\n        if (position >= nextSourcePosition) {\n          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;\n          nextSourcePosition = position + matched.length;\n        }\n      }\n      return accumulatedResult + S.slice(nextSourcePosition);\n    }\n  ];\n\n  // https://tc39.github.io/ecma262/#sec-getsubstitution\n  function getSubstitution(matched, str, position, captures, namedCaptures, replacement) {\n    var tailPos = position + matched.length;\n    var m = captures.length;\n    var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;\n    if (namedCaptures !== undefined) {\n      namedCaptures = toObject(namedCaptures);\n      symbols = SUBSTITUTION_SYMBOLS;\n    }\n    return nativeReplace.call(replacement, symbols, function (match, ch) {\n      var capture;\n      switch (ch.charAt(0)) {\n        case '$': return '$';\n        case '&': return matched;\n        case '`': return str.slice(0, position);\n        case \"'\": return str.slice(tailPos);\n        case '<':\n          capture = namedCaptures[ch.slice(1, -1)];\n          break;\n        default: // \\d\\d?\n          var n = +ch;\n          if (n === 0) return match;\n          if (n > m) {\n            var f = floor(n / 10);\n            if (f === 0) return match;\n            if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);\n            return match;\n          }\n          capture = captures[n - 1];\n      }\n      return capture === undefined ? '' : capture;\n    });\n  }\n});\n","var map = {\n\t\"./assets/anim/ship.gif\": \"52e9\",\n\t\"./assets/contracts/Erc20ABI\": \"2f3f\",\n\t\"./assets/contracts/Erc20ABI.json\": \"2f3f\",\n\t\"./assets/css/default.css\": \"99fc\",\n\t\"./assets/fabric/group01/coffee01.md\": \"07ef\",\n\t\"./assets/fabric/group01/coffee02.md\": \"ea3b\",\n\t\"./assets/fabric/group01/coffee03.md\": \"00bc\",\n\t\"./assets/fabric/group01/coffee04.md\": \"d72c\",\n\t\"./assets/fabric/group01/coffee05.md\": \"3238\",\n\t\"./assets/fabric/group01/coffee06.md\": \"1192\",\n\t\"./assets/fabric/group01/coffee07.md\": \"dd8e\",\n\t\"./assets/fabric/group02/devnet.md\": \"abc9\",\n\t\"./assets/fabric/group02/explorer.md\": \"c537\",\n\t\"./assets/fabric/group02/health.md\": \"8bdf\",\n\t\"./assets/fabric/group02/lifecycle.md\": \"692f\",\n\t\"./assets/fabric/group02/sdk.md\": \"5a52\",\n\t\"./assets/fabric/group03/cli.md\": \"99dd\",\n\t\"./assets/fabric/group03/insurance.md\": \"ed11\",\n\t\"./assets/fabric/group03/roster.md\": \"3f10\",\n\t\"./assets/fabric/group03/webapp.md\": \"c25a\",\n\t\"./assets/fabric/group04/consensus.md\": \"6611\",\n\t\"./assets/fabric/group04/orderer.md\": \"fde4\",\n\t\"./assets/fabric/group04/peer.md\": \"6882\",\n\t\"./assets/fabric/group04/raft.md\": \"fa4a\",\n\t\"./assets/logo.png\": \"cf05\",\n\t\"./assets/recommends/whisper_chat.png\": \"9311\",\n\t\"./assets/writings/group01/welcome.md\": \"8755\",\n\t\"./assets/writings/group02/basic.md\": \"de78\",\n\t\"./assets/writings/group02/client.md\": \"4f11\",\n\t\"./assets/writings/group02/crytography.md\": \"e4fc\",\n\t\"./assets/writings/group02/transaction.md\": \"9773\",\n\t\"./assets/writings/group02/wallet.md\": \"c9f2\",\n\t\"./assets/writings/group02/what.md\": \"0412\",\n\t\"./assets/writings/group03/consensus.md\": \"d372\",\n\t\"./assets/writings/group03/dapp.md\": \"a6b3\",\n\t\"./assets/writings/group03/evm.md\": \"b749\",\n\t\"./assets/writings/group03/oracle.md\": \"1fe0\",\n\t\"./assets/writings/group03/security.md\": \"61bc\",\n\t\"./assets/writings/group03/token.md\": \"4e5d\",\n\t\"./assets/writings/group04/byzantine.md\": \"e886\",\n\t\"./assets/writings/group04/cap.md\": \"ef60\",\n\t\"./assets/writings/group05/block.md\": \"f719\",\n\t\"./assets/writings/group05/hash.md\": \"4286\",\n\t\"./assets/writings/group05/history.md\": \"2654\",\n\t\"./assets/writings/group05/mining.md\": \"d2f5\",\n\t\"./assets/writings/group06/address.md\": \"d7db\",\n\t\"./assets/writings/group06/block.md\": \"ddb2\",\n\t\"./assets/writings/group06/evm.md\": \"4165\",\n\t\"./assets/writings/group06/game.md\": \"9b65\",\n\t\"./assets/writings/group06/mining.md\": \"2013\",\n\t\"./assets/writings/group06/program.md\": \"6dea\",\n\t\"./assets/writings/group06/solidity.md\": \"4af8\",\n\t\"./assets/writings/group06/state-tree.md\": \"571a\",\n\t\"./assets/writings/group06/userful.md\": \"ea59\",\n\t\"./assets/writings/group06/vs.md\": \"c1ae\",\n\t\"./assets/writings/group06/web3.md\": \"cd45\",\n\t\"./assets/writings/group07/attack.md\": \"b7b2\",\n\t\"./assets/writings/group07/consensus.md\": \"2281\",\n\t\"./assets/writings/group07/def.md\": \"20b0\",\n\t\"./assets/writings/group07/fee.md\": \"69ac\",\n\t\"./assets/writings/group07/incentive.md\": \"203f\",\n\t\"./assets/writings/group07/poa.md\": \"96fe\",\n\t\"./assets/writings/group07/pos.md\": \"2645\",\n\t\"./assets/writings/group07/pow.md\": \"0c8b\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"53a4\";","// Process ~subscript~\n\n'use strict';\n\n// same as UNESCAPE_MD_RE plus a space\nvar UNESCAPE_RE = /\\\\([ \\\\!\"#$%&'()*+,.\\/:;<=>?@[\\]^_`{|}~-])/g;\n\n\nfunction subscript(state, silent) {\n  var found,\n      content,\n      token,\n      max = state.posMax,\n      start = state.pos;\n\n  if (state.src.charCodeAt(start) !== 0x7E/* ~ */) { return false; }\n  if (silent) { return false; } // don't run any pairs in validation mode\n  if (start + 2 >= max) { return false; }\n\n  state.pos = start + 1;\n\n  while (state.pos < max) {\n    if (state.src.charCodeAt(state.pos) === 0x7E/* ~ */) {\n      found = true;\n      break;\n    }\n\n    state.md.inline.skipToken(state);\n  }\n\n  if (!found || start + 1 === state.pos) {\n    state.pos = start;\n    return false;\n  }\n\n  content = state.src.slice(start + 1, state.pos);\n\n  // don't allow unescaped spaces/newlines inside\n  if (content.match(/(^|[^\\\\])(\\\\\\\\)*\\s/)) {\n    state.pos = start;\n    return false;\n  }\n\n  // found!\n  state.posMax = state.pos;\n  state.pos = start + 1;\n\n  // Earlier we checked !silent, but this implementation does not need it\n  token         = state.push('sub_open', 'sub', 1);\n  token.markup  = '~';\n\n  token         = state.push('text', '', 0);\n  token.content = content.replace(UNESCAPE_RE, '$1');\n\n  token         = state.push('sub_close', 'sub', -1);\n  token.markup  = '~';\n\n  state.pos = state.posMax + 1;\n  state.posMax = max;\n  return true;\n}\n\n\nmodule.exports = function sub_plugin(md) {\n  md.inline.ruler.after('emphasis', 'sub', subscript);\n};\n","// Just a shortcut for bulk export\n'use strict';\n\n\nexports.parseLinkLabel       = require('./parse_link_label');\nexports.parseLinkDestination = require('./parse_link_destination');\nexports.parseLinkTitle       = require('./parse_link_title');\n","// Regexps to match html elements\n\n'use strict';\n\nvar attr_name     = '[a-zA-Z_:][a-zA-Z0-9:._-]*';\n\nvar unquoted      = '[^\"\\'=<>`\\\\x00-\\\\x20]+';\nvar single_quoted = \"'[^']*'\";\nvar double_quoted = '\"[^\"]*\"';\n\nvar attr_value  = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')';\n\nvar attribute   = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)';\n\nvar open_tag    = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>';\n\nvar close_tag   = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>';\nvar comment     = '<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->';\nvar processing  = '<[?].*?[?]>';\nvar declaration = '<![A-Z]+\\\\s+[^>]*>';\nvar cdata       = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>';\n\nvar HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment +\n                        '|' + processing + '|' + declaration + '|' + cdata + ')');\nvar HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')');\n\nmodule.exports.HTML_TAG_RE = HTML_TAG_RE;\nmodule.exports.HTML_OPEN_CLOSE_TAG_RE = HTML_OPEN_CLOSE_TAG_RE;\n","export default \"# State Tree\\n\\nEthereum 最主要的数据库是它的 state tree，由 key/value 键值对组成，键值对的键是 Keccak256 哈希，值是一个32位的数。 Solidity 的数据结构，使用一个，或者多个 state tree 条目来组织程序，非常有利于程序的编写。简单的数据类型，32位，或者少于32位的，可以存储在一个 state tree 的条目中；复杂的数据类型，如数组，需要多个 state tree 的条目。\\n\\n由于 Keccak256 哈希是256位的，Ethereum 的 state tree 设计上可以存储2^256个不同的条目。但是，2^80个条目之后，由于 hash 碰撞，整个存储空间的可用性会极速降低。然而，目前存储的值远远少于2^80，开发者仍然可认为存储空间是无限的。因占用存储空间的消费也是一个问题，存储操作的消费很昂贵，contract 的开发，应尽量避免频繁插入和更新 state tree 的存储。\\n\\nState tree 的修改是在 transaction 的运行过程中发生的，绝大部分的 transaction 的执行，会修改 state tree 。\\n\\nState tree 用 Merkle Patricia trie 的数据结果实现。用 Solidity 编写 smart contract，并不要求理解这个数据结构，但是有兴趣的话，可以在这里查看它的资料：https://github.com/ethereum/wiki/wiki/Patricia-Tree\\n\";","// a string of all valid unicode whitespaces\n// eslint-disable-next-line max-len\nmodule.exports = '\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n","var requireObjectCoercible = require('../internals/require-object-coercible');\nvar whitespaces = require('../internals/whitespaces');\n\nvar whitespace = '[' + whitespaces + ']';\nvar ltrim = RegExp('^' + whitespace + whitespace + '*');\nvar rtrim = RegExp(whitespace + whitespace + '*$');\n\n// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation\nvar createMethod = function (TYPE) {\n  return function ($this) {\n    var string = String(requireObjectCoercible($this));\n    if (TYPE & 1) string = string.replace(ltrim, '');\n    if (TYPE & 2) string = string.replace(rtrim, '');\n    return string;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.{ trimLeft, trimStart }` methods\n  // https://tc39.github.io/ecma262/#sec-string.prototype.trimstart\n  start: createMethod(1),\n  // `String.prototype.{ trimRight, trimEnd }` methods\n  // https://tc39.github.io/ecma262/#sec-string.prototype.trimend\n  end: createMethod(2),\n  // `String.prototype.trim` method\n  // https://tc39.github.io/ecma262/#sec-string.prototype.trim\n  trim: createMethod(3)\n};\n","/**\n * This file contains information about the options that the Parser carries\n * around with it while parsing. Data is held in an `Options` object, and when\n * recursing, a new `Options` object can be created with the `.with*` and\n * `.reset` functions.\n */\n\n/**\n * This is the main options class. It contains the style, size, color, and font\n * of the current parse level. It also contains the style and size of the parent\n * parse level, so size changes can be handled efficiently.\n *\n * Each of the `.with*` and `.reset` functions passes its current style and size\n * as the parentStyle and parentSize of the new options class, so parent\n * handling is taken care of automatically.\n */\nfunction Options(data) {\n    this.style = data.style;\n    this.color = data.color;\n    this.size = data.size;\n    this.phantom = data.phantom;\n    this.font = data.font;\n\n    if (data.parentStyle === undefined) {\n        this.parentStyle = data.style;\n    } else {\n        this.parentStyle = data.parentStyle;\n    }\n\n    if (data.parentSize === undefined) {\n        this.parentSize = data.size;\n    } else {\n        this.parentSize = data.parentSize;\n    }\n}\n\n/**\n * Returns a new options object with the same properties as \"this\".  Properties\n * from \"extension\" will be copied to the new options object.\n */\nOptions.prototype.extend = function(extension) {\n    var data = {\n        style: this.style,\n        size: this.size,\n        color: this.color,\n        parentStyle: this.style,\n        parentSize: this.size,\n        phantom: this.phantom,\n        font: this.font,\n    };\n\n    for (var key in extension) {\n        if (extension.hasOwnProperty(key)) {\n            data[key] = extension[key];\n        }\n    }\n\n    return new Options(data);\n};\n\n/**\n * Create a new options object with the given style.\n */\nOptions.prototype.withStyle = function(style) {\n    return this.extend({\n        style: style,\n    });\n};\n\n/**\n * Create a new options object with the given size.\n */\nOptions.prototype.withSize = function(size) {\n    return this.extend({\n        size: size,\n    });\n};\n\n/**\n * Create a new options object with the given color.\n */\nOptions.prototype.withColor = function(color) {\n    return this.extend({\n        color: color,\n    });\n};\n\n/**\n * Create a new options object with \"phantom\" set to true.\n */\nOptions.prototype.withPhantom = function() {\n    return this.extend({\n        phantom: true,\n    });\n};\n\n/**\n * Create a new options objects with the give font.\n */\nOptions.prototype.withFont = function(font) {\n    return this.extend({\n        font: font,\n    });\n};\n\n/**\n * Create a new options object with the same style, size, and color. This is\n * used so that parent style and size changes are handled correctly.\n */\nOptions.prototype.reset = function() {\n    return this.extend({});\n};\n\n/**\n * A map of color names to CSS colors.\n * TODO(emily): Remove this when we have real macros\n */\nvar colorMap = {\n    \"katex-blue\": \"#6495ed\",\n    \"katex-orange\": \"#ffa500\",\n    \"katex-pink\": \"#ff00af\",\n    \"katex-red\": \"#df0030\",\n    \"katex-green\": \"#28ae7b\",\n    \"katex-gray\": \"gray\",\n    \"katex-purple\": \"#9d38bd\",\n    \"katex-blueA\": \"#c7e9f1\",\n    \"katex-blueB\": \"#9cdceb\",\n    \"katex-blueC\": \"#58c4dd\",\n    \"katex-blueD\": \"#29abca\",\n    \"katex-blueE\": \"#1c758a\",\n    \"katex-tealA\": \"#acead7\",\n    \"katex-tealB\": \"#76ddc0\",\n    \"katex-tealC\": \"#5cd0b3\",\n    \"katex-tealD\": \"#55c1a7\",\n    \"katex-tealE\": \"#49a88f\",\n    \"katex-greenA\": \"#c9e2ae\",\n    \"katex-greenB\": \"#a6cf8c\",\n    \"katex-greenC\": \"#83c167\",\n    \"katex-greenD\": \"#77b05d\",\n    \"katex-greenE\": \"#699c52\",\n    \"katex-goldA\": \"#f7c797\",\n    \"katex-goldB\": \"#f9b775\",\n    \"katex-goldC\": \"#f0ac5f\",\n    \"katex-goldD\": \"#e1a158\",\n    \"katex-goldE\": \"#c78d46\",\n    \"katex-redA\": \"#f7a1a3\",\n    \"katex-redB\": \"#ff8080\",\n    \"katex-redC\": \"#fc6255\",\n    \"katex-redD\": \"#e65a4c\",\n    \"katex-redE\": \"#cf5044\",\n    \"katex-maroonA\": \"#ecabc1\",\n    \"katex-maroonB\": \"#ec92ab\",\n    \"katex-maroonC\": \"#c55f73\",\n    \"katex-maroonD\": \"#a24d61\",\n    \"katex-maroonE\": \"#94424f\",\n    \"katex-purpleA\": \"#caa3e8\",\n    \"katex-purpleB\": \"#b189c6\",\n    \"katex-purpleC\": \"#9a72ac\",\n    \"katex-purpleD\": \"#715582\",\n    \"katex-purpleE\": \"#644172\",\n    \"katex-mintA\": \"#f5f9e8\",\n    \"katex-mintB\": \"#edf2df\",\n    \"katex-mintC\": \"#e0e5cc\",\n    \"katex-grayA\": \"#fdfdfd\",\n    \"katex-grayB\": \"#f7f7f7\",\n    \"katex-grayC\": \"#eeeeee\",\n    \"katex-grayD\": \"#dddddd\",\n    \"katex-grayE\": \"#cccccc\",\n    \"katex-grayF\": \"#aaaaaa\",\n    \"katex-grayG\": \"#999999\",\n    \"katex-grayH\": \"#555555\",\n    \"katex-grayI\": \"#333333\",\n    \"katex-kaBlue\": \"#314453\",\n    \"katex-kaGreen\": \"#639b24\",\n};\n\n/**\n * Gets the CSS color of the current options object, accounting for the\n * `colorMap`.\n */\nOptions.prototype.getColor = function() {\n    if (this.phantom) {\n        return \"transparent\";\n    } else {\n        return colorMap[this.color] || this.color;\n    }\n};\n\nmodule.exports = Options;\n","export default \"## SDK Package\\nPackage提供了访问devnet的方法。\\n\\n## 如何使用\\n1. 启动devenet\\n   ```\\n   cd ../devnet\\n   ./builder.sh new\\n   ```\\n2. 初始化\\n   ```\\n   err := Init()\\n   ```\\n3. 读数据调用query\\n   ```\\n   bytes, err := ChannelQuery(\\\"query\\\", []byte(\\\"a\\\"))\\n   ```\\n4. 写数据调用execute\\n   ```\\n   _, err = ChannelExecute(\\\"invoke\\\", []byte(\\\"a\\\"), []byte(\\\"b\\\"), []byte(\\\"10\\\"))\\n   ```\\n\\n详情查看test:\\n```\\nfunc TestSDK(t *testing.T) {\\n\\terr := Init()\\n\\tif err != nil {\\n\\t\\tt.Error(\\\"Init faild\\\", err)\\n\\t}\\n\\tamount1, err := getA()\\n\\tif err != nil {\\n\\t\\tt.Error(err)\\n\\t}\\n\\n\\tif _, err = ChannelExecute(\\\"invoke\\\", []byte(\\\"a\\\"), []byte(\\\"b\\\"), []byte(\\\"10\\\")); err != nil {\\n\\t\\tt.Error(\\\"Invoke faild\\\", err)\\n\\t}\\n\\n\\tamount2, err := getA()\\n\\tif err != nil {\\n\\t\\tt.Error(err)\\n\\t}\\n\\tprintln(\\\"Amount of A:\\\", amount1)\\n\\tprintln(\\\"Amount of A:\\\", amount2)\\n\\tif amount1-amount2 != 10 {\\n\\t\\tt.Error(errors.New(\\\"A subtract 10 faild\\\"))\\n\\t}\\n}\\n```\\n\\n## 说明\\n其一，sdk用的官方fabric-sdk-go的修改版本: [stephenwu2020/fabric-sdk-go](https://github.com/stephenwu2020/fabric-sdk-go)，在go.mod里：\\n   ```\\n   replace github.com/hyperledger/fabric-sdk-go => github.com/stephenwu2020/fabric-sdk-go v1.0.0-beta3-modify\\n   ```\\n  只是为了添加两个方便的方法，接收byte数组\\n\\n    ```\\n    func (c *Contract) EvaluateTransactionWithBytes(name string, args ...[]byte) ([]byte, error) {\\n      txn, err := c.CreateTransaction(name)\\n\\n      if err != nil {\\n        return nil, err\\n      }\\n\\n      return txn.EvaluateWithBytes(args...)\\n\\n    }\\n    func (c *Contract) SubmitTransactionWithBytes(name string, args ...[]byte) ([]byte, error) {\\n      txn, err := c.CreateTransaction(name)\\n\\n      if err != nil {\\n        return nil, err\\n      }\\n\\n      return txn.SubmitWithBytes(args...)\\n    }\\n    ```\\n其二，sdk的初始化wallet用的是内存版本，由于开发阶段网络频繁创建，生成本地的钱包也要删除，使用内存版本免去这一烦恼:\\n```\\nwallet = gateway.NewInMemoryWallet()\\n```\";","// Process html entity - &#123;, &#xAF;, &quot;, ...\n\n'use strict';\n\nvar entities          = require('../common/entities');\nvar has               = require('../common/utils').has;\nvar isValidEntityCode = require('../common/utils').isValidEntityCode;\nvar fromCodePoint     = require('../common/utils').fromCodePoint;\n\n\nvar DIGITAL_RE = /^&#((?:x[a-f0-9]{1,8}|[0-9]{1,8}));/i;\nvar NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i;\n\n\nmodule.exports = function entity(state, silent) {\n  var ch, code, match, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x26/* & */) { return false; }\n\n  if (pos + 1 < max) {\n    ch = state.src.charCodeAt(pos + 1);\n\n    if (ch === 0x23 /* # */) {\n      match = state.src.slice(pos).match(DIGITAL_RE);\n      if (match) {\n        if (!silent) {\n          code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);\n          state.pending += isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD);\n        }\n        state.pos += match[0].length;\n        return true;\n      }\n    } else {\n      match = state.src.slice(pos).match(NAMED_RE);\n      if (match) {\n        if (has(entities, match[1])) {\n          if (!silent) { state.pending += entities[match[1]]; }\n          state.pos += match[0].length;\n          return true;\n        }\n      }\n    }\n  }\n\n  if (!silent) { state.pending += '&'; }\n  state.pos++;\n  return true;\n};\n","// HTML block\n\n'use strict';\n\n\nvar block_names = require('../common/html_blocks');\nvar HTML_OPEN_CLOSE_TAG_RE = require('../common/html_re').HTML_OPEN_CLOSE_TAG_RE;\n\n// An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\nvar HTML_SEQUENCES = [\n  [ /^<(script|pre|style)(?=(\\s|>|$))/i, /<\\/(script|pre|style)>/i, true ],\n  [ /^<!--/,        /-->/,   true ],\n  [ /^<\\?/,         /\\?>/,   true ],\n  [ /^<![A-Z]/,     />/,     true ],\n  [ /^<!\\[CDATA\\[/, /\\]\\]>/, true ],\n  [ new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true ],\n  [ new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'),  /^$/, false ]\n];\n\n\nmodule.exports = function html_block(state, startLine, endLine, silent) {\n  var i, nextLine, token, lineText,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  if (!state.md.options.html) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  lineText = state.src.slice(pos, max);\n\n  for (i = 0; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) { break; }\n  }\n\n  if (i === HTML_SEQUENCES.length) { return false; }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2];\n  }\n\n  nextLine = startLine + 1;\n\n  // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n      lineText = state.src.slice(pos, max);\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) { nextLine++; }\n        break;\n      }\n    }\n  }\n\n  state.line = nextLine;\n\n  token         = state.push('html_block', '', 0);\n  token.map     = [ startLine, nextLine ];\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true);\n\n  return true;\n};\n","export default \"# Smart Contract安全\\n\\n编写Smart Contract，安全性是最重要的考虑因素之一。Smart Contract编程领域，几乎所有的错误会付出惨痛的代价。\\n\\n像其它程序一样，Smart Contract根据编码直接运行，有些情况并非程序员初衷。所有的Smart Contract都是公开的，所有人都可以通过交易信息操作它。所有漏洞都会暴露，许多是无法挽回的。使用最好的实践，遵循经过良好测试的设计模式至关重要。\\n\\n# 最安全的实践\\n防御式编程最适合编写Smart Contract。它强调的以下这些最好的实践过程：\\n\\n### 最简性\\n> 复杂度是安全性的敌人。代码越简单，逻辑越单一，出bug的概率越低。初次接触Smart Contract编程，程序员倾向于写很多很多的代码。相反，应该尽量让它做的逻辑变少，代码的数量变少，分离功能，降低复杂度。如果有人告诉你，它的Smart Contract有好几千行代码，你需要为它的安全性担忧了。越简单，越安全。\\n\\n### 代码重用\\n> 不要重复造轮子。如果已经有一个库，或者Smart Contract，满足你的需求，放心地使用它。在自己的代码中，遵循DRY原则：Don't Repeat Yourself，不要重复！每次看到相同的代码出现在不同的地方，想办法封装到库里，封装成函数调用。频繁使用的代码，安全性比新写的代码要高。\\n\\n### 代码质量\\n> Smart Contract代码是无情的。每个bug都可能导致资金损失。Smart Contract编程与一般的编程不能同等对待，创建DApp并不像用js编写一个组件。相反，它更像是盖一间房子，建一座桥，需要遵循严格的工程学和软件开发原则。一旦代码开始上线服务，几乎没有什么机会去修复bug。\\n\\n### 可读性\\n> 你的代码需要容易被阅读和理解。越是容易阅读，越是容易审查。Smart Contract是公开的，任何人都可以获取源码，进行反编译。因此，把项目公开，使用开源的协作方式去开发程序，运用集体的智慧来解决问题，同时留下开发文档。\\n\\n### 测试覆盖\\n> 测试所有能测试的。Smart Contract运行在开放的环境之中，任何人可以输入任意数据，永远不要假设函数应该输入什么数据，应该输出什么结果，尝试你认为无法理解的操作。\\n\\n# 不好的设计模式与安全漏洞\\n\\nSmart Contract程序员，要熟识最常见的安全漏洞，使用避免导致安全漏洞的编程模式。\\n\\n### 重入\\n> Smart Contract可以调用外部的Smart Contract，可以发送ether给其它账户，这些操作可能被黑客劫持，强迫调用者执行设计好的回调函数，这种攻击方式常用于DAO攻击。\\n\\n> 这种攻击有可能发生在转账给陌生用户的情景。攻击者在回调函数中设置恶意代码，当其它Contract的转资金到攻击者账户时，回调函数触发，恶意代码运行，恶意代码可能调用原先Contract的某些函数，把资金转走，修改原先的逻辑.\\n![img](/book/reentrancy.jpg)\\n\\n> 上图第17行是转账到外部账户的调用，如果外部账户是一个Smart Contract，会触发它的默认函数，默认函数可以再发起withdrawFunds函数调用，把资金源源不断第转走。\\n\\n> 有很多中方法可以避免潜在的重入漏洞。第一个方法，调用内置的transfer函数转账，调用这个函数的gasLimit是2300，不足以运行对方的回调函数的恶意代码。第二种方发是先修改账户余额，再做转钱的操作。第三种方法是加一个状态锁，每次调用，相关的状态只能改变一次。\\n\\n### 数字溢出\\n> 整型在Ethereum虚拟机中是固定字节的，每个整型表示的数都有一个范围，举例，uint8存储的数字的范围是[0, 255]，把256赋值给uint8变量，结果是0.目前最有效的避免溢出的方法，是使用公共数据库的API取代内置的数学运算。例如OpenZepplin的SafeMath库。\\n\\n### 超出预期的ether\\n> 一般来说，资金转移到Contract上，会触发Contract的回调函数。但有两个例外，Contract接受了资金却不触发回调函数，不执行任何代码。依赖回调函数来检测接收资金，进行相关逻辑，可能会被黑客找到漏洞，进行攻击。\\n\\n> 为了保证状态转换正确，确保操作合法，防御式编程有一招叫恒量检查。这种技术设置一些不变的属性，参数，然后进行某些操作，回头检查属性参数是否发生了变化。这是一种很好的设计方法。但是Smart Contract编程中，有一些变量表面上是恒定的，实际上却可以被外部修改，这个变量是Contract存储ether的值。Smart Contract编程的初学者往往认为，必须通过payable函数给Contract转入资金，以此设计的逻辑是有漏洞的。有两种方式，ether被转入Contract而不经过Contract的payable函数.\\n\\n> 第一，析构函数，selfdestruct，销毁自身，删除所有代码，同时资金转入参数定义的地址，如果该地址对应一个Contract，Contract上的回调函数不会触发。黑客可以设计一个攻击方案，在selfdestruct函数中销毁自身，强迫资金转入到攻击对象Contract之中。\\n\\n> 第二，提前向某个地址转钱，如果有新的Contract正好在这个地址部署，新的Contract就是这笔钱的拥有者。Contract的地址是可以提前计算出来的，address=sha3(rlp.encode([account_address, transaction_nonce])).黑客如果知道某个Contract的细节，提前计算出Contract的地址，则可以让Contract诞生之际即获得一笔资金。\\n![img](/book/unexpected.jpg)\\n\\n> 上面代码，大意是到达里程碑的玩家会获得一个奖励。如果黑客通过前面说的两种方式，提前给这个Contract转入一笔钱，this.balance字段的值是不可预测的，那么这个Contract的功能就不能正确实现了。例如，通过selfdestruct函数，给Contract强制转入0.1ether，则if的判断不会出现刚到到达里程碑的值。要解决这个问题，代码不能使用self.balance来做判断，可以在Contract内部创建另一个属性，此时这个属性只能在代码中修改，即可防止这种攻击。\\n\\n### 委托调用\\n> 调用与委托调用的操作方便开发者模块化代码，Ethereum用CALL操作处理标准外部消息，代码运行在调用者Contract的上下文中，委托调用的运行差不多，唯一的区别是，它在被调用的Contract的上下文运行。委托调用的这个特点使得程序库的设计得以实现，程序员可以将常用的代码部署到Ethereum中让其它Contract重用。\\n\\n> 由于委托调用保留上下文的特点，要开发没有漏洞的公共库不是那么简单。库代码在自身中运行或许是安全的，没有漏洞的，但在其它Contract的上下文中运行，可能会出现意想不到的bug。\\n![img](/book/delegate.jpg)\\n\\n> 上面的Contract，自身运行时，自身上下文的内存槽第一块分配start，第二块分配calculateFibNumber；但在作为委托调用时，由于上下文切换到了其它Contract，start指向的第一内存不是它认为的start字段的值，从而会出现意外的结果。为了避免这种库，Solidity提供了library关键字，libraray关键字的Contract自身无状态，没有析构函数。\\n\\n### 默认的访问等级\\n> Solidity的函数有访问修饰器，表明它们在什么情况下可以被调用。访问修饰器决定了函数能够被外部用户调用，派生的Contract调用，仅仅内部函数调用或者仅仅外部调用。有4个修饰器，默认是public，允许所有人调用。\\n![img](/book/visibilities.jpg)\\n\\n> Contract原意是判断地址的最后8位如果为0，则可以获取资金，但是_sendWinnings的访问属性是public，黑客可以直接调用它把资金转走。为了防止这种疏忽，编写代码给所有函数都加上访问修饰器，即使它是public。\\n\\n### 随机数\\n> Ethereum Blockchain所有的交易信息导致的状态切换结果是确定的，可以预先计算的，没有任何不确定性。这说明了Ethereum上一些随机数都不是真随机。Ethereum最早的一批Contract是赌博，而赌博都需要一定的不确定性。人们希望使用未来的变量产生随机数，比如，下一个挂到Blockchain的Block的序号的最后一位是基数，则可以获得一笔大奖。那么，下一个验证成功的Block，如果不是基数，人们会选择把它废弃。使用过往的或者现在的变量，更加糟糕。因此，所有的随机数只能从Ethereum外部产生，不能使用Ethereum的状态信息，Block的参数信息。\\n\\n### 引用外部Contract\\n> Ethereum开发中，通过调用外部的Contract实现代码重用。导致的结果是大量的外部Contract引用，大量的外部消息调用，黑客可能从中找到攻击的目标。\\n![img](/book/ref.png)\\n\\n> 在1路线的引用是安全路线，在2路线上，函数及其功能是一样的，但是你需要加密的数据已经被打印出来了。黑客可以通过放这样的钓鱼地址到工具上，从而获取了用户的数据。\\n\\n> 为了解决这个问题，其一，我们使用new关键字创建引用的对象，避免钓鱼地址；其二，发布外部Contract,库Contract，把地址公开让大家验证。\\n![img](/book/ref2.jpg)\\n\\n### 短地址参数攻击\\n> 传递给Smart Contract的参数根据ABI的定义序列化。如果ABI规定对应的参数长度为20个字节，而你实际传递的参数只有19个字节，这也是可以的，EVM默认补0.\\n![img](/book/addr.png)\\n\\n> 第一段序列化，调用函数向某个地址转100ether；第二段序列化参数，假设输入地址的时候少了1个字节，整个序列化数据在最后补2个0，结果是给别的地址转了25600个ether。因此，对函数的参数做检查非常有必要。\\n\\n### 未经检查的返回值\\n> Solidity进行外部调用的方式有很多，转账到外部账号常用的方法是transfer，有时候需要用到send或者call。Send和call返回布尔值，表示调用成功与否。如果调用失败，会产生一个警告，但是资金不会回退。\\n![img](/book/return.jpg)\\n\\n> 这个Contract，大概是让winner拿奖金，剩下一些零钱，谁都可以转走。但是代码没有对send的结果做检测，如果send返回的结果是false，资金并没有转到winner的账户，而payOut会继续执行，其他人就可以把winnner的资金一并带走了.一般来说，最好使用transfer，它可以回退资金，如果要使用send，一定要检查返回的结果是否成功。\\n\\n### 竞争条件与抢先运行\\n> Ethereum Blockchain允许Contract调用外部的Contract，且存在同时多个Contract对同一个Contract的调用，有可能出现竞争条件，导致状态的变化超出预期的结果。Ethereum节点将交易信息存放到内存池，组装成Block，在矿工解决了共识验证之后才是合法的，此矿工选择有权选择哪些交易信息放到这个Block中，一般来说优先选择gasPrice高的。假设一个黑客监视内存池里面的交易，它发现其中一个交易解决了一个问题，于是把这个交易的数据抓取，自己发送同样数据的一个交易，把gasPrice设置得更高，那么黑客的交易信息会先于原本解决问题得那个交易进入块数据之中。\\n![img](/book/race.jpg)\\n\\n> 上面Contract大意是，尝试找一个数，经过哈希函数计算，得出的结果等于设定的结果，那么给他转1000eth。现在，有一个用户找出了这个数，发送交易信息调用solve函数验证，黑客接收了这个交易，提前验证通过，于是马上把这个数抓取，发送一个交易，使用更高的gasPrice。然后有一个矿工接受了这两个交易，于是把黑客的交易放在前面，那么钱就转到黑客账户了。\\n\\n> 实际上发起这种攻击的可以是普通用户，可以矿工。对于普通用户发起的攻击，可以设置一个gasPrice的最大值，找到解决方案的都使用最大值的gasPrice，黑客不能改变它的顺序，如果是矿工发起的攻击，矿工可以无视gasPrice，任意决定交易顺序，这种方式行不通了。另一种方式，不直接发送问题的答案，而是将答案加密后发送出去，等这个消息写入了Blokchain之后，再把解密的钥匙发送出去，让Contract去解密验证。这样黑客就无法验证答案，即使copy了我们的数据，也没有正确的钥匙提供验证。\\n\\n### DoS拒绝服务攻击\\n> 令一个Contract停止服务的方式有很多！\\n![img](/book/dos1.jpg)\\n> 上述例子，黑客可以创建很多账户，使得distribute的循环消耗超出gasLimit而停止服务。\\n![img](/book/dos2.jpg)\\n> 上述例子，如果Contract的持有者没有初始化，那么整个系统都无法运行了。\\n\\n### Blockchain时间戳修改\\n> 块数据的时间戳在很多应用中被使用，例如产生随机数，资金冻结一定时间，根据时间的状态修改等等。矿工可以调整机器的时间戳，可能会对Contract产生意外的结果。\\n![img](/book/timestamp.jpg)\\n> 上述Contract，每次接受一个交易，判断它的时间戳是否是15的整数倍，如果是，则可以奖励一笔资金。此时矿工可以略微调整Block的时间戳使得刚好是15的倍数。因此block.timestamp或者now不是一个好的选择。但是时间相关的应用很多，可以使用block.number * 平均时间来衡量总体的时间。\\n\\n### 构造函数\\n> 构造函数是一个特殊的函数，通常在初始化Contract的时候执行一些关键的特殊的任务。Solidity版本v0.4.22，构造函数的名称与Contract的名称一致。日常开发中，如果Contract的名称改了，原本的构造函数就变成了一个普通函数。\\n![img](/book/constructor.jpg)\\n> 上述示例，ownerWallet以小写开头，Contract大写开头，这不是构造函数，而是普通函数，任何人都可以调用这个代码，把自己设为owner，取钱走人。在版本v0.4.22之后，构造函数名字统一为constructor，避免了这个问。\\n\\n### Storage指针未初始化\\n> EVM存储数据有两种方式：storage和memory。了解内部机制对于每个开发者来说都是很有必要的，错误的使用方式会留下漏洞，被黑客攻击。函数内部变量存储在storage或是memory是由它的类型决定的。未初始化的storage变量可能指向了Contract的其它storage变量的值。\\n![img](/book/storage.jpg)\\n> 上述例子中，unlocked字段存储在slot[0]，registerNameRecord存储在slot[1]，在register函数里，newRecord定义了，但未赋值，后面的_name,_mappedAddress会写入slot[0]，slot[1]，实际上修改了unlocked和registerNameRecord的值。\\n\\n### Tx.Origin认证\\n> Solidity有一个全局变量，tx.origin，它通过回溯所有的调用堆栈，找出发起这次调用的地址。用这个变量去做认证可能会被钓鱼。\\n![img](/book/origin1.jpg)\\n![img](/book/origin2.jpg)\\n> 上述例子中，Phishable取款的函数用tx.origin判断是否是owner。假设Phishable和AttackContract进行交易，Phishable向AttackContract转一笔钱，AttackContract回调触发Phishable的取款操作，由于这个操作最原始的发起者是Phishable，因此tx.origin == owner成立，钱却转到了AttackContract的账户了。\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\";","'use strict';\nvar defineProperty = require('../internals/object-define-property').f;\nvar create = require('../internals/object-create');\nvar redefineAll = require('../internals/redefine-all');\nvar bind = require('../internals/bind-context');\nvar anInstance = require('../internals/an-instance');\nvar iterate = require('../internals/iterate');\nvar defineIterator = require('../internals/define-iterator');\nvar setSpecies = require('../internals/set-species');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar fastKey = require('../internals/internal-metadata').fastKey;\nvar InternalStateModule = require('../internals/internal-state');\n\nvar setInternalState = InternalStateModule.set;\nvar internalStateGetterFor = InternalStateModule.getterFor;\n\nmodule.exports = {\n  getConstructor: function (wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER) {\n    var C = wrapper(function (that, iterable) {\n      anInstance(that, C, CONSTRUCTOR_NAME);\n      setInternalState(that, {\n        type: CONSTRUCTOR_NAME,\n        index: create(null),\n        first: undefined,\n        last: undefined,\n        size: 0\n      });\n      if (!DESCRIPTORS) that.size = 0;\n      if (iterable != undefined) iterate(iterable, that[ADDER], that, IS_MAP);\n    });\n\n    var getInternalState = internalStateGetterFor(CONSTRUCTOR_NAME);\n\n    var define = function (that, key, value) {\n      var state = getInternalState(that);\n      var entry = getEntry(that, key);\n      var previous, index;\n      // change existing entry\n      if (entry) {\n        entry.value = value;\n      // create new entry\n      } else {\n        state.last = entry = {\n          index: index = fastKey(key, true),\n          key: key,\n          value: value,\n          previous: previous = state.last,\n          next: undefined,\n          removed: false\n        };\n        if (!state.first) state.first = entry;\n        if (previous) previous.next = entry;\n        if (DESCRIPTORS) state.size++;\n        else that.size++;\n        // add to index\n        if (index !== 'F') state.index[index] = entry;\n      } return that;\n    };\n\n    var getEntry = function (that, key) {\n      var state = getInternalState(that);\n      // fast case\n      var index = fastKey(key);\n      var entry;\n      if (index !== 'F') return state.index[index];\n      // frozen object case\n      for (entry = state.first; entry; entry = entry.next) {\n        if (entry.key == key) return entry;\n      }\n    };\n\n    redefineAll(C.prototype, {\n      // 23.1.3.1 Map.prototype.clear()\n      // 23.2.3.2 Set.prototype.clear()\n      clear: function clear() {\n        var that = this;\n        var state = getInternalState(that);\n        var data = state.index;\n        var entry = state.first;\n        while (entry) {\n          entry.removed = true;\n          if (entry.previous) entry.previous = entry.previous.next = undefined;\n          delete data[entry.index];\n          entry = entry.next;\n        }\n        state.first = state.last = undefined;\n        if (DESCRIPTORS) state.size = 0;\n        else that.size = 0;\n      },\n      // 23.1.3.3 Map.prototype.delete(key)\n      // 23.2.3.4 Set.prototype.delete(value)\n      'delete': function (key) {\n        var that = this;\n        var state = getInternalState(that);\n        var entry = getEntry(that, key);\n        if (entry) {\n          var next = entry.next;\n          var prev = entry.previous;\n          delete state.index[entry.index];\n          entry.removed = true;\n          if (prev) prev.next = next;\n          if (next) next.previous = prev;\n          if (state.first == entry) state.first = next;\n          if (state.last == entry) state.last = prev;\n          if (DESCRIPTORS) state.size--;\n          else that.size--;\n        } return !!entry;\n      },\n      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)\n      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)\n      forEach: function forEach(callbackfn /* , that = undefined */) {\n        var state = getInternalState(this);\n        var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);\n        var entry;\n        while (entry = entry ? entry.next : state.first) {\n          boundFunction(entry.value, entry.key, this);\n          // revert to the last existing entry\n          while (entry && entry.removed) entry = entry.previous;\n        }\n      },\n      // 23.1.3.7 Map.prototype.has(key)\n      // 23.2.3.7 Set.prototype.has(value)\n      has: function has(key) {\n        return !!getEntry(this, key);\n      }\n    });\n\n    redefineAll(C.prototype, IS_MAP ? {\n      // 23.1.3.6 Map.prototype.get(key)\n      get: function get(key) {\n        var entry = getEntry(this, key);\n        return entry && entry.value;\n      },\n      // 23.1.3.9 Map.prototype.set(key, value)\n      set: function set(key, value) {\n        return define(this, key === 0 ? 0 : key, value);\n      }\n    } : {\n      // 23.2.3.1 Set.prototype.add(value)\n      add: function add(value) {\n        return define(this, value = value === 0 ? 0 : value, value);\n      }\n    });\n    if (DESCRIPTORS) defineProperty(C.prototype, 'size', {\n      get: function () {\n        return getInternalState(this).size;\n      }\n    });\n    return C;\n  },\n  setStrong: function (C, CONSTRUCTOR_NAME, IS_MAP) {\n    var ITERATOR_NAME = CONSTRUCTOR_NAME + ' Iterator';\n    var getInternalCollectionState = internalStateGetterFor(CONSTRUCTOR_NAME);\n    var getInternalIteratorState = internalStateGetterFor(ITERATOR_NAME);\n    // add .keys, .values, .entries, [@@iterator]\n    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11\n    defineIterator(C, CONSTRUCTOR_NAME, function (iterated, kind) {\n      setInternalState(this, {\n        type: ITERATOR_NAME,\n        target: iterated,\n        state: getInternalCollectionState(iterated),\n        kind: kind,\n        last: undefined\n      });\n    }, function () {\n      var state = getInternalIteratorState(this);\n      var kind = state.kind;\n      var entry = state.last;\n      // revert to the last existing entry\n      while (entry && entry.removed) entry = entry.previous;\n      // get next entry\n      if (!state.target || !(state.last = entry = entry ? entry.next : state.state.first)) {\n        // or finish the iteration\n        state.target = undefined;\n        return { value: undefined, done: true };\n      }\n      // return step by kind\n      if (kind == 'keys') return { value: entry.key, done: false };\n      if (kind == 'values') return { value: entry.value, done: false };\n      return { value: [entry.key, entry.value], done: false };\n    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);\n\n    // add [@@species], 23.1.2.2, 23.2.2.2\n    setSpecies(CONSTRUCTOR_NAME);\n  }\n};\n","export default \"# 咖啡馆的区块链之旅\\n自从咖啡馆营业以来，小明日夜奋斗，研发出口味独特的咖啡，且待客热情，如今客似云来，生意红红火火。\\n\\n咖啡馆营业至深夜两点。每天打烊后，小明坐在电脑旁边，看看账单，算算利润，白天的苦和累，渐渐消失，转化成明天的动力。\\n\\n半年之后，小明在城东新开了一家分店，由女友小红打理。很快，小红的店也火起来了，成为了城中年轻人最喜欢聚头的地点之一。\\n\\n今天是国庆黄金周，小明的店迎来了开业以来最大的客流量。忙得不可开交之时，账单系统奔溃了，客人无法支付......重启、修复、设置，大概过了一个小时，系统重新运行。客户纷纷抱怨、离去。小明心里苦啊！\\n\\n## 容错\\n深夜打烊后，小明坐在电脑旁边，表情严肃。计算机专业毕业的小明，已经有了一套新的方案，他决定使用3台电脑同时记账，其中一台电脑发生故障不会导致整个记账系统不可用。\\n\\n国庆黄金周期间，再也没有出现客户无法支付的情况，小明长长地舒了一口气。只是，每天晚上，要把3台电脑的数据重新汇总，统计，略微麻烦。\\n\\n## Raft\\n又过了半年，小明在城西新开一家分店，由弟弟小朋打理。小朋不负哥哥期望，生意做的有声有色。\\n\\n这天晚上，小明坐在电脑旁边，表情严肃。现在账单越来越多，3台电脑的数据汇总耗时越来越长，如此下去，终究是个麻烦。小明打开google搜索，突然眼前一亮，Raft共识算法，不正式我要找的吗！\\n\\n于是，小明重新设计了账单系统：\\n1. 3台电脑各自运行一个记账节点\\n2. 起初，从中选取一个节点记账，同时广播给其他节点\\n3. 非选中节点只接收当选者的广播，不处理客户发起的请求\\n4. 如果当选节点发生故障，重新选举\\n\\n如此，账单在3台电脑总是保持一致，同时整个系统不会因单一节点故障导致不可用。小明再也不用熬夜汇总，日子好过多了。\\n\\n## 加盟者\\n小明参加同学聚会。大伙都对小明赞不绝口，简直是经商奇才。同学小龙和小虎表示要加盟，把生意做大做强，小明想都没想就同意了。\\n\\n小龙和小虎分别在城西和城北开了分店，各自跑一个账单系统节点，这样，整个账单系统一共有5各节点运行。小明的咖啡馆品牌在城中知名度越来越高，应酬也越来越多，店里的事，大多都交给小红和小朋打理。\\n\\n月底，小明拿到了上个月的账本报告，觉得有点地方不对劲。按理，新开了分店，但是入账并没有成比例地上涨，倒是成本成比例地上涨，到底是哪里出了问题呢？\\n\\n整个周末，小明都没有离开家门，反复地查账，得出一个结论：有人做假账了。当前账单系统有5个节点运行，同一时间处理客户订单的只有一个节点，必定是当中的某个节点出猫，当出猫节点当选时，瞒报了账单数目！\\n\\n## POW\\n又是一连几天的google搜索，小明发现账本系统遇到的问题正是拜占庭容错算法可以解决的，而当中的佼佼者，是比特币所使用的POW算法。于是小明重新设计了账本系统：\\n1. 5个节点各自独立处理订单，不再选举\\n2. 订单生成，在5个节点当中广播\\n3. 节点接收订单，打包区块，计算哈希值，生成区块，广播区块\\n4. 节点接收区块，验证哈希值，存储区块\\n5. 节点当中最长的链，就是5个节点都认可的主链\\n\\n现在，假若有节点想修改过往的数据，必须重新计算该区块的哈希值，以及后面区块的哈希值，这需要花费很长的时间，它的链就不是最长的，修改的数据也不会被认可；假若节点在收到订单的时候修改数据，那么它的区块将与其他区块冲突，经过一段时间后，造假区块将被其他节点丢弃。\\n\\n小明现在要确保的是，账单系统的绝大部分节点掌握在自己手中，即可杜绝做假账的事情了。\\n\\n## POS\\n这一天，小明外出采购，经过小红的店，就和小红聊起来了。小红说到，自从用了新的账本系统，电费猛涨，夏天用电量高峰时期，部分大功率的电器跑不起来，不知道是怎么个回事。\\n\\n晚上，小明坐在电脑旁边，又想起了小红的话。其实，小明也早已发现这个问题了。于是，打开google搜索，一个新的idear生成。小明重新设计了账本系统:\\n1. 打包区块不需要每个节点都跑，愿意跑的出一笔准备金，准备金越高，获得打包的机会越大\\n2. 打包之后，准备金最高的前3个节点进行验证、投票，决定是否认可区块\\n3. 投票通过后，区块广播，写入账本之中\\n\\n如此一来，大大地减少了计算消耗。若是发现造假，投票人决绝投票，同时没收它的准备金，从而保证了安全。\\n\\n新的账本系统推出后，大伙都很满意。\";","/*\n * List of Unicode code that are flagged as number.\n *\n * Contains Unicode code of:\n * - Nd = Number, decimal digit\n * - Nl = Number, letter\n * - No = Number, other\n *\n * This list has been computed from http://unicode.org/Public/UNIDATA/UnicodeData.txt\n * curl -s http://unicode.org/Public/UNIDATA/UnicodeData.txt | grep -E ';Nd;|;Nl;|;No;' | cut -d \\; -f 1 | xargs -I{} printf '%d, ' 0x{}\n *\n */\nexports.N = [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 178, 179, 185, 188, 189, 190, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 2406, 2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543, 2548, 2549, 2550, 2551, 2552, 2553, 2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671, 2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797, 2798, 2799, 2918, 2919, 2920, 2921, 2922, 2923, 2924, 2925, 2926, 2927, 2930, 2931, 2932, 2933, 2934, 2935, 3046, 3047, 3048, 3049, 3050, 3051, 3052, 3053, 3054, 3055, 3056, 3057, 3058, 3174, 3175, 3176, 3177, 3178, 3179, 3180, 3181, 3182, 3183, 3192, 3193, 3194, 3195, 3196, 3197, 3198, 3302, 3303, 3304, 3305, 3306, 3307, 3308, 3309, 3310, 3311, 3430, 3431, 3432, 3433, 3434, 3435, 3436, 3437, 3438, 3439, 3440, 3441, 3442, 3443, 3444, 3445, 3558, 3559, 3560, 3561, 3562, 3563, 3564, 3565, 3566, 3567, 3664, 3665, 3666, 3667, 3668, 3669, 3670, 3671, 3672, 3673, 3792, 3793, 3794, 3795, 3796, 3797, 3798, 3799, 3800, 3801, 3872, 3873, 3874, 3875, 3876, 3877, 3878, 3879, 3880, 3881, 3882, 3883, 3884, 3885, 3886, 3887, 3888, 3889, 3890, 3891, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4169, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4969, 4970, 4971, 4972, 4973, 4974, 4975, 4976, 4977, 4978, 4979, 4980, 4981, 4982, 4983, 4984, 4985, 4986, 4987, 4988, 5870, 5871, 5872, 6112, 6113, 6114, 6115, 6116, 6117, 6118, 6119, 6120, 6121, 6128, 6129, 6130, 6131, 6132, 6133, 6134, 6135, 6136, 6137, 6160, 6161, 6162, 6163, 6164, 6165, 6166, 6167, 6168, 6169, 6470, 6471, 6472, 6473, 6474, 6475, 6476, 6477, 6478, 6479, 6608, 6609, 6610, 6611, 6612, 6613, 6614, 6615, 6616, 6617, 6618, 6784, 6785, 6786, 6787, 6788, 6789, 6790, 6791, 6792, 6793, 6800, 6801, 6802, 6803, 6804, 6805, 6806, 6807, 6808, 6809, 6992, 6993, 6994, 6995, 6996, 6997, 6998, 6999, 7000, 7001, 7088, 7089, 7090, 7091, 7092, 7093, 7094, 7095, 7096, 7097, 7232, 7233, 7234, 7235, 7236, 7237, 7238, 7239, 7240, 7241, 7248, 7249, 7250, 7251, 7252, 7253, 7254, 7255, 7256, 7257, 8304, 8308, 8309, 8310, 8311, 8312, 8313, 8320, 8321, 8322, 8323, 8324, 8325, 8326, 8327, 8328, 8329, 8528, 8529, 8530, 8531, 8532, 8533, 8534, 8535, 8536, 8537, 8538, 8539, 8540, 8541, 8542, 8543, 8544, 8545, 8546, 8547, 8548, 8549, 8550, 8551, 8552, 8553, 8554, 8555, 8556, 8557, 8558, 8559, 8560, 8561, 8562, 8563, 8564, 8565, 8566, 8567, 8568, 8569, 8570, 8571, 8572, 8573, 8574, 8575, 8576, 8577, 8578, 8581, 8582, 8583, 8584, 8585, 9312, 9313, 9314, 9315, 9316, 9317, 9318, 9319, 9320, 9321, 9322, 9323, 9324, 9325, 9326, 9327, 9328, 9329, 9330, 9331, 9332, 9333, 9334, 9335, 9336, 9337, 9338, 9339, 9340, 9341, 9342, 9343, 9344, 9345, 9346, 9347, 9348, 9349, 9350, 9351, 9352, 9353, 9354, 9355, 9356, 9357, 9358, 9359, 9360, 9361, 9362, 9363, 9364, 9365, 9366, 9367, 9368, 9369, 9370, 9371, 9450, 9451, 9452, 9453, 9454, 9455, 9456, 9457, 9458, 9459, 9460, 9461, 9462, 9463, 9464, 9465, 9466, 9467, 9468, 9469, 9470, 9471, 10102, 10103, 10104, 10105, 10106, 10107, 10108, 10109, 10110, 10111, 10112, 10113, 10114, 10115, 10116, 10117, 10118, 10119, 10120, 10121, 10122, 10123, 10124, 10125, 10126, 10127, 10128, 10129, 10130, 10131, 11517, 12295, 12321, 12322, 12323, 12324, 12325, 12326, 12327, 12328, 12329, 12344, 12345, 12346, 12690, 12691, 12692, 12693, 12832, 12833, 12834, 12835, 12836, 12837, 12838, 12839, 12840, 12841, 12872, 12873, 12874, 12875, 12876, 12877, 12878, 12879, 12881, 12882, 12883, 12884, 12885, 12886, 12887, 12888, 12889, 12890, 12891, 12892, 12893, 12894, 12895, 12928, 12929, 12930, 12931, 12932, 12933, 12934, 12935, 12936, 12937, 12977, 12978, 12979, 12980, 12981, 12982, 12983, 12984, 12985, 12986, 12987, 12988, 12989, 12990, 12991, 42528, 42529, 42530, 42531, 42532, 42533, 42534, 42535, 42536, 42537, 42726, 42727, 42728, 42729, 42730, 42731, 42732, 42733, 42734, 42735, 43056, 43057, 43058, 43059, 43060, 43061, 43216, 43217, 43218, 43219, 43220, 43221, 43222, 43223, 43224, 43225, 43264, 43265, 43266, 43267, 43268, 43269, 43270, 43271, 43272, 43273, 43472, 43473, 43474, 43475, 43476, 43477, 43478, 43479, 43480, 43481, 43504, 43505, 43506, 43507, 43508, 43509, 43510, 43511, 43512, 43513, 43600, 43601, 43602, 43603, 43604, 43605, 43606, 43607, 43608, 43609, 44016, 44017, 44018, 44019, 44020, 44021, 44022, 44023, 44024, 44025, 65296, 65297, 65298, 65299, 65300, 65301, 65302, 65303, 65304, 65305, 65799, 65800, 65801, 65802, 65803, 65804, 65805, 65806, 65807, 65808, 65809, 65810, 65811, 65812, 65813, 65814, 65815, 65816, 65817, 65818, 65819, 65820, 65821, 65822, 65823, 65824, 65825, 65826, 65827, 65828, 65829, 65830, 65831, 65832, 65833, 65834, 65835, 65836, 65837, 65838, 65839, 65840, 65841, 65842, 65843, 65856, 65857, 65858, 65859, 65860, 65861, 65862, 65863, 65864, 65865, 65866, 65867, 65868, 65869, 65870, 65871, 65872, 65873, 65874, 65875, 65876, 65877, 65878, 65879, 65880, 65881, 65882, 65883, 65884, 65885, 65886, 65887, 65888, 65889, 65890, 65891, 65892, 65893, 65894, 65895, 65896, 65897, 65898, 65899, 65900, 65901, 65902, 65903, 65904, 65905, 65906, 65907, 65908, 65909, 65910, 65911, 65912, 65930, 65931, 66273, 66274, 66275, 66276, 66277, 66278, 66279, 66280, 66281, 66282, 66283, 66284, 66285, 66286, 66287, 66288, 66289, 66290, 66291, 66292, 66293, 66294, 66295, 66296, 66297, 66298, 66299, 66336, 66337, 66338, 66339, 66369, 66378, 66513, 66514, 66515, 66516, 66517, 66720, 66721, 66722, 66723, 66724, 66725, 66726, 66727, 66728, 66729, 67672, 67673, 67674, 67675, 67676, 67677, 67678, 67679, 67705, 67706, 67707, 67708, 67709, 67710, 67711, 67751, 67752, 67753, 67754, 67755, 67756, 67757, 67758, 67759, 67835, 67836, 67837, 67838, 67839, 67862, 67863, 67864, 67865, 67866, 67867, 68028, 68029, 68032, 68033, 68034, 68035, 68036, 68037, 68038, 68039, 68040, 68041, 68042, 68043, 68044, 68045, 68046, 68047, 68050, 68051, 68052, 68053, 68054, 68055, 68056, 68057, 68058, 68059, 68060, 68061, 68062, 68063, 68064, 68065, 68066, 68067, 68068, 68069, 68070, 68071, 68072, 68073, 68074, 68075, 68076, 68077, 68078, 68079, 68080, 68081, 68082, 68083, 68084, 68085, 68086, 68087, 68088, 68089, 68090, 68091, 68092, 68093, 68094, 68095, 68160, 68161, 68162, 68163, 68164, 68165, 68166, 68167, 68221, 68222, 68253, 68254, 68255, 68331, 68332, 68333, 68334, 68335, 68440, 68441, 68442, 68443, 68444, 68445, 68446, 68447, 68472, 68473, 68474, 68475, 68476, 68477, 68478, 68479, 68521, 68522, 68523, 68524, 68525, 68526, 68527, 68858, 68859, 68860, 68861, 68862, 68863, 69216, 69217, 69218, 69219, 69220, 69221, 69222, 69223, 69224, 69225, 69226, 69227, 69228, 69229, 69230, 69231, 69232, 69233, 69234, 69235, 69236, 69237, 69238, 69239, 69240, 69241, 69242, 69243, 69244, 69245, 69246, 69714, 69715, 69716, 69717, 69718, 69719, 69720, 69721, 69722, 69723, 69724, 69725, 69726, 69727, 69728, 69729, 69730, 69731, 69732, 69733, 69734, 69735, 69736, 69737, 69738, 69739, 69740, 69741, 69742, 69743, 69872, 69873, 69874, 69875, 69876, 69877, 69878, 69879, 69880, 69881, 69942, 69943, 69944, 69945, 69946, 69947, 69948, 69949, 69950, 69951, 70096, 70097, 70098, 70099, 70100, 70101, 70102, 70103, 70104, 70105, 70113, 70114, 70115, 70116, 70117, 70118, 70119, 70120, 70121, 70122, 70123, 70124, 70125, 70126, 70127, 70128, 70129, 70130, 70131, 70132, 70384, 70385, 70386, 70387, 70388, 70389, 70390, 70391, 70392, 70393, 70864, 70865, 70866, 70867, 70868, 70869, 70870, 70871, 70872, 70873, 71248, 71249, 71250, 71251, 71252, 71253, 71254, 71255, 71256, 71257, 71360, 71361, 71362, 71363, 71364, 71365, 71366, 71367, 71368, 71369, 71472, 71473, 71474, 71475, 71476, 71477, 71478, 71479, 71480, 71481, 71482, 71483, 71904, 71905, 71906, 71907, 71908, 71909, 71910, 71911, 71912, 71913, 71914, 71915, 71916, 71917, 71918, 71919, 71920, 71921, 71922, 74752, 74753, 74754, 74755, 74756, 74757, 74758, 74759, 74760, 74761, 74762, 74763, 74764, 74765, 74766, 74767, 74768, 74769, 74770, 74771, 74772, 74773, 74774, 74775, 74776, 74777, 74778, 74779, 74780, 74781, 74782, 74783, 74784, 74785, 74786, 74787, 74788, 74789, 74790, 74791, 74792, 74793, 74794, 74795, 74796, 74797, 74798, 74799, 74800, 74801, 74802, 74803, 74804, 74805, 74806, 74807, 74808, 74809, 74810, 74811, 74812, 74813, 74814, 74815, 74816, 74817, 74818, 74819, 74820, 74821, 74822, 74823, 74824, 74825, 74826, 74827, 74828, 74829, 74830, 74831, 74832, 74833, 74834, 74835, 74836, 74837, 74838, 74839, 74840, 74841, 74842, 74843, 74844, 74845, 74846, 74847, 74848, 74849, 74850, 74851, 74852, 74853, 74854, 74855, 74856, 74857, 74858, 74859, 74860, 74861, 74862, 92768, 92769, 92770, 92771, 92772, 92773, 92774, 92775, 92776, 92777, 93008, 93009, 93010, 93011, 93012, 93013, 93014, 93015, 93016, 93017, 93019, 93020, 93021, 93022, 93023, 93024, 93025, 119648, 119649, 119650, 119651, 119652, 119653, 119654, 119655, 119656, 119657, 119658, 119659, 119660, 119661, 119662, 119663, 119664, 119665, 120782, 120783, 120784, 120785, 120786, 120787, 120788, 120789, 120790, 120791, 120792, 120793, 120794, 120795, 120796, 120797, 120798, 120799, 120800, 120801, 120802, 120803, 120804, 120805, 120806, 120807, 120808, 120809, 120810, 120811, 120812, 120813, 120814, 120815, 120816, 120817, 120818, 120819, 120820, 120821, 120822, 120823, 120824, 120825, 120826, 120827, 120828, 120829, 120830, 120831, 125127, 125128, 125129, 125130, 125131, 125132, 125133, 125134, 125135, 127232, 127233, 127234, 127235, 127236, 127237, 127238, 127239, 127240, 127241, 127242, 127243, 127244];\n","export default \"# Peer节点启动时做了什么\\nPeer节点的程序结构与Orderer稍有不同。首先，peer是一个cli应用:\\n```\\nfunc main() {\\n\\t// For environment variables.\\n\\tviper.SetEnvPrefix(common.CmdRoot)\\n\\tviper.AutomaticEnv()\\n\\treplacer := strings.NewReplacer(\\\".\\\", \\\"_\\\")\\n\\tviper.SetEnvKeyReplacer(replacer)\\n\\n\\t// Define command-line flags that are valid for all peer commands and\\n\\t// subcommands.\\n\\tmainFlags := mainCmd.PersistentFlags()\\n\\n\\tmainFlags.String(\\\"logging-level\\\", \\\"\\\", \\\"Legacy logging level flag\\\")\\n\\tviper.BindPFlag(\\\"logging_level\\\", mainFlags.Lookup(\\\"logging-level\\\"))\\n\\tmainFlags.MarkHidden(\\\"logging-level\\\")\\n\\n\\tcryptoProvider := factory.GetDefault()\\n\\n\\tmainCmd.AddCommand(version.Cmd())\\n\\tmainCmd.AddCommand(node.Cmd())\\n\\tmainCmd.AddCommand(chaincode.Cmd(nil, cryptoProvider))\\n\\tmainCmd.AddCommand(channel.Cmd(nil))\\n\\tmainCmd.AddCommand(lifecycle.Cmd(cryptoProvider))\\n\\tmainCmd.AddCommand(snapshot.Cmd(cryptoProvider))\\n\\n\\t// On failure Cobra prints the usage message and error string, so we only\\n\\t// need to exit with a non-0 status\\n\\tif mainCmd.Execute() != nil {\\n\\t\\tos.Exit(1)\\n\\t}\\n}\\n```\\nPeer节点的启动是peer程序中的node指令下的一条指令:\\n```\\nfunc Cmd() *cobra.Command {\\n\\tnodeCmd.AddCommand(startCmd())\\n\\tnodeCmd.AddCommand(resetCmd())\\n\\tnodeCmd.AddCommand(rollbackCmd())\\n\\tnodeCmd.AddCommand(pauseCmd())\\n\\tnodeCmd.AddCommand(resumeCmd())\\n\\tnodeCmd.AddCommand(rebuildDBsCmd())\\n\\tnodeCmd.AddCommand(upgradeDBsCmd())\\n\\treturn nodeCmd\\n}\\n\\nvar nodeStartCmd = &cobra.Command{\\n\\tUse:   \\\"start\\\",\\n\\tShort: \\\"Starts the node.\\\",\\n\\tLong:  `Starts a node that interacts with the network.`,\\n\\tRunE: func(cmd *cobra.Command, args []string) error {\\n\\t\\tif len(args) != 0 {\\n\\t\\t\\treturn fmt.Errorf(\\\"trailing args detected\\\")\\n\\t\\t}\\n\\t\\t// Parsing of the command line is done so silence cmd usage\\n\\t\\tcmd.SilenceUsage = true\\n\\t\\treturn serve(args)\\n\\t},\\n}\\n```\\n由于代码位于internal这个包之中，外部程序无法引用，无法通过代码调用，我们只好用命令行的方式启动节点。\\n\\n在我们在fabric-cases根目录执行make，以下bin程序被下载到bin目录之下:\\n```\\n$ ls -l ../bin/\\ntotal 366200\\n-rwxr-xr-x  1 stephen  staff  18156272 Aug 10 16:31 configtxgen\\n-rwxr-xr-x  1 stephen  staff  16878512 Aug 10 16:31 configtxlator\\n-rwxr-xr-x  1 stephen  staff  13140952 Aug 10 16:31 cryptogen\\n-rwxr-xr-x  1 stephen  staff  17300752 Aug 10 16:31 discover\\n-rwxr-xr-x  1 stephen  staff  19387296 Aug 10 16:31 fabric-ca-client\\n-rwxr-xr-x  1 stephen  staff  22989504 Aug 10 16:31 fabric-ca-server\\n-rwxr-xr-x  1 stephen  staff  12171616 Aug 10 16:31 idemixgen\\n-rwxr-xr-x  1 stephen  staff  29051248 Aug 10 16:31 orderer\\n-rwxr-xr-x  1 stephen  staff  38403256 Aug 10 16:31 peer\\n```\\n当中的peer程序，就是peer源码编译生成的。我们可以直接调用:\\n```\\n../bin/peer \\nUsage:\\n  peer [command]\\n\\nAvailable Commands:\\n  chaincode   Operate a chaincode: install|instantiate|invoke|package|query|signpackage|upgrade|list.\\n  channel     Operate a channel: create|fetch|join|list|update|signconfigtx|getinfo.\\n  help        Help about any command\\n  lifecycle   Perform _lifecycle operations\\n  node        Operate a peer node: start|reset|rollback|pause|resume|rebuild-dbs|upgrade-dbs.\\n  version     Print fabric peer version.\\n\\nFlags:\\n  -h, --help   help for peer\\n\\nUse \\\"peer [command] --help\\\" for more information about a command.\\n```\\n要启动peer节点，可以调用 ../bin/peer node start，或者，我们也可以调用本目录下make指令:\\n```\\n$ make peer\\n../bin/peer node start\\n2020-09-03 15:16:30.891 HKT [main] InitCmd -> ERRO 001 Fatal error when initializing core config : Could not find config file. Please make sure that FABRIC_CFG_PATH is set to a path which contains core.yaml\\nmake: *** [peer] Error 1\\n```\\n不出意料，程序报错了，提示找不到core.yaml。\\n\\n阅读源码，找到core.yaml位于fabric/sampleconfig/configtx.yaml，复制到本目录，同时修改msg的路径:\\n```\\n# Path on the file system where peer will find MSP local configurations\\nmspConfigPath: crypto/peerOrganizations/example.com/users/Admin@example.com/msp/\\n```\\n然后我们再启动:\\n```\\nmake peer\\n../bin/peer node start\\n2020-09-03 15:24:29.259 HKT [nodeCmd] serve -> INFO 001 Starting peer:\\n Version: 2.2.0\\n Commit SHA: 5ea85bc54\\n Go version: go1.14.4\\n OS/Arch: darwin/amd64\\n Chaincode:\\n  Base Docker Label: org.hyperledger.fabric\\n  Docker Namespace: hyperledger\\n2020-09-03 15:24:29.260 HKT [peer] getLocalAddress -> INFO 002 Auto-detected peer address: 192.168.1.3:7051\\n2020-09-03 15:24:29.260 HKT [peer] getLocalAddress -> INFO 003 Host is 0.0.0.0 , falling back to auto-detected address: 192.168.1.3:7051\\n2020-09-03 15:24:29.267 HKT [nodeCmd] initGrpcSemaphores -> INFO 004 concurrency limit for endorser service is 2500\\n2020-09-03 15:24:29.267 HKT [nodeCmd] initGrpcSemaphores -> INFO 005 concurrency limit for deliver service is 2500\\n2020-09-03 15:24:29.293 HKT [ledgermgmt] NewLedgerMgr -> INFO 006 Initializing LedgerMgr\\n2020-09-03 15:24:29.427 HKT [ledgermgmt] NewLedgerMgr -> INFO 007 Initialized LedgerMgr\\n2020-09-03 15:24:29.437 HKT [gossip.service] New -> INFO 008 Initialize gossip with endpoint 192.168.1.3:7051\\n2020-09-03 15:24:29.439 HKT [gossip.gossip] New -> INFO 009 Creating gossip service with self membership of Endpoint: , InternalEndpoint: 192.168.1.3:7051, PKI-ID: bc25609ffe8f936a25a5eab13e2e481309e9e63cf28ac4f1fd09e13eda9f213f, Metadata: \\n2020-09-03 15:24:29.440 HKT [gossip.gossip] New -> WARN 00a External endpoint is empty, peer will not be accessible outside of its organization\\n2020-09-03 15:24:29.440 HKT [gossip.gossip] start -> INFO 00b Gossip instance 192.168.1.3:7051 started\\n2020-09-03 15:24:29.440 HKT [lifecycle] InitializeLocalChaincodes -> INFO 00c Initialized lifecycle cache with 0 already installed chaincodes\\n2020-09-03 15:24:29.441 HKT [nodeCmd] computeChaincodeEndpoint -> INFO 00d Entering computeChaincodeEndpoint with peerHostname: 192.168.1.3\\n2020-09-03 15:24:29.441 HKT [nodeCmd] computeChaincodeEndpoint -> INFO 00e Exit with ccEndpoint: 192.168.1.3:7052\\n2020-09-03 15:24:29.441 HKT [nodeCmd] createChaincodeServer -> WARN 00f peer.chaincodeListenAddress is not set, using 192.168.1.3:7052\\n2020-09-03 15:24:29.445 HKT [sccapi] DeploySysCC -> INFO 010 deploying system chaincode 'lscc'\\n2020-09-03 15:24:29.446 HKT [sccapi] DeploySysCC -> INFO 011 deploying system chaincode 'cscc'\\n2020-09-03 15:24:29.447 HKT [sccapi] DeploySysCC -> INFO 012 deploying system chaincode 'qscc'\\n2020-09-03 15:24:29.447 HKT [sccapi] DeploySysCC -> INFO 013 deploying system chaincode '_lifecycle'\\n2020-09-03 15:24:29.447 HKT [nodeCmd] serve -> INFO 014 Deployed system chaincodes\\n2020-09-03 15:24:29.447 HKT [discovery] NewService -> INFO 015 Created with config TLS: false, authCacheMaxSize: 1000, authCachePurgeRatio: 0.750000\\n2020-09-03 15:24:29.448 HKT [nodeCmd] registerDiscoveryService -> INFO 016 Discovery service activated\\n2020-09-03 15:24:29.448 HKT [nodeCmd] serve -> INFO 017 Starting peer with ID=[jdoe], network ID=[dev], address=[192.168.1.3:7051]\\n2020-09-03 15:24:29.448 HKT [nodeCmd] serve -> INFO 018 Started peer with ID=[jdoe], network ID=[dev], address=[192.168.1.3:7051]\\n2020-09-03 15:24:29.448 HKT [kvledger] LoadPreResetHeight -> INFO 019 Loading prereset height from path [/var/hyperledger/production/ledgersData/chains]\\n2020-09-03 15:24:29.448 HKT [blkstorage] preResetHtFiles -> INFO 01a No active channels passed\\n```\\nPeer节点启动成功了!\\n\\n## 配置初始化\\n在core.yaml，发现很多选项很熟悉，因为这些变量是docker容器的环境变量:\\n```\\nlistenAddress: 0.0.0.0:7051\\n\\ngossip:\\n  bootstrap: 127.0.0.1:7051\\n\\nmspConfigPath: crypto/peerOrganizations/example.com/users/Admin@example.com/msp/\\n\\n...\\n```\\n与Orderer的配置不同的是，peer的配置多了chaincode和ledger的配置。因为chaincode的生命周期、ledger都是peer节点管理的。\\n\\n## 启动逻辑\\n总体上，peer的启动与orderer的启动，步调一致: 读取配置，创建服务，运行服务。\\n\\n具体来说，peer节点的启动逻辑更加复杂，主要体现在chaincode服务和ledger的配置，以及policy管理、identity管理、gossip服务、snapshot服务等等\\n\\n\";","/**\n * This file contains information and classes for the various kinds of styles\n * used in TeX. It provides a generic `Style` class, which holds information\n * about a specific style. It then provides instances of all the different kinds\n * of styles possible, and provides functions to move between them and get\n * information about them.\n */\n\n/**\n * The main style class. Contains a unique id for the style, a size (which is\n * the same for cramped and uncramped version of a style), a cramped flag, and a\n * size multiplier, which gives the size difference between a style and\n * textstyle.\n */\nfunction Style(id, size, multiplier, cramped) {\n    this.id = id;\n    this.size = size;\n    this.cramped = cramped;\n    this.sizeMultiplier = multiplier;\n}\n\n/**\n * Get the style of a superscript given a base in the current style.\n */\nStyle.prototype.sup = function() {\n    return styles[sup[this.id]];\n};\n\n/**\n * Get the style of a subscript given a base in the current style.\n */\nStyle.prototype.sub = function() {\n    return styles[sub[this.id]];\n};\n\n/**\n * Get the style of a fraction numerator given the fraction in the current\n * style.\n */\nStyle.prototype.fracNum = function() {\n    return styles[fracNum[this.id]];\n};\n\n/**\n * Get the style of a fraction denominator given the fraction in the current\n * style.\n */\nStyle.prototype.fracDen = function() {\n    return styles[fracDen[this.id]];\n};\n\n/**\n * Get the cramped version of a style (in particular, cramping a cramped style\n * doesn't change the style).\n */\nStyle.prototype.cramp = function() {\n    return styles[cramp[this.id]];\n};\n\n/**\n * HTML class name, like \"displaystyle cramped\"\n */\nStyle.prototype.cls = function() {\n    return sizeNames[this.size] + (this.cramped ? \" cramped\" : \" uncramped\");\n};\n\n/**\n * HTML Reset class name, like \"reset-textstyle\"\n */\nStyle.prototype.reset = function() {\n    return resetNames[this.size];\n};\n\n// IDs of the different styles\nvar D = 0;\nvar Dc = 1;\nvar T = 2;\nvar Tc = 3;\nvar S = 4;\nvar Sc = 5;\nvar SS = 6;\nvar SSc = 7;\n\n// String names for the different sizes\nvar sizeNames = [\n    \"displaystyle textstyle\",\n    \"textstyle\",\n    \"scriptstyle\",\n    \"scriptscriptstyle\",\n];\n\n// Reset names for the different sizes\nvar resetNames = [\n    \"reset-textstyle\",\n    \"reset-textstyle\",\n    \"reset-scriptstyle\",\n    \"reset-scriptscriptstyle\",\n];\n\n// Instances of the different styles\nvar styles = [\n    new Style(D, 0, 1.0, false),\n    new Style(Dc, 0, 1.0, true),\n    new Style(T, 1, 1.0, false),\n    new Style(Tc, 1, 1.0, true),\n    new Style(S, 2, 0.7, false),\n    new Style(Sc, 2, 0.7, true),\n    new Style(SS, 3, 0.5, false),\n    new Style(SSc, 3, 0.5, true),\n];\n\n// Lookup tables for switching from one style to another\nvar sup = [S, Sc, S, Sc, SS, SSc, SS, SSc];\nvar sub = [Sc, Sc, Sc, Sc, SSc, SSc, SSc, SSc];\nvar fracNum = [T, Tc, S, Sc, SS, SSc, SS, SSc];\nvar fracDen = [Tc, Tc, Sc, Sc, SSc, SSc, SSc, SSc];\nvar cramp = [Dc, Dc, Tc, Tc, Sc, Sc, SSc, SSc];\n\n// We only export some of the styles. Also, we don't export the `Style` class so\n// no more styles can be generated.\nmodule.exports = {\n    DISPLAY: styles[D],\n    TEXT: styles[T],\n    SCRIPT: styles[S],\n    SCRIPTSCRIPT: styles[SS],\n};\n","export default \"# Chaincode 生命周期管理\\n广义的Chaincode的生命周期，指的是，网络中的多个组织共同协作，将源代码部署到channel的管理流程。总共有4大类操作：\\n- Chaincode的安装和定义\\n- Chaincode升级流程\\n- 不同场景下的部署\\n- 不同生命周期版本之间的迁移\\n\\n从开发者的角度出发，重点了解前2类即可。\\n\\n## Chaincode安装和定义流程\\n狭义的chaincode生命周期，是指使用peer lifecycle chaincode工具安装chaincode的流程，它包括以下步骤:\\n1. package，打包chaincode\\n2. install，在peer节点安装chaincode\\n3. approve，组织批准，根据channel的政策，一定数量的组织批准后，才可以提交\\n4. commit，提交，将chaincode的信息提交到channel\\n\\n完成上述步骤之后，chaincode即可运行，供应用程序访问调用。\\n\\n## 环境准备\\n- 拉取仓库[fabric-cases](https://github.com/stephenwu2020/fabric-cases)\\n- 拉取fabric工具与镜像\\n  ```\\n  make\\n  ```\\n  拉取成功之后，fabric的工具在bin目录下，具体细节请查看devnet的介绍\\n- 测试网络，新建网络\\n  ```\\n  cd devnet\\n  ./builder.sh new\\n  ```\\n- 销毁网络\\n  ```\\n  ./builder.sh destroy\\n  ```\\n\\n## 操作流程分解\\n1. 启动网络:\\n   ```\\n   $ ./builder.sh network default\\n   ...\\n   Creating network \\\"hfcases_devnet\\\" with the default driver\\n   Creating orderer.develop.com    ... done\\n   Creating peer0.org1.develop.com ... done\\n   Creating cli                    ... done\\n   ...\\n   ```\\n2. 配置channel:\\n   ```\\n    ./builder.sh channel default\\n    wait for 5 seconds...\\n    wait for 5 seconds...\\n    wait for 5 seconds...\\n    Channels peers has joined: \\n    c1\\n    Blockchain info: {\\\"height\\\":2,\\\"currentBlockHash\\\":\\\"Id/MEifZ1obcwzo59H9RAhJr9VEUo8h+a4wFc+VfaSc=\\\",\\\"previousBlockHash\\\":\\\"rJe/u88mn55zC+7tJzEEpPQbLcgiEfo7ZbTJJy0HUxM=\\\"}\\n    wait for 5 seconds...\\n    Channels peers has joined: \\n    c1\\n    Blockchain info: {\\\"height\\\":2,\\\"currentBlockHash\\\":\\\"Id/MEifZ1obcwzo59H9RAhJr9VEUo8h+a4wFc+VfaSc=\\\",\\\"previousBlockHash\\\":\\\"rJe/u88mn55zC+7tJzEEpPQbLcgiEfo7ZbTJJy0HUxM=\\\"}\\n   ```\\n3. package, 打包chaincode:\\n   ```\\n   $ ./builder.sh chaincode package\\n    fetch go dependency\\n    ...\\n    package chaincode\\n   ```\\n4. install, 安装chaincode\\n   ```\\n   $ ./builder.sh chaincode install\\n   ```\\n5. approve, 批准chaincode\\n   ```\\n   $ ./builder.sh chaincode approve\\n   ```\\n6. commit, 提交chaincode\\n   ```\\n   $ ./builder.sh chaincode commit\\n   ```\\n7. invoke, 运行chaincode\\n   ```\\n   $ ./builder.sh chaincode invoke\\n   ```\\n8. query, 查询\\n   ```\\n   $ ./builder.sh chaincode query\\n   100\\n   ```\\n\\n## 简单说明\\n- 上述指令做了一定的简化，具体请看shell脚本的定义，chaincode.sh:\\n  ```\\n  #!/bin/bash\\n\\n  . ./scripts/env.sh\\n\\n  function package(){\\n    if [ -f \\\"pkg/${CHAINCODE_NAME}.tar.gz\\\" ]; then\\n      echo \\\"pkg already exist\\\"\\n    else\\n      echo \\\"fetch go dependency\\\"\\n      pushd ${CHAINCODE_PATH}\\n      #GO111MODULE=on go mod vendor\\n      GO111MODULE=on go mod tidy -v\\n      if [ ! $? -eq 0 ]; then\\n        echo \\\"Fetch go dependency fail! Check your network please!\\\"\\n        exit 1\\n      fi\\n      popd\\n\\n      echo \\\"package chaincode\\\"\\n      peer lifecycle chaincode package ${CHAINCODE_NAME}.tar.gz \\\\\\n        --path ${CHAINCODE_PATH} \\\\\\n        --lang golang \\\\\\n        --label ${CHAINCODE_LABEL}_1\\n\\n      cp ${CHAINCODE_NAME}.tar.gz /opt/gopath/src/github.com/hyperledger/fabric/peer/pkg\\n    fi\\n  }\\n\\n  ```\\n- chaincode.sh脚本运行在cli容器之内，方便编写\\n  ```\\n  \\\"chaincode\\\")\\n    shift\\n    docker exec cli scripts/chaincode.sh \\\"$@\\\"\\n    ;;\\n  ```\\n\\n## 更新Chaincode\\n假设chaincode源码修改了，进行更新，上述过程重走一遍，调用脚本:\\n```\\n./builder.sh chaincode upgrade\\n```\";","export default \"# 交易小费\\n\\n交易小费防止恶意破坏者在网络中散步垃圾信息，从而保护系统。交易小费的作用，一方面为用户使用网络提供交易市场；另一方面，用户通过提高交易小费，优先使用网络。\\n\\n在许多 blockchain 里，交易小费是唯一需要用 blockchain 自身货币来表达的费用。所有，有时候你会听到这样的言论，当前 ether 的价值是未来所有交易小费的净现值，类似股票价格是一家企业未来所有利润的净现值。但是，交易小费作用远不止这些，ether 只能体验交易小费未来价值的最起码的部分。\\n\";","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof');\nvar TAG = require('./_wks')('toStringTag');\n// ES3 wrong here\nvar ARG = cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar isForced = require('../internals/is-forced');\nvar redefine = require('../internals/redefine');\nvar InternalMetadataModule = require('../internals/internal-metadata');\nvar iterate = require('../internals/iterate');\nvar anInstance = require('../internals/an-instance');\nvar isObject = require('../internals/is-object');\nvar fails = require('../internals/fails');\nvar checkCorrectnessOfIteration = require('../internals/check-correctness-of-iteration');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar inheritIfRequired = require('../internals/inherit-if-required');\n\nmodule.exports = function (CONSTRUCTOR_NAME, wrapper, common) {\n  var IS_MAP = CONSTRUCTOR_NAME.indexOf('Map') !== -1;\n  var IS_WEAK = CONSTRUCTOR_NAME.indexOf('Weak') !== -1;\n  var ADDER = IS_MAP ? 'set' : 'add';\n  var NativeConstructor = global[CONSTRUCTOR_NAME];\n  var NativePrototype = NativeConstructor && NativeConstructor.prototype;\n  var Constructor = NativeConstructor;\n  var exported = {};\n\n  var fixMethod = function (KEY) {\n    var nativeMethod = NativePrototype[KEY];\n    redefine(NativePrototype, KEY,\n      KEY == 'add' ? function add(value) {\n        nativeMethod.call(this, value === 0 ? 0 : value);\n        return this;\n      } : KEY == 'delete' ? function (key) {\n        return IS_WEAK && !isObject(key) ? false : nativeMethod.call(this, key === 0 ? 0 : key);\n      } : KEY == 'get' ? function get(key) {\n        return IS_WEAK && !isObject(key) ? undefined : nativeMethod.call(this, key === 0 ? 0 : key);\n      } : KEY == 'has' ? function has(key) {\n        return IS_WEAK && !isObject(key) ? false : nativeMethod.call(this, key === 0 ? 0 : key);\n      } : function set(key, value) {\n        nativeMethod.call(this, key === 0 ? 0 : key, value);\n        return this;\n      }\n    );\n  };\n\n  // eslint-disable-next-line max-len\n  if (isForced(CONSTRUCTOR_NAME, typeof NativeConstructor != 'function' || !(IS_WEAK || NativePrototype.forEach && !fails(function () {\n    new NativeConstructor().entries().next();\n  })))) {\n    // create collection constructor\n    Constructor = common.getConstructor(wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER);\n    InternalMetadataModule.REQUIRED = true;\n  } else if (isForced(CONSTRUCTOR_NAME, true)) {\n    var instance = new Constructor();\n    // early implementations not supports chaining\n    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;\n    // V8 ~ Chromium 40- weak-collections throws on primitives, but should return false\n    var THROWS_ON_PRIMITIVES = fails(function () { instance.has(1); });\n    // most early implementations doesn't supports iterables, most modern - not close it correctly\n    // eslint-disable-next-line no-new\n    var ACCEPT_ITERABLES = checkCorrectnessOfIteration(function (iterable) { new NativeConstructor(iterable); });\n    // for early implementations -0 and +0 not the same\n    var BUGGY_ZERO = !IS_WEAK && fails(function () {\n      // V8 ~ Chromium 42- fails only with 5+ elements\n      var $instance = new NativeConstructor();\n      var index = 5;\n      while (index--) $instance[ADDER](index, index);\n      return !$instance.has(-0);\n    });\n\n    if (!ACCEPT_ITERABLES) {\n      Constructor = wrapper(function (dummy, iterable) {\n        anInstance(dummy, Constructor, CONSTRUCTOR_NAME);\n        var that = inheritIfRequired(new NativeConstructor(), dummy, Constructor);\n        if (iterable != undefined) iterate(iterable, that[ADDER], that, IS_MAP);\n        return that;\n      });\n      Constructor.prototype = NativePrototype;\n      NativePrototype.constructor = Constructor;\n    }\n\n    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {\n      fixMethod('delete');\n      fixMethod('has');\n      IS_MAP && fixMethod('get');\n    }\n\n    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);\n\n    // weak collections should not contains .clear method\n    if (IS_WEAK && NativePrototype.clear) delete NativePrototype.clear;\n  }\n\n  exported[CONSTRUCTOR_NAME] = Constructor;\n  $({ global: true, forced: Constructor != NativeConstructor }, exported);\n\n  setToStringTag(Constructor, CONSTRUCTOR_NAME);\n\n  if (!IS_WEAK) common.setStrong(Constructor, CONSTRUCTOR_NAME, IS_MAP);\n\n  return Constructor;\n};\n","export default \"# Ethereum中的程序\\n\\nEthereum 中的程序，由一个或者多个互相交互的 smart contract 组成。Smart contract 可以调用其他 smart contract 中的函数。单独的 contract，非常类似传统编程语言中的类。\\n\\nSmart contract 可以用 Ethereum 汇编，Solidity，Low-Level Lisp，或是 Serpent 编写。所有的 contract 都会被编译成 EVM 的字节码。当中，Solidity 是最常用的。\\n\\n将代码作为数据，以空地址 null 作为接收目标，这样的 transaction 用于 smart contract 的部署.\\n\\nEthereum 在设计阶段，它的创造者希望新的 smart contract 可以调用已经存在的 contract，实现绝大部分的功能。例如，如果 contract 需要对 string 进行操作，可以调用已经存在的 StringUtils 这个 contract，进行字符串的拼接，裁剪等等不是 Solidity 原生支持的操作。\\n\\n悲剧的是，这种风格的开发，需要在主网进行开发和调试，得花真金白银。作为替代的方案，开发者把 StringUtils 的代码复制到自己的项目当中，在私人网络中调用，最终把这个复制一起部署到网络中。\\n\\nSmart contract 自动暴露程序二进制接口，ABI，这个相当于 API 的字节码版本，二进制版本。ABI 包含所有的公共方法，不包含私有的，内部的函数，ABI 可以被外部账户调用，也可以被 contract 调用。\\n\";","// Proceess escaped chars and hardbreaks\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nvar ESCAPED = [];\n\nfor (var i = 0; i < 256; i++) { ESCAPED.push(0); }\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\n  .split('').forEach(function (ch) { ESCAPED[ch.charCodeAt(0)] = 1; });\n\n\nmodule.exports = function escape(state, silent) {\n  var ch, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) { return false; }\n\n  pos++;\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch < 256 && ESCAPED[ch] !== 0) {\n      if (!silent) { state.pending += state.src[pos]; }\n      state.pos += 2;\n      return true;\n    }\n\n    if (ch === 0x0A) {\n      if (!silent) {\n        state.push('hardbreak', 'br', 0);\n      }\n\n      pos++;\n      // skip leading whitespaces from next line\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n\n      state.pos = pos;\n      return true;\n    }\n  }\n\n  if (!silent) { state.pending += '\\\\'; }\n  state.pos++;\n  return true;\n};\n","/* eslint no-constant-condition:0 */\nvar functions = require(\"./functions\");\nvar environments = require(\"./environments\");\nvar Lexer = require(\"./Lexer\");\nvar symbols = require(\"./symbols\");\nvar utils = require(\"./utils\");\n\nvar parseData = require(\"./parseData\");\nvar ParseError = require(\"./ParseError\");\n\n/**\n * This file contains the parser used to parse out a TeX expression from the\n * input. Since TeX isn't context-free, standard parsers don't work particularly\n * well.\n *\n * The strategy of this parser is as such:\n *\n * The main functions (the `.parse...` ones) take a position in the current\n * parse string to parse tokens from. The lexer (found in Lexer.js, stored at\n * this.lexer) also supports pulling out tokens at arbitrary places. When\n * individual tokens are needed at a position, the lexer is called to pull out a\n * token, which is then used.\n *\n * The parser has a property called \"mode\" indicating the mode that\n * the parser is currently in. Currently it has to be one of \"math\" or\n * \"text\", which denotes whether the current environment is a math-y\n * one or a text-y one (e.g. inside \\text). Currently, this serves to\n * limit the functions which can be used in text mode.\n *\n * The main functions then return an object which contains the useful data that\n * was parsed at its given point, and a new position at the end of the parsed\n * data. The main functions can call each other and continue the parsing by\n * using the returned position as a new starting point.\n *\n * There are also extra `.handle...` functions, which pull out some reused\n * functionality into self-contained functions.\n *\n * The earlier functions return ParseNodes.\n * The later functions (which are called deeper in the parse) sometimes return\n * ParseFuncOrArgument, which contain a ParseNode as well as some data about\n * whether the parsed object is a function which is missing some arguments, or a\n * standalone object which can be used as an argument to another function.\n */\n\n/**\n * Main Parser class\n */\nfunction Parser(input, settings) {\n    // Make a new lexer\n    this.lexer = new Lexer(input);\n    // Store the settings for use in parsing\n    this.settings = settings;\n}\n\nvar ParseNode = parseData.ParseNode;\n\n/**\n * An initial function (without its arguments), or an argument to a function.\n * The `result` argument should be a ParseNode.\n */\nfunction ParseFuncOrArgument(result, isFunction) {\n    this.result = result;\n    // Is this a function (i.e. is it something defined in functions.js)?\n    this.isFunction = isFunction;\n}\n\n/**\n * Checks a result to make sure it has the right type, and throws an\n * appropriate error otherwise.\n *\n * @param {boolean=} consume whether to consume the expected token,\n *                           defaults to true\n */\nParser.prototype.expect = function(text, consume) {\n    if (this.nextToken.text !== text) {\n        throw new ParseError(\n            \"Expected '\" + text + \"', got '\" + this.nextToken.text + \"'\",\n            this.lexer, this.nextToken.position\n        );\n    }\n    if (consume !== false) {\n        this.consume();\n    }\n};\n\n/**\n * Considers the current look ahead token as consumed,\n * and fetches the one after that as the new look ahead.\n */\nParser.prototype.consume = function() {\n    this.pos = this.nextToken.position;\n    this.nextToken = this.lexer.lex(this.pos, this.mode);\n};\n\n/**\n * Main parsing function, which parses an entire input.\n *\n * @return {?Array.<ParseNode>}\n */\nParser.prototype.parse = function() {\n    // Try to parse the input\n    this.mode = \"math\";\n    this.pos = 0;\n    this.nextToken = this.lexer.lex(this.pos, this.mode);\n    var parse = this.parseInput();\n    return parse;\n};\n\n/**\n * Parses an entire input tree.\n */\nParser.prototype.parseInput = function() {\n    // Parse an expression\n    var expression = this.parseExpression(false);\n    // If we succeeded, make sure there's an EOF at the end\n    this.expect(\"EOF\", false);\n    return expression;\n};\n\nvar endOfExpression = [\"}\", \"\\\\end\", \"\\\\right\", \"&\", \"\\\\\\\\\", \"\\\\cr\"];\n\n/**\n * Parses an \"expression\", which is a list of atoms.\n *\n * @param {boolean} breakOnInfix Should the parsing stop when we hit infix\n *                  nodes? This happens when functions have higher precendence\n *                  than infix nodes in implicit parses.\n *\n * @param {?string} breakOnToken The token that the expression should end with,\n *                  or `null` if something else should end the expression.\n *\n * @return {ParseNode}\n */\nParser.prototype.parseExpression = function(breakOnInfix, breakOnToken) {\n    var body = [];\n    // Keep adding atoms to the body until we can't parse any more atoms (either\n    // we reached the end, a }, or a \\right)\n    while (true) {\n        var lex = this.nextToken;\n        var pos = this.pos;\n        if (endOfExpression.indexOf(lex.text) !== -1) {\n            break;\n        }\n        if (breakOnToken && lex.text === breakOnToken) {\n            break;\n        }\n        var atom = this.parseAtom();\n        if (!atom) {\n            if (!this.settings.throwOnError && lex.text[0] === \"\\\\\") {\n                var errorNode = this.handleUnsupportedCmd();\n                body.push(errorNode);\n\n                pos = lex.position;\n                continue;\n            }\n\n            break;\n        }\n        if (breakOnInfix && atom.type === \"infix\") {\n            // rewind so we can parse the infix atom again\n            this.pos = pos;\n            this.nextToken = lex;\n            break;\n        }\n        body.push(atom);\n    }\n    return this.handleInfixNodes(body);\n};\n\n/**\n * Rewrites infix operators such as \\over with corresponding commands such\n * as \\frac.\n *\n * There can only be one infix operator per group.  If there's more than one\n * then the expression is ambiguous.  This can be resolved by adding {}.\n *\n * @returns {Array}\n */\nParser.prototype.handleInfixNodes = function(body) {\n    var overIndex = -1;\n    var funcName;\n\n    for (var i = 0; i < body.length; i++) {\n        var node = body[i];\n        if (node.type === \"infix\") {\n            if (overIndex !== -1) {\n                throw new ParseError(\"only one infix operator per group\",\n                    this.lexer, -1);\n            }\n            overIndex = i;\n            funcName = node.value.replaceWith;\n        }\n    }\n\n    if (overIndex !== -1) {\n        var numerNode;\n        var denomNode;\n\n        var numerBody = body.slice(0, overIndex);\n        var denomBody = body.slice(overIndex + 1);\n\n        if (numerBody.length === 1 && numerBody[0].type === \"ordgroup\") {\n            numerNode = numerBody[0];\n        } else {\n            numerNode = new ParseNode(\"ordgroup\", numerBody, this.mode);\n        }\n\n        if (denomBody.length === 1 && denomBody[0].type === \"ordgroup\") {\n            denomNode = denomBody[0];\n        } else {\n            denomNode = new ParseNode(\"ordgroup\", denomBody, this.mode);\n        }\n\n        var value = this.callFunction(\n            funcName, [numerNode, denomNode], null);\n        return [new ParseNode(value.type, value, this.mode)];\n    } else {\n        return body;\n    }\n};\n\n// The greediness of a superscript or subscript\nvar SUPSUB_GREEDINESS = 1;\n\n/**\n * Handle a subscript or superscript with nice errors.\n */\nParser.prototype.handleSupSubscript = function(name) {\n    var symbol = this.nextToken.text;\n    var symPos = this.pos;\n    this.consume();\n    var group = this.parseGroup();\n\n    if (!group) {\n        if (!this.settings.throwOnError && this.nextToken.text[0] === \"\\\\\") {\n            return this.handleUnsupportedCmd();\n        } else {\n            throw new ParseError(\n                \"Expected group after '\" + symbol + \"'\",\n                this.lexer,\n                symPos + 1\n            );\n        }\n    } else if (group.isFunction) {\n        // ^ and _ have a greediness, so handle interactions with functions'\n        // greediness\n        var funcGreediness = functions[group.result].greediness;\n        if (funcGreediness > SUPSUB_GREEDINESS) {\n            return this.parseFunction(group);\n        } else {\n            throw new ParseError(\n                \"Got function '\" + group.result + \"' with no arguments \" +\n                    \"as \" + name,\n                this.lexer, symPos + 1);\n        }\n    } else {\n        return group.result;\n    }\n};\n\n/**\n * Converts the textual input of an unsupported command into a text node\n * contained within a color node whose color is determined by errorColor\n */\nParser.prototype.handleUnsupportedCmd = function() {\n    var text = this.nextToken.text;\n    var textordArray = [];\n\n    for (var i = 0; i < text.length; i++) {\n        textordArray.push(new ParseNode(\"textord\", text[i], \"text\"));\n    }\n\n    var textNode = new ParseNode(\n        \"text\",\n        {\n            body: textordArray,\n            type: \"text\",\n        },\n        this.mode);\n\n    var colorNode = new ParseNode(\n        \"color\",\n        {\n            color: this.settings.errorColor,\n            value: [textNode],\n            type: \"color\",\n        },\n        this.mode);\n\n    this.consume();\n    return colorNode;\n};\n\n/**\n * Parses a group with optional super/subscripts.\n *\n * @return {?ParseNode}\n */\nParser.prototype.parseAtom = function() {\n    // The body of an atom is an implicit group, so that things like\n    // \\left(x\\right)^2 work correctly.\n    var base = this.parseImplicitGroup();\n\n    // In text mode, we don't have superscripts or subscripts\n    if (this.mode === \"text\") {\n        return base;\n    }\n\n    // Note that base may be empty (i.e. null) at this point.\n\n    var superscript;\n    var subscript;\n    while (true) {\n        // Lex the first token\n        var lex = this.nextToken;\n\n        if (lex.text === \"\\\\limits\" || lex.text === \"\\\\nolimits\") {\n            // We got a limit control\n            if (!base || base.type !== \"op\") {\n                throw new ParseError(\n                    \"Limit controls must follow a math operator\",\n                    this.lexer, this.pos);\n            } else {\n                var limits = lex.text === \"\\\\limits\";\n                base.value.limits = limits;\n                base.value.alwaysHandleSupSub = true;\n            }\n            this.consume();\n        } else if (lex.text === \"^\") {\n            // We got a superscript start\n            if (superscript) {\n                throw new ParseError(\n                    \"Double superscript\", this.lexer, this.pos);\n            }\n            superscript = this.handleSupSubscript(\"superscript\");\n        } else if (lex.text === \"_\") {\n            // We got a subscript start\n            if (subscript) {\n                throw new ParseError(\n                    \"Double subscript\", this.lexer, this.pos);\n            }\n            subscript = this.handleSupSubscript(\"subscript\");\n        } else if (lex.text === \"'\") {\n            // We got a prime\n            var prime = new ParseNode(\"textord\", \"\\\\prime\", this.mode);\n\n            // Many primes can be grouped together, so we handle this here\n            var primes = [prime];\n            this.consume();\n            // Keep lexing tokens until we get something that's not a prime\n            while (this.nextToken.text === \"'\") {\n                // For each one, add another prime to the list\n                primes.push(prime);\n                this.consume();\n            }\n            // Put them into an ordgroup as the superscript\n            superscript = new ParseNode(\"ordgroup\", primes, this.mode);\n        } else {\n            // If it wasn't ^, _, or ', stop parsing super/subscripts\n            break;\n        }\n    }\n\n    if (superscript || subscript) {\n        // If we got either a superscript or subscript, create a supsub\n        return new ParseNode(\"supsub\", {\n            base: base,\n            sup: superscript,\n            sub: subscript,\n        }, this.mode);\n    } else {\n        // Otherwise return the original body\n        return base;\n    }\n};\n\n// A list of the size-changing functions, for use in parseImplicitGroup\nvar sizeFuncs = [\n    \"\\\\tiny\", \"\\\\scriptsize\", \"\\\\footnotesize\", \"\\\\small\", \"\\\\normalsize\",\n    \"\\\\large\", \"\\\\Large\", \"\\\\LARGE\", \"\\\\huge\", \"\\\\Huge\",\n];\n\n// A list of the style-changing functions, for use in parseImplicitGroup\nvar styleFuncs = [\n    \"\\\\displaystyle\", \"\\\\textstyle\", \"\\\\scriptstyle\", \"\\\\scriptscriptstyle\",\n];\n\n/**\n * Parses an implicit group, which is a group that starts at the end of a\n * specified, and ends right before a higher explicit group ends, or at EOL. It\n * is used for functions that appear to affect the current style, like \\Large or\n * \\textrm, where instead of keeping a style we just pretend that there is an\n * implicit grouping after it until the end of the group. E.g.\n *   small text {\\Large large text} small text again\n * It is also used for \\left and \\right to get the correct grouping.\n *\n * @return {?ParseNode}\n */\nParser.prototype.parseImplicitGroup = function() {\n    var start = this.parseSymbol();\n\n    if (start == null) {\n        // If we didn't get anything we handle, fall back to parseFunction\n        return this.parseFunction();\n    }\n\n    var func = start.result;\n    var body;\n\n    if (func === \"\\\\left\") {\n        // If we see a left:\n        // Parse the entire left function (including the delimiter)\n        var left = this.parseFunction(start);\n        // Parse out the implicit body\n        body = this.parseExpression(false);\n        // Check the next token\n        this.expect(\"\\\\right\", false);\n        var right = this.parseFunction();\n        return new ParseNode(\"leftright\", {\n            body: body,\n            left: left.value.value,\n            right: right.value.value,\n        }, this.mode);\n    } else if (func === \"\\\\begin\") {\n        // begin...end is similar to left...right\n        var begin = this.parseFunction(start);\n        var envName = begin.value.name;\n        if (!environments.hasOwnProperty(envName)) {\n            throw new ParseError(\n                \"No such environment: \" + envName,\n                this.lexer, begin.value.namepos);\n        }\n        // Build the environment object. Arguments and other information will\n        // be made available to the begin and end methods using properties.\n        var env = environments[envName];\n        var args = this.parseArguments(\"\\\\begin{\" + envName + \"}\", env);\n        var context = {\n            mode: this.mode,\n            envName: envName,\n            parser: this,\n            lexer: this.lexer,\n            positions: args.pop(),\n        };\n        var result = env.handler(context, args);\n        this.expect(\"\\\\end\", false);\n        var end = this.parseFunction();\n        if (end.value.name !== envName) {\n            throw new ParseError(\n                \"Mismatch: \\\\begin{\" + envName + \"} matched \" +\n                \"by \\\\end{\" + end.value.name + \"}\",\n                this.lexer /* , end.value.namepos */);\n            // TODO: Add position to the above line and adjust test case,\n            // requires #385 to get merged first\n        }\n        result.position = end.position;\n        return result;\n    } else if (utils.contains(sizeFuncs, func)) {\n        // If we see a sizing function, parse out the implict body\n        body = this.parseExpression(false);\n        return new ParseNode(\"sizing\", {\n            // Figure out what size to use based on the list of functions above\n            size: \"size\" + (utils.indexOf(sizeFuncs, func) + 1),\n            value: body,\n        }, this.mode);\n    } else if (utils.contains(styleFuncs, func)) {\n        // If we see a styling function, parse out the implict body\n        body = this.parseExpression(true);\n        return new ParseNode(\"styling\", {\n            // Figure out what style to use by pulling out the style from\n            // the function name\n            style: func.slice(1, func.length - 5),\n            value: body,\n        }, this.mode);\n    } else {\n        // Defer to parseFunction if it's not a function we handle\n        return this.parseFunction(start);\n    }\n};\n\n/**\n * Parses an entire function, including its base and all of its arguments.\n * The base might either have been parsed already, in which case\n * it is provided as an argument, or it's the next group in the input.\n *\n * @param {ParseFuncOrArgument=} baseGroup optional as described above\n * @return {?ParseNode}\n */\nParser.prototype.parseFunction = function(baseGroup) {\n    if (!baseGroup) {\n        baseGroup = this.parseGroup();\n    }\n\n    if (baseGroup) {\n        if (baseGroup.isFunction) {\n            var func = baseGroup.result;\n            var funcData = functions[func];\n            if (this.mode === \"text\" && !funcData.allowedInText) {\n                throw new ParseError(\n                    \"Can't use function '\" + func + \"' in text mode\",\n                    this.lexer, baseGroup.position);\n            }\n\n            var args = this.parseArguments(func, funcData);\n            var result = this.callFunction(func, args, args.pop());\n            return new ParseNode(result.type, result, this.mode);\n        } else {\n            return baseGroup.result;\n        }\n    } else {\n        return null;\n    }\n};\n\n/**\n * Call a function handler with a suitable context and arguments.\n */\nParser.prototype.callFunction = function(name, args, positions) {\n    var context = {\n        funcName: name,\n        parser: this,\n        lexer: this.lexer,\n        positions: positions,\n    };\n    return functions[name].handler(context, args);\n};\n\n/**\n * Parses the arguments of a function or environment\n *\n * @param {string} func  \"\\name\" or \"\\begin{name}\"\n * @param {{numArgs:number,numOptionalArgs:number|undefined}} funcData\n * @return the array of arguments, with the list of positions as last element\n */\nParser.prototype.parseArguments = function(func, funcData) {\n    var totalArgs = funcData.numArgs + funcData.numOptionalArgs;\n    if (totalArgs === 0) {\n        return [[this.pos]];\n    }\n\n    var baseGreediness = funcData.greediness;\n    var positions = [this.pos];\n    var args = [];\n\n    for (var i = 0; i < totalArgs; i++) {\n        var argType = funcData.argTypes && funcData.argTypes[i];\n        var arg;\n        if (i < funcData.numOptionalArgs) {\n            if (argType) {\n                arg = this.parseSpecialGroup(argType, true);\n            } else {\n                arg = this.parseOptionalGroup();\n            }\n            if (!arg) {\n                args.push(null);\n                positions.push(this.pos);\n                continue;\n            }\n        } else {\n            if (argType) {\n                arg = this.parseSpecialGroup(argType);\n            } else {\n                arg = this.parseGroup();\n            }\n            if (!arg) {\n                if (!this.settings.throwOnError &&\n                    this.nextToken.text[0] === \"\\\\\") {\n                    arg = new ParseFuncOrArgument(\n                        this.handleUnsupportedCmd(this.nextToken.text),\n                        false);\n                } else {\n                    throw new ParseError(\n                        \"Expected group after '\" + func + \"'\",\n                        this.lexer, this.pos);\n                }\n            }\n        }\n        var argNode;\n        if (arg.isFunction) {\n            var argGreediness =\n                functions[arg.result].greediness;\n            if (argGreediness > baseGreediness) {\n                argNode = this.parseFunction(arg);\n            } else {\n                throw new ParseError(\n                    \"Got function '\" + arg.result + \"' as \" +\n                    \"argument to '\" + func + \"'\",\n                    this.lexer, this.pos - 1);\n            }\n        } else {\n            argNode = arg.result;\n        }\n        args.push(argNode);\n        positions.push(this.pos);\n    }\n\n    args.push(positions);\n\n    return args;\n};\n\n\n/**\n * Parses a group when the mode is changing. Takes a position, a new mode, and\n * an outer mode that is used to parse the outside.\n *\n * @return {?ParseFuncOrArgument}\n */\nParser.prototype.parseSpecialGroup = function(innerMode, optional) {\n    var outerMode = this.mode;\n    // Handle `original` argTypes\n    if (innerMode === \"original\") {\n        innerMode = outerMode;\n    }\n\n    if (innerMode === \"color\" || innerMode === \"size\") {\n        // color and size modes are special because they should have braces and\n        // should only lex a single symbol inside\n        var openBrace = this.nextToken;\n        if (optional && openBrace.text !== \"[\") {\n            // optional arguments should return null if they don't exist\n            return null;\n        }\n        // The call to expect will lex the token after the '{' in inner mode\n        this.mode = innerMode;\n        this.expect(optional ? \"[\" : \"{\");\n        var inner = this.nextToken;\n        this.mode = outerMode;\n        var data;\n        if (innerMode === \"color\") {\n            data = inner.text;\n        } else {\n            data = inner.data;\n        }\n        this.consume(); // consume the token stored in inner\n        this.expect(optional ? \"]\" : \"}\");\n        return new ParseFuncOrArgument(\n            new ParseNode(innerMode, data, outerMode),\n            false);\n    } else if (innerMode === \"text\") {\n        // text mode is special because it should ignore the whitespace before\n        // it\n        var whitespace = this.lexer.lex(this.pos, \"whitespace\");\n        this.pos = whitespace.position;\n    }\n\n    // By the time we get here, innerMode is one of \"text\" or \"math\".\n    // We switch the mode of the parser, recurse, then restore the old mode.\n    this.mode = innerMode;\n    this.nextToken = this.lexer.lex(this.pos, innerMode);\n    var res;\n    if (optional) {\n        res = this.parseOptionalGroup();\n    } else {\n        res = this.parseGroup();\n    }\n    this.mode = outerMode;\n    this.nextToken = this.lexer.lex(this.pos, outerMode);\n    return res;\n};\n\n/**\n * Parses a group, which is either a single nucleus (like \"x\") or an expression\n * in braces (like \"{x+y}\")\n *\n * @return {?ParseFuncOrArgument}\n */\nParser.prototype.parseGroup = function() {\n    // Try to parse an open brace\n    if (this.nextToken.text === \"{\") {\n        // If we get a brace, parse an expression\n        this.consume();\n        var expression = this.parseExpression(false);\n        // Make sure we get a close brace\n        this.expect(\"}\");\n        return new ParseFuncOrArgument(\n            new ParseNode(\"ordgroup\", expression, this.mode),\n            false);\n    } else {\n        // Otherwise, just return a nucleus\n        return this.parseSymbol();\n    }\n};\n\n/**\n * Parses a group, which is an expression in brackets (like \"[x+y]\")\n *\n * @return {?ParseFuncOrArgument}\n */\nParser.prototype.parseOptionalGroup = function() {\n    // Try to parse an open bracket\n    if (this.nextToken.text === \"[\") {\n        // If we get a brace, parse an expression\n        this.consume();\n        var expression = this.parseExpression(false, \"]\");\n        // Make sure we get a close bracket\n        this.expect(\"]\");\n        return new ParseFuncOrArgument(\n            new ParseNode(\"ordgroup\", expression, this.mode),\n            false);\n    } else {\n        // Otherwise, return null,\n        return null;\n    }\n};\n\n/**\n * Parse a single symbol out of the string. Here, we handle both the functions\n * we have defined, as well as the single character symbols\n *\n * @return {?ParseFuncOrArgument}\n */\nParser.prototype.parseSymbol = function() {\n    var nucleus = this.nextToken;\n\n    if (functions[nucleus.text]) {\n        this.consume();\n        // If there exists a function with this name, we return the function and\n        // say that it is a function.\n        return new ParseFuncOrArgument(\n            nucleus.text,\n            true);\n    } else if (symbols[this.mode][nucleus.text]) {\n        this.consume();\n        // Otherwise if this is a no-argument function, find the type it\n        // corresponds to in the symbols map\n        return new ParseFuncOrArgument(\n            new ParseNode(symbols[this.mode][nucleus.text].group,\n                          nucleus.text, this.mode),\n            false);\n    } else {\n        return null;\n    }\n};\n\nParser.prototype.ParseNode = ParseNode;\n\nmodule.exports = Parser;\n","module.exports=/[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/","// Core state object\n//\n'use strict';\n\nvar Token = require('../token');\n\n\nfunction StateCore(src, md, env) {\n  this.src = src;\n  this.env = env;\n  this.tokens = [];\n  this.inlineMode = false;\n  this.md = md; // link to parser instance\n}\n\n// re-export Token class to use in core rules\nStateCore.prototype.Token = Token;\n\n\nmodule.exports = StateCore;\n","var isObject = require('../internals/is-object');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\n\n// makes subclassing work correct for wrapped built-ins\nmodule.exports = function ($this, dummy, Wrapper) {\n  var NewTarget, NewTargetPrototype;\n  if (\n    // it can work only with native `setPrototypeOf`\n    setPrototypeOf &&\n    // we haven't completely correct pre-ES6 way for getting `new.target`, so use this\n    typeof (NewTarget = dummy.constructor) == 'function' &&\n    NewTarget !== Wrapper &&\n    isObject(NewTargetPrototype = NewTarget.prototype) &&\n    NewTargetPrototype !== Wrapper.prototype\n  ) setPrototypeOf($this, NewTargetPrototype);\n  return $this;\n};\n","import { render, staticRenderFns } from \"./Article.vue?vue&type=template&id=abab3c10&\"\nimport script from \"./Article.vue?vue&type=script&lang=ts&\"\nexport * from \"./Article.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Article.vue?vue&type=style&index=0&lang=postcss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","module.exports = {\n    \"AMS-Regular\": {\n        \"65\": [0, 0.68889, 0, 0],\n        \"66\": [0, 0.68889, 0, 0],\n        \"67\": [0, 0.68889, 0, 0],\n        \"68\": [0, 0.68889, 0, 0],\n        \"69\": [0, 0.68889, 0, 0],\n        \"70\": [0, 0.68889, 0, 0],\n        \"71\": [0, 0.68889, 0, 0],\n        \"72\": [0, 0.68889, 0, 0],\n        \"73\": [0, 0.68889, 0, 0],\n        \"74\": [0.16667, 0.68889, 0, 0],\n        \"75\": [0, 0.68889, 0, 0],\n        \"76\": [0, 0.68889, 0, 0],\n        \"77\": [0, 0.68889, 0, 0],\n        \"78\": [0, 0.68889, 0, 0],\n        \"79\": [0.16667, 0.68889, 0, 0],\n        \"80\": [0, 0.68889, 0, 0],\n        \"81\": [0.16667, 0.68889, 0, 0],\n        \"82\": [0, 0.68889, 0, 0],\n        \"83\": [0, 0.68889, 0, 0],\n        \"84\": [0, 0.68889, 0, 0],\n        \"85\": [0, 0.68889, 0, 0],\n        \"86\": [0, 0.68889, 0, 0],\n        \"87\": [0, 0.68889, 0, 0],\n        \"88\": [0, 0.68889, 0, 0],\n        \"89\": [0, 0.68889, 0, 0],\n        \"90\": [0, 0.68889, 0, 0],\n        \"107\": [0, 0.68889, 0, 0],\n        \"165\": [0, 0.675, 0.025, 0],\n        \"174\": [0.15559, 0.69224, 0, 0],\n        \"240\": [0, 0.68889, 0, 0],\n        \"295\": [0, 0.68889, 0, 0],\n        \"710\": [0, 0.825, 0, 0],\n        \"732\": [0, 0.9, 0, 0],\n        \"770\": [0, 0.825, 0, 0],\n        \"771\": [0, 0.9, 0, 0],\n        \"989\": [0.08167, 0.58167, 0, 0],\n        \"1008\": [0, 0.43056, 0.04028, 0],\n        \"8245\": [0, 0.54986, 0, 0],\n        \"8463\": [0, 0.68889, 0, 0],\n        \"8487\": [0, 0.68889, 0, 0],\n        \"8498\": [0, 0.68889, 0, 0],\n        \"8502\": [0, 0.68889, 0, 0],\n        \"8503\": [0, 0.68889, 0, 0],\n        \"8504\": [0, 0.68889, 0, 0],\n        \"8513\": [0, 0.68889, 0, 0],\n        \"8592\": [-0.03598, 0.46402, 0, 0],\n        \"8594\": [-0.03598, 0.46402, 0, 0],\n        \"8602\": [-0.13313, 0.36687, 0, 0],\n        \"8603\": [-0.13313, 0.36687, 0, 0],\n        \"8606\": [0.01354, 0.52239, 0, 0],\n        \"8608\": [0.01354, 0.52239, 0, 0],\n        \"8610\": [0.01354, 0.52239, 0, 0],\n        \"8611\": [0.01354, 0.52239, 0, 0],\n        \"8619\": [0, 0.54986, 0, 0],\n        \"8620\": [0, 0.54986, 0, 0],\n        \"8621\": [-0.13313, 0.37788, 0, 0],\n        \"8622\": [-0.13313, 0.36687, 0, 0],\n        \"8624\": [0, 0.69224, 0, 0],\n        \"8625\": [0, 0.69224, 0, 0],\n        \"8630\": [0, 0.43056, 0, 0],\n        \"8631\": [0, 0.43056, 0, 0],\n        \"8634\": [0.08198, 0.58198, 0, 0],\n        \"8635\": [0.08198, 0.58198, 0, 0],\n        \"8638\": [0.19444, 0.69224, 0, 0],\n        \"8639\": [0.19444, 0.69224, 0, 0],\n        \"8642\": [0.19444, 0.69224, 0, 0],\n        \"8643\": [0.19444, 0.69224, 0, 0],\n        \"8644\": [0.1808, 0.675, 0, 0],\n        \"8646\": [0.1808, 0.675, 0, 0],\n        \"8647\": [0.1808, 0.675, 0, 0],\n        \"8648\": [0.19444, 0.69224, 0, 0],\n        \"8649\": [0.1808, 0.675, 0, 0],\n        \"8650\": [0.19444, 0.69224, 0, 0],\n        \"8651\": [0.01354, 0.52239, 0, 0],\n        \"8652\": [0.01354, 0.52239, 0, 0],\n        \"8653\": [-0.13313, 0.36687, 0, 0],\n        \"8654\": [-0.13313, 0.36687, 0, 0],\n        \"8655\": [-0.13313, 0.36687, 0, 0],\n        \"8666\": [0.13667, 0.63667, 0, 0],\n        \"8667\": [0.13667, 0.63667, 0, 0],\n        \"8669\": [-0.13313, 0.37788, 0, 0],\n        \"8672\": [-0.064, 0.437, 0, 0],\n        \"8674\": [-0.064, 0.437, 0, 0],\n        \"8705\": [0, 0.825, 0, 0],\n        \"8708\": [0, 0.68889, 0, 0],\n        \"8709\": [0.08167, 0.58167, 0, 0],\n        \"8717\": [0, 0.43056, 0, 0],\n        \"8722\": [-0.03598, 0.46402, 0, 0],\n        \"8724\": [0.08198, 0.69224, 0, 0],\n        \"8726\": [0.08167, 0.58167, 0, 0],\n        \"8733\": [0, 0.69224, 0, 0],\n        \"8736\": [0, 0.69224, 0, 0],\n        \"8737\": [0, 0.69224, 0, 0],\n        \"8738\": [0.03517, 0.52239, 0, 0],\n        \"8739\": [0.08167, 0.58167, 0, 0],\n        \"8740\": [0.25142, 0.74111, 0, 0],\n        \"8741\": [0.08167, 0.58167, 0, 0],\n        \"8742\": [0.25142, 0.74111, 0, 0],\n        \"8756\": [0, 0.69224, 0, 0],\n        \"8757\": [0, 0.69224, 0, 0],\n        \"8764\": [-0.13313, 0.36687, 0, 0],\n        \"8765\": [-0.13313, 0.37788, 0, 0],\n        \"8769\": [-0.13313, 0.36687, 0, 0],\n        \"8770\": [-0.03625, 0.46375, 0, 0],\n        \"8774\": [0.30274, 0.79383, 0, 0],\n        \"8776\": [-0.01688, 0.48312, 0, 0],\n        \"8778\": [0.08167, 0.58167, 0, 0],\n        \"8782\": [0.06062, 0.54986, 0, 0],\n        \"8783\": [0.06062, 0.54986, 0, 0],\n        \"8785\": [0.08198, 0.58198, 0, 0],\n        \"8786\": [0.08198, 0.58198, 0, 0],\n        \"8787\": [0.08198, 0.58198, 0, 0],\n        \"8790\": [0, 0.69224, 0, 0],\n        \"8791\": [0.22958, 0.72958, 0, 0],\n        \"8796\": [0.08198, 0.91667, 0, 0],\n        \"8806\": [0.25583, 0.75583, 0, 0],\n        \"8807\": [0.25583, 0.75583, 0, 0],\n        \"8808\": [0.25142, 0.75726, 0, 0],\n        \"8809\": [0.25142, 0.75726, 0, 0],\n        \"8812\": [0.25583, 0.75583, 0, 0],\n        \"8814\": [0.20576, 0.70576, 0, 0],\n        \"8815\": [0.20576, 0.70576, 0, 0],\n        \"8816\": [0.30274, 0.79383, 0, 0],\n        \"8817\": [0.30274, 0.79383, 0, 0],\n        \"8818\": [0.22958, 0.72958, 0, 0],\n        \"8819\": [0.22958, 0.72958, 0, 0],\n        \"8822\": [0.1808, 0.675, 0, 0],\n        \"8823\": [0.1808, 0.675, 0, 0],\n        \"8828\": [0.13667, 0.63667, 0, 0],\n        \"8829\": [0.13667, 0.63667, 0, 0],\n        \"8830\": [0.22958, 0.72958, 0, 0],\n        \"8831\": [0.22958, 0.72958, 0, 0],\n        \"8832\": [0.20576, 0.70576, 0, 0],\n        \"8833\": [0.20576, 0.70576, 0, 0],\n        \"8840\": [0.30274, 0.79383, 0, 0],\n        \"8841\": [0.30274, 0.79383, 0, 0],\n        \"8842\": [0.13597, 0.63597, 0, 0],\n        \"8843\": [0.13597, 0.63597, 0, 0],\n        \"8847\": [0.03517, 0.54986, 0, 0],\n        \"8848\": [0.03517, 0.54986, 0, 0],\n        \"8858\": [0.08198, 0.58198, 0, 0],\n        \"8859\": [0.08198, 0.58198, 0, 0],\n        \"8861\": [0.08198, 0.58198, 0, 0],\n        \"8862\": [0, 0.675, 0, 0],\n        \"8863\": [0, 0.675, 0, 0],\n        \"8864\": [0, 0.675, 0, 0],\n        \"8865\": [0, 0.675, 0, 0],\n        \"8872\": [0, 0.69224, 0, 0],\n        \"8873\": [0, 0.69224, 0, 0],\n        \"8874\": [0, 0.69224, 0, 0],\n        \"8876\": [0, 0.68889, 0, 0],\n        \"8877\": [0, 0.68889, 0, 0],\n        \"8878\": [0, 0.68889, 0, 0],\n        \"8879\": [0, 0.68889, 0, 0],\n        \"8882\": [0.03517, 0.54986, 0, 0],\n        \"8883\": [0.03517, 0.54986, 0, 0],\n        \"8884\": [0.13667, 0.63667, 0, 0],\n        \"8885\": [0.13667, 0.63667, 0, 0],\n        \"8888\": [0, 0.54986, 0, 0],\n        \"8890\": [0.19444, 0.43056, 0, 0],\n        \"8891\": [0.19444, 0.69224, 0, 0],\n        \"8892\": [0.19444, 0.69224, 0, 0],\n        \"8901\": [0, 0.54986, 0, 0],\n        \"8903\": [0.08167, 0.58167, 0, 0],\n        \"8905\": [0.08167, 0.58167, 0, 0],\n        \"8906\": [0.08167, 0.58167, 0, 0],\n        \"8907\": [0, 0.69224, 0, 0],\n        \"8908\": [0, 0.69224, 0, 0],\n        \"8909\": [-0.03598, 0.46402, 0, 0],\n        \"8910\": [0, 0.54986, 0, 0],\n        \"8911\": [0, 0.54986, 0, 0],\n        \"8912\": [0.03517, 0.54986, 0, 0],\n        \"8913\": [0.03517, 0.54986, 0, 0],\n        \"8914\": [0, 0.54986, 0, 0],\n        \"8915\": [0, 0.54986, 0, 0],\n        \"8916\": [0, 0.69224, 0, 0],\n        \"8918\": [0.0391, 0.5391, 0, 0],\n        \"8919\": [0.0391, 0.5391, 0, 0],\n        \"8920\": [0.03517, 0.54986, 0, 0],\n        \"8921\": [0.03517, 0.54986, 0, 0],\n        \"8922\": [0.38569, 0.88569, 0, 0],\n        \"8923\": [0.38569, 0.88569, 0, 0],\n        \"8926\": [0.13667, 0.63667, 0, 0],\n        \"8927\": [0.13667, 0.63667, 0, 0],\n        \"8928\": [0.30274, 0.79383, 0, 0],\n        \"8929\": [0.30274, 0.79383, 0, 0],\n        \"8934\": [0.23222, 0.74111, 0, 0],\n        \"8935\": [0.23222, 0.74111, 0, 0],\n        \"8936\": [0.23222, 0.74111, 0, 0],\n        \"8937\": [0.23222, 0.74111, 0, 0],\n        \"8938\": [0.20576, 0.70576, 0, 0],\n        \"8939\": [0.20576, 0.70576, 0, 0],\n        \"8940\": [0.30274, 0.79383, 0, 0],\n        \"8941\": [0.30274, 0.79383, 0, 0],\n        \"8994\": [0.19444, 0.69224, 0, 0],\n        \"8995\": [0.19444, 0.69224, 0, 0],\n        \"9416\": [0.15559, 0.69224, 0, 0],\n        \"9484\": [0, 0.69224, 0, 0],\n        \"9488\": [0, 0.69224, 0, 0],\n        \"9492\": [0, 0.37788, 0, 0],\n        \"9496\": [0, 0.37788, 0, 0],\n        \"9585\": [0.19444, 0.68889, 0, 0],\n        \"9586\": [0.19444, 0.74111, 0, 0],\n        \"9632\": [0, 0.675, 0, 0],\n        \"9633\": [0, 0.675, 0, 0],\n        \"9650\": [0, 0.54986, 0, 0],\n        \"9651\": [0, 0.54986, 0, 0],\n        \"9654\": [0.03517, 0.54986, 0, 0],\n        \"9660\": [0, 0.54986, 0, 0],\n        \"9661\": [0, 0.54986, 0, 0],\n        \"9664\": [0.03517, 0.54986, 0, 0],\n        \"9674\": [0.11111, 0.69224, 0, 0],\n        \"9733\": [0.19444, 0.69224, 0, 0],\n        \"10003\": [0, 0.69224, 0, 0],\n        \"10016\": [0, 0.69224, 0, 0],\n        \"10731\": [0.11111, 0.69224, 0, 0],\n        \"10846\": [0.19444, 0.75583, 0, 0],\n        \"10877\": [0.13667, 0.63667, 0, 0],\n        \"10878\": [0.13667, 0.63667, 0, 0],\n        \"10885\": [0.25583, 0.75583, 0, 0],\n        \"10886\": [0.25583, 0.75583, 0, 0],\n        \"10887\": [0.13597, 0.63597, 0, 0],\n        \"10888\": [0.13597, 0.63597, 0, 0],\n        \"10889\": [0.26167, 0.75726, 0, 0],\n        \"10890\": [0.26167, 0.75726, 0, 0],\n        \"10891\": [0.48256, 0.98256, 0, 0],\n        \"10892\": [0.48256, 0.98256, 0, 0],\n        \"10901\": [0.13667, 0.63667, 0, 0],\n        \"10902\": [0.13667, 0.63667, 0, 0],\n        \"10933\": [0.25142, 0.75726, 0, 0],\n        \"10934\": [0.25142, 0.75726, 0, 0],\n        \"10935\": [0.26167, 0.75726, 0, 0],\n        \"10936\": [0.26167, 0.75726, 0, 0],\n        \"10937\": [0.26167, 0.75726, 0, 0],\n        \"10938\": [0.26167, 0.75726, 0, 0],\n        \"10949\": [0.25583, 0.75583, 0, 0],\n        \"10950\": [0.25583, 0.75583, 0, 0],\n        \"10955\": [0.28481, 0.79383, 0, 0],\n        \"10956\": [0.28481, 0.79383, 0, 0],\n        \"57350\": [0.08167, 0.58167, 0, 0],\n        \"57351\": [0.08167, 0.58167, 0, 0],\n        \"57352\": [0.08167, 0.58167, 0, 0],\n        \"57353\": [0, 0.43056, 0.04028, 0],\n        \"57356\": [0.25142, 0.75726, 0, 0],\n        \"57357\": [0.25142, 0.75726, 0, 0],\n        \"57358\": [0.41951, 0.91951, 0, 0],\n        \"57359\": [0.30274, 0.79383, 0, 0],\n        \"57360\": [0.30274, 0.79383, 0, 0],\n        \"57361\": [0.41951, 0.91951, 0, 0],\n        \"57366\": [0.25142, 0.75726, 0, 0],\n        \"57367\": [0.25142, 0.75726, 0, 0],\n        \"57368\": [0.25142, 0.75726, 0, 0],\n        \"57369\": [0.25142, 0.75726, 0, 0],\n        \"57370\": [0.13597, 0.63597, 0, 0],\n        \"57371\": [0.13597, 0.63597, 0, 0],\n    },\n    \"Caligraphic-Regular\": {\n        \"48\": [0, 0.43056, 0, 0],\n        \"49\": [0, 0.43056, 0, 0],\n        \"50\": [0, 0.43056, 0, 0],\n        \"51\": [0.19444, 0.43056, 0, 0],\n        \"52\": [0.19444, 0.43056, 0, 0],\n        \"53\": [0.19444, 0.43056, 0, 0],\n        \"54\": [0, 0.64444, 0, 0],\n        \"55\": [0.19444, 0.43056, 0, 0],\n        \"56\": [0, 0.64444, 0, 0],\n        \"57\": [0.19444, 0.43056, 0, 0],\n        \"65\": [0, 0.68333, 0, 0.19445],\n        \"66\": [0, 0.68333, 0.03041, 0.13889],\n        \"67\": [0, 0.68333, 0.05834, 0.13889],\n        \"68\": [0, 0.68333, 0.02778, 0.08334],\n        \"69\": [0, 0.68333, 0.08944, 0.11111],\n        \"70\": [0, 0.68333, 0.09931, 0.11111],\n        \"71\": [0.09722, 0.68333, 0.0593, 0.11111],\n        \"72\": [0, 0.68333, 0.00965, 0.11111],\n        \"73\": [0, 0.68333, 0.07382, 0],\n        \"74\": [0.09722, 0.68333, 0.18472, 0.16667],\n        \"75\": [0, 0.68333, 0.01445, 0.05556],\n        \"76\": [0, 0.68333, 0, 0.13889],\n        \"77\": [0, 0.68333, 0, 0.13889],\n        \"78\": [0, 0.68333, 0.14736, 0.08334],\n        \"79\": [0, 0.68333, 0.02778, 0.11111],\n        \"80\": [0, 0.68333, 0.08222, 0.08334],\n        \"81\": [0.09722, 0.68333, 0, 0.11111],\n        \"82\": [0, 0.68333, 0, 0.08334],\n        \"83\": [0, 0.68333, 0.075, 0.13889],\n        \"84\": [0, 0.68333, 0.25417, 0],\n        \"85\": [0, 0.68333, 0.09931, 0.08334],\n        \"86\": [0, 0.68333, 0.08222, 0],\n        \"87\": [0, 0.68333, 0.08222, 0.08334],\n        \"88\": [0, 0.68333, 0.14643, 0.13889],\n        \"89\": [0.09722, 0.68333, 0.08222, 0.08334],\n        \"90\": [0, 0.68333, 0.07944, 0.13889],\n    },\n    \"Fraktur-Regular\": {\n        \"33\": [0, 0.69141, 0, 0],\n        \"34\": [0, 0.69141, 0, 0],\n        \"38\": [0, 0.69141, 0, 0],\n        \"39\": [0, 0.69141, 0, 0],\n        \"40\": [0.24982, 0.74947, 0, 0],\n        \"41\": [0.24982, 0.74947, 0, 0],\n        \"42\": [0, 0.62119, 0, 0],\n        \"43\": [0.08319, 0.58283, 0, 0],\n        \"44\": [0, 0.10803, 0, 0],\n        \"45\": [0.08319, 0.58283, 0, 0],\n        \"46\": [0, 0.10803, 0, 0],\n        \"47\": [0.24982, 0.74947, 0, 0],\n        \"48\": [0, 0.47534, 0, 0],\n        \"49\": [0, 0.47534, 0, 0],\n        \"50\": [0, 0.47534, 0, 0],\n        \"51\": [0.18906, 0.47534, 0, 0],\n        \"52\": [0.18906, 0.47534, 0, 0],\n        \"53\": [0.18906, 0.47534, 0, 0],\n        \"54\": [0, 0.69141, 0, 0],\n        \"55\": [0.18906, 0.47534, 0, 0],\n        \"56\": [0, 0.69141, 0, 0],\n        \"57\": [0.18906, 0.47534, 0, 0],\n        \"58\": [0, 0.47534, 0, 0],\n        \"59\": [0.12604, 0.47534, 0, 0],\n        \"61\": [-0.13099, 0.36866, 0, 0],\n        \"63\": [0, 0.69141, 0, 0],\n        \"65\": [0, 0.69141, 0, 0],\n        \"66\": [0, 0.69141, 0, 0],\n        \"67\": [0, 0.69141, 0, 0],\n        \"68\": [0, 0.69141, 0, 0],\n        \"69\": [0, 0.69141, 0, 0],\n        \"70\": [0.12604, 0.69141, 0, 0],\n        \"71\": [0, 0.69141, 0, 0],\n        \"72\": [0.06302, 0.69141, 0, 0],\n        \"73\": [0, 0.69141, 0, 0],\n        \"74\": [0.12604, 0.69141, 0, 0],\n        \"75\": [0, 0.69141, 0, 0],\n        \"76\": [0, 0.69141, 0, 0],\n        \"77\": [0, 0.69141, 0, 0],\n        \"78\": [0, 0.69141, 0, 0],\n        \"79\": [0, 0.69141, 0, 0],\n        \"80\": [0.18906, 0.69141, 0, 0],\n        \"81\": [0.03781, 0.69141, 0, 0],\n        \"82\": [0, 0.69141, 0, 0],\n        \"83\": [0, 0.69141, 0, 0],\n        \"84\": [0, 0.69141, 0, 0],\n        \"85\": [0, 0.69141, 0, 0],\n        \"86\": [0, 0.69141, 0, 0],\n        \"87\": [0, 0.69141, 0, 0],\n        \"88\": [0, 0.69141, 0, 0],\n        \"89\": [0.18906, 0.69141, 0, 0],\n        \"90\": [0.12604, 0.69141, 0, 0],\n        \"91\": [0.24982, 0.74947, 0, 0],\n        \"93\": [0.24982, 0.74947, 0, 0],\n        \"94\": [0, 0.69141, 0, 0],\n        \"97\": [0, 0.47534, 0, 0],\n        \"98\": [0, 0.69141, 0, 0],\n        \"99\": [0, 0.47534, 0, 0],\n        \"100\": [0, 0.62119, 0, 0],\n        \"101\": [0, 0.47534, 0, 0],\n        \"102\": [0.18906, 0.69141, 0, 0],\n        \"103\": [0.18906, 0.47534, 0, 0],\n        \"104\": [0.18906, 0.69141, 0, 0],\n        \"105\": [0, 0.69141, 0, 0],\n        \"106\": [0, 0.69141, 0, 0],\n        \"107\": [0, 0.69141, 0, 0],\n        \"108\": [0, 0.69141, 0, 0],\n        \"109\": [0, 0.47534, 0, 0],\n        \"110\": [0, 0.47534, 0, 0],\n        \"111\": [0, 0.47534, 0, 0],\n        \"112\": [0.18906, 0.52396, 0, 0],\n        \"113\": [0.18906, 0.47534, 0, 0],\n        \"114\": [0, 0.47534, 0, 0],\n        \"115\": [0, 0.47534, 0, 0],\n        \"116\": [0, 0.62119, 0, 0],\n        \"117\": [0, 0.47534, 0, 0],\n        \"118\": [0, 0.52396, 0, 0],\n        \"119\": [0, 0.52396, 0, 0],\n        \"120\": [0.18906, 0.47534, 0, 0],\n        \"121\": [0.18906, 0.47534, 0, 0],\n        \"122\": [0.18906, 0.47534, 0, 0],\n        \"8216\": [0, 0.69141, 0, 0],\n        \"8217\": [0, 0.69141, 0, 0],\n        \"58112\": [0, 0.62119, 0, 0],\n        \"58113\": [0, 0.62119, 0, 0],\n        \"58114\": [0.18906, 0.69141, 0, 0],\n        \"58115\": [0.18906, 0.69141, 0, 0],\n        \"58116\": [0.18906, 0.47534, 0, 0],\n        \"58117\": [0, 0.69141, 0, 0],\n        \"58118\": [0, 0.62119, 0, 0],\n        \"58119\": [0, 0.47534, 0, 0],\n    },\n    \"Main-Bold\": {\n        \"33\": [0, 0.69444, 0, 0],\n        \"34\": [0, 0.69444, 0, 0],\n        \"35\": [0.19444, 0.69444, 0, 0],\n        \"36\": [0.05556, 0.75, 0, 0],\n        \"37\": [0.05556, 0.75, 0, 0],\n        \"38\": [0, 0.69444, 0, 0],\n        \"39\": [0, 0.69444, 0, 0],\n        \"40\": [0.25, 0.75, 0, 0],\n        \"41\": [0.25, 0.75, 0, 0],\n        \"42\": [0, 0.75, 0, 0],\n        \"43\": [0.13333, 0.63333, 0, 0],\n        \"44\": [0.19444, 0.15556, 0, 0],\n        \"45\": [0, 0.44444, 0, 0],\n        \"46\": [0, 0.15556, 0, 0],\n        \"47\": [0.25, 0.75, 0, 0],\n        \"48\": [0, 0.64444, 0, 0],\n        \"49\": [0, 0.64444, 0, 0],\n        \"50\": [0, 0.64444, 0, 0],\n        \"51\": [0, 0.64444, 0, 0],\n        \"52\": [0, 0.64444, 0, 0],\n        \"53\": [0, 0.64444, 0, 0],\n        \"54\": [0, 0.64444, 0, 0],\n        \"55\": [0, 0.64444, 0, 0],\n        \"56\": [0, 0.64444, 0, 0],\n        \"57\": [0, 0.64444, 0, 0],\n        \"58\": [0, 0.44444, 0, 0],\n        \"59\": [0.19444, 0.44444, 0, 0],\n        \"60\": [0.08556, 0.58556, 0, 0],\n        \"61\": [-0.10889, 0.39111, 0, 0],\n        \"62\": [0.08556, 0.58556, 0, 0],\n        \"63\": [0, 0.69444, 0, 0],\n        \"64\": [0, 0.69444, 0, 0],\n        \"65\": [0, 0.68611, 0, 0],\n        \"66\": [0, 0.68611, 0, 0],\n        \"67\": [0, 0.68611, 0, 0],\n        \"68\": [0, 0.68611, 0, 0],\n        \"69\": [0, 0.68611, 0, 0],\n        \"70\": [0, 0.68611, 0, 0],\n        \"71\": [0, 0.68611, 0, 0],\n        \"72\": [0, 0.68611, 0, 0],\n        \"73\": [0, 0.68611, 0, 0],\n        \"74\": [0, 0.68611, 0, 0],\n        \"75\": [0, 0.68611, 0, 0],\n        \"76\": [0, 0.68611, 0, 0],\n        \"77\": [0, 0.68611, 0, 0],\n        \"78\": [0, 0.68611, 0, 0],\n        \"79\": [0, 0.68611, 0, 0],\n        \"80\": [0, 0.68611, 0, 0],\n        \"81\": [0.19444, 0.68611, 0, 0],\n        \"82\": [0, 0.68611, 0, 0],\n        \"83\": [0, 0.68611, 0, 0],\n        \"84\": [0, 0.68611, 0, 0],\n        \"85\": [0, 0.68611, 0, 0],\n        \"86\": [0, 0.68611, 0.01597, 0],\n        \"87\": [0, 0.68611, 0.01597, 0],\n        \"88\": [0, 0.68611, 0, 0],\n        \"89\": [0, 0.68611, 0.02875, 0],\n        \"90\": [0, 0.68611, 0, 0],\n        \"91\": [0.25, 0.75, 0, 0],\n        \"92\": [0.25, 0.75, 0, 0],\n        \"93\": [0.25, 0.75, 0, 0],\n        \"94\": [0, 0.69444, 0, 0],\n        \"95\": [0.31, 0.13444, 0.03194, 0],\n        \"96\": [0, 0.69444, 0, 0],\n        \"97\": [0, 0.44444, 0, 0],\n        \"98\": [0, 0.69444, 0, 0],\n        \"99\": [0, 0.44444, 0, 0],\n        \"100\": [0, 0.69444, 0, 0],\n        \"101\": [0, 0.44444, 0, 0],\n        \"102\": [0, 0.69444, 0.10903, 0],\n        \"103\": [0.19444, 0.44444, 0.01597, 0],\n        \"104\": [0, 0.69444, 0, 0],\n        \"105\": [0, 0.69444, 0, 0],\n        \"106\": [0.19444, 0.69444, 0, 0],\n        \"107\": [0, 0.69444, 0, 0],\n        \"108\": [0, 0.69444, 0, 0],\n        \"109\": [0, 0.44444, 0, 0],\n        \"110\": [0, 0.44444, 0, 0],\n        \"111\": [0, 0.44444, 0, 0],\n        \"112\": [0.19444, 0.44444, 0, 0],\n        \"113\": [0.19444, 0.44444, 0, 0],\n        \"114\": [0, 0.44444, 0, 0],\n        \"115\": [0, 0.44444, 0, 0],\n        \"116\": [0, 0.63492, 0, 0],\n        \"117\": [0, 0.44444, 0, 0],\n        \"118\": [0, 0.44444, 0.01597, 0],\n        \"119\": [0, 0.44444, 0.01597, 0],\n        \"120\": [0, 0.44444, 0, 0],\n        \"121\": [0.19444, 0.44444, 0.01597, 0],\n        \"122\": [0, 0.44444, 0, 0],\n        \"123\": [0.25, 0.75, 0, 0],\n        \"124\": [0.25, 0.75, 0, 0],\n        \"125\": [0.25, 0.75, 0, 0],\n        \"126\": [0.35, 0.34444, 0, 0],\n        \"168\": [0, 0.69444, 0, 0],\n        \"172\": [0, 0.44444, 0, 0],\n        \"175\": [0, 0.59611, 0, 0],\n        \"176\": [0, 0.69444, 0, 0],\n        \"177\": [0.13333, 0.63333, 0, 0],\n        \"180\": [0, 0.69444, 0, 0],\n        \"215\": [0.13333, 0.63333, 0, 0],\n        \"247\": [0.13333, 0.63333, 0, 0],\n        \"305\": [0, 0.44444, 0, 0],\n        \"567\": [0.19444, 0.44444, 0, 0],\n        \"710\": [0, 0.69444, 0, 0],\n        \"711\": [0, 0.63194, 0, 0],\n        \"713\": [0, 0.59611, 0, 0],\n        \"714\": [0, 0.69444, 0, 0],\n        \"715\": [0, 0.69444, 0, 0],\n        \"728\": [0, 0.69444, 0, 0],\n        \"729\": [0, 0.69444, 0, 0],\n        \"730\": [0, 0.69444, 0, 0],\n        \"732\": [0, 0.69444, 0, 0],\n        \"768\": [0, 0.69444, 0, 0],\n        \"769\": [0, 0.69444, 0, 0],\n        \"770\": [0, 0.69444, 0, 0],\n        \"771\": [0, 0.69444, 0, 0],\n        \"772\": [0, 0.59611, 0, 0],\n        \"774\": [0, 0.69444, 0, 0],\n        \"775\": [0, 0.69444, 0, 0],\n        \"776\": [0, 0.69444, 0, 0],\n        \"778\": [0, 0.69444, 0, 0],\n        \"779\": [0, 0.69444, 0, 0],\n        \"780\": [0, 0.63194, 0, 0],\n        \"824\": [0.19444, 0.69444, 0, 0],\n        \"915\": [0, 0.68611, 0, 0],\n        \"916\": [0, 0.68611, 0, 0],\n        \"920\": [0, 0.68611, 0, 0],\n        \"923\": [0, 0.68611, 0, 0],\n        \"926\": [0, 0.68611, 0, 0],\n        \"928\": [0, 0.68611, 0, 0],\n        \"931\": [0, 0.68611, 0, 0],\n        \"933\": [0, 0.68611, 0, 0],\n        \"934\": [0, 0.68611, 0, 0],\n        \"936\": [0, 0.68611, 0, 0],\n        \"937\": [0, 0.68611, 0, 0],\n        \"8211\": [0, 0.44444, 0.03194, 0],\n        \"8212\": [0, 0.44444, 0.03194, 0],\n        \"8216\": [0, 0.69444, 0, 0],\n        \"8217\": [0, 0.69444, 0, 0],\n        \"8220\": [0, 0.69444, 0, 0],\n        \"8221\": [0, 0.69444, 0, 0],\n        \"8224\": [0.19444, 0.69444, 0, 0],\n        \"8225\": [0.19444, 0.69444, 0, 0],\n        \"8242\": [0, 0.55556, 0, 0],\n        \"8407\": [0, 0.72444, 0.15486, 0],\n        \"8463\": [0, 0.69444, 0, 0],\n        \"8465\": [0, 0.69444, 0, 0],\n        \"8467\": [0, 0.69444, 0, 0],\n        \"8472\": [0.19444, 0.44444, 0, 0],\n        \"8476\": [0, 0.69444, 0, 0],\n        \"8501\": [0, 0.69444, 0, 0],\n        \"8592\": [-0.10889, 0.39111, 0, 0],\n        \"8593\": [0.19444, 0.69444, 0, 0],\n        \"8594\": [-0.10889, 0.39111, 0, 0],\n        \"8595\": [0.19444, 0.69444, 0, 0],\n        \"8596\": [-0.10889, 0.39111, 0, 0],\n        \"8597\": [0.25, 0.75, 0, 0],\n        \"8598\": [0.19444, 0.69444, 0, 0],\n        \"8599\": [0.19444, 0.69444, 0, 0],\n        \"8600\": [0.19444, 0.69444, 0, 0],\n        \"8601\": [0.19444, 0.69444, 0, 0],\n        \"8636\": [-0.10889, 0.39111, 0, 0],\n        \"8637\": [-0.10889, 0.39111, 0, 0],\n        \"8640\": [-0.10889, 0.39111, 0, 0],\n        \"8641\": [-0.10889, 0.39111, 0, 0],\n        \"8656\": [-0.10889, 0.39111, 0, 0],\n        \"8657\": [0.19444, 0.69444, 0, 0],\n        \"8658\": [-0.10889, 0.39111, 0, 0],\n        \"8659\": [0.19444, 0.69444, 0, 0],\n        \"8660\": [-0.10889, 0.39111, 0, 0],\n        \"8661\": [0.25, 0.75, 0, 0],\n        \"8704\": [0, 0.69444, 0, 0],\n        \"8706\": [0, 0.69444, 0.06389, 0],\n        \"8707\": [0, 0.69444, 0, 0],\n        \"8709\": [0.05556, 0.75, 0, 0],\n        \"8711\": [0, 0.68611, 0, 0],\n        \"8712\": [0.08556, 0.58556, 0, 0],\n        \"8715\": [0.08556, 0.58556, 0, 0],\n        \"8722\": [0.13333, 0.63333, 0, 0],\n        \"8723\": [0.13333, 0.63333, 0, 0],\n        \"8725\": [0.25, 0.75, 0, 0],\n        \"8726\": [0.25, 0.75, 0, 0],\n        \"8727\": [-0.02778, 0.47222, 0, 0],\n        \"8728\": [-0.02639, 0.47361, 0, 0],\n        \"8729\": [-0.02639, 0.47361, 0, 0],\n        \"8730\": [0.18, 0.82, 0, 0],\n        \"8733\": [0, 0.44444, 0, 0],\n        \"8734\": [0, 0.44444, 0, 0],\n        \"8736\": [0, 0.69224, 0, 0],\n        \"8739\": [0.25, 0.75, 0, 0],\n        \"8741\": [0.25, 0.75, 0, 0],\n        \"8743\": [0, 0.55556, 0, 0],\n        \"8744\": [0, 0.55556, 0, 0],\n        \"8745\": [0, 0.55556, 0, 0],\n        \"8746\": [0, 0.55556, 0, 0],\n        \"8747\": [0.19444, 0.69444, 0.12778, 0],\n        \"8764\": [-0.10889, 0.39111, 0, 0],\n        \"8768\": [0.19444, 0.69444, 0, 0],\n        \"8771\": [0.00222, 0.50222, 0, 0],\n        \"8776\": [0.02444, 0.52444, 0, 0],\n        \"8781\": [0.00222, 0.50222, 0, 0],\n        \"8801\": [0.00222, 0.50222, 0, 0],\n        \"8804\": [0.19667, 0.69667, 0, 0],\n        \"8805\": [0.19667, 0.69667, 0, 0],\n        \"8810\": [0.08556, 0.58556, 0, 0],\n        \"8811\": [0.08556, 0.58556, 0, 0],\n        \"8826\": [0.08556, 0.58556, 0, 0],\n        \"8827\": [0.08556, 0.58556, 0, 0],\n        \"8834\": [0.08556, 0.58556, 0, 0],\n        \"8835\": [0.08556, 0.58556, 0, 0],\n        \"8838\": [0.19667, 0.69667, 0, 0],\n        \"8839\": [0.19667, 0.69667, 0, 0],\n        \"8846\": [0, 0.55556, 0, 0],\n        \"8849\": [0.19667, 0.69667, 0, 0],\n        \"8850\": [0.19667, 0.69667, 0, 0],\n        \"8851\": [0, 0.55556, 0, 0],\n        \"8852\": [0, 0.55556, 0, 0],\n        \"8853\": [0.13333, 0.63333, 0, 0],\n        \"8854\": [0.13333, 0.63333, 0, 0],\n        \"8855\": [0.13333, 0.63333, 0, 0],\n        \"8856\": [0.13333, 0.63333, 0, 0],\n        \"8857\": [0.13333, 0.63333, 0, 0],\n        \"8866\": [0, 0.69444, 0, 0],\n        \"8867\": [0, 0.69444, 0, 0],\n        \"8868\": [0, 0.69444, 0, 0],\n        \"8869\": [0, 0.69444, 0, 0],\n        \"8900\": [-0.02639, 0.47361, 0, 0],\n        \"8901\": [-0.02639, 0.47361, 0, 0],\n        \"8902\": [-0.02778, 0.47222, 0, 0],\n        \"8968\": [0.25, 0.75, 0, 0],\n        \"8969\": [0.25, 0.75, 0, 0],\n        \"8970\": [0.25, 0.75, 0, 0],\n        \"8971\": [0.25, 0.75, 0, 0],\n        \"8994\": [-0.13889, 0.36111, 0, 0],\n        \"8995\": [-0.13889, 0.36111, 0, 0],\n        \"9651\": [0.19444, 0.69444, 0, 0],\n        \"9657\": [-0.02778, 0.47222, 0, 0],\n        \"9661\": [0.19444, 0.69444, 0, 0],\n        \"9667\": [-0.02778, 0.47222, 0, 0],\n        \"9711\": [0.19444, 0.69444, 0, 0],\n        \"9824\": [0.12963, 0.69444, 0, 0],\n        \"9825\": [0.12963, 0.69444, 0, 0],\n        \"9826\": [0.12963, 0.69444, 0, 0],\n        \"9827\": [0.12963, 0.69444, 0, 0],\n        \"9837\": [0, 0.75, 0, 0],\n        \"9838\": [0.19444, 0.69444, 0, 0],\n        \"9839\": [0.19444, 0.69444, 0, 0],\n        \"10216\": [0.25, 0.75, 0, 0],\n        \"10217\": [0.25, 0.75, 0, 0],\n        \"10815\": [0, 0.68611, 0, 0],\n        \"10927\": [0.19667, 0.69667, 0, 0],\n        \"10928\": [0.19667, 0.69667, 0, 0],\n    },\n    \"Main-Italic\": {\n        \"33\": [0, 0.69444, 0.12417, 0],\n        \"34\": [0, 0.69444, 0.06961, 0],\n        \"35\": [0.19444, 0.69444, 0.06616, 0],\n        \"37\": [0.05556, 0.75, 0.13639, 0],\n        \"38\": [0, 0.69444, 0.09694, 0],\n        \"39\": [0, 0.69444, 0.12417, 0],\n        \"40\": [0.25, 0.75, 0.16194, 0],\n        \"41\": [0.25, 0.75, 0.03694, 0],\n        \"42\": [0, 0.75, 0.14917, 0],\n        \"43\": [0.05667, 0.56167, 0.03694, 0],\n        \"44\": [0.19444, 0.10556, 0, 0],\n        \"45\": [0, 0.43056, 0.02826, 0],\n        \"46\": [0, 0.10556, 0, 0],\n        \"47\": [0.25, 0.75, 0.16194, 0],\n        \"48\": [0, 0.64444, 0.13556, 0],\n        \"49\": [0, 0.64444, 0.13556, 0],\n        \"50\": [0, 0.64444, 0.13556, 0],\n        \"51\": [0, 0.64444, 0.13556, 0],\n        \"52\": [0.19444, 0.64444, 0.13556, 0],\n        \"53\": [0, 0.64444, 0.13556, 0],\n        \"54\": [0, 0.64444, 0.13556, 0],\n        \"55\": [0.19444, 0.64444, 0.13556, 0],\n        \"56\": [0, 0.64444, 0.13556, 0],\n        \"57\": [0, 0.64444, 0.13556, 0],\n        \"58\": [0, 0.43056, 0.0582, 0],\n        \"59\": [0.19444, 0.43056, 0.0582, 0],\n        \"61\": [-0.13313, 0.36687, 0.06616, 0],\n        \"63\": [0, 0.69444, 0.1225, 0],\n        \"64\": [0, 0.69444, 0.09597, 0],\n        \"65\": [0, 0.68333, 0, 0],\n        \"66\": [0, 0.68333, 0.10257, 0],\n        \"67\": [0, 0.68333, 0.14528, 0],\n        \"68\": [0, 0.68333, 0.09403, 0],\n        \"69\": [0, 0.68333, 0.12028, 0],\n        \"70\": [0, 0.68333, 0.13305, 0],\n        \"71\": [0, 0.68333, 0.08722, 0],\n        \"72\": [0, 0.68333, 0.16389, 0],\n        \"73\": [0, 0.68333, 0.15806, 0],\n        \"74\": [0, 0.68333, 0.14028, 0],\n        \"75\": [0, 0.68333, 0.14528, 0],\n        \"76\": [0, 0.68333, 0, 0],\n        \"77\": [0, 0.68333, 0.16389, 0],\n        \"78\": [0, 0.68333, 0.16389, 0],\n        \"79\": [0, 0.68333, 0.09403, 0],\n        \"80\": [0, 0.68333, 0.10257, 0],\n        \"81\": [0.19444, 0.68333, 0.09403, 0],\n        \"82\": [0, 0.68333, 0.03868, 0],\n        \"83\": [0, 0.68333, 0.11972, 0],\n        \"84\": [0, 0.68333, 0.13305, 0],\n        \"85\": [0, 0.68333, 0.16389, 0],\n        \"86\": [0, 0.68333, 0.18361, 0],\n        \"87\": [0, 0.68333, 0.18361, 0],\n        \"88\": [0, 0.68333, 0.15806, 0],\n        \"89\": [0, 0.68333, 0.19383, 0],\n        \"90\": [0, 0.68333, 0.14528, 0],\n        \"91\": [0.25, 0.75, 0.1875, 0],\n        \"93\": [0.25, 0.75, 0.10528, 0],\n        \"94\": [0, 0.69444, 0.06646, 0],\n        \"95\": [0.31, 0.12056, 0.09208, 0],\n        \"97\": [0, 0.43056, 0.07671, 0],\n        \"98\": [0, 0.69444, 0.06312, 0],\n        \"99\": [0, 0.43056, 0.05653, 0],\n        \"100\": [0, 0.69444, 0.10333, 0],\n        \"101\": [0, 0.43056, 0.07514, 0],\n        \"102\": [0.19444, 0.69444, 0.21194, 0],\n        \"103\": [0.19444, 0.43056, 0.08847, 0],\n        \"104\": [0, 0.69444, 0.07671, 0],\n        \"105\": [0, 0.65536, 0.1019, 0],\n        \"106\": [0.19444, 0.65536, 0.14467, 0],\n        \"107\": [0, 0.69444, 0.10764, 0],\n        \"108\": [0, 0.69444, 0.10333, 0],\n        \"109\": [0, 0.43056, 0.07671, 0],\n        \"110\": [0, 0.43056, 0.07671, 0],\n        \"111\": [0, 0.43056, 0.06312, 0],\n        \"112\": [0.19444, 0.43056, 0.06312, 0],\n        \"113\": [0.19444, 0.43056, 0.08847, 0],\n        \"114\": [0, 0.43056, 0.10764, 0],\n        \"115\": [0, 0.43056, 0.08208, 0],\n        \"116\": [0, 0.61508, 0.09486, 0],\n        \"117\": [0, 0.43056, 0.07671, 0],\n        \"118\": [0, 0.43056, 0.10764, 0],\n        \"119\": [0, 0.43056, 0.10764, 0],\n        \"120\": [0, 0.43056, 0.12042, 0],\n        \"121\": [0.19444, 0.43056, 0.08847, 0],\n        \"122\": [0, 0.43056, 0.12292, 0],\n        \"126\": [0.35, 0.31786, 0.11585, 0],\n        \"163\": [0, 0.69444, 0, 0],\n        \"305\": [0, 0.43056, 0, 0.02778],\n        \"567\": [0.19444, 0.43056, 0, 0.08334],\n        \"768\": [0, 0.69444, 0, 0],\n        \"769\": [0, 0.69444, 0.09694, 0],\n        \"770\": [0, 0.69444, 0.06646, 0],\n        \"771\": [0, 0.66786, 0.11585, 0],\n        \"772\": [0, 0.56167, 0.10333, 0],\n        \"774\": [0, 0.69444, 0.10806, 0],\n        \"775\": [0, 0.66786, 0.11752, 0],\n        \"776\": [0, 0.66786, 0.10474, 0],\n        \"778\": [0, 0.69444, 0, 0],\n        \"779\": [0, 0.69444, 0.1225, 0],\n        \"780\": [0, 0.62847, 0.08295, 0],\n        \"915\": [0, 0.68333, 0.13305, 0],\n        \"916\": [0, 0.68333, 0, 0],\n        \"920\": [0, 0.68333, 0.09403, 0],\n        \"923\": [0, 0.68333, 0, 0],\n        \"926\": [0, 0.68333, 0.15294, 0],\n        \"928\": [0, 0.68333, 0.16389, 0],\n        \"931\": [0, 0.68333, 0.12028, 0],\n        \"933\": [0, 0.68333, 0.11111, 0],\n        \"934\": [0, 0.68333, 0.05986, 0],\n        \"936\": [0, 0.68333, 0.11111, 0],\n        \"937\": [0, 0.68333, 0.10257, 0],\n        \"8211\": [0, 0.43056, 0.09208, 0],\n        \"8212\": [0, 0.43056, 0.09208, 0],\n        \"8216\": [0, 0.69444, 0.12417, 0],\n        \"8217\": [0, 0.69444, 0.12417, 0],\n        \"8220\": [0, 0.69444, 0.1685, 0],\n        \"8221\": [0, 0.69444, 0.06961, 0],\n        \"8463\": [0, 0.68889, 0, 0],\n    },\n    \"Main-Regular\": {\n        \"32\": [0, 0, 0, 0],\n        \"33\": [0, 0.69444, 0, 0],\n        \"34\": [0, 0.69444, 0, 0],\n        \"35\": [0.19444, 0.69444, 0, 0],\n        \"36\": [0.05556, 0.75, 0, 0],\n        \"37\": [0.05556, 0.75, 0, 0],\n        \"38\": [0, 0.69444, 0, 0],\n        \"39\": [0, 0.69444, 0, 0],\n        \"40\": [0.25, 0.75, 0, 0],\n        \"41\": [0.25, 0.75, 0, 0],\n        \"42\": [0, 0.75, 0, 0],\n        \"43\": [0.08333, 0.58333, 0, 0],\n        \"44\": [0.19444, 0.10556, 0, 0],\n        \"45\": [0, 0.43056, 0, 0],\n        \"46\": [0, 0.10556, 0, 0],\n        \"47\": [0.25, 0.75, 0, 0],\n        \"48\": [0, 0.64444, 0, 0],\n        \"49\": [0, 0.64444, 0, 0],\n        \"50\": [0, 0.64444, 0, 0],\n        \"51\": [0, 0.64444, 0, 0],\n        \"52\": [0, 0.64444, 0, 0],\n        \"53\": [0, 0.64444, 0, 0],\n        \"54\": [0, 0.64444, 0, 0],\n        \"55\": [0, 0.64444, 0, 0],\n        \"56\": [0, 0.64444, 0, 0],\n        \"57\": [0, 0.64444, 0, 0],\n        \"58\": [0, 0.43056, 0, 0],\n        \"59\": [0.19444, 0.43056, 0, 0],\n        \"60\": [0.0391, 0.5391, 0, 0],\n        \"61\": [-0.13313, 0.36687, 0, 0],\n        \"62\": [0.0391, 0.5391, 0, 0],\n        \"63\": [0, 0.69444, 0, 0],\n        \"64\": [0, 0.69444, 0, 0],\n        \"65\": [0, 0.68333, 0, 0],\n        \"66\": [0, 0.68333, 0, 0],\n        \"67\": [0, 0.68333, 0, 0],\n        \"68\": [0, 0.68333, 0, 0],\n        \"69\": [0, 0.68333, 0, 0],\n        \"70\": [0, 0.68333, 0, 0],\n        \"71\": [0, 0.68333, 0, 0],\n        \"72\": [0, 0.68333, 0, 0],\n        \"73\": [0, 0.68333, 0, 0],\n        \"74\": [0, 0.68333, 0, 0],\n        \"75\": [0, 0.68333, 0, 0],\n        \"76\": [0, 0.68333, 0, 0],\n        \"77\": [0, 0.68333, 0, 0],\n        \"78\": [0, 0.68333, 0, 0],\n        \"79\": [0, 0.68333, 0, 0],\n        \"80\": [0, 0.68333, 0, 0],\n        \"81\": [0.19444, 0.68333, 0, 0],\n        \"82\": [0, 0.68333, 0, 0],\n        \"83\": [0, 0.68333, 0, 0],\n        \"84\": [0, 0.68333, 0, 0],\n        \"85\": [0, 0.68333, 0, 0],\n        \"86\": [0, 0.68333, 0.01389, 0],\n        \"87\": [0, 0.68333, 0.01389, 0],\n        \"88\": [0, 0.68333, 0, 0],\n        \"89\": [0, 0.68333, 0.025, 0],\n        \"90\": [0, 0.68333, 0, 0],\n        \"91\": [0.25, 0.75, 0, 0],\n        \"92\": [0.25, 0.75, 0, 0],\n        \"93\": [0.25, 0.75, 0, 0],\n        \"94\": [0, 0.69444, 0, 0],\n        \"95\": [0.31, 0.12056, 0.02778, 0],\n        \"96\": [0, 0.69444, 0, 0],\n        \"97\": [0, 0.43056, 0, 0],\n        \"98\": [0, 0.69444, 0, 0],\n        \"99\": [0, 0.43056, 0, 0],\n        \"100\": [0, 0.69444, 0, 0],\n        \"101\": [0, 0.43056, 0, 0],\n        \"102\": [0, 0.69444, 0.07778, 0],\n        \"103\": [0.19444, 0.43056, 0.01389, 0],\n        \"104\": [0, 0.69444, 0, 0],\n        \"105\": [0, 0.66786, 0, 0],\n        \"106\": [0.19444, 0.66786, 0, 0],\n        \"107\": [0, 0.69444, 0, 0],\n        \"108\": [0, 0.69444, 0, 0],\n        \"109\": [0, 0.43056, 0, 0],\n        \"110\": [0, 0.43056, 0, 0],\n        \"111\": [0, 0.43056, 0, 0],\n        \"112\": [0.19444, 0.43056, 0, 0],\n        \"113\": [0.19444, 0.43056, 0, 0],\n        \"114\": [0, 0.43056, 0, 0],\n        \"115\": [0, 0.43056, 0, 0],\n        \"116\": [0, 0.61508, 0, 0],\n        \"117\": [0, 0.43056, 0, 0],\n        \"118\": [0, 0.43056, 0.01389, 0],\n        \"119\": [0, 0.43056, 0.01389, 0],\n        \"120\": [0, 0.43056, 0, 0],\n        \"121\": [0.19444, 0.43056, 0.01389, 0],\n        \"122\": [0, 0.43056, 0, 0],\n        \"123\": [0.25, 0.75, 0, 0],\n        \"124\": [0.25, 0.75, 0, 0],\n        \"125\": [0.25, 0.75, 0, 0],\n        \"126\": [0.35, 0.31786, 0, 0],\n        \"160\": [0, 0, 0, 0],\n        \"168\": [0, 0.66786, 0, 0],\n        \"172\": [0, 0.43056, 0, 0],\n        \"175\": [0, 0.56778, 0, 0],\n        \"176\": [0, 0.69444, 0, 0],\n        \"177\": [0.08333, 0.58333, 0, 0],\n        \"180\": [0, 0.69444, 0, 0],\n        \"215\": [0.08333, 0.58333, 0, 0],\n        \"247\": [0.08333, 0.58333, 0, 0],\n        \"305\": [0, 0.43056, 0, 0],\n        \"567\": [0.19444, 0.43056, 0, 0],\n        \"710\": [0, 0.69444, 0, 0],\n        \"711\": [0, 0.62847, 0, 0],\n        \"713\": [0, 0.56778, 0, 0],\n        \"714\": [0, 0.69444, 0, 0],\n        \"715\": [0, 0.69444, 0, 0],\n        \"728\": [0, 0.69444, 0, 0],\n        \"729\": [0, 0.66786, 0, 0],\n        \"730\": [0, 0.69444, 0, 0],\n        \"732\": [0, 0.66786, 0, 0],\n        \"768\": [0, 0.69444, 0, 0],\n        \"769\": [0, 0.69444, 0, 0],\n        \"770\": [0, 0.69444, 0, 0],\n        \"771\": [0, 0.66786, 0, 0],\n        \"772\": [0, 0.56778, 0, 0],\n        \"774\": [0, 0.69444, 0, 0],\n        \"775\": [0, 0.66786, 0, 0],\n        \"776\": [0, 0.66786, 0, 0],\n        \"778\": [0, 0.69444, 0, 0],\n        \"779\": [0, 0.69444, 0, 0],\n        \"780\": [0, 0.62847, 0, 0],\n        \"824\": [0.19444, 0.69444, 0, 0],\n        \"915\": [0, 0.68333, 0, 0],\n        \"916\": [0, 0.68333, 0, 0],\n        \"920\": [0, 0.68333, 0, 0],\n        \"923\": [0, 0.68333, 0, 0],\n        \"926\": [0, 0.68333, 0, 0],\n        \"928\": [0, 0.68333, 0, 0],\n        \"931\": [0, 0.68333, 0, 0],\n        \"933\": [0, 0.68333, 0, 0],\n        \"934\": [0, 0.68333, 0, 0],\n        \"936\": [0, 0.68333, 0, 0],\n        \"937\": [0, 0.68333, 0, 0],\n        \"8211\": [0, 0.43056, 0.02778, 0],\n        \"8212\": [0, 0.43056, 0.02778, 0],\n        \"8216\": [0, 0.69444, 0, 0],\n        \"8217\": [0, 0.69444, 0, 0],\n        \"8220\": [0, 0.69444, 0, 0],\n        \"8221\": [0, 0.69444, 0, 0],\n        \"8224\": [0.19444, 0.69444, 0, 0],\n        \"8225\": [0.19444, 0.69444, 0, 0],\n        \"8230\": [0, 0.12, 0, 0],\n        \"8242\": [0, 0.55556, 0, 0],\n        \"8407\": [0, 0.71444, 0.15382, 0],\n        \"8463\": [0, 0.68889, 0, 0],\n        \"8465\": [0, 0.69444, 0, 0],\n        \"8467\": [0, 0.69444, 0, 0.11111],\n        \"8472\": [0.19444, 0.43056, 0, 0.11111],\n        \"8476\": [0, 0.69444, 0, 0],\n        \"8501\": [0, 0.69444, 0, 0],\n        \"8592\": [-0.13313, 0.36687, 0, 0],\n        \"8593\": [0.19444, 0.69444, 0, 0],\n        \"8594\": [-0.13313, 0.36687, 0, 0],\n        \"8595\": [0.19444, 0.69444, 0, 0],\n        \"8596\": [-0.13313, 0.36687, 0, 0],\n        \"8597\": [0.25, 0.75, 0, 0],\n        \"8598\": [0.19444, 0.69444, 0, 0],\n        \"8599\": [0.19444, 0.69444, 0, 0],\n        \"8600\": [0.19444, 0.69444, 0, 0],\n        \"8601\": [0.19444, 0.69444, 0, 0],\n        \"8614\": [0.011, 0.511, 0, 0],\n        \"8617\": [0.011, 0.511, 0, 0],\n        \"8618\": [0.011, 0.511, 0, 0],\n        \"8636\": [-0.13313, 0.36687, 0, 0],\n        \"8637\": [-0.13313, 0.36687, 0, 0],\n        \"8640\": [-0.13313, 0.36687, 0, 0],\n        \"8641\": [-0.13313, 0.36687, 0, 0],\n        \"8652\": [0.011, 0.671, 0, 0],\n        \"8656\": [-0.13313, 0.36687, 0, 0],\n        \"8657\": [0.19444, 0.69444, 0, 0],\n        \"8658\": [-0.13313, 0.36687, 0, 0],\n        \"8659\": [0.19444, 0.69444, 0, 0],\n        \"8660\": [-0.13313, 0.36687, 0, 0],\n        \"8661\": [0.25, 0.75, 0, 0],\n        \"8704\": [0, 0.69444, 0, 0],\n        \"8706\": [0, 0.69444, 0.05556, 0.08334],\n        \"8707\": [0, 0.69444, 0, 0],\n        \"8709\": [0.05556, 0.75, 0, 0],\n        \"8711\": [0, 0.68333, 0, 0],\n        \"8712\": [0.0391, 0.5391, 0, 0],\n        \"8715\": [0.0391, 0.5391, 0, 0],\n        \"8722\": [0.08333, 0.58333, 0, 0],\n        \"8723\": [0.08333, 0.58333, 0, 0],\n        \"8725\": [0.25, 0.75, 0, 0],\n        \"8726\": [0.25, 0.75, 0, 0],\n        \"8727\": [-0.03472, 0.46528, 0, 0],\n        \"8728\": [-0.05555, 0.44445, 0, 0],\n        \"8729\": [-0.05555, 0.44445, 0, 0],\n        \"8730\": [0.2, 0.8, 0, 0],\n        \"8733\": [0, 0.43056, 0, 0],\n        \"8734\": [0, 0.43056, 0, 0],\n        \"8736\": [0, 0.69224, 0, 0],\n        \"8739\": [0.25, 0.75, 0, 0],\n        \"8741\": [0.25, 0.75, 0, 0],\n        \"8743\": [0, 0.55556, 0, 0],\n        \"8744\": [0, 0.55556, 0, 0],\n        \"8745\": [0, 0.55556, 0, 0],\n        \"8746\": [0, 0.55556, 0, 0],\n        \"8747\": [0.19444, 0.69444, 0.11111, 0],\n        \"8764\": [-0.13313, 0.36687, 0, 0],\n        \"8768\": [0.19444, 0.69444, 0, 0],\n        \"8771\": [-0.03625, 0.46375, 0, 0],\n        \"8773\": [-0.022, 0.589, 0, 0],\n        \"8776\": [-0.01688, 0.48312, 0, 0],\n        \"8781\": [-0.03625, 0.46375, 0, 0],\n        \"8784\": [-0.133, 0.67, 0, 0],\n        \"8800\": [0.215, 0.716, 0, 0],\n        \"8801\": [-0.03625, 0.46375, 0, 0],\n        \"8804\": [0.13597, 0.63597, 0, 0],\n        \"8805\": [0.13597, 0.63597, 0, 0],\n        \"8810\": [0.0391, 0.5391, 0, 0],\n        \"8811\": [0.0391, 0.5391, 0, 0],\n        \"8826\": [0.0391, 0.5391, 0, 0],\n        \"8827\": [0.0391, 0.5391, 0, 0],\n        \"8834\": [0.0391, 0.5391, 0, 0],\n        \"8835\": [0.0391, 0.5391, 0, 0],\n        \"8838\": [0.13597, 0.63597, 0, 0],\n        \"8839\": [0.13597, 0.63597, 0, 0],\n        \"8846\": [0, 0.55556, 0, 0],\n        \"8849\": [0.13597, 0.63597, 0, 0],\n        \"8850\": [0.13597, 0.63597, 0, 0],\n        \"8851\": [0, 0.55556, 0, 0],\n        \"8852\": [0, 0.55556, 0, 0],\n        \"8853\": [0.08333, 0.58333, 0, 0],\n        \"8854\": [0.08333, 0.58333, 0, 0],\n        \"8855\": [0.08333, 0.58333, 0, 0],\n        \"8856\": [0.08333, 0.58333, 0, 0],\n        \"8857\": [0.08333, 0.58333, 0, 0],\n        \"8866\": [0, 0.69444, 0, 0],\n        \"8867\": [0, 0.69444, 0, 0],\n        \"8868\": [0, 0.69444, 0, 0],\n        \"8869\": [0, 0.69444, 0, 0],\n        \"8872\": [0.249, 0.75, 0, 0],\n        \"8900\": [-0.05555, 0.44445, 0, 0],\n        \"8901\": [-0.05555, 0.44445, 0, 0],\n        \"8902\": [-0.03472, 0.46528, 0, 0],\n        \"8904\": [0.005, 0.505, 0, 0],\n        \"8942\": [0.03, 0.9, 0, 0],\n        \"8943\": [-0.19, 0.31, 0, 0],\n        \"8945\": [-0.1, 0.82, 0, 0],\n        \"8968\": [0.25, 0.75, 0, 0],\n        \"8969\": [0.25, 0.75, 0, 0],\n        \"8970\": [0.25, 0.75, 0, 0],\n        \"8971\": [0.25, 0.75, 0, 0],\n        \"8994\": [-0.14236, 0.35764, 0, 0],\n        \"8995\": [-0.14236, 0.35764, 0, 0],\n        \"9136\": [0.244, 0.744, 0, 0],\n        \"9137\": [0.244, 0.744, 0, 0],\n        \"9651\": [0.19444, 0.69444, 0, 0],\n        \"9657\": [-0.03472, 0.46528, 0, 0],\n        \"9661\": [0.19444, 0.69444, 0, 0],\n        \"9667\": [-0.03472, 0.46528, 0, 0],\n        \"9711\": [0.19444, 0.69444, 0, 0],\n        \"9824\": [0.12963, 0.69444, 0, 0],\n        \"9825\": [0.12963, 0.69444, 0, 0],\n        \"9826\": [0.12963, 0.69444, 0, 0],\n        \"9827\": [0.12963, 0.69444, 0, 0],\n        \"9837\": [0, 0.75, 0, 0],\n        \"9838\": [0.19444, 0.69444, 0, 0],\n        \"9839\": [0.19444, 0.69444, 0, 0],\n        \"10216\": [0.25, 0.75, 0, 0],\n        \"10217\": [0.25, 0.75, 0, 0],\n        \"10222\": [0.244, 0.744, 0, 0],\n        \"10223\": [0.244, 0.744, 0, 0],\n        \"10229\": [0.011, 0.511, 0, 0],\n        \"10230\": [0.011, 0.511, 0, 0],\n        \"10231\": [0.011, 0.511, 0, 0],\n        \"10232\": [0.024, 0.525, 0, 0],\n        \"10233\": [0.024, 0.525, 0, 0],\n        \"10234\": [0.024, 0.525, 0, 0],\n        \"10236\": [0.011, 0.511, 0, 0],\n        \"10815\": [0, 0.68333, 0, 0],\n        \"10927\": [0.13597, 0.63597, 0, 0],\n        \"10928\": [0.13597, 0.63597, 0, 0],\n    },\n    \"Math-BoldItalic\": {\n        \"47\": [0.19444, 0.69444, 0, 0],\n        \"65\": [0, 0.68611, 0, 0],\n        \"66\": [0, 0.68611, 0.04835, 0],\n        \"67\": [0, 0.68611, 0.06979, 0],\n        \"68\": [0, 0.68611, 0.03194, 0],\n        \"69\": [0, 0.68611, 0.05451, 0],\n        \"70\": [0, 0.68611, 0.15972, 0],\n        \"71\": [0, 0.68611, 0, 0],\n        \"72\": [0, 0.68611, 0.08229, 0],\n        \"73\": [0, 0.68611, 0.07778, 0],\n        \"74\": [0, 0.68611, 0.10069, 0],\n        \"75\": [0, 0.68611, 0.06979, 0],\n        \"76\": [0, 0.68611, 0, 0],\n        \"77\": [0, 0.68611, 0.11424, 0],\n        \"78\": [0, 0.68611, 0.11424, 0],\n        \"79\": [0, 0.68611, 0.03194, 0],\n        \"80\": [0, 0.68611, 0.15972, 0],\n        \"81\": [0.19444, 0.68611, 0, 0],\n        \"82\": [0, 0.68611, 0.00421, 0],\n        \"83\": [0, 0.68611, 0.05382, 0],\n        \"84\": [0, 0.68611, 0.15972, 0],\n        \"85\": [0, 0.68611, 0.11424, 0],\n        \"86\": [0, 0.68611, 0.25555, 0],\n        \"87\": [0, 0.68611, 0.15972, 0],\n        \"88\": [0, 0.68611, 0.07778, 0],\n        \"89\": [0, 0.68611, 0.25555, 0],\n        \"90\": [0, 0.68611, 0.06979, 0],\n        \"97\": [0, 0.44444, 0, 0],\n        \"98\": [0, 0.69444, 0, 0],\n        \"99\": [0, 0.44444, 0, 0],\n        \"100\": [0, 0.69444, 0, 0],\n        \"101\": [0, 0.44444, 0, 0],\n        \"102\": [0.19444, 0.69444, 0.11042, 0],\n        \"103\": [0.19444, 0.44444, 0.03704, 0],\n        \"104\": [0, 0.69444, 0, 0],\n        \"105\": [0, 0.69326, 0, 0],\n        \"106\": [0.19444, 0.69326, 0.0622, 0],\n        \"107\": [0, 0.69444, 0.01852, 0],\n        \"108\": [0, 0.69444, 0.0088, 0],\n        \"109\": [0, 0.44444, 0, 0],\n        \"110\": [0, 0.44444, 0, 0],\n        \"111\": [0, 0.44444, 0, 0],\n        \"112\": [0.19444, 0.44444, 0, 0],\n        \"113\": [0.19444, 0.44444, 0.03704, 0],\n        \"114\": [0, 0.44444, 0.03194, 0],\n        \"115\": [0, 0.44444, 0, 0],\n        \"116\": [0, 0.63492, 0, 0],\n        \"117\": [0, 0.44444, 0, 0],\n        \"118\": [0, 0.44444, 0.03704, 0],\n        \"119\": [0, 0.44444, 0.02778, 0],\n        \"120\": [0, 0.44444, 0, 0],\n        \"121\": [0.19444, 0.44444, 0.03704, 0],\n        \"122\": [0, 0.44444, 0.04213, 0],\n        \"915\": [0, 0.68611, 0.15972, 0],\n        \"916\": [0, 0.68611, 0, 0],\n        \"920\": [0, 0.68611, 0.03194, 0],\n        \"923\": [0, 0.68611, 0, 0],\n        \"926\": [0, 0.68611, 0.07458, 0],\n        \"928\": [0, 0.68611, 0.08229, 0],\n        \"931\": [0, 0.68611, 0.05451, 0],\n        \"933\": [0, 0.68611, 0.15972, 0],\n        \"934\": [0, 0.68611, 0, 0],\n        \"936\": [0, 0.68611, 0.11653, 0],\n        \"937\": [0, 0.68611, 0.04835, 0],\n        \"945\": [0, 0.44444, 0, 0],\n        \"946\": [0.19444, 0.69444, 0.03403, 0],\n        \"947\": [0.19444, 0.44444, 0.06389, 0],\n        \"948\": [0, 0.69444, 0.03819, 0],\n        \"949\": [0, 0.44444, 0, 0],\n        \"950\": [0.19444, 0.69444, 0.06215, 0],\n        \"951\": [0.19444, 0.44444, 0.03704, 0],\n        \"952\": [0, 0.69444, 0.03194, 0],\n        \"953\": [0, 0.44444, 0, 0],\n        \"954\": [0, 0.44444, 0, 0],\n        \"955\": [0, 0.69444, 0, 0],\n        \"956\": [0.19444, 0.44444, 0, 0],\n        \"957\": [0, 0.44444, 0.06898, 0],\n        \"958\": [0.19444, 0.69444, 0.03021, 0],\n        \"959\": [0, 0.44444, 0, 0],\n        \"960\": [0, 0.44444, 0.03704, 0],\n        \"961\": [0.19444, 0.44444, 0, 0],\n        \"962\": [0.09722, 0.44444, 0.07917, 0],\n        \"963\": [0, 0.44444, 0.03704, 0],\n        \"964\": [0, 0.44444, 0.13472, 0],\n        \"965\": [0, 0.44444, 0.03704, 0],\n        \"966\": [0.19444, 0.44444, 0, 0],\n        \"967\": [0.19444, 0.44444, 0, 0],\n        \"968\": [0.19444, 0.69444, 0.03704, 0],\n        \"969\": [0, 0.44444, 0.03704, 0],\n        \"977\": [0, 0.69444, 0, 0],\n        \"981\": [0.19444, 0.69444, 0, 0],\n        \"982\": [0, 0.44444, 0.03194, 0],\n        \"1009\": [0.19444, 0.44444, 0, 0],\n        \"1013\": [0, 0.44444, 0, 0],\n    },\n    \"Math-Italic\": {\n        \"47\": [0.19444, 0.69444, 0, 0],\n        \"65\": [0, 0.68333, 0, 0.13889],\n        \"66\": [0, 0.68333, 0.05017, 0.08334],\n        \"67\": [0, 0.68333, 0.07153, 0.08334],\n        \"68\": [0, 0.68333, 0.02778, 0.05556],\n        \"69\": [0, 0.68333, 0.05764, 0.08334],\n        \"70\": [0, 0.68333, 0.13889, 0.08334],\n        \"71\": [0, 0.68333, 0, 0.08334],\n        \"72\": [0, 0.68333, 0.08125, 0.05556],\n        \"73\": [0, 0.68333, 0.07847, 0.11111],\n        \"74\": [0, 0.68333, 0.09618, 0.16667],\n        \"75\": [0, 0.68333, 0.07153, 0.05556],\n        \"76\": [0, 0.68333, 0, 0.02778],\n        \"77\": [0, 0.68333, 0.10903, 0.08334],\n        \"78\": [0, 0.68333, 0.10903, 0.08334],\n        \"79\": [0, 0.68333, 0.02778, 0.08334],\n        \"80\": [0, 0.68333, 0.13889, 0.08334],\n        \"81\": [0.19444, 0.68333, 0, 0.08334],\n        \"82\": [0, 0.68333, 0.00773, 0.08334],\n        \"83\": [0, 0.68333, 0.05764, 0.08334],\n        \"84\": [0, 0.68333, 0.13889, 0.08334],\n        \"85\": [0, 0.68333, 0.10903, 0.02778],\n        \"86\": [0, 0.68333, 0.22222, 0],\n        \"87\": [0, 0.68333, 0.13889, 0],\n        \"88\": [0, 0.68333, 0.07847, 0.08334],\n        \"89\": [0, 0.68333, 0.22222, 0],\n        \"90\": [0, 0.68333, 0.07153, 0.08334],\n        \"97\": [0, 0.43056, 0, 0],\n        \"98\": [0, 0.69444, 0, 0],\n        \"99\": [0, 0.43056, 0, 0.05556],\n        \"100\": [0, 0.69444, 0, 0.16667],\n        \"101\": [0, 0.43056, 0, 0.05556],\n        \"102\": [0.19444, 0.69444, 0.10764, 0.16667],\n        \"103\": [0.19444, 0.43056, 0.03588, 0.02778],\n        \"104\": [0, 0.69444, 0, 0],\n        \"105\": [0, 0.65952, 0, 0],\n        \"106\": [0.19444, 0.65952, 0.05724, 0],\n        \"107\": [0, 0.69444, 0.03148, 0],\n        \"108\": [0, 0.69444, 0.01968, 0.08334],\n        \"109\": [0, 0.43056, 0, 0],\n        \"110\": [0, 0.43056, 0, 0],\n        \"111\": [0, 0.43056, 0, 0.05556],\n        \"112\": [0.19444, 0.43056, 0, 0.08334],\n        \"113\": [0.19444, 0.43056, 0.03588, 0.08334],\n        \"114\": [0, 0.43056, 0.02778, 0.05556],\n        \"115\": [0, 0.43056, 0, 0.05556],\n        \"116\": [0, 0.61508, 0, 0.08334],\n        \"117\": [0, 0.43056, 0, 0.02778],\n        \"118\": [0, 0.43056, 0.03588, 0.02778],\n        \"119\": [0, 0.43056, 0.02691, 0.08334],\n        \"120\": [0, 0.43056, 0, 0.02778],\n        \"121\": [0.19444, 0.43056, 0.03588, 0.05556],\n        \"122\": [0, 0.43056, 0.04398, 0.05556],\n        \"915\": [0, 0.68333, 0.13889, 0.08334],\n        \"916\": [0, 0.68333, 0, 0.16667],\n        \"920\": [0, 0.68333, 0.02778, 0.08334],\n        \"923\": [0, 0.68333, 0, 0.16667],\n        \"926\": [0, 0.68333, 0.07569, 0.08334],\n        \"928\": [0, 0.68333, 0.08125, 0.05556],\n        \"931\": [0, 0.68333, 0.05764, 0.08334],\n        \"933\": [0, 0.68333, 0.13889, 0.05556],\n        \"934\": [0, 0.68333, 0, 0.08334],\n        \"936\": [0, 0.68333, 0.11, 0.05556],\n        \"937\": [0, 0.68333, 0.05017, 0.08334],\n        \"945\": [0, 0.43056, 0.0037, 0.02778],\n        \"946\": [0.19444, 0.69444, 0.05278, 0.08334],\n        \"947\": [0.19444, 0.43056, 0.05556, 0],\n        \"948\": [0, 0.69444, 0.03785, 0.05556],\n        \"949\": [0, 0.43056, 0, 0.08334],\n        \"950\": [0.19444, 0.69444, 0.07378, 0.08334],\n        \"951\": [0.19444, 0.43056, 0.03588, 0.05556],\n        \"952\": [0, 0.69444, 0.02778, 0.08334],\n        \"953\": [0, 0.43056, 0, 0.05556],\n        \"954\": [0, 0.43056, 0, 0],\n        \"955\": [0, 0.69444, 0, 0],\n        \"956\": [0.19444, 0.43056, 0, 0.02778],\n        \"957\": [0, 0.43056, 0.06366, 0.02778],\n        \"958\": [0.19444, 0.69444, 0.04601, 0.11111],\n        \"959\": [0, 0.43056, 0, 0.05556],\n        \"960\": [0, 0.43056, 0.03588, 0],\n        \"961\": [0.19444, 0.43056, 0, 0.08334],\n        \"962\": [0.09722, 0.43056, 0.07986, 0.08334],\n        \"963\": [0, 0.43056, 0.03588, 0],\n        \"964\": [0, 0.43056, 0.1132, 0.02778],\n        \"965\": [0, 0.43056, 0.03588, 0.02778],\n        \"966\": [0.19444, 0.43056, 0, 0.08334],\n        \"967\": [0.19444, 0.43056, 0, 0.05556],\n        \"968\": [0.19444, 0.69444, 0.03588, 0.11111],\n        \"969\": [0, 0.43056, 0.03588, 0],\n        \"977\": [0, 0.69444, 0, 0.08334],\n        \"981\": [0.19444, 0.69444, 0, 0.08334],\n        \"982\": [0, 0.43056, 0.02778, 0],\n        \"1009\": [0.19444, 0.43056, 0, 0.08334],\n        \"1013\": [0, 0.43056, 0, 0.05556],\n    },\n    \"Math-Regular\": {\n        \"65\": [0, 0.68333, 0, 0.13889],\n        \"66\": [0, 0.68333, 0.05017, 0.08334],\n        \"67\": [0, 0.68333, 0.07153, 0.08334],\n        \"68\": [0, 0.68333, 0.02778, 0.05556],\n        \"69\": [0, 0.68333, 0.05764, 0.08334],\n        \"70\": [0, 0.68333, 0.13889, 0.08334],\n        \"71\": [0, 0.68333, 0, 0.08334],\n        \"72\": [0, 0.68333, 0.08125, 0.05556],\n        \"73\": [0, 0.68333, 0.07847, 0.11111],\n        \"74\": [0, 0.68333, 0.09618, 0.16667],\n        \"75\": [0, 0.68333, 0.07153, 0.05556],\n        \"76\": [0, 0.68333, 0, 0.02778],\n        \"77\": [0, 0.68333, 0.10903, 0.08334],\n        \"78\": [0, 0.68333, 0.10903, 0.08334],\n        \"79\": [0, 0.68333, 0.02778, 0.08334],\n        \"80\": [0, 0.68333, 0.13889, 0.08334],\n        \"81\": [0.19444, 0.68333, 0, 0.08334],\n        \"82\": [0, 0.68333, 0.00773, 0.08334],\n        \"83\": [0, 0.68333, 0.05764, 0.08334],\n        \"84\": [0, 0.68333, 0.13889, 0.08334],\n        \"85\": [0, 0.68333, 0.10903, 0.02778],\n        \"86\": [0, 0.68333, 0.22222, 0],\n        \"87\": [0, 0.68333, 0.13889, 0],\n        \"88\": [0, 0.68333, 0.07847, 0.08334],\n        \"89\": [0, 0.68333, 0.22222, 0],\n        \"90\": [0, 0.68333, 0.07153, 0.08334],\n        \"97\": [0, 0.43056, 0, 0],\n        \"98\": [0, 0.69444, 0, 0],\n        \"99\": [0, 0.43056, 0, 0.05556],\n        \"100\": [0, 0.69444, 0, 0.16667],\n        \"101\": [0, 0.43056, 0, 0.05556],\n        \"102\": [0.19444, 0.69444, 0.10764, 0.16667],\n        \"103\": [0.19444, 0.43056, 0.03588, 0.02778],\n        \"104\": [0, 0.69444, 0, 0],\n        \"105\": [0, 0.65952, 0, 0],\n        \"106\": [0.19444, 0.65952, 0.05724, 0],\n        \"107\": [0, 0.69444, 0.03148, 0],\n        \"108\": [0, 0.69444, 0.01968, 0.08334],\n        \"109\": [0, 0.43056, 0, 0],\n        \"110\": [0, 0.43056, 0, 0],\n        \"111\": [0, 0.43056, 0, 0.05556],\n        \"112\": [0.19444, 0.43056, 0, 0.08334],\n        \"113\": [0.19444, 0.43056, 0.03588, 0.08334],\n        \"114\": [0, 0.43056, 0.02778, 0.05556],\n        \"115\": [0, 0.43056, 0, 0.05556],\n        \"116\": [0, 0.61508, 0, 0.08334],\n        \"117\": [0, 0.43056, 0, 0.02778],\n        \"118\": [0, 0.43056, 0.03588, 0.02778],\n        \"119\": [0, 0.43056, 0.02691, 0.08334],\n        \"120\": [0, 0.43056, 0, 0.02778],\n        \"121\": [0.19444, 0.43056, 0.03588, 0.05556],\n        \"122\": [0, 0.43056, 0.04398, 0.05556],\n        \"915\": [0, 0.68333, 0.13889, 0.08334],\n        \"916\": [0, 0.68333, 0, 0.16667],\n        \"920\": [0, 0.68333, 0.02778, 0.08334],\n        \"923\": [0, 0.68333, 0, 0.16667],\n        \"926\": [0, 0.68333, 0.07569, 0.08334],\n        \"928\": [0, 0.68333, 0.08125, 0.05556],\n        \"931\": [0, 0.68333, 0.05764, 0.08334],\n        \"933\": [0, 0.68333, 0.13889, 0.05556],\n        \"934\": [0, 0.68333, 0, 0.08334],\n        \"936\": [0, 0.68333, 0.11, 0.05556],\n        \"937\": [0, 0.68333, 0.05017, 0.08334],\n        \"945\": [0, 0.43056, 0.0037, 0.02778],\n        \"946\": [0.19444, 0.69444, 0.05278, 0.08334],\n        \"947\": [0.19444, 0.43056, 0.05556, 0],\n        \"948\": [0, 0.69444, 0.03785, 0.05556],\n        \"949\": [0, 0.43056, 0, 0.08334],\n        \"950\": [0.19444, 0.69444, 0.07378, 0.08334],\n        \"951\": [0.19444, 0.43056, 0.03588, 0.05556],\n        \"952\": [0, 0.69444, 0.02778, 0.08334],\n        \"953\": [0, 0.43056, 0, 0.05556],\n        \"954\": [0, 0.43056, 0, 0],\n        \"955\": [0, 0.69444, 0, 0],\n        \"956\": [0.19444, 0.43056, 0, 0.02778],\n        \"957\": [0, 0.43056, 0.06366, 0.02778],\n        \"958\": [0.19444, 0.69444, 0.04601, 0.11111],\n        \"959\": [0, 0.43056, 0, 0.05556],\n        \"960\": [0, 0.43056, 0.03588, 0],\n        \"961\": [0.19444, 0.43056, 0, 0.08334],\n        \"962\": [0.09722, 0.43056, 0.07986, 0.08334],\n        \"963\": [0, 0.43056, 0.03588, 0],\n        \"964\": [0, 0.43056, 0.1132, 0.02778],\n        \"965\": [0, 0.43056, 0.03588, 0.02778],\n        \"966\": [0.19444, 0.43056, 0, 0.08334],\n        \"967\": [0.19444, 0.43056, 0, 0.05556],\n        \"968\": [0.19444, 0.69444, 0.03588, 0.11111],\n        \"969\": [0, 0.43056, 0.03588, 0],\n        \"977\": [0, 0.69444, 0, 0.08334],\n        \"981\": [0.19444, 0.69444, 0, 0.08334],\n        \"982\": [0, 0.43056, 0.02778, 0],\n        \"1009\": [0.19444, 0.43056, 0, 0.08334],\n        \"1013\": [0, 0.43056, 0, 0.05556],\n    },\n    \"SansSerif-Regular\": {\n        \"33\": [0, 0.69444, 0, 0],\n        \"34\": [0, 0.69444, 0, 0],\n        \"35\": [0.19444, 0.69444, 0, 0],\n        \"36\": [0.05556, 0.75, 0, 0],\n        \"37\": [0.05556, 0.75, 0, 0],\n        \"38\": [0, 0.69444, 0, 0],\n        \"39\": [0, 0.69444, 0, 0],\n        \"40\": [0.25, 0.75, 0, 0],\n        \"41\": [0.25, 0.75, 0, 0],\n        \"42\": [0, 0.75, 0, 0],\n        \"43\": [0.08333, 0.58333, 0, 0],\n        \"44\": [0.125, 0.08333, 0, 0],\n        \"45\": [0, 0.44444, 0, 0],\n        \"46\": [0, 0.08333, 0, 0],\n        \"47\": [0.25, 0.75, 0, 0],\n        \"48\": [0, 0.65556, 0, 0],\n        \"49\": [0, 0.65556, 0, 0],\n        \"50\": [0, 0.65556, 0, 0],\n        \"51\": [0, 0.65556, 0, 0],\n        \"52\": [0, 0.65556, 0, 0],\n        \"53\": [0, 0.65556, 0, 0],\n        \"54\": [0, 0.65556, 0, 0],\n        \"55\": [0, 0.65556, 0, 0],\n        \"56\": [0, 0.65556, 0, 0],\n        \"57\": [0, 0.65556, 0, 0],\n        \"58\": [0, 0.44444, 0, 0],\n        \"59\": [0.125, 0.44444, 0, 0],\n        \"61\": [-0.13, 0.37, 0, 0],\n        \"63\": [0, 0.69444, 0, 0],\n        \"64\": [0, 0.69444, 0, 0],\n        \"65\": [0, 0.69444, 0, 0],\n        \"66\": [0, 0.69444, 0, 0],\n        \"67\": [0, 0.69444, 0, 0],\n        \"68\": [0, 0.69444, 0, 0],\n        \"69\": [0, 0.69444, 0, 0],\n        \"70\": [0, 0.69444, 0, 0],\n        \"71\": [0, 0.69444, 0, 0],\n        \"72\": [0, 0.69444, 0, 0],\n        \"73\": [0, 0.69444, 0, 0],\n        \"74\": [0, 0.69444, 0, 0],\n        \"75\": [0, 0.69444, 0, 0],\n        \"76\": [0, 0.69444, 0, 0],\n        \"77\": [0, 0.69444, 0, 0],\n        \"78\": [0, 0.69444, 0, 0],\n        \"79\": [0, 0.69444, 0, 0],\n        \"80\": [0, 0.69444, 0, 0],\n        \"81\": [0.125, 0.69444, 0, 0],\n        \"82\": [0, 0.69444, 0, 0],\n        \"83\": [0, 0.69444, 0, 0],\n        \"84\": [0, 0.69444, 0, 0],\n        \"85\": [0, 0.69444, 0, 0],\n        \"86\": [0, 0.69444, 0.01389, 0],\n        \"87\": [0, 0.69444, 0.01389, 0],\n        \"88\": [0, 0.69444, 0, 0],\n        \"89\": [0, 0.69444, 0.025, 0],\n        \"90\": [0, 0.69444, 0, 0],\n        \"91\": [0.25, 0.75, 0, 0],\n        \"93\": [0.25, 0.75, 0, 0],\n        \"94\": [0, 0.69444, 0, 0],\n        \"95\": [0.35, 0.09444, 0.02778, 0],\n        \"97\": [0, 0.44444, 0, 0],\n        \"98\": [0, 0.69444, 0, 0],\n        \"99\": [0, 0.44444, 0, 0],\n        \"100\": [0, 0.69444, 0, 0],\n        \"101\": [0, 0.44444, 0, 0],\n        \"102\": [0, 0.69444, 0.06944, 0],\n        \"103\": [0.19444, 0.44444, 0.01389, 0],\n        \"104\": [0, 0.69444, 0, 0],\n        \"105\": [0, 0.67937, 0, 0],\n        \"106\": [0.19444, 0.67937, 0, 0],\n        \"107\": [0, 0.69444, 0, 0],\n        \"108\": [0, 0.69444, 0, 0],\n        \"109\": [0, 0.44444, 0, 0],\n        \"110\": [0, 0.44444, 0, 0],\n        \"111\": [0, 0.44444, 0, 0],\n        \"112\": [0.19444, 0.44444, 0, 0],\n        \"113\": [0.19444, 0.44444, 0, 0],\n        \"114\": [0, 0.44444, 0.01389, 0],\n        \"115\": [0, 0.44444, 0, 0],\n        \"116\": [0, 0.57143, 0, 0],\n        \"117\": [0, 0.44444, 0, 0],\n        \"118\": [0, 0.44444, 0.01389, 0],\n        \"119\": [0, 0.44444, 0.01389, 0],\n        \"120\": [0, 0.44444, 0, 0],\n        \"121\": [0.19444, 0.44444, 0.01389, 0],\n        \"122\": [0, 0.44444, 0, 0],\n        \"126\": [0.35, 0.32659, 0, 0],\n        \"305\": [0, 0.44444, 0, 0],\n        \"567\": [0.19444, 0.44444, 0, 0],\n        \"768\": [0, 0.69444, 0, 0],\n        \"769\": [0, 0.69444, 0, 0],\n        \"770\": [0, 0.69444, 0, 0],\n        \"771\": [0, 0.67659, 0, 0],\n        \"772\": [0, 0.60889, 0, 0],\n        \"774\": [0, 0.69444, 0, 0],\n        \"775\": [0, 0.67937, 0, 0],\n        \"776\": [0, 0.67937, 0, 0],\n        \"778\": [0, 0.69444, 0, 0],\n        \"779\": [0, 0.69444, 0, 0],\n        \"780\": [0, 0.63194, 0, 0],\n        \"915\": [0, 0.69444, 0, 0],\n        \"916\": [0, 0.69444, 0, 0],\n        \"920\": [0, 0.69444, 0, 0],\n        \"923\": [0, 0.69444, 0, 0],\n        \"926\": [0, 0.69444, 0, 0],\n        \"928\": [0, 0.69444, 0, 0],\n        \"931\": [0, 0.69444, 0, 0],\n        \"933\": [0, 0.69444, 0, 0],\n        \"934\": [0, 0.69444, 0, 0],\n        \"936\": [0, 0.69444, 0, 0],\n        \"937\": [0, 0.69444, 0, 0],\n        \"8211\": [0, 0.44444, 0.02778, 0],\n        \"8212\": [0, 0.44444, 0.02778, 0],\n        \"8216\": [0, 0.69444, 0, 0],\n        \"8217\": [0, 0.69444, 0, 0],\n        \"8220\": [0, 0.69444, 0, 0],\n        \"8221\": [0, 0.69444, 0, 0],\n    },\n    \"Script-Regular\": {\n        \"65\": [0, 0.7, 0.22925, 0],\n        \"66\": [0, 0.7, 0.04087, 0],\n        \"67\": [0, 0.7, 0.1689, 0],\n        \"68\": [0, 0.7, 0.09371, 0],\n        \"69\": [0, 0.7, 0.18583, 0],\n        \"70\": [0, 0.7, 0.13634, 0],\n        \"71\": [0, 0.7, 0.17322, 0],\n        \"72\": [0, 0.7, 0.29694, 0],\n        \"73\": [0, 0.7, 0.19189, 0],\n        \"74\": [0.27778, 0.7, 0.19189, 0],\n        \"75\": [0, 0.7, 0.31259, 0],\n        \"76\": [0, 0.7, 0.19189, 0],\n        \"77\": [0, 0.7, 0.15981, 0],\n        \"78\": [0, 0.7, 0.3525, 0],\n        \"79\": [0, 0.7, 0.08078, 0],\n        \"80\": [0, 0.7, 0.08078, 0],\n        \"81\": [0, 0.7, 0.03305, 0],\n        \"82\": [0, 0.7, 0.06259, 0],\n        \"83\": [0, 0.7, 0.19189, 0],\n        \"84\": [0, 0.7, 0.29087, 0],\n        \"85\": [0, 0.7, 0.25815, 0],\n        \"86\": [0, 0.7, 0.27523, 0],\n        \"87\": [0, 0.7, 0.27523, 0],\n        \"88\": [0, 0.7, 0.26006, 0],\n        \"89\": [0, 0.7, 0.2939, 0],\n        \"90\": [0, 0.7, 0.24037, 0],\n    },\n    \"Size1-Regular\": {\n        \"40\": [0.35001, 0.85, 0, 0],\n        \"41\": [0.35001, 0.85, 0, 0],\n        \"47\": [0.35001, 0.85, 0, 0],\n        \"91\": [0.35001, 0.85, 0, 0],\n        \"92\": [0.35001, 0.85, 0, 0],\n        \"93\": [0.35001, 0.85, 0, 0],\n        \"123\": [0.35001, 0.85, 0, 0],\n        \"125\": [0.35001, 0.85, 0, 0],\n        \"710\": [0, 0.72222, 0, 0],\n        \"732\": [0, 0.72222, 0, 0],\n        \"770\": [0, 0.72222, 0, 0],\n        \"771\": [0, 0.72222, 0, 0],\n        \"8214\": [-0.00099, 0.601, 0, 0],\n        \"8593\": [1e-05, 0.6, 0, 0],\n        \"8595\": [1e-05, 0.6, 0, 0],\n        \"8657\": [1e-05, 0.6, 0, 0],\n        \"8659\": [1e-05, 0.6, 0, 0],\n        \"8719\": [0.25001, 0.75, 0, 0],\n        \"8720\": [0.25001, 0.75, 0, 0],\n        \"8721\": [0.25001, 0.75, 0, 0],\n        \"8730\": [0.35001, 0.85, 0, 0],\n        \"8739\": [-0.00599, 0.606, 0, 0],\n        \"8741\": [-0.00599, 0.606, 0, 0],\n        \"8747\": [0.30612, 0.805, 0.19445, 0],\n        \"8748\": [0.306, 0.805, 0.19445, 0],\n        \"8749\": [0.306, 0.805, 0.19445, 0],\n        \"8750\": [0.30612, 0.805, 0.19445, 0],\n        \"8896\": [0.25001, 0.75, 0, 0],\n        \"8897\": [0.25001, 0.75, 0, 0],\n        \"8898\": [0.25001, 0.75, 0, 0],\n        \"8899\": [0.25001, 0.75, 0, 0],\n        \"8968\": [0.35001, 0.85, 0, 0],\n        \"8969\": [0.35001, 0.85, 0, 0],\n        \"8970\": [0.35001, 0.85, 0, 0],\n        \"8971\": [0.35001, 0.85, 0, 0],\n        \"9168\": [-0.00099, 0.601, 0, 0],\n        \"10216\": [0.35001, 0.85, 0, 0],\n        \"10217\": [0.35001, 0.85, 0, 0],\n        \"10752\": [0.25001, 0.75, 0, 0],\n        \"10753\": [0.25001, 0.75, 0, 0],\n        \"10754\": [0.25001, 0.75, 0, 0],\n        \"10756\": [0.25001, 0.75, 0, 0],\n        \"10758\": [0.25001, 0.75, 0, 0],\n    },\n    \"Size2-Regular\": {\n        \"40\": [0.65002, 1.15, 0, 0],\n        \"41\": [0.65002, 1.15, 0, 0],\n        \"47\": [0.65002, 1.15, 0, 0],\n        \"91\": [0.65002, 1.15, 0, 0],\n        \"92\": [0.65002, 1.15, 0, 0],\n        \"93\": [0.65002, 1.15, 0, 0],\n        \"123\": [0.65002, 1.15, 0, 0],\n        \"125\": [0.65002, 1.15, 0, 0],\n        \"710\": [0, 0.75, 0, 0],\n        \"732\": [0, 0.75, 0, 0],\n        \"770\": [0, 0.75, 0, 0],\n        \"771\": [0, 0.75, 0, 0],\n        \"8719\": [0.55001, 1.05, 0, 0],\n        \"8720\": [0.55001, 1.05, 0, 0],\n        \"8721\": [0.55001, 1.05, 0, 0],\n        \"8730\": [0.65002, 1.15, 0, 0],\n        \"8747\": [0.86225, 1.36, 0.44445, 0],\n        \"8748\": [0.862, 1.36, 0.44445, 0],\n        \"8749\": [0.862, 1.36, 0.44445, 0],\n        \"8750\": [0.86225, 1.36, 0.44445, 0],\n        \"8896\": [0.55001, 1.05, 0, 0],\n        \"8897\": [0.55001, 1.05, 0, 0],\n        \"8898\": [0.55001, 1.05, 0, 0],\n        \"8899\": [0.55001, 1.05, 0, 0],\n        \"8968\": [0.65002, 1.15, 0, 0],\n        \"8969\": [0.65002, 1.15, 0, 0],\n        \"8970\": [0.65002, 1.15, 0, 0],\n        \"8971\": [0.65002, 1.15, 0, 0],\n        \"10216\": [0.65002, 1.15, 0, 0],\n        \"10217\": [0.65002, 1.15, 0, 0],\n        \"10752\": [0.55001, 1.05, 0, 0],\n        \"10753\": [0.55001, 1.05, 0, 0],\n        \"10754\": [0.55001, 1.05, 0, 0],\n        \"10756\": [0.55001, 1.05, 0, 0],\n        \"10758\": [0.55001, 1.05, 0, 0],\n    },\n    \"Size3-Regular\": {\n        \"40\": [0.95003, 1.45, 0, 0],\n        \"41\": [0.95003, 1.45, 0, 0],\n        \"47\": [0.95003, 1.45, 0, 0],\n        \"91\": [0.95003, 1.45, 0, 0],\n        \"92\": [0.95003, 1.45, 0, 0],\n        \"93\": [0.95003, 1.45, 0, 0],\n        \"123\": [0.95003, 1.45, 0, 0],\n        \"125\": [0.95003, 1.45, 0, 0],\n        \"710\": [0, 0.75, 0, 0],\n        \"732\": [0, 0.75, 0, 0],\n        \"770\": [0, 0.75, 0, 0],\n        \"771\": [0, 0.75, 0, 0],\n        \"8730\": [0.95003, 1.45, 0, 0],\n        \"8968\": [0.95003, 1.45, 0, 0],\n        \"8969\": [0.95003, 1.45, 0, 0],\n        \"8970\": [0.95003, 1.45, 0, 0],\n        \"8971\": [0.95003, 1.45, 0, 0],\n        \"10216\": [0.95003, 1.45, 0, 0],\n        \"10217\": [0.95003, 1.45, 0, 0],\n    },\n    \"Size4-Regular\": {\n        \"40\": [1.25003, 1.75, 0, 0],\n        \"41\": [1.25003, 1.75, 0, 0],\n        \"47\": [1.25003, 1.75, 0, 0],\n        \"91\": [1.25003, 1.75, 0, 0],\n        \"92\": [1.25003, 1.75, 0, 0],\n        \"93\": [1.25003, 1.75, 0, 0],\n        \"123\": [1.25003, 1.75, 0, 0],\n        \"125\": [1.25003, 1.75, 0, 0],\n        \"710\": [0, 0.825, 0, 0],\n        \"732\": [0, 0.825, 0, 0],\n        \"770\": [0, 0.825, 0, 0],\n        \"771\": [0, 0.825, 0, 0],\n        \"8730\": [1.25003, 1.75, 0, 0],\n        \"8968\": [1.25003, 1.75, 0, 0],\n        \"8969\": [1.25003, 1.75, 0, 0],\n        \"8970\": [1.25003, 1.75, 0, 0],\n        \"8971\": [1.25003, 1.75, 0, 0],\n        \"9115\": [0.64502, 1.155, 0, 0],\n        \"9116\": [1e-05, 0.6, 0, 0],\n        \"9117\": [0.64502, 1.155, 0, 0],\n        \"9118\": [0.64502, 1.155, 0, 0],\n        \"9119\": [1e-05, 0.6, 0, 0],\n        \"9120\": [0.64502, 1.155, 0, 0],\n        \"9121\": [0.64502, 1.155, 0, 0],\n        \"9122\": [-0.00099, 0.601, 0, 0],\n        \"9123\": [0.64502, 1.155, 0, 0],\n        \"9124\": [0.64502, 1.155, 0, 0],\n        \"9125\": [-0.00099, 0.601, 0, 0],\n        \"9126\": [0.64502, 1.155, 0, 0],\n        \"9127\": [1e-05, 0.9, 0, 0],\n        \"9128\": [0.65002, 1.15, 0, 0],\n        \"9129\": [0.90001, 0, 0, 0],\n        \"9130\": [0, 0.3, 0, 0],\n        \"9131\": [1e-05, 0.9, 0, 0],\n        \"9132\": [0.65002, 1.15, 0, 0],\n        \"9133\": [0.90001, 0, 0, 0],\n        \"9143\": [0.88502, 0.915, 0, 0],\n        \"10216\": [1.25003, 1.75, 0, 0],\n        \"10217\": [1.25003, 1.75, 0, 0],\n        \"57344\": [-0.00499, 0.605, 0, 0],\n        \"57345\": [-0.00499, 0.605, 0, 0],\n        \"57680\": [0, 0.12, 0, 0],\n        \"57681\": [0, 0.12, 0, 0],\n        \"57682\": [0, 0.12, 0, 0],\n        \"57683\": [0, 0.12, 0, 0],\n    },\n    \"Typewriter-Regular\": {\n        \"33\": [0, 0.61111, 0, 0],\n        \"34\": [0, 0.61111, 0, 0],\n        \"35\": [0, 0.61111, 0, 0],\n        \"36\": [0.08333, 0.69444, 0, 0],\n        \"37\": [0.08333, 0.69444, 0, 0],\n        \"38\": [0, 0.61111, 0, 0],\n        \"39\": [0, 0.61111, 0, 0],\n        \"40\": [0.08333, 0.69444, 0, 0],\n        \"41\": [0.08333, 0.69444, 0, 0],\n        \"42\": [0, 0.52083, 0, 0],\n        \"43\": [-0.08056, 0.53055, 0, 0],\n        \"44\": [0.13889, 0.125, 0, 0],\n        \"45\": [-0.08056, 0.53055, 0, 0],\n        \"46\": [0, 0.125, 0, 0],\n        \"47\": [0.08333, 0.69444, 0, 0],\n        \"48\": [0, 0.61111, 0, 0],\n        \"49\": [0, 0.61111, 0, 0],\n        \"50\": [0, 0.61111, 0, 0],\n        \"51\": [0, 0.61111, 0, 0],\n        \"52\": [0, 0.61111, 0, 0],\n        \"53\": [0, 0.61111, 0, 0],\n        \"54\": [0, 0.61111, 0, 0],\n        \"55\": [0, 0.61111, 0, 0],\n        \"56\": [0, 0.61111, 0, 0],\n        \"57\": [0, 0.61111, 0, 0],\n        \"58\": [0, 0.43056, 0, 0],\n        \"59\": [0.13889, 0.43056, 0, 0],\n        \"60\": [-0.05556, 0.55556, 0, 0],\n        \"61\": [-0.19549, 0.41562, 0, 0],\n        \"62\": [-0.05556, 0.55556, 0, 0],\n        \"63\": [0, 0.61111, 0, 0],\n        \"64\": [0, 0.61111, 0, 0],\n        \"65\": [0, 0.61111, 0, 0],\n        \"66\": [0, 0.61111, 0, 0],\n        \"67\": [0, 0.61111, 0, 0],\n        \"68\": [0, 0.61111, 0, 0],\n        \"69\": [0, 0.61111, 0, 0],\n        \"70\": [0, 0.61111, 0, 0],\n        \"71\": [0, 0.61111, 0, 0],\n        \"72\": [0, 0.61111, 0, 0],\n        \"73\": [0, 0.61111, 0, 0],\n        \"74\": [0, 0.61111, 0, 0],\n        \"75\": [0, 0.61111, 0, 0],\n        \"76\": [0, 0.61111, 0, 0],\n        \"77\": [0, 0.61111, 0, 0],\n        \"78\": [0, 0.61111, 0, 0],\n        \"79\": [0, 0.61111, 0, 0],\n        \"80\": [0, 0.61111, 0, 0],\n        \"81\": [0.13889, 0.61111, 0, 0],\n        \"82\": [0, 0.61111, 0, 0],\n        \"83\": [0, 0.61111, 0, 0],\n        \"84\": [0, 0.61111, 0, 0],\n        \"85\": [0, 0.61111, 0, 0],\n        \"86\": [0, 0.61111, 0, 0],\n        \"87\": [0, 0.61111, 0, 0],\n        \"88\": [0, 0.61111, 0, 0],\n        \"89\": [0, 0.61111, 0, 0],\n        \"90\": [0, 0.61111, 0, 0],\n        \"91\": [0.08333, 0.69444, 0, 0],\n        \"92\": [0.08333, 0.69444, 0, 0],\n        \"93\": [0.08333, 0.69444, 0, 0],\n        \"94\": [0, 0.61111, 0, 0],\n        \"95\": [0.09514, 0, 0, 0],\n        \"96\": [0, 0.61111, 0, 0],\n        \"97\": [0, 0.43056, 0, 0],\n        \"98\": [0, 0.61111, 0, 0],\n        \"99\": [0, 0.43056, 0, 0],\n        \"100\": [0, 0.61111, 0, 0],\n        \"101\": [0, 0.43056, 0, 0],\n        \"102\": [0, 0.61111, 0, 0],\n        \"103\": [0.22222, 0.43056, 0, 0],\n        \"104\": [0, 0.61111, 0, 0],\n        \"105\": [0, 0.61111, 0, 0],\n        \"106\": [0.22222, 0.61111, 0, 0],\n        \"107\": [0, 0.61111, 0, 0],\n        \"108\": [0, 0.61111, 0, 0],\n        \"109\": [0, 0.43056, 0, 0],\n        \"110\": [0, 0.43056, 0, 0],\n        \"111\": [0, 0.43056, 0, 0],\n        \"112\": [0.22222, 0.43056, 0, 0],\n        \"113\": [0.22222, 0.43056, 0, 0],\n        \"114\": [0, 0.43056, 0, 0],\n        \"115\": [0, 0.43056, 0, 0],\n        \"116\": [0, 0.55358, 0, 0],\n        \"117\": [0, 0.43056, 0, 0],\n        \"118\": [0, 0.43056, 0, 0],\n        \"119\": [0, 0.43056, 0, 0],\n        \"120\": [0, 0.43056, 0, 0],\n        \"121\": [0.22222, 0.43056, 0, 0],\n        \"122\": [0, 0.43056, 0, 0],\n        \"123\": [0.08333, 0.69444, 0, 0],\n        \"124\": [0.08333, 0.69444, 0, 0],\n        \"125\": [0.08333, 0.69444, 0, 0],\n        \"126\": [0, 0.61111, 0, 0],\n        \"127\": [0, 0.61111, 0, 0],\n        \"305\": [0, 0.43056, 0, 0],\n        \"567\": [0.22222, 0.43056, 0, 0],\n        \"768\": [0, 0.61111, 0, 0],\n        \"769\": [0, 0.61111, 0, 0],\n        \"770\": [0, 0.61111, 0, 0],\n        \"771\": [0, 0.61111, 0, 0],\n        \"772\": [0, 0.56555, 0, 0],\n        \"774\": [0, 0.61111, 0, 0],\n        \"776\": [0, 0.61111, 0, 0],\n        \"778\": [0, 0.61111, 0, 0],\n        \"780\": [0, 0.56597, 0, 0],\n        \"915\": [0, 0.61111, 0, 0],\n        \"916\": [0, 0.61111, 0, 0],\n        \"920\": [0, 0.61111, 0, 0],\n        \"923\": [0, 0.61111, 0, 0],\n        \"926\": [0, 0.61111, 0, 0],\n        \"928\": [0, 0.61111, 0, 0],\n        \"931\": [0, 0.61111, 0, 0],\n        \"933\": [0, 0.61111, 0, 0],\n        \"934\": [0, 0.61111, 0, 0],\n        \"936\": [0, 0.61111, 0, 0],\n        \"937\": [0, 0.61111, 0, 0],\n        \"2018\": [0, 0.61111, 0, 0],\n        \"2019\": [0, 0.61111, 0, 0],\n        \"8242\": [0, 0.61111, 0, 0],\n    },\n};\n","// most Object methods by ES6 should accept primitives\nvar $export = require('./_export');\nvar core = require('./_core');\nvar fails = require('./_fails');\nmodule.exports = function (KEY, exec) {\n  var fn = (core.Object || {})[KEY] || Object[KEY];\n  var exp = {};\n  exp[KEY] = exec(fn);\n  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);\n};\n","/** internal\n * class ParserBlock\n *\n * Block-level tokenizer.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\nvar _rules = [\n  // First 2 params - rule name & source. Secondary array - list of rules,\n  // which can be terminated by this one.\n  [ 'table',      require('./rules_block/table'),      [ 'paragraph', 'reference' ] ],\n  [ 'code',       require('./rules_block/code') ],\n  [ 'fence',      require('./rules_block/fence'),      [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'blockquote', require('./rules_block/blockquote'), [ 'paragraph', 'reference', 'list' ] ],\n  [ 'hr',         require('./rules_block/hr'),         [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'list',       require('./rules_block/list'),       [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'reference',  require('./rules_block/reference') ],\n  [ 'heading',    require('./rules_block/heading'),    [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'lheading',   require('./rules_block/lheading') ],\n  [ 'html_block', require('./rules_block/html_block'), [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'paragraph',  require('./rules_block/paragraph') ]\n];\n\n\n/**\n * new ParserBlock()\n **/\nfunction ParserBlock() {\n  /**\n   * ParserBlock#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of block rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], { alt: (_rules[i][2] || []).slice() });\n  }\n}\n\n\n// Generate tokens for input range\n//\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      line = startLine,\n      hasEmptyLines = false,\n      maxNesting = state.md.options.maxNesting;\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line);\n    if (line >= endLine) { break; }\n\n    // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n    if (state.sCount[line] < state.blkIndent) { break; }\n\n    // If nesting level exceeded - skip tail to the end. That's not ordinary\n    // situation and we should not care about content.\n    if (state.level >= maxNesting) {\n      state.line = endLine;\n      break;\n    }\n\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n\n    for (i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false);\n      if (ok) { break; }\n    }\n\n    // set state.tight iff we had an empty line before current tag\n    // i.e. latest empty line should not count\n    state.tight = !hasEmptyLines;\n\n    // paragraph might \"eat\" one newline after it in nested lists\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true;\n    }\n\n    line = state.line;\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true;\n      line++;\n\n      // two empty lines should stop the parser in list mode\n      if (line < endLine && state.parentType === 'list' && state.isEmpty(line)) { break; }\n      state.line = line;\n    }\n  }\n};\n\n\n/**\n * ParserBlock.parse(str, md, env, outTokens)\n *\n * Process input string and push block tokens into `outTokens`\n **/\nParserBlock.prototype.parse = function (src, md, env, outTokens) {\n  var state;\n\n  if (!src) { return; }\n\n  state = new this.State(src, md, env, outTokens);\n\n  this.tokenize(state, state.line, state.lineMax);\n};\n\n\nParserBlock.prototype.State = require('./rules_block/state_block');\n\n\nmodule.exports = ParserBlock;\n","var utils = require(\"./utils\");\nvar ParseError = require(\"./ParseError\");\n\n/* This file contains a list of functions that we parse, identified by\n * the calls to defineFunction.\n *\n * The first argument to defineFunction is a single name or a list of names.\n * All functions named in such a list will share a single implementation.\n *\n * Each declared function can have associated properties, which\n * include the following:\n *\n *  - numArgs: The number of arguments the function takes.\n *             If this is the only property, it can be passed as a number\n *             instead of an element of a properties object.\n *  - argTypes: (optional) An array corresponding to each argument of the\n *              function, giving the type of argument that should be parsed. Its\n *              length should be equal to `numArgs + numOptionalArgs`. Valid\n *              types:\n *               - \"size\": A size-like thing, such as \"1em\" or \"5ex\"\n *               - \"color\": An html color, like \"#abc\" or \"blue\"\n *               - \"original\": The same type as the environment that the\n *                             function being parsed is in (e.g. used for the\n *                             bodies of functions like \\color where the first\n *                             argument is special and the second argument is\n *                             parsed normally)\n *              Other possible types (probably shouldn't be used)\n *               - \"text\": Text-like (e.g. \\text)\n *               - \"math\": Normal math\n *              If undefined, this will be treated as an appropriate length\n *              array of \"original\" strings\n *  - greediness: (optional) The greediness of the function to use ungrouped\n *                arguments.\n *\n *                E.g. if you have an expression\n *                  \\sqrt \\frac 1 2\n *                since \\frac has greediness=2 vs \\sqrt's greediness=1, \\frac\n *                will use the two arguments '1' and '2' as its two arguments,\n *                then that whole function will be used as the argument to\n *                \\sqrt. On the other hand, the expressions\n *                  \\frac \\frac 1 2 3\n *                and\n *                  \\frac \\sqrt 1 2\n *                will fail because \\frac and \\frac have equal greediness\n *                and \\sqrt has a lower greediness than \\frac respectively. To\n *                make these parse, we would have to change them to:\n *                  \\frac {\\frac 1 2} 3\n *                and\n *                  \\frac {\\sqrt 1} 2\n *\n *                The default value is `1`\n *  - allowedInText: (optional) Whether or not the function is allowed inside\n *                   text mode (default false)\n *  - numOptionalArgs: (optional) The number of optional arguments the function\n *                     should parse. If the optional arguments aren't found,\n *                     `null` will be passed to the handler in their place.\n *                     (default 0)\n *\n * The last argument is that implementation, the handler for the function(s).\n * It is called to handle these functions and their arguments.\n * It receives two arguments:\n *  - context contains information and references provided by the parser\n *  - args is an array of arguments obtained from TeX input\n * The context contains the following properties:\n *  - funcName: the text (i.e. name) of the function, including \\\n *  - parser: the parser object\n *  - lexer: the lexer object\n *  - positions: the positions in the overall string of the function\n *               and the arguments.\n * The latter three should only be used to produce error messages.\n *\n * The function should return an object with the following keys:\n *  - type: The type of element that this is. This is then used in\n *          buildHTML/buildMathML to determine which function\n *          should be called to build this node into a DOM node\n * Any other data can be added to the object, which will be passed\n * in to the function in buildHTML/buildMathML as `group.value`.\n */\n\nfunction defineFunction(names, props, handler) {\n    if (typeof names === \"string\") {\n        names = [names];\n    }\n    if (typeof props === \"number\") {\n        props = { numArgs: props };\n    }\n    // Set default values of functions\n    var data = {\n        numArgs: props.numArgs,\n        argTypes: props.argTypes,\n        greediness: (props.greediness === undefined) ? 1 : props.greediness,\n        allowedInText: !!props.allowedInText,\n        numOptionalArgs: props.numOptionalArgs || 0,\n        handler: handler,\n    };\n    for (var i = 0; i < names.length; ++i) {\n        module.exports[names[i]] = data;\n    }\n}\n\n// A normal square root\ndefineFunction(\"\\\\sqrt\", {\n    numArgs: 1,\n    numOptionalArgs: 1,\n}, function(context, args) {\n    var index = args[0];\n    var body = args[1];\n    return {\n        type: \"sqrt\",\n        body: body,\n        index: index,\n    };\n});\n\n// Some non-mathy text\ndefineFunction(\"\\\\text\", {\n    numArgs: 1,\n    argTypes: [\"text\"],\n    greediness: 2,\n}, function(context, args) {\n    var body = args[0];\n    // Since the corresponding buildHTML/buildMathML function expects a\n    // list of elements, we normalize for different kinds of arguments\n    // TODO(emily): maybe this should be done somewhere else\n    var inner;\n    if (body.type === \"ordgroup\") {\n        inner = body.value;\n    } else {\n        inner = [body];\n    }\n\n    return {\n        type: \"text\",\n        body: inner,\n    };\n});\n\n// A two-argument custom color\ndefineFunction(\"\\\\color\", {\n    numArgs: 2,\n    allowedInText: true,\n    greediness: 3,\n    argTypes: [\"color\", \"original\"],\n}, function(context, args) {\n    var color = args[0];\n    var body = args[1];\n    // Normalize the different kinds of bodies (see \\text above)\n    var inner;\n    if (body.type === \"ordgroup\") {\n        inner = body.value;\n    } else {\n        inner = [body];\n    }\n\n    return {\n        type: \"color\",\n        color: color.value,\n        value: inner,\n    };\n});\n\n// An overline\ndefineFunction(\"\\\\overline\", {\n    numArgs: 1,\n}, function(context, args) {\n    var body = args[0];\n    return {\n        type: \"overline\",\n        body: body,\n    };\n});\n\n// An underline\ndefineFunction(\"\\\\underline\", {\n    numArgs: 1,\n}, function(context, args) {\n    var body = args[0];\n    return {\n        type: \"underline\",\n        body: body,\n    };\n});\n\n// A box of the width and height\ndefineFunction(\"\\\\rule\", {\n    numArgs: 2,\n    numOptionalArgs: 1,\n    argTypes: [\"size\", \"size\", \"size\"],\n}, function(context, args) {\n    var shift = args[0];\n    var width = args[1];\n    var height = args[2];\n    return {\n        type: \"rule\",\n        shift: shift && shift.value,\n        width: width.value,\n        height: height.value,\n    };\n});\n\n// A KaTeX logo\ndefineFunction(\"\\\\KaTeX\", {\n    numArgs: 0,\n}, function(context) {\n    return {\n        type: \"katex\",\n    };\n});\n\ndefineFunction(\"\\\\phantom\", {\n    numArgs: 1,\n}, function(context, args) {\n    var body = args[0];\n    var inner;\n    if (body.type === \"ordgroup\") {\n        inner = body.value;\n    } else {\n        inner = [body];\n    }\n\n    return {\n        type: \"phantom\",\n        value: inner,\n    };\n});\n\n// Extra data needed for the delimiter handler down below\nvar delimiterSizes = {\n    \"\\\\bigl\" : {type: \"open\",    size: 1},\n    \"\\\\Bigl\" : {type: \"open\",    size: 2},\n    \"\\\\biggl\": {type: \"open\",    size: 3},\n    \"\\\\Biggl\": {type: \"open\",    size: 4},\n    \"\\\\bigr\" : {type: \"close\",   size: 1},\n    \"\\\\Bigr\" : {type: \"close\",   size: 2},\n    \"\\\\biggr\": {type: \"close\",   size: 3},\n    \"\\\\Biggr\": {type: \"close\",   size: 4},\n    \"\\\\bigm\" : {type: \"rel\",     size: 1},\n    \"\\\\Bigm\" : {type: \"rel\",     size: 2},\n    \"\\\\biggm\": {type: \"rel\",     size: 3},\n    \"\\\\Biggm\": {type: \"rel\",     size: 4},\n    \"\\\\big\"  : {type: \"textord\", size: 1},\n    \"\\\\Big\"  : {type: \"textord\", size: 2},\n    \"\\\\bigg\" : {type: \"textord\", size: 3},\n    \"\\\\Bigg\" : {type: \"textord\", size: 4},\n};\n\nvar delimiters = [\n    \"(\", \")\", \"[\", \"\\\\lbrack\", \"]\", \"\\\\rbrack\",\n    \"\\\\{\", \"\\\\lbrace\", \"\\\\}\", \"\\\\rbrace\",\n    \"\\\\lfloor\", \"\\\\rfloor\", \"\\\\lceil\", \"\\\\rceil\",\n    \"<\", \">\", \"\\\\langle\", \"\\\\rangle\", \"\\\\lt\", \"\\\\gt\",\n    \"\\\\lvert\", \"\\\\rvert\", \"\\\\lVert\", \"\\\\rVert\",\n    \"\\\\lgroup\", \"\\\\rgroup\", \"\\\\lmoustache\", \"\\\\rmoustache\",\n    \"/\", \"\\\\backslash\",\n    \"|\", \"\\\\vert\", \"\\\\|\", \"\\\\Vert\",\n    \"\\\\uparrow\", \"\\\\Uparrow\",\n    \"\\\\downarrow\", \"\\\\Downarrow\",\n    \"\\\\updownarrow\", \"\\\\Updownarrow\",\n    \".\",\n];\n\nvar fontAliases = {\n    \"\\\\Bbb\": \"\\\\mathbb\",\n    \"\\\\bold\": \"\\\\mathbf\",\n    \"\\\\frak\": \"\\\\mathfrak\",\n};\n\n// Single-argument color functions\ndefineFunction([\n    \"\\\\blue\", \"\\\\orange\", \"\\\\pink\", \"\\\\red\",\n    \"\\\\green\", \"\\\\gray\", \"\\\\purple\",\n    \"\\\\blueA\", \"\\\\blueB\", \"\\\\blueC\", \"\\\\blueD\", \"\\\\blueE\",\n    \"\\\\tealA\", \"\\\\tealB\", \"\\\\tealC\", \"\\\\tealD\", \"\\\\tealE\",\n    \"\\\\greenA\", \"\\\\greenB\", \"\\\\greenC\", \"\\\\greenD\", \"\\\\greenE\",\n    \"\\\\goldA\", \"\\\\goldB\", \"\\\\goldC\", \"\\\\goldD\", \"\\\\goldE\",\n    \"\\\\redA\", \"\\\\redB\", \"\\\\redC\", \"\\\\redD\", \"\\\\redE\",\n    \"\\\\maroonA\", \"\\\\maroonB\", \"\\\\maroonC\", \"\\\\maroonD\", \"\\\\maroonE\",\n    \"\\\\purpleA\", \"\\\\purpleB\", \"\\\\purpleC\", \"\\\\purpleD\", \"\\\\purpleE\",\n    \"\\\\mintA\", \"\\\\mintB\", \"\\\\mintC\",\n    \"\\\\grayA\", \"\\\\grayB\", \"\\\\grayC\", \"\\\\grayD\", \"\\\\grayE\",\n    \"\\\\grayF\", \"\\\\grayG\", \"\\\\grayH\", \"\\\\grayI\",\n    \"\\\\kaBlue\", \"\\\\kaGreen\",\n], {\n    numArgs: 1,\n    allowedInText: true,\n    greediness: 3,\n}, function(context, args) {\n    var body = args[0];\n    var atoms;\n    if (body.type === \"ordgroup\") {\n        atoms = body.value;\n    } else {\n        atoms = [body];\n    }\n\n    return {\n        type: \"color\",\n        color: \"katex-\" + context.funcName.slice(1),\n        value: atoms,\n    };\n});\n\n// There are 2 flags for operators; whether they produce limits in\n// displaystyle, and whether they are symbols and should grow in\n// displaystyle. These four groups cover the four possible choices.\n\n// No limits, not symbols\ndefineFunction([\n    \"\\\\arcsin\", \"\\\\arccos\", \"\\\\arctan\", \"\\\\arg\", \"\\\\cos\", \"\\\\cosh\",\n    \"\\\\cot\", \"\\\\coth\", \"\\\\csc\", \"\\\\deg\", \"\\\\dim\", \"\\\\exp\", \"\\\\hom\",\n    \"\\\\ker\", \"\\\\lg\", \"\\\\ln\", \"\\\\log\", \"\\\\sec\", \"\\\\sin\", \"\\\\sinh\",\n    \"\\\\tan\", \"\\\\tanh\",\n], {\n    numArgs: 0,\n}, function(context) {\n    return {\n        type: \"op\",\n        limits: false,\n        symbol: false,\n        body: context.funcName,\n    };\n});\n\n// Limits, not symbols\ndefineFunction([\n    \"\\\\det\", \"\\\\gcd\", \"\\\\inf\", \"\\\\lim\", \"\\\\liminf\", \"\\\\limsup\", \"\\\\max\",\n    \"\\\\min\", \"\\\\Pr\", \"\\\\sup\",\n], {\n    numArgs: 0,\n}, function(context) {\n    return {\n        type: \"op\",\n        limits: true,\n        symbol: false,\n        body: context.funcName,\n    };\n});\n\n// No limits, symbols\ndefineFunction([\n    \"\\\\int\", \"\\\\iint\", \"\\\\iiint\", \"\\\\oint\",\n], {\n    numArgs: 0,\n}, function(context) {\n    return {\n        type: \"op\",\n        limits: false,\n        symbol: true,\n        body: context.funcName,\n    };\n});\n\n// Limits, symbols\ndefineFunction([\n    \"\\\\coprod\", \"\\\\bigvee\", \"\\\\bigwedge\", \"\\\\biguplus\", \"\\\\bigcap\",\n    \"\\\\bigcup\", \"\\\\intop\", \"\\\\prod\", \"\\\\sum\", \"\\\\bigotimes\",\n    \"\\\\bigoplus\", \"\\\\bigodot\", \"\\\\bigsqcup\", \"\\\\smallint\",\n], {\n    numArgs: 0,\n}, function(context) {\n    return {\n        type: \"op\",\n        limits: true,\n        symbol: true,\n        body: context.funcName,\n    };\n});\n\n// Fractions\ndefineFunction([\n    \"\\\\dfrac\", \"\\\\frac\", \"\\\\tfrac\",\n    \"\\\\dbinom\", \"\\\\binom\", \"\\\\tbinom\",\n], {\n    numArgs: 2,\n    greediness: 2,\n}, function(context, args) {\n    var numer = args[0];\n    var denom = args[1];\n    var hasBarLine;\n    var leftDelim = null;\n    var rightDelim = null;\n    var size = \"auto\";\n\n    switch (context.funcName) {\n        case \"\\\\dfrac\":\n        case \"\\\\frac\":\n        case \"\\\\tfrac\":\n            hasBarLine = true;\n            break;\n        case \"\\\\dbinom\":\n        case \"\\\\binom\":\n        case \"\\\\tbinom\":\n            hasBarLine = false;\n            leftDelim = \"(\";\n            rightDelim = \")\";\n            break;\n        default:\n            throw new Error(\"Unrecognized genfrac command\");\n    }\n\n    switch (context.funcName) {\n        case \"\\\\dfrac\":\n        case \"\\\\dbinom\":\n            size = \"display\";\n            break;\n        case \"\\\\tfrac\":\n        case \"\\\\tbinom\":\n            size = \"text\";\n            break;\n    }\n\n    return {\n        type: \"genfrac\",\n        numer: numer,\n        denom: denom,\n        hasBarLine: hasBarLine,\n        leftDelim: leftDelim,\n        rightDelim: rightDelim,\n        size: size,\n    };\n});\n\n// Left and right overlap functions\ndefineFunction([\"\\\\llap\", \"\\\\rlap\"], {\n    numArgs: 1,\n    allowedInText: true,\n}, function(context, args) {\n    var body = args[0];\n    return {\n        type: context.funcName.slice(1),\n        body: body,\n    };\n});\n\n// Delimiter functions\ndefineFunction([\n    \"\\\\bigl\", \"\\\\Bigl\", \"\\\\biggl\", \"\\\\Biggl\",\n    \"\\\\bigr\", \"\\\\Bigr\", \"\\\\biggr\", \"\\\\Biggr\",\n    \"\\\\bigm\", \"\\\\Bigm\", \"\\\\biggm\", \"\\\\Biggm\",\n    \"\\\\big\",  \"\\\\Big\",  \"\\\\bigg\",  \"\\\\Bigg\",\n    \"\\\\left\", \"\\\\right\",\n], {\n    numArgs: 1,\n}, function(context, args) {\n    var delim = args[0];\n    if (!utils.contains(delimiters, delim.value)) {\n        throw new ParseError(\n            \"Invalid delimiter: '\" + delim.value + \"' after '\" +\n                context.funcName + \"'\",\n            context.lexer, context.positions[1]);\n    }\n\n    // \\left and \\right are caught somewhere in Parser.js, which is\n    // why this data doesn't match what is in buildHTML.\n    if (context.funcName === \"\\\\left\" || context.funcName === \"\\\\right\") {\n        return {\n            type: \"leftright\",\n            value: delim.value,\n        };\n    } else {\n        return {\n            type: \"delimsizing\",\n            size: delimiterSizes[context.funcName].size,\n            delimType: delimiterSizes[context.funcName].type,\n            value: delim.value,\n        };\n    }\n});\n\n// Sizing functions (handled in Parser.js explicitly, hence no handler)\ndefineFunction([\n    \"\\\\tiny\", \"\\\\scriptsize\", \"\\\\footnotesize\", \"\\\\small\",\n    \"\\\\normalsize\", \"\\\\large\", \"\\\\Large\", \"\\\\LARGE\", \"\\\\huge\", \"\\\\Huge\",\n], 0, null);\n\n// Style changing functions (handled in Parser.js explicitly, hence no\n// handler)\ndefineFunction([\n    \"\\\\displaystyle\", \"\\\\textstyle\", \"\\\\scriptstyle\",\n    \"\\\\scriptscriptstyle\",\n], 0, null);\n\ndefineFunction([\n    // styles\n    \"\\\\mathrm\", \"\\\\mathit\", \"\\\\mathbf\",\n\n    // families\n    \"\\\\mathbb\", \"\\\\mathcal\", \"\\\\mathfrak\", \"\\\\mathscr\", \"\\\\mathsf\",\n    \"\\\\mathtt\",\n\n    // aliases\n    \"\\\\Bbb\", \"\\\\bold\", \"\\\\frak\",\n], {\n    numArgs: 1,\n    greediness: 2,\n}, function(context, args) {\n    var body = args[0];\n    var func = context.funcName;\n    if (func in fontAliases) {\n        func = fontAliases[func];\n    }\n    return {\n        type: \"font\",\n        font: func.slice(1),\n        body: body,\n    };\n});\n\n// Accents\ndefineFunction([\n    \"\\\\acute\", \"\\\\grave\", \"\\\\ddot\", \"\\\\tilde\", \"\\\\bar\", \"\\\\breve\",\n    \"\\\\check\", \"\\\\hat\", \"\\\\vec\", \"\\\\dot\",\n    // We don't support expanding accents yet\n    // \"\\\\widetilde\", \"\\\\widehat\"\n], {\n    numArgs: 1,\n}, function(context, args) {\n    var base = args[0];\n    return {\n        type: \"accent\",\n        accent: context.funcName,\n        base: base,\n    };\n});\n\n// Infix generalized fractions\ndefineFunction([\"\\\\over\", \"\\\\choose\"], {\n    numArgs: 0,\n}, function(context) {\n    var replaceWith;\n    switch (context.funcName) {\n        case \"\\\\over\":\n            replaceWith = \"\\\\frac\";\n            break;\n        case \"\\\\choose\":\n            replaceWith = \"\\\\binom\";\n            break;\n        default:\n            throw new Error(\"Unrecognized infix genfrac command\");\n    }\n    return {\n        type: \"infix\",\n        replaceWith: replaceWith,\n    };\n});\n\n// Row breaks for aligned data\ndefineFunction([\"\\\\\\\\\", \"\\\\cr\"], {\n    numArgs: 0,\n    numOptionalArgs: 1,\n    argTypes: [\"size\"],\n}, function(context, args) {\n    var size = args[0];\n    return {\n        type: \"cr\",\n        size: size,\n    };\n});\n\n// Environment delimiters\ndefineFunction([\"\\\\begin\", \"\\\\end\"], {\n    numArgs: 1,\n    argTypes: [\"text\"],\n}, function(context, args) {\n    var nameGroup = args[0];\n    if (nameGroup.type !== \"ordgroup\") {\n        throw new ParseError(\n            \"Invalid environment name\",\n            context.lexer, context.positions[1]);\n    }\n    var name = \"\";\n    for (var i = 0; i < nameGroup.value.length; ++i) {\n        name += nameGroup.value[i].value;\n    }\n    return {\n        type: \"environment\",\n        name: name,\n        namepos: context.positions[1],\n    };\n});\n","// Process ^superscript^\n\n'use strict';\n\n// same as UNESCAPE_MD_RE plus a space\nvar UNESCAPE_RE = /\\\\([ \\\\!\"#$%&'()*+,.\\/:;<=>?@[\\]^_`{|}~-])/g;\n\nfunction superscript(state, silent) {\n  var found,\n      content,\n      token,\n      max = state.posMax,\n      start = state.pos;\n\n  if (state.src.charCodeAt(start) !== 0x5E/* ^ */) { return false; }\n  if (silent) { return false; } // don't run any pairs in validation mode\n  if (start + 2 >= max) { return false; }\n\n  state.pos = start + 1;\n\n  while (state.pos < max) {\n    if (state.src.charCodeAt(state.pos) === 0x5E/* ^ */) {\n      found = true;\n      break;\n    }\n\n    state.md.inline.skipToken(state);\n  }\n\n  if (!found || start + 1 === state.pos) {\n    state.pos = start;\n    return false;\n  }\n\n  content = state.src.slice(start + 1, state.pos);\n\n  // don't allow unescaped spaces/newlines inside\n  if (content.match(/(^|[^\\\\])(\\\\\\\\)*\\s/)) {\n    state.pos = start;\n    return false;\n  }\n\n  // found!\n  state.posMax = state.pos;\n  state.pos = start + 1;\n\n  // Earlier we checked !silent, but this implementation does not need it\n  token         = state.push('sup_open', 'sup', 1);\n  token.markup  = '^';\n\n  token         = state.push('text', '', 0);\n  token.content = content.replace(UNESCAPE_RE, '$1');\n\n  token         = state.push('sup_close', 'sup', -1);\n  token.markup  = '^';\n\n  state.pos = state.posMax + 1;\n  state.posMax = max;\n  return true;\n}\n\n\nmodule.exports = function sup_plugin(md) {\n  md.inline.ruler.after('emphasis', 'sup', superscript);\n};\n","module.exports=/[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4E\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDF55-\\uDF59]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/","/**\n * class Renderer\n *\n * Generates HTML from parsed token stream. Each instance has independent\n * copy of rules. Those can be rewritten with ease. Also, you can add new\n * rules if you create plugin and adds new token types.\n **/\n'use strict';\n\n\nvar assign          = require('./common/utils').assign;\nvar unescapeAll     = require('./common/utils').unescapeAll;\nvar escapeHtml      = require('./common/utils').escapeHtml;\n\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar default_rules = {};\n\n\ndefault_rules.code_inline = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx],\n      attrs = slf.renderAttrs(token);\n\n  return  '<code' + (attrs ? ' ' + attrs : '') + '>' +\n          escapeHtml(tokens[idx].content) +\n          '</code>';\n};\n\n\ndefault_rules.code_block = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx],\n      attrs = slf.renderAttrs(token);\n\n  return  '<pre' + (attrs ? ' ' + attrs : '') + '><code>' +\n          escapeHtml(tokens[idx].content) +\n          '</code></pre>\\n';\n};\n\n\ndefault_rules.fence = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx],\n      info = token.info ? unescapeAll(token.info).trim() : '',\n      langName = '',\n      highlighted, i, tmpAttrs, tmpToken;\n\n  if (info) {\n    langName = info.split(/\\s+/g)[0];\n  }\n\n  if (options.highlight) {\n    highlighted = options.highlight(token.content, langName) || escapeHtml(token.content);\n  } else {\n    highlighted = escapeHtml(token.content);\n  }\n\n  if (highlighted.indexOf('<pre') === 0) {\n    return highlighted + '\\n';\n  }\n\n  // If language exists, inject class gently, without mudofying original token.\n  // May be, one day we will add .clone() for token and simplify this part, but\n  // now we prefer to keep things local.\n  if (info) {\n    i        = token.attrIndex('class');\n    tmpAttrs = token.attrs ? token.attrs.slice() : [];\n\n    if (i < 0) {\n      tmpAttrs.push([ 'class', options.langPrefix + langName ]);\n    } else {\n      tmpAttrs[i] += ' ' + options.langPrefix + langName;\n    }\n\n    // Fake token just to render attributes\n    tmpToken = {\n      attrs: tmpAttrs\n    };\n\n    return  '<pre><code' + slf.renderAttrs(tmpToken) + '>'\n          + highlighted\n          + '</code></pre>\\n';\n  }\n\n\n  return  '<pre><code' + slf.renderAttrs(token) + '>'\n        + highlighted\n        + '</code></pre>\\n';\n};\n\n\ndefault_rules.image = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n  // should be placed on proper position for tests.\n  //\n  // Replace content with actual value\n\n  token.attrs[token.attrIndex('alt')][1] =\n    slf.renderInlineAsText(token.children, options, env);\n\n  return slf.renderToken(tokens, idx, options);\n};\n\n\ndefault_rules.hardbreak = function (tokens, idx, options /*, env */) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n';\n};\ndefault_rules.softbreak = function (tokens, idx, options /*, env */) {\n  return options.breaks ? (options.xhtmlOut ? '<br />\\n' : '<br>\\n') : '\\n';\n};\n\n\ndefault_rules.text = function (tokens, idx /*, options, env */) {\n  return escapeHtml(tokens[idx].content);\n};\n\n\ndefault_rules.html_block = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\ndefault_rules.html_inline = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\n\n\n/**\n * new Renderer()\n *\n * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n **/\nfunction Renderer() {\n\n  /**\n   * Renderer#rules -> Object\n   *\n   * Contains render rules for tokens. Can be updated and extended.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * md.renderer.rules.strong_open  = function () { return '<b>'; };\n   * md.renderer.rules.strong_close = function () { return '</b>'; };\n   *\n   * var result = md.renderInline(...);\n   * ```\n   *\n   * Each rule is called as independed static function with fixed signature:\n   *\n   * ```javascript\n   * function my_token_render(tokens, idx, options, env, renderer) {\n   *   // ...\n   *   return renderedHTML;\n   * }\n   * ```\n   *\n   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js)\n   * for more details and examples.\n   **/\n  this.rules = assign({}, default_rules);\n}\n\n\n/**\n * Renderer.renderAttrs(token) -> String\n *\n * Render token attributes to string.\n **/\nRenderer.prototype.renderAttrs = function renderAttrs(token) {\n  var i, l, result;\n\n  if (!token.attrs) { return ''; }\n\n  result = '';\n\n  for (i = 0, l = token.attrs.length; i < l; i++) {\n    result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"';\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.renderToken(tokens, idx, options) -> String\n * - tokens (Array): list of tokens\n * - idx (Numbed): token index to render\n * - options (Object): params of parser instance\n *\n * Default token renderer. Can be overriden by custom function\n * in [[Renderer#rules]].\n **/\nRenderer.prototype.renderToken = function renderToken(tokens, idx, options) {\n  var nextToken,\n      result = '',\n      needLf = false,\n      token = tokens[idx];\n\n  // Tight list paragraphs\n  if (token.hidden) {\n    return '';\n  }\n\n  // Insert a newline between hidden paragraph and subsequent opening\n  // block-level tag.\n  //\n  // For example, here we should insert a newline before blockquote:\n  //  - a\n  //    >\n  //\n  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n    result += '\\n';\n  }\n\n  // Add token name, e.g. `<img`\n  result += (token.nesting === -1 ? '</' : '<') + token.tag;\n\n  // Encode attributes, e.g. `<img src=\"foo\"`\n  result += this.renderAttrs(token);\n\n  // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n  if (token.nesting === 0 && options.xhtmlOut) {\n    result += ' /';\n  }\n\n  // Check if we need to add a newline after this tag\n  if (token.block) {\n    needLf = true;\n\n    if (token.nesting === 1) {\n      if (idx + 1 < tokens.length) {\n        nextToken = tokens[idx + 1];\n\n        if (nextToken.type === 'inline' || nextToken.hidden) {\n          // Block-level tag containing an inline tag.\n          //\n          needLf = false;\n\n        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n          // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n          //\n          needLf = false;\n        }\n      }\n    }\n  }\n\n  result += needLf ? '>\\n' : '>';\n\n  return result;\n};\n\n\n/**\n * Renderer.renderInline(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * The same as [[Renderer.render]], but for single token of `inline` type.\n **/\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  var type,\n      result = '',\n      rules = this.rules;\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options);\n    }\n  }\n\n  return result;\n};\n\n\n/** internal\n * Renderer.renderInlineAsText(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Special kludge for image `alt` attributes to conform CommonMark spec.\n * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n * instead of simple escaping.\n **/\nRenderer.prototype.renderInlineAsText = function (tokens, options, env) {\n  var result = '';\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    if (tokens[i].type === 'text') {\n      result += tokens[i].content;\n    } else if (tokens[i].type === 'image') {\n      result += this.renderInlineAsText(tokens[i].children, options, env);\n    }\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.render(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Takes token stream and generates HTML. Probably, you will never need to call\n * this method directly.\n **/\nRenderer.prototype.render = function (tokens, options, env) {\n  var i, len, type,\n      result = '',\n      rules = this.rules;\n\n  for (i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env);\n    } else if (typeof rules[type] !== 'undefined') {\n      result += rules[tokens[i].type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options, env);\n    }\n  }\n\n  return result;\n};\n\nmodule.exports = Renderer;\n","require('../modules/web.dom.iterable');\nrequire('../modules/es6.string.iterator');\nmodule.exports = require('../modules/core.get-iterator');\n","// Parse link title\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkTitle(str, pos, max) {\n  var code,\n      marker,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (pos >= max) { return result; }\n\n  marker = str.charCodeAt(pos);\n\n  if (marker !== 0x22 /* \" */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) { return result; }\n\n  pos++;\n\n  // if opening marker is \"(\", switch it to closing marker \")\"\n  if (marker === 0x28) { marker = 0x29; }\n\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n    if (code === marker) {\n      result.pos = pos + 1;\n      result.lines = lines;\n      result.str = unescapeAll(str.slice(start + 1, pos));\n      result.ok = true;\n      return result;\n    } else if (code === 0x0A) {\n      lines++;\n    } else if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos++;\n      if (str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n\n    pos++;\n  }\n\n  return result;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar $find = require('../internals/array-iteration').find;\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\nvar FIND = 'find';\nvar SKIPS_HOLES = true;\n\n// Shouldn't skip holes\nif (FIND in []) Array(1)[FIND](function () { SKIPS_HOLES = false; });\n\n// `Array.prototype.find` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.find\n$({ target: 'Array', proto: true, forced: SKIPS_HOLES }, {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables(FIND);\n","/*\n * List of Unicode code that are flagged as mark.\n *\n * Contains Unicode code of:\n * - Mc = Mark, spacing combining\n * - Me = Mark, enclosing\n * - Mn = Mark, nonspacing\n *\n * This list has been computed from http://unicode.org/Public/UNIDATA/UnicodeData.txt\n * curl -s http://unicode.org/Public/UNIDATA/UnicodeData.txt | grep -E ';Mc;|;Me;|;Mn;' | cut -d \\; -f 1 | xargs -I{} printf '%d, ' 0x{}\n *\n */\nexports.M = [768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1471, 1473, 1474, 1476, 1477, 1479, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1648, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1759, 1760, 1761, 1762, 1763, 1764, 1767, 1768, 1770, 1771, 1772, 1773, 1809, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2070, 2071, 2072, 2073, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2085, 2086, 2087, 2089, 2090, 2091, 2092, 2093, 2137, 2138, 2139, 2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306, 2307, 2362, 2363, 2364, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2402, 2403, 2433, 2434, 2435, 2492, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2503, 2504, 2507, 2508, 2509, 2519, 2530, 2531, 2561, 2562, 2563, 2620, 2622, 2623, 2624, 2625, 2626, 2631, 2632, 2635, 2636, 2637, 2641, 2672, 2673, 2677, 2689, 2690, 2691, 2748, 2750, 2751, 2752, 2753, 2754, 2755, 2756, 2757, 2759, 2760, 2761, 2763, 2764, 2765, 2786, 2787, 2817, 2818, 2819, 2876, 2878, 2879, 2880, 2881, 2882, 2883, 2884, 2887, 2888, 2891, 2892, 2893, 2902, 2903, 2914, 2915, 2946, 3006, 3007, 3008, 3009, 3010, 3014, 3015, 3016, 3018, 3019, 3020, 3021, 3031, 3072, 3073, 3074, 3075, 3134, 3135, 3136, 3137, 3138, 3139, 3140, 3142, 3143, 3144, 3146, 3147, 3148, 3149, 3157, 3158, 3170, 3171, 3201, 3202, 3203, 3260, 3262, 3263, 3264, 3265, 3266, 3267, 3268, 3270, 3271, 3272, 3274, 3275, 3276, 3277, 3285, 3286, 3298, 3299, 3329, 3330, 3331, 3390, 3391, 3392, 3393, 3394, 3395, 3396, 3398, 3399, 3400, 3402, 3403, 3404, 3405, 3415, 3426, 3427, 3458, 3459, 3530, 3535, 3536, 3537, 3538, 3539, 3540, 3542, 3544, 3545, 3546, 3547, 3548, 3549, 3550, 3551, 3570, 3571, 3633, 3636, 3637, 3638, 3639, 3640, 3641, 3642, 3655, 3656, 3657, 3658, 3659, 3660, 3661, 3662, 3761, 3764, 3765, 3766, 3767, 3768, 3769, 3771, 3772, 3784, 3785, 3786, 3787, 3788, 3789, 3864, 3865, 3893, 3895, 3897, 3902, 3903, 3953, 3954, 3955, 3956, 3957, 3958, 3959, 3960, 3961, 3962, 3963, 3964, 3965, 3966, 3967, 3968, 3969, 3970, 3971, 3972, 3974, 3975, 3981, 3982, 3983, 3984, 3985, 3986, 3987, 3988, 3989, 3990, 3991, 3993, 3994, 3995, 3996, 3997, 3998, 3999, 4000, 4001, 4002, 4003, 4004, 4005, 4006, 4007, 4008, 4009, 4010, 4011, 4012, 4013, 4014, 4015, 4016, 4017, 4018, 4019, 4020, 4021, 4022, 4023, 4024, 4025, 4026, 4027, 4028, 4038, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4152, 4153, 4154, 4155, 4156, 4157, 4158, 4182, 4183, 4184, 4185, 4190, 4191, 4192, 4194, 4195, 4196, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4209, 4210, 4211, 4212, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4239, 4250, 4251, 4252, 4253, 4957, 4958, 4959, 5906, 5907, 5908, 5938, 5939, 5940, 5970, 5971, 6002, 6003, 6068, 6069, 6070, 6071, 6072, 6073, 6074, 6075, 6076, 6077, 6078, 6079, 6080, 6081, 6082, 6083, 6084, 6085, 6086, 6087, 6088, 6089, 6090, 6091, 6092, 6093, 6094, 6095, 6096, 6097, 6098, 6099, 6109, 6155, 6156, 6157, 6313, 6432, 6433, 6434, 6435, 6436, 6437, 6438, 6439, 6440, 6441, 6442, 6443, 6448, 6449, 6450, 6451, 6452, 6453, 6454, 6455, 6456, 6457, 6458, 6459, 6679, 6680, 6681, 6682, 6683, 6741, 6742, 6743, 6744, 6745, 6746, 6747, 6748, 6749, 6750, 6752, 6753, 6754, 6755, 6756, 6757, 6758, 6759, 6760, 6761, 6762, 6763, 6764, 6765, 6766, 6767, 6768, 6769, 6770, 6771, 6772, 6773, 6774, 6775, 6776, 6777, 6778, 6779, 6780, 6783, 6832, 6833, 6834, 6835, 6836, 6837, 6838, 6839, 6840, 6841, 6842, 6843, 6844, 6845, 6846, 6912, 6913, 6914, 6915, 6916, 6964, 6965, 6966, 6967, 6968, 6969, 6970, 6971, 6972, 6973, 6974, 6975, 6976, 6977, 6978, 6979, 6980, 7019, 7020, 7021, 7022, 7023, 7024, 7025, 7026, 7027, 7040, 7041, 7042, 7073, 7074, 7075, 7076, 7077, 7078, 7079, 7080, 7081, 7082, 7083, 7084, 7085, 7142, 7143, 7144, 7145, 7146, 7147, 7148, 7149, 7150, 7151, 7152, 7153, 7154, 7155, 7204, 7205, 7206, 7207, 7208, 7209, 7210, 7211, 7212, 7213, 7214, 7215, 7216, 7217, 7218, 7219, 7220, 7221, 7222, 7223, 7376, 7377, 7378, 7380, 7381, 7382, 7383, 7384, 7385, 7386, 7387, 7388, 7389, 7390, 7391, 7392, 7393, 7394, 7395, 7396, 7397, 7398, 7399, 7400, 7405, 7410, 7411, 7412, 7416, 7417, 7616, 7617, 7618, 7619, 7620, 7621, 7622, 7623, 7624, 7625, 7626, 7627, 7628, 7629, 7630, 7631, 7632, 7633, 7634, 7635, 7636, 7637, 7638, 7639, 7640, 7641, 7642, 7643, 7644, 7645, 7646, 7647, 7648, 7649, 7650, 7651, 7652, 7653, 7654, 7655, 7656, 7657, 7658, 7659, 7660, 7661, 7662, 7663, 7664, 7665, 7666, 7667, 7668, 7669, 7676, 7677, 7678, 7679, 8400, 8401, 8402, 8403, 8404, 8405, 8406, 8407, 8408, 8409, 8410, 8411, 8412, 8413, 8414, 8415, 8416, 8417, 8418, 8419, 8420, 8421, 8422, 8423, 8424, 8425, 8426, 8427, 8428, 8429, 8430, 8431, 8432, 11503, 11504, 11505, 11647, 11744, 11745, 11746, 11747, 11748, 11749, 11750, 11751, 11752, 11753, 11754, 11755, 11756, 11757, 11758, 11759, 11760, 11761, 11762, 11763, 11764, 11765, 11766, 11767, 11768, 11769, 11770, 11771, 11772, 11773, 11774, 11775, 12330, 12331, 12332, 12333, 12334, 12335, 12441, 12442, 42607, 42608, 42609, 42610, 42612, 42613, 42614, 42615, 42616, 42617, 42618, 42619, 42620, 42621, 42654, 42655, 42736, 42737, 43010, 43014, 43019, 43043, 43044, 43045, 43046, 43047, 43136, 43137, 43188, 43189, 43190, 43191, 43192, 43193, 43194, 43195, 43196, 43197, 43198, 43199, 43200, 43201, 43202, 43203, 43204, 43232, 43233, 43234, 43235, 43236, 43237, 43238, 43239, 43240, 43241, 43242, 43243, 43244, 43245, 43246, 43247, 43248, 43249, 43302, 43303, 43304, 43305, 43306, 43307, 43308, 43309, 43335, 43336, 43337, 43338, 43339, 43340, 43341, 43342, 43343, 43344, 43345, 43346, 43347, 43392, 43393, 43394, 43395, 43443, 43444, 43445, 43446, 43447, 43448, 43449, 43450, 43451, 43452, 43453, 43454, 43455, 43456, 43493, 43561, 43562, 43563, 43564, 43565, 43566, 43567, 43568, 43569, 43570, 43571, 43572, 43573, 43574, 43587, 43596, 43597, 43643, 43644, 43645, 43696, 43698, 43699, 43700, 43703, 43704, 43710, 43711, 43713, 43755, 43756, 43757, 43758, 43759, 43765, 43766, 44003, 44004, 44005, 44006, 44007, 44008, 44009, 44010, 44012, 44013, 64286, 65024, 65025, 65026, 65027, 65028, 65029, 65030, 65031, 65032, 65033, 65034, 65035, 65036, 65037, 65038, 65039, 65056, 65057, 65058, 65059, 65060, 65061, 65062, 65063, 65064, 65065, 65066, 65067, 65068, 65069, 65070, 65071, 66045, 66272, 66422, 66423, 66424, 66425, 66426, 68097, 68098, 68099, 68101, 68102, 68108, 68109, 68110, 68111, 68152, 68153, 68154, 68159, 68325, 68326, 69632, 69633, 69634, 69688, 69689, 69690, 69691, 69692, 69693, 69694, 69695, 69696, 69697, 69698, 69699, 69700, 69701, 69702, 69759, 69760, 69761, 69762, 69808, 69809, 69810, 69811, 69812, 69813, 69814, 69815, 69816, 69817, 69818, 69888, 69889, 69890, 69927, 69928, 69929, 69930, 69931, 69932, 69933, 69934, 69935, 69936, 69937, 69938, 69939, 69940, 70003, 70016, 70017, 70018, 70067, 70068, 70069, 70070, 70071, 70072, 70073, 70074, 70075, 70076, 70077, 70078, 70079, 70080, 70090, 70091, 70092, 70188, 70189, 70190, 70191, 70192, 70193, 70194, 70195, 70196, 70197, 70198, 70199, 70367, 70368, 70369, 70370, 70371, 70372, 70373, 70374, 70375, 70376, 70377, 70378, 70400, 70401, 70402, 70403, 70460, 70462, 70463, 70464, 70465, 70466, 70467, 70468, 70471, 70472, 70475, 70476, 70477, 70487, 70498, 70499, 70502, 70503, 70504, 70505, 70506, 70507, 70508, 70512, 70513, 70514, 70515, 70516, 70832, 70833, 70834, 70835, 70836, 70837, 70838, 70839, 70840, 70841, 70842, 70843, 70844, 70845, 70846, 70847, 70848, 70849, 70850, 70851, 71087, 71088, 71089, 71090, 71091, 71092, 71093, 71096, 71097, 71098, 71099, 71100, 71101, 71102, 71103, 71104, 71132, 71133, 71216, 71217, 71218, 71219, 71220, 71221, 71222, 71223, 71224, 71225, 71226, 71227, 71228, 71229, 71230, 71231, 71232, 71339, 71340, 71341, 71342, 71343, 71344, 71345, 71346, 71347, 71348, 71349, 71350, 71351, 71453, 71454, 71455, 71456, 71457, 71458, 71459, 71460, 71461, 71462, 71463, 71464, 71465, 71466, 71467, 92912, 92913, 92914, 92915, 92916, 92976, 92977, 92978, 92979, 92980, 92981, 92982, 94033, 94034, 94035, 94036, 94037, 94038, 94039, 94040, 94041, 94042, 94043, 94044, 94045, 94046, 94047, 94048, 94049, 94050, 94051, 94052, 94053, 94054, 94055, 94056, 94057, 94058, 94059, 94060, 94061, 94062, 94063, 94064, 94065, 94066, 94067, 94068, 94069, 94070, 94071, 94072, 94073, 94074, 94075, 94076, 94077, 94078, 94095, 94096, 94097, 94098, 113821, 113822, 119141, 119142, 119143, 119144, 119145, 119149, 119150, 119151, 119152, 119153, 119154, 119163, 119164, 119165, 119166, 119167, 119168, 119169, 119170, 119173, 119174, 119175, 119176, 119177, 119178, 119179, 119210, 119211, 119212, 119213, 119362, 119363, 119364, 121344, 121345, 121346, 121347, 121348, 121349, 121350, 121351, 121352, 121353, 121354, 121355, 121356, 121357, 121358, 121359, 121360, 121361, 121362, 121363, 121364, 121365, 121366, 121367, 121368, 121369, 121370, 121371, 121372, 121373, 121374, 121375, 121376, 121377, 121378, 121379, 121380, 121381, 121382, 121383, 121384, 121385, 121386, 121387, 121388, 121389, 121390, 121391, 121392, 121393, 121394, 121395, 121396, 121397, 121398, 121403, 121404, 121405, 121406, 121407, 121408, 121409, 121410, 121411, 121412, 121413, 121414, 121415, 121416, 121417, 121418, 121419, 121420, 121421, 121422, 121423, 121424, 121425, 121426, 121427, 121428, 121429, 121430, 121431, 121432, 121433, 121434, 121435, 121436, 121437, 121438, 121439, 121440, 121441, 121442, 121443, 121444, 121445, 121446, 121447, 121448, 121449, 121450, 121451, 121452, 121461, 121476, 121499, 121500, 121501, 121502, 121503, 121505, 121506, 121507, 121508, 121509, 121510, 121511, 121512, 121513, 121514, 121515, 121516, 121517, 121518, 121519, 125136, 125137, 125138, 125139, 125140, 125141, 125142, 917760, 917761, 917762, 917763, 917764, 917765, 917766, 917767, 917768, 917769, 917770, 917771, 917772, 917773, 917774, 917775, 917776, 917777, 917778, 917779, 917780, 917781, 917782, 917783, 917784, 917785, 917786, 917787, 917788, 917789, 917790, 917791, 917792, 917793, 917794, 917795, 917796, 917797, 917798, 917799, 917800, 917801, 917802, 917803, 917804, 917805, 917806, 917807, 917808, 917809, 917810, 917811, 917812, 917813, 917814, 917815, 917816, 917817, 917818, 917819, 917820, 917821, 917822, 917823, 917824, 917825, 917826, 917827, 917828, 917829, 917830, 917831, 917832, 917833, 917834, 917835, 917836, 917837, 917838, 917839, 917840, 917841, 917842, 917843, 917844, 917845, 917846, 917847, 917848, 917849, 917850, 917851, 917852, 917853, 917854, 917855, 917856, 917857, 917858, 917859, 917860, 917861, 917862, 917863, 917864, 917865, 917866, 917867, 917868, 917869, 917870, 917871, 917872, 917873, 917874, 917875, 917876, 917877, 917878, 917879, 917880, 917881, 917882, 917883, 917884, 917885, 917886, 917887, 917888, 917889, 917890, 917891, 917892, 917893, 917894, 917895, 917896, 917897, 917898, 917899, 917900, 917901, 917902, 917903, 917904, 917905, 917906, 917907, 917908, 917909, 917910, 917911, 917912, 917913, 917914, 917915, 917916, 917917, 917918, 917919, 917920, 917921, 917922, 917923, 917924, 917925, 917926, 917927, 917928, 917929, 917930, 917931, 917932, 917933, 917934, 917935, 917936, 917937, 917938, 917939, 917940, 917941, 917942, 917943, 917944, 917945, 917946, 917947, 917948, 917949, 917950, 917951, 917952, 917953, 917954, 917955, 917956, 917957, 917958, 917959, 917960, 917961, 917962, 917963, 917964, 917965, 917966, 917967, 917968, 917969, 917970, 917971, 917972, 917973, 917974, 917975, 917976, 917977, 917978, 917979, 917980, 917981, 917982, 917983, 917984, 917985, 917986, 917987, 917988, 917989, 917990, 917991, 917992, 917993, 917994, 917995, 917996, 917997, 917998, 917999];\n","// GFM table, non-standard\n\n'use strict';\n\n\nfunction getLine(state, line) {\n  var pos = state.bMarks[line] + state.blkIndent,\n      max = state.eMarks[line];\n\n  return state.src.substr(pos, max - pos);\n}\n\nfunction escapedSplit(str) {\n  var result = [],\n      pos = 0,\n      max = str.length,\n      ch,\n      escapes = 0,\n      lastPos = 0,\n      backTicked = false,\n      lastBackTick = 0;\n\n  ch  = str.charCodeAt(pos);\n\n  while (pos < max) {\n    if (ch === 0x60/* ` */ && (escapes % 2 === 0)) {\n      backTicked = !backTicked;\n      lastBackTick = pos;\n    } else if (ch === 0x7c/* | */ && (escapes % 2 === 0) && !backTicked) {\n      result.push(str.substring(lastPos, pos));\n      lastPos = pos + 1;\n    } else if (ch === 0x5c/* \\ */) {\n      escapes++;\n    } else {\n      escapes = 0;\n    }\n\n    pos++;\n\n    // If there was an un-closed backtick, go back to just after\n    // the last backtick, but as if it was a normal character\n    if (pos === max && backTicked) {\n      backTicked = false;\n      pos = lastBackTick + 1;\n    }\n\n    ch = str.charCodeAt(pos);\n  }\n\n  result.push(str.substring(lastPos));\n\n  return result;\n}\n\n\nmodule.exports = function table(state, startLine, endLine, silent) {\n  var ch, lineText, pos, i, nextLine, columns, columnCount, token,\n      aligns, t, tableLines, tbodyLines;\n\n  // should have at least three lines\n  if (startLine + 2 > endLine) { return false; }\n\n  nextLine = startLine + 1;\n\n  if (state.sCount[nextLine] < state.blkIndent) { return false; }\n\n  // first character of the second line should be '|' or '-'\n\n  pos = state.bMarks[nextLine] + state.tShift[nextLine];\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  ch = state.src.charCodeAt(pos);\n  if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */) { return false; }\n\n  lineText = getLine(state, startLine + 1);\n  if (!/^[-:| ]+$/.test(lineText)) { return false; }\n\n  columns = lineText.split('|');\n  aligns = [];\n  for (i = 0; i < columns.length; i++) {\n    t = columns[i].trim();\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) { return false; }\n    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {\n      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right');\n    } else if (t.charCodeAt(0) === 0x3A/* : */) {\n      aligns.push('left');\n    } else {\n      aligns.push('');\n    }\n  }\n\n  lineText = getLine(state, startLine).trim();\n  if (lineText.indexOf('|') === -1) { return false; }\n  columns = escapedSplit(lineText.replace(/^\\||\\|$/g, ''));\n\n  // header row will define an amount of columns in the entire table,\n  // and align row shouldn't be smaller than that (the rest of the rows can)\n  columnCount = columns.length;\n  if (columnCount > aligns.length) { return false; }\n\n  if (silent) { return true; }\n\n  token     = state.push('table_open', 'table', 1);\n  token.map = tableLines = [ startLine, 0 ];\n\n  token     = state.push('thead_open', 'thead', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  token     = state.push('tr_open', 'tr', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  for (i = 0; i < columns.length; i++) {\n    token          = state.push('th_open', 'th', 1);\n    token.map      = [ startLine, startLine + 1 ];\n    if (aligns[i]) {\n      token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n    }\n\n    token          = state.push('inline', '', 0);\n    token.content  = columns[i].trim();\n    token.map      = [ startLine, startLine + 1 ];\n    token.children = [];\n\n    token          = state.push('th_close', 'th', -1);\n  }\n\n  token     = state.push('tr_close', 'tr', -1);\n  token     = state.push('thead_close', 'thead', -1);\n\n  token     = state.push('tbody_open', 'tbody', 1);\n  token.map = tbodyLines = [ startLine + 2, 0 ];\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    lineText = getLine(state, nextLine);\n    if (lineText.indexOf('|') === -1) { break; }\n\n    // keep spaces at beginning of line to indicate an empty first cell, but\n    // strip trailing whitespace\n    columns = escapedSplit(lineText.replace(/^\\||\\|\\s*$/g, ''));\n\n    token = state.push('tr_open', 'tr', 1);\n    for (i = 0; i < columnCount; i++) {\n      token          = state.push('td_open', 'td', 1);\n      if (aligns[i]) {\n        token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n      }\n\n      token          = state.push('inline', '', 0);\n      token.content  = columns[i] ? columns[i].trim() : '';\n      token.children = [];\n\n      token          = state.push('td_close', 'td', -1);\n    }\n    token = state.push('tr_close', 'tr', -1);\n  }\n  token = state.push('tbody_close', 'tbody', -1);\n  token = state.push('table_close', 'table', -1);\n\n  tableLines[1] = tbodyLines[1] = nextLine;\n  state.line = nextLine;\n  return true;\n};\n","/* eslint no-constant-condition:0 */\nvar fontMetrics = require(\"./fontMetrics\");\nvar parseData = require(\"./parseData\");\nvar ParseError = require(\"./ParseError\");\n\nvar ParseNode = parseData.ParseNode;\n\n/**\n * Parse the body of the environment, with rows delimited by \\\\ and\n * columns delimited by &, and create a nested list in row-major order\n * with one group per cell.\n */\nfunction parseArray(parser, result) {\n    var row = [];\n    var body = [row];\n    var rowGaps = [];\n    while (true) {\n        var cell = parser.parseExpression(false, null);\n        row.push(new ParseNode(\"ordgroup\", cell, parser.mode));\n        var next = parser.nextToken.text;\n        if (next === \"&\") {\n            parser.consume();\n        } else if (next === \"\\\\end\") {\n            break;\n        } else if (next === \"\\\\\\\\\" || next === \"\\\\cr\") {\n            var cr = parser.parseFunction();\n            rowGaps.push(cr.value.size);\n            row = [];\n            body.push(row);\n        } else {\n            // TODO: Clean up the following hack once #385 got merged\n            var pos = Math.min(parser.pos + 1, parser.lexer._input.length);\n            throw new ParseError(\"Expected & or \\\\\\\\ or \\\\end\",\n                                 parser.lexer, pos);\n        }\n    }\n    result.body = body;\n    result.rowGaps = rowGaps;\n    return new ParseNode(result.type, result, parser.mode);\n}\n\n/*\n * An environment definition is very similar to a function definition:\n * it is declared with a name or a list of names, a set of properties\n * and a handler containing the actual implementation.\n *\n * The properties include:\n *  - numArgs: The number of arguments after the \\begin{name} function.\n *  - argTypes: (optional) Just like for a function\n *  - allowedInText: (optional) Whether or not the environment is allowed inside\n *                   text mode (default false) (not enforced yet)\n *  - numOptionalArgs: (optional) Just like for a function\n * A bare number instead of that object indicates the numArgs value.\n *\n * The handler function will receive two arguments\n *  - context: information and references provided by the parser\n *  - args: an array of arguments passed to \\begin{name}\n * The context contains the following properties:\n *  - envName: the name of the environment, one of the listed names.\n *  - parser: the parser object\n *  - lexer: the lexer object\n *  - positions: the positions associated with these arguments from args.\n * The handler must return a ParseResult.\n */\n\nfunction defineEnvironment(names, props, handler) {\n    if (typeof names === \"string\") {\n        names = [names];\n    }\n    if (typeof props === \"number\") {\n        props = { numArgs: props };\n    }\n    // Set default values of environments\n    var data = {\n        numArgs: props.numArgs || 0,\n        argTypes: props.argTypes,\n        greediness: 1,\n        allowedInText: !!props.allowedInText,\n        numOptionalArgs: props.numOptionalArgs || 0,\n        handler: handler,\n    };\n    for (var i = 0; i < names.length; ++i) {\n        module.exports[names[i]] = data;\n    }\n}\n\n// Arrays are part of LaTeX, defined in lttab.dtx so its documentation\n// is part of the source2e.pdf file of LaTeX2e source documentation.\ndefineEnvironment(\"array\", {\n    numArgs: 1,\n}, function(context, args) {\n    var colalign = args[0];\n    colalign = colalign.value.map ? colalign.value : [colalign];\n    var cols = colalign.map(function(node) {\n        var ca = node.value;\n        if (\"lcr\".indexOf(ca) !== -1) {\n            return {\n                type: \"align\",\n                align: ca,\n            };\n        } else if (ca === \"|\") {\n            return {\n                type: \"separator\",\n                separator: \"|\",\n            };\n        }\n        throw new ParseError(\n            \"Unknown column alignment: \" + node.value,\n            context.lexer, context.positions[1]);\n    });\n    var res = {\n        type: \"array\",\n        cols: cols,\n        hskipBeforeAndAfter: true, // \\@preamble in lttab.dtx\n    };\n    res = parseArray(context.parser, res);\n    return res;\n});\n\n// The matrix environments of amsmath builds on the array environment\n// of LaTeX, which is discussed above.\ndefineEnvironment([\n    \"matrix\",\n    \"pmatrix\",\n    \"bmatrix\",\n    \"Bmatrix\",\n    \"vmatrix\",\n    \"Vmatrix\",\n], {\n}, function(context) {\n    var delimiters = {\n        \"matrix\": null,\n        \"pmatrix\": [\"(\", \")\"],\n        \"bmatrix\": [\"[\", \"]\"],\n        \"Bmatrix\": [\"\\\\{\", \"\\\\}\"],\n        \"vmatrix\": [\"|\", \"|\"],\n        \"Vmatrix\": [\"\\\\Vert\", \"\\\\Vert\"],\n    }[context.envName];\n    var res = {\n        type: \"array\",\n        hskipBeforeAndAfter: false, // \\hskip -\\arraycolsep in amsmath\n    };\n    res = parseArray(context.parser, res);\n    if (delimiters) {\n        res = new ParseNode(\"leftright\", {\n            body: [res],\n            left: delimiters[0],\n            right: delimiters[1],\n        }, context.mode);\n    }\n    return res;\n});\n\n// A cases environment (in amsmath.sty) is almost equivalent to\n// \\def\\arraystretch{1.2}%\n// \\left\\{\\begin{array}{@{}l@{\\quad}l@{}} … \\end{array}\\right.\ndefineEnvironment(\"cases\", {\n}, function(context) {\n    var res = {\n        type: \"array\",\n        arraystretch: 1.2,\n        cols: [{\n            type: \"align\",\n            align: \"l\",\n            pregap: 0,\n            postgap: fontMetrics.metrics.quad,\n        }, {\n            type: \"align\",\n            align: \"l\",\n            pregap: 0,\n            postgap: 0,\n        }],\n    };\n    res = parseArray(context.parser, res);\n    res = new ParseNode(\"leftright\", {\n        body: [res],\n        left: \"\\\\{\",\n        right: \".\",\n    }, context.mode);\n    return res;\n});\n\n// An aligned environment is like the align* environment\n// except it operates within math mode.\n// Note that we assume \\nomallineskiplimit to be zero,\n// so that \\strut@ is the same as \\strut.\ndefineEnvironment(\"aligned\", {\n}, function(context) {\n    var res = {\n        type: \"array\",\n        cols: [],\n    };\n    res = parseArray(context.parser, res);\n    var emptyGroup = new ParseNode(\"ordgroup\", [], context.mode);\n    var numCols = 0;\n    res.value.body.forEach(function(row) {\n        var i;\n        for (i = 1; i < row.length; i += 2) {\n            row[i].value.unshift(emptyGroup);\n        }\n        if (numCols < row.length) {\n            numCols = row.length;\n        }\n    });\n    for (var i = 0; i < numCols; ++i) {\n        var align = \"r\";\n        var pregap = 0;\n        if (i % 2 === 1) {\n            align = \"l\";\n        } else if (i > 0) {\n            pregap = 2; // one \\qquad between columns\n        }\n        res.value.cols[i] = {\n            type: \"align\",\n            align: align,\n            pregap: pregap,\n            postgap: 0,\n        };\n    }\n    return res;\n});\n","// Parser state class\n\n'use strict';\n\nvar Token = require('../token');\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction StateBlock(src, md, env, tokens) {\n  var ch, s, start, pos, len, indent, offset, indent_found;\n\n  this.src = src;\n\n  // link to parser instance\n  this.md     = md;\n\n  this.env = env;\n\n  //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens;\n\n  this.bMarks = [];  // line begin offsets for fast jumps\n  this.eMarks = [];  // line end offsets for fast jumps\n  this.tShift = [];  // offsets of the first non-space characters (tabs not expanded)\n  this.sCount = [];  // indents for each line (tabs expanded)\n\n  // block parser variables\n  this.blkIndent  = 0; // required block content indent\n                       // (for example, if we are in list)\n  this.line       = 0; // line index in src\n  this.lineMax    = 0; // lines count\n  this.tight      = false;  // loose/tight mode for lists\n  this.parentType = 'root'; // if `list`, block parser stops on two newlines\n  this.ddIndent   = -1; // indent of the current dd block (-1 if there isn't any)\n\n  this.level = 0;\n\n  // renderer\n  this.result = '';\n\n  // Create caches\n  // Generate markers.\n  s = this.src;\n  indent_found = false;\n\n  for (start = pos = indent = offset = 0, len = s.length; pos < len; pos++) {\n    ch = s.charCodeAt(pos);\n\n    if (!indent_found) {\n      if (isSpace(ch)) {\n        indent++;\n\n        if (ch === 0x09) {\n          offset += 4 - offset % 4;\n        } else {\n          offset++;\n        }\n        continue;\n      } else {\n        indent_found = true;\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) { pos++; }\n      this.bMarks.push(start);\n      this.eMarks.push(pos);\n      this.tShift.push(indent);\n      this.sCount.push(offset);\n\n      indent_found = false;\n      indent = 0;\n      offset = 0;\n      start = pos + 1;\n    }\n  }\n\n  // Push fake entry to simplify cache bounds checks\n  this.bMarks.push(s.length);\n  this.eMarks.push(s.length);\n  this.tShift.push(0);\n  this.sCount.push(0);\n\n  this.lineMax = this.bMarks.length - 1; // don't count last fake line\n}\n\n// Push new token to \"stream\".\n//\nStateBlock.prototype.push = function (type, tag, nesting) {\n  var token = new Token(type, tag, nesting);\n  token.block = true;\n\n  if (nesting < 0) { this.level--; }\n  token.level = this.level;\n  if (nesting > 0) { this.level++; }\n\n  this.tokens.push(token);\n  return token;\n};\n\nStateBlock.prototype.isEmpty = function isEmpty(line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];\n};\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {\n  for (var max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break;\n    }\n  }\n  return from;\n};\n\n// Skip spaces from given position.\nStateBlock.prototype.skipSpaces = function skipSpaces(pos) {\n  var ch;\n\n  for (var max = this.src.length; pos < max; pos++) {\n    ch = this.src.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n  }\n  return pos;\n};\n\n// Skip spaces from given position in reverse.\nStateBlock.prototype.skipSpacesBack = function skipSpacesBack(pos, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (!isSpace(this.src.charCodeAt(--pos))) { return pos + 1; }\n  }\n  return pos;\n};\n\n// Skip char codes from given position\nStateBlock.prototype.skipChars = function skipChars(pos, code) {\n  for (var max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) { break; }\n  }\n  return pos;\n};\n\n// Skip char codes reverse from given position - 1\nStateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) { return pos + 1; }\n  }\n  return pos;\n};\n\n// cut lines range from source.\nStateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {\n  var i, lineIndent, ch, first, last, queue, lineStart,\n      line = begin;\n\n  if (begin >= end) {\n    return '';\n  }\n\n  queue = new Array(end - begin);\n\n  for (i = 0; line < end; line++, i++) {\n    lineIndent = 0;\n    lineStart = first = this.bMarks[line];\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1;\n    } else {\n      last = this.eMarks[line];\n    }\n\n    while (first < last && lineIndent < indent) {\n      ch = this.src.charCodeAt(first);\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          lineIndent += 4 - lineIndent % 4;\n        } else {\n          lineIndent++;\n        }\n      } else if (first - lineStart < this.tShift[line]) {\n        // patched tShift masked characters to look like spaces (blockquotes, list markers)\n        lineIndent++;\n      } else {\n        break;\n      }\n\n      first++;\n    }\n\n    queue[i] = this.src.slice(first, last);\n  }\n\n  return queue.join('');\n};\n\n// re-export Token class to use in block rules\nStateBlock.prototype.Token = Token;\n\n\nmodule.exports = StateBlock;\n","// For each opening emphasis-like marker find a matching closing one\n//\n'use strict';\n\n\nmodule.exports = function link_pairs(state) {\n  var i, j, lastDelim, currDelim,\n      delimiters = state.delimiters,\n      max = state.delimiters.length;\n\n  for (i = 0; i < max; i++) {\n    lastDelim = delimiters[i];\n\n    if (!lastDelim.close) { continue; }\n\n    j = i - lastDelim.jump - 1;\n\n    while (j >= 0) {\n      currDelim = delimiters[j];\n\n      if (currDelim.open &&\n          currDelim.marker === lastDelim.marker &&\n          currDelim.end < 0 &&\n          currDelim.level === lastDelim.level) {\n\n        lastDelim.jump = i - j;\n        lastDelim.open = false;\n        currDelim.end  = i;\n        currDelim.jump = 0;\n        break;\n      }\n\n      j -= currDelim.jump + 1;\n    }\n  }\n};\n","export default \"# 欢迎\\n\\nBlockchain, 是密码学，分布式系统，电子支付等等一些列技术的集大成者。这些技术各自蕴含深奥的专业知识，有着广泛的应用基础。而Blockchain，无论是技术复杂度，或是应用广泛性，都上升到更高的层面。它被视为“下一代互联网”。\\n\\n为了更好地理解它，运用它；为了加快属于它的时代的来临，本小书收纳，吸取和整理网络上优秀的文章，书籍及讨论，尝试用更加通俗的表达，推动它的传播和发展。由于专业上的限制，本册子将以Ethereum Blockchain为主线，对各个主题一一展开论述。\\n\\n如果您发现本小书存在概念误解，编写错误；如果您想与本小书的作者交流；如果您想谈谈对本小书的看法，建议，请Email联系：blockchainpirate@163.com\\n\";","// markdown-it default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   100            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {},\n    block: {},\n    inline: {}\n  }\n};\n","export default \"# 小明的健康记录\\n今天是周末，阳光明媚。\\n\\n铃铃铃......电话铃声响起，小明迷迷糊糊的接过电话。\\n\\n\\\"小明，你到了没？大伙都到了，在等你呢...\\\"\\n\\n糟糕，睡过头了，小明忘了今天与哥们的聚会!\\n\\n最近睡过头的事情常有发生。加班、通宵、酗酒、少运动，小明感觉糟糕透了，身体似乎渐渐失控。于是，小明想开发一款健康软件，借助Hyperledger Fabric的技术，追踪个人健康情况，及时发现问题。\\n\\n## 开发环境设置\\n- chaincode源码位于[fabric-cases](https://github.com/stephenwu2020/fabric-cases)的chaincode/health目录\\n- 网络启动脚本位于[fabric-cases](https://github.com/stephenwu2020/fabric-cases)的health-app目录下,Makefile\\n- 应用访问程序也位于[fabric-cases](https://github.com/stephenwu2020/fabric-cases)的health-app目录下\\n\\n## 最简单的chaincode\\n首先定义Health结构体，嵌套contractapi.Contract\\n```\\ntype Health struct {\\n\\tcontractapi.Contract\\n}\\n```\\n最简单的Smart Contract就写好了，在main函数启动它:\\n```\\nfunc main() {\\n\\thealth := new(Health)\\n\\tchaincode, err := contractapi.NewChaincode(health)\\n\\tif err != nil {\\n\\t\\tlog.Fatal(\\\"Create chaincode failed\\\", err)\\n\\t}\\n\\tif err := chaincode.Start(); err != nil {\\n\\t\\tlog.Fatal(\\\"Start chaincode failed\\\", err)\\n\\t}\\n}\\n```\\n这个chaincode已经可以在网络中安装了!\\n\\n## 介绍函数\\n小明写的第一个函数，是介绍这款应用的功能:\\n```\\nfunc (h Health) Intro(ctx contractapi.TransactionContextInterface) (*HealthIntro, error) {\\n\\tintro := &HealthIntro{\\n\\t\\tName:     \\\"Health\\\",\\n\\t\\tFunction: \\\"Record health data, analyse health situation.\\\",\\n\\t\\tVersion:  \\\"0.0.1\\\",\\n\\t\\tAuthor:   \\\"Ming\\\",\\n\\t}\\n\\treturn intro, nil\\n}\\n```\\n供应用程序调用的方法，需要接收类型contractapi.TransactionContextInterface的参数。在health-app应用程序中，调用该函数:\\n```\\nfunc main() {\\n\\tif err := sdk.Init(); err != nil {\\n\\t\\tpanic(err)\\n\\t}\\n\\tbytes, err := sdk.ChannelQuery(\\\"Intro\\\")\\n\\tif err != nil {\\n\\t\\tpanic(err)\\n\\t}\\n\\tvar intro datatype.HealthIntro\\n\\n\\tif err := json.Unmarshal(bytes, &intro); err != nil {\\n\\t\\tpanic(err)\\n\\t}\\n\\tfmt.Printf(\\\"Health Intro: %+v\\\\n\\\", intro)\\n}\\n```\\n调用成功，看到返回的结果是:\\n```\\n$ go run .\\nHealth Intro: {Name:Health Function:Record health data, analyse health situation. Version:0.0.1 Author:Ming}\\n```\\n好了，第一个函数完成！\\n\\n## 随眠记录\\n睡眠的质量对人的影响是非常巨大的。良好的睡眠，使人精力充沛、充满活力。小明决定将睡眠纳入健康考核。\\n\\n首先，定义记录睡眠状况的结构体:\\n```\\nconst (\\n\\tSleepAtNoon = iota\\n\\tSleepAtNight\\n)\\n\\ntype HealthRecord struct {\\n\\tType  int\\n\\tStart int64\\n\\tEnd   int64\\n}\\n```\\n睡眠的类型分为两种：午睡和晚睡。另外，记录开始时间和结束时间\\n\\nchaincode定义添加记录AddSleepRecord的方法:\\n```\\nfunc (h Health) AddSleepRecord(ctx contractapi.TransactionContextInterface, sleepT int, start, end int64) error {\\n\\trecord := datatype.HealthRecord{\\n\\t\\tType:  sleepT,\\n\\t\\tStart: start,\\n\\t\\tEnd:   end,\\n\\t}\\n\\trecords, err := h.GetRecords(ctx)\\n\\tif err != nil {\\n\\t\\treturn errors.WithMessage(err, \\\"Get records failed\\\")\\n\\t}\\n\\trecords = append(records, record)\\n\\tbytes, err := json.Marshal(&records)\\n\\tif err != nil {\\n\\t\\treturn errors.WithMessage(err, \\\"Marshal recrds failed\\\")\\n\\t}\\n\\treturn ctx.GetStub().PutState(recordkey, bytes)\\n}\\n```\\n方法将新的记录添加到旧的记录列表里，ctx提供了访问状态数据库的接口:\\n```\\nctx.GetStub().GetState()\\nctx.GetStub().PutState()\\n```\\n在应用程序中调用:\\n```\\n\\t// Add record\\n\\tstart := time.Now()\\n\\tend := start.Add(time.Hour)\\n\\t_, err = sdk.ChannelExecute(\\n\\t\\t\\\"AddSleepRecord\\\",\\n\\t\\ttobytes(datatype.SleepAtNoon),\\n\\t\\ttobytes(start.Unix()),\\n\\t\\ttobytes(end.Unix()),\\n\\t)\\n\\tif err != nil {\\n\\t\\tpanic(err)\\n\\t}\\n\\n\\t// Get Records\\n\\tbytes, err = sdk.ChannelQuery(\\\"GetRecords\\\")\\n\\tif err != nil {\\n\\t\\tpanic(err)\\n\\t}\\n\\tvar records []datatype.HealthRecord\\n\\tif err := json.Unmarshal(bytes, &records); err != nil {\\n\\t\\tpanic(err)\\n\\t}\\n\\tfor _, r := range records {\\n\\t\\tfmt.Printf(\\\"%+v\\\\n\\\", r)\\n\\t}\\n```\\n输出结果为:\\n```\\n$ go run .\\nHealth Intro: {Name:Health Function:Record health data, analyse health situation. Version:0.0.1 Author:Ming}\\n{Type:0 Start:1598600548 End:1598604148}\\n{Type:0 Start:1598600831 End:1598604431}\\n```\\n到此，睡眠记录添加成功，查询成功\\n\\n## 健康评估\\n午睡半小时至1小时，晚睡6小时至8小时，这样的睡眠是健康的\\n```\\nfunc isHealth(record *datatype.HealthRecord) bool {\\n\\thealth := false\\n\\tdiff := record.End - record.Start\\n\\thour := int64(time.Hour.Seconds())\\n\\tswitch record.Type {\\n\\tcase datatype.SleepAtNoon:\\n\\t\\tif diff >= hour/2 && diff <= hour {\\n\\t\\t\\thealth = true\\n\\t\\t}\\n\\tcase datatype.SleepAtNight:\\n\\t\\tif diff >= hour*6 && diff <= hour*8 {\\n\\t\\t\\thealth = true\\n\\t\\t}\\n\\t}\\n\\treturn health\\n}\\n```\\n于是，可以读取所有记录，计算健康比率，生成健康报告:\\n```\\nfunc report(records []datatype.HealthRecord) {\\n\\ttotal := len(records)\\n\\tif total == 0 {\\n\\t\\tfmt.Println(\\\"No record, No Report!\\\")\\n\\t\\treturn\\n\\t}\\n\\n\\thealthNum := 0\\n\\tfor _, r := range records {\\n\\t\\tif isHealth(&r) {\\n\\t\\t\\thealthNum++\\n\\t\\t}\\n\\t}\\n\\tratio := float64(healthNum) / float64(total)\\n\\tfmt.Printf(\\\"Health ratio: %0.2f %%\\\\n\\\", ratio)\\n}\\n```\\n应用程序执行结果:\\n```\\n$ go run .\\nHealth Intro: {Name:Health Function:Record health data, analyse health situation. Version:0.0.1 Author:Ming}\\n{Type:0 Start:1598600548 End:1598604148}\\n{Type:0 Start:1598600831 End:1598604431}\\n{Type:0 Start:1598600874 End:1598604474}\\n{Type:0 Start:1598602389 End:1598605989}\\n{Type:1 Start:1598602428 End:1598606028}\\n{Type:1 Start:1598602478 End:1598606078}\\n{Type:1 Start:1598602804 End:1598606404}\\n{Type:1 Start:1598602839 End:1598628039}\\nHealth ratio: 0.62 %\\n```\";","\n'use strict';\n\n\n/* eslint-disable no-bitwise */\n\nvar decodeCache = {};\n\nfunction getDecodeCache(exclude) {\n  var i, ch, cache = decodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = decodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n    cache.push(ch);\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    ch = exclude.charCodeAt(i);\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2);\n  }\n\n  return cache;\n}\n\n\n// Decode percent-encoded string.\n//\nfunction decode(string, exclude) {\n  var cache;\n\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars;\n  }\n\n  cache = getDecodeCache(exclude);\n\n  return string.replace(/(%[a-f0-9]{2})+/gi, function(seq) {\n    var i, l, b1, b2, b3, b4, chr,\n        result = '';\n\n    for (i = 0, l = seq.length; i < l; i += 3) {\n      b1 = parseInt(seq.slice(i + 1, i + 3), 16);\n\n      if (b1 < 0x80) {\n        result += cache[b1];\n        continue;\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && (i + 3 < l)) {\n        // 110xxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n\n        if ((b2 & 0xC0) === 0x80) {\n          chr = ((b1 << 6) & 0x7C0) | (b2 & 0x3F);\n\n          if (chr < 0x80) {\n            result += '\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 3;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && (i + 6 < l)) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          chr = ((b1 << 12) & 0xF000) | ((b2 << 6) & 0xFC0) | (b3 & 0x3F);\n\n          if (chr < 0x800 || (chr >= 0xD800 && chr <= 0xDFFF)) {\n            result += '\\ufffd\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 6;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && (i + 9 < l)) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n        b4 = parseInt(seq.slice(i + 10, i + 12), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          chr = ((b1 << 18) & 0x1C0000) | ((b2 << 12) & 0x3F000) | ((b3 << 6) & 0xFC0) | (b4 & 0x3F);\n\n          if (chr < 0x10000 || chr > 0x10FFFF) {\n            result += '\\ufffd\\ufffd\\ufffd\\ufffd';\n          } else {\n            chr -= 0x10000;\n            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF));\n          }\n\n          i += 9;\n          continue;\n        }\n      }\n\n      result += '\\ufffd';\n    }\n\n    return result;\n  });\n}\n\n\ndecode.defaultChars   = ';/?:@&=+$,#';\ndecode.componentChars = '';\n\n\nmodule.exports = decode;\n","// ~~strike through~~\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function strikethrough(state, silent) {\n  var i, scanned, token, len, ch,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x7E/* ~ */) { return false; }\n\n  scanned = state.scanDelims(state.pos, true);\n  len = scanned.length;\n  ch = String.fromCharCode(marker);\n\n  if (len < 2) { return false; }\n\n  if (len % 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch;\n    len--;\n  }\n\n  for (i = 0; i < len; i += 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch + ch;\n\n    state.delimiters.push({\n      marker: marker,\n      jump:   i,\n      token:  state.tokens.length - 1,\n      level:  state.level,\n      end:    -1,\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function strikethrough(state) {\n  var i, j,\n      startDelim,\n      endDelim,\n      token,\n      loneMarkers = [],\n      delimiters = state.delimiters,\n      max = state.delimiters.length;\n\n  for (i = 0; i < max; i++) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x7E/* ~ */) {\n      continue;\n    }\n\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    token         = state.tokens[startDelim.token];\n    token.type    = 's_open';\n    token.tag     = 's';\n    token.nesting = 1;\n    token.markup  = '~~';\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = 's_close';\n    token.tag     = 's';\n    token.nesting = -1;\n    token.markup  = '~~';\n    token.content = '';\n\n    if (state.tokens[endDelim.token - 1].type === 'text' &&\n        state.tokens[endDelim.token - 1].content === '~') {\n\n      loneMarkers.push(endDelim.token - 1);\n    }\n  }\n\n  // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n  while (loneMarkers.length) {\n    i = loneMarkers.pop();\n    j = i + 1;\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++;\n    }\n\n    j--;\n\n    if (i !== j) {\n      token = state.tokens[j];\n      state.tokens[j] = state.tokens[i];\n      state.tokens[i] = token;\n    }\n  }\n};\n","module.exports = __webpack_public_path__ + \"img/whisper_chat.57cd7adb.png\";","// Process ![image](<src> \"title\")\n\n'use strict';\n\nvar parseLinkLabel       = require('../helpers/parse_link_label');\nvar parseLinkDestination = require('../helpers/parse_link_destination');\nvar parseLinkTitle       = require('../helpers/parse_link_title');\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function image(state, silent) {\n  var attrs,\n      code,\n      content,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      ref,\n      res,\n      title,\n      token,\n      tokens,\n      start,\n      href = '',\n      oldPos = state.pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(state.pos) !== 0x21/* ! */) { return false; }\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 2;\n  labelEnd = parseLinkLabel(state, state.pos + 1, false);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = parseLinkTitle(state.src, pos, state.posMax);\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str;\n      pos = res.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      state.pos = oldPos;\n      return false;\n    }\n    pos++;\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd);\n\n    state.md.inline.parse(\n      content,\n      state.md,\n      state.env,\n      tokens = []\n    );\n\n    token          = state.push('image', 'img', 0);\n    token.attrs    = attrs = [ [ 'src', href ], [ 'alt', '' ] ];\n    token.children = tokens;\n    token.content  = content;\n\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","export default \"# Proof-of-Authority\\nPOA 机制下的 blockchain，类似带权限的 blockchain。部分节点持有认证的账户，只有它们可以创建新的 block，并不是广义上的分布式系统。它创建 block 的速度，比广义上的分布式系统要快得多，因为这些 block 不需要网络上的共识认可，不需要认证。\\n\\nEthereum 的测试网络，Ropsten 和 Kovan，都是 POA 机制的区块链。测试网络的 ether 不值钱，也就无所谓挖矿奖励或是交易小费了。这种方式非常容易攻击，它只能用作测试网络。\\n\";","export default \"# 交易\\n\\n交易是指由外部账户签名的消息，它在Ethereum网络中传输，最终记录在Ethereum Blockchain之中。这个基本的定义隐藏了许多令人惊喜，令人着迷的细节。换一个角度来看交易，它是唯一可以触发状态变化，驱动Smart Contract在虚拟机执行的东西。Ethereum是全球化的，单例管理的状态机，而交易推动状态机的运行，改变它的状态。Contract不会自己运行，Ethereum不会自己运行，一切的运动都始于一个交易信息。\\n\\n# 交易的结构\\n先来看看交易的基本结构。交易信息经过序列化在网络中传播，接收到交易信息的客户端，把序列化的交易存储到内存中，解序列化成自身可以处理的数据。交易是序列化的二进制消息，它包含下面这些数据：\\n\\n### Nonce\\n> 按顺序的一个数字，由发出交易的EOA产生，防止消息重发\\n### Gas价格\\n> 交易发起者愿意支付的Gas价格\\n### Gas上限\\n> 交易发起者愿意支付的Gas的数量\\n### Recipient\\n> 交易的目的地\\n### Value\\n> 发送给对方的ether的数量\\n### Data\\n> 交易需要的二进制数据\\n### v,r,s\\n> 交易的电子签名字段\\n\\n交易消息使用RLP模型进行序列化，所有的数字使用big-endian的格式，长度为8位的整数倍，这是交易消息的底层格式。但在应用中，往往以别的名字来表示。例如，日常开发中，用'from'字段表示交易发起者的地址，这个账户地址是根据v,r,s这三个字段计算出来的。\\n\\n# 交易的Nonce\\nNonce是交易消息中最重要的，但是最难理解的字段。Nonce是交易发起地址的一个属性，仅仅对发起地址有意思。这个值不会记录在Blockchain里，是动态计算的，它记录了该地址发出的，被认证和记录在Blockchain的交易信息的数目。以下两种情况可以说明nonce的重要性。第一，它确保交易有序创建；第二，它避免交易重复。\\n\\n第一种情况，假设将要创建两个交易。第一个交易很重要，需要支付8个ether，然后进行第二个交易，需要支付6个ether。由于账户只有10个ether，这两个交易只能有一个成交，而你希望第一个重要性更高的交易首先成交。但是由于Ethereum网络分布式的特征，必然有一些节点先收到8个ether的交易，而另外一些节点，先收到6个ether的交易，这样就无法确保8个ether的交易要先于6个ether的交易。现在对每个交易加上nonce字段，假设第一个交易nonce=3，第二个交易nonce=4，其它节点收到nonce=4的交易，但是没有看到nonce=3的交易记录，就会延迟处理，从而确保nonce=3的交易必然先于nonce=4的交易。\\n\\n第二种情况，你有100个ether，在网上看到有人卖汽车模型，每个2ether。你很喜欢这个汽车模型，花2ether买一个，创建了一个交易。此时，有一个黑客，把这个交易信息复制了一份，重复广播到网络之中，最后100ether全花光，买了差不多50个汽车模型。没有nonce字段，不能确定第二个相同的交易，是再买一个，还是黑客复制的重复的交易。加上nonce字段，无论黑客广播相同的消息多少次，只要nonce相同，则是同一个交易，如果交易已经验证了，记录在Blockchain当中，则表明后面相同nonce的交易是多余的。\\n\\n# Nonce的间隔，重复的nonce，验证\\n如果交易是程序产生的，特别是多个独立的程序同时产生交易，跟踪nonce的变化显得非常必要。Ethereum按顺序处理各个交易，如果第一交易的nonce是0，第二个交易的nonce是2，那么第二个交易不会被执行，暂时存储在内存池里，等nonce为1的交易处理后再处理它，因为其它节点会认为nonce=1的交易被延迟了，而不知道这是一个bug。如果把nonce=1的交易补上，那么后面的交易会相继执行。\\n\\nNonce之所以会产生这种间隙，有可能是某个交易不合法，或者消耗的gas超出了限制被回退了。为了修复这种错误，必须亲自发一个交易，此交易的nonce等同于被拒绝的交易的nonce，填补这个空缺，才能使后面的交易正常工作。\\n\\n另外一种情况下，由于程序间的并行性，同时创建的两个不同的交易有着相同的nonce，则有一个交易会被接受，另外一个会被拒绝。因此，跟踪nonce的变化是很有必要的。不幸的是，在并发的情况下，管理nonce会变得更加复杂。\\n\\n# 并发，交易源，Nonce\\n并发在计算机科学中是一个复杂的主题，在Ethereum这种分散化的，分布式的，实时的网络之中，并发问题会出人意外的蹦出来。\\n\\n简单来说，并发是指多个独立的系统同时进行计算。并发会发生在有多个线程同时运行的程序之中；并发会发生在同一个cpu之中，cpu运行多个进程；并发会发生在多个计算机之中，如分布式系统。Ethereum，根据自身的定义，在共识规则之下，允许节点，客户端，DApp执行并发操作，但只能有一个状态实例。\\n\\n假设现在有多个独立的钱包软件使用同一个地址创建交易，例如多个账户同时从一个Contract取出资金。一般来说，为了加速用户取款的速度，避免拥挤，会同时使用多台电脑回应取款操作。这就会导致一些并发问题，多台计算机如何同时创建交易，对签名签名，以及广播交易呢？\\n\\n如果我们使用一台计算机专门创建交易，并且进行nonce的计算与赋值, 先到的交易请求，先赋值，其余的计算机，同时对各个交易签名。这就会面临一台计算机不能工作导致所有服务都不能运行的问题。更严重的是，如果nonce赋值之后，这个交易由于数据不合法，或者gas超出了限制而被拒绝，那么后面的交易都不能够运行。另外一种方式，多台计算机都可以创建交易，但是不赋予nonce值，同时也不能进行签名。然后将这些交易排队放到另外一独立的计算机中，进行nonce的赋值和验证。这种情况下，负责赋值和验证的那台计算机就是系统的瓶颈，只能在创建交易这一块实现并发。由于这些并发问题的存在，大多数系统都使用单独程序处理所有请求，允许瓶颈的存在。或者把资金分配到多个账户，共同而独立地处理各自的请求。\\n\\n# 交易的Gas\\nGas是驱动Ethereum的燃料。Gas不是ether，它是另外的一种虚拟货币，有它自身与ether兑换的汇率。Ethereum使用Gas控制每个独立的交易需要消耗多少资源，防止DoS攻击，同时避免错误的操作把资金花光了。Gas与ether独立，是为了防止网络的交易情况，对ether的价格造成过大的波动，同时便于控制由于交易的执行而消耗的资源的价格。交易中的gasPrice字段用于接收发起者愿意接受的价格，以wei计价。钱包软件可以通过修改gasPrice来加速交易的执行。更高的价格会导致交易更快被执行。\\n\\n# 签名与发送分离(离线签名)\\n交易一旦交易完成了签名，就可以进入Ethereum网络中传输。一般来说，交易的三个阶段：创建，签名，发送会在一个操作中完成，例如，调用web3.eth.sendTransaction。但是，如果你知道底层的API，创建，签名，发送可以是各自独立的操作。为什么要将签名与发送分成独立的操作呢？一般是为了更高的安全性。因为签名必须要解锁私钥，而传输必须要连接网络。如果签名和传输都在同一台电脑上，相当于把私钥放到了网络之中，对于大账户，这是非常危险的。把签名这一步放到离线的计算机上操作，能够大大提高安全性。\\n\\n![img](/book/offline.jpg)\\n\\n# 交易的传播\\n交易信息在Ethereum网络的传播就像流水一样蔓延。每个Ethereum客户端就是一个节点，相互连接，形成了网格式的网络。所有的节点都是对等的，不存在特殊性。一个交易被签名之后，就开始在网络中传播。节点首先对交易进行验证，验证成功之后传递到与之相连的其它节点。每个节点平均与13个节点相连，相邻节点成为邻居，每个邻居节点收到交易信息之后开始对它进行验证，如果验证成功，在本地存储一个备份，同时传递给邻居节点，但不包括向它传递的那个邻居。结果，交易信息从一个节点，流动到网络上的全部节点中。节点可以过滤某些交易信息，默认是广播所有合法的交易。\\n\\n交易信息从一个节点流动到全网络的节点只需几秒种，对于每个节点来说，它无法辨别哪个节点是交易信息的源头。为了追踪交易信息的源头，或者干扰交易的传播，黑客必须控制相当百分比的节点。这是P2P网络，特别是Blockchain在设计上需要面对的安全性和私密性的的问题。\\n\\n# 记录在Blockchain中\\nEthereum所有的节点都是平等的，但在功能上，有的节点接收交易信息，打包成Block，并且尝试将Block挂在Blockchain之中，这些节点被称为矿工，一般都拥有高性能GPU运算能力的设备。这些挖矿的节点，把收到的交易信息添加到候选Block里，并且尝试为候选Block寻找一个证明，证明这个候选Block是合法的，从而挂到Blockchain上。一旦Block被记录在Blockchain上，这些交易也就记录在Blockchain了，同时这些交易信息会修改Ethereum的状态，或是修改某个账户的资金数额，或是调用Smart Contract的函数修改某些数据。\\n\\n从创建，到EOA签名，网络中传播，最后被挖矿成功，修改单例中的状态，写入到Blockchain，中永远无法被修改，一个交易就走完了它的所有旅程。\\n\\n# 多重签名交易\\n熟识Bitcoin脚本的朋友会知道，可以创建一个多重签名的Bitcoin账户，这个账户仅仅在多个第三方机构都签了名之后才能转移资金。Ethereum的账户没有这种设计，但可以用Smart Contract实现类似的功能。大体上，需要先把资金转移到Smart Contract的账户上，然后发起转账请求，再通知相关的人，让他们发送一个确定信号，当条件都满足了，资金从Smart Contract账户转出去，间接达到了多种签名的目的。\\n\\n\";","// Replace link-like texts with link nodes.\n//\n// Currently restricted by `md.validateLink()` to http/https/ftp\n//\n'use strict';\n\n\nvar arrayReplaceAt = require('../common/utils').arrayReplaceAt;\n\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\n\nmodule.exports = function linkify(state) {\n  var i, j, l, tokens, token, currentToken, nodes, ln, text, pos, lastPos,\n      level, htmlLinkLevel, url, fullUrl, urlText,\n      blockTokens = state.tokens,\n      links;\n\n  if (!state.md.options.linkify) { return; }\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline' ||\n        !state.md.linkify.pretest(blockTokens[j].content)) {\n      continue;\n    }\n\n    tokens = blockTokens[j].children;\n\n    htmlLinkLevel = 0;\n\n    // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n    for (i = tokens.length - 1; i >= 0; i--) {\n      currentToken = tokens[i];\n\n      // Skip content of markdown links\n      if (currentToken.type === 'link_close') {\n        i--;\n        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n          i--;\n        }\n        continue;\n      }\n\n      // Skip content of html tag links\n      if (currentToken.type === 'html_inline') {\n        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--;\n        }\n        if (isLinkClose(currentToken.content)) {\n          htmlLinkLevel++;\n        }\n      }\n      if (htmlLinkLevel > 0) { continue; }\n\n      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {\n\n        text = currentToken.content;\n        links = state.md.linkify.match(text);\n\n        // Now split string to nodes\n        nodes = [];\n        level = currentToken.level;\n        lastPos = 0;\n\n        for (ln = 0; ln < links.length; ln++) {\n\n          url = links[ln].url;\n          fullUrl = state.md.normalizeLink(url);\n          if (!state.md.validateLink(fullUrl)) { continue; }\n\n          urlText = links[ln].text;\n\n          // Linkifier might send raw hostnames like \"example.com\", where url\n          // starts with domain name. So we prepend http:// in those cases,\n          // and remove it afterwards.\n          //\n          if (!links[ln].schema) {\n            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\\/\\//, '');\n          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {\n            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '');\n          } else {\n            urlText = state.md.normalizeLinkText(urlText);\n          }\n\n          pos = links[ln].index;\n\n          if (pos > lastPos) {\n            token         = new state.Token('text', '', 0);\n            token.content = text.slice(lastPos, pos);\n            token.level   = level;\n            nodes.push(token);\n          }\n\n          token         = new state.Token('link_open', 'a', 1);\n          token.attrs   = [ [ 'href', fullUrl ] ];\n          token.level   = level++;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          token         = new state.Token('text', '', 0);\n          token.content = urlText;\n          token.level   = level;\n          nodes.push(token);\n\n          token         = new state.Token('link_close', 'a', -1);\n          token.level   = --level;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          lastPos = links[ln].lastIndex;\n        }\n        if (lastPos < text.length) {\n          token         = new state.Token('text', '', 0);\n          token.content = text.slice(lastPos);\n          token.level   = level;\n          nodes.push(token);\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);\n      }\n    }\n  }\n};\n","export default \"# 使用fabric-go-sdk开发简单的app\\n\\n## 目标\\nFabric的官方案例提供了许多简单的chaincode，我们选择abstore作为本次示例，结合fabric-sdk-go，开发一款简单的cli应用。\\n\\n## 技术概要\\n1. 使用[devnet](https://github.com/stephenwu2020/fabric-cases/tree/master/devnet)提供的网络，默认部署了abstore\\n2. sdk选用go的版本\\n3. cli的框架选用[cobra](github.com/spf13/cobra)\\n\\n## abstore的基本功能\\n- Init，初始化用户余额，设置用户a,b各有100块\\n- invoke，a对b转账x块\\n- delete，清空用户的数据\\n- query，查询用户余额\\n\\n## 启动网络\\n拉取[fabric-cases](https://github.com/stephenwu2020/fabric-cases.git)，启动devnet，详情，请查看该项目的文档。\\n   \\n## cli简要说明\\n运行，查看帮助：\\n```\\n$ cd cli-app\\n$ go run .\\nSimple abstore cli app\\n\\nUsage:\\n  hf-simple-app [flags]\\n  hf-simple-app [command]\\n\\nAvailable Commands:\\n  help        Help about any command\\n  query       Query someone's balance\\n  transfer    transfer someone's balance to another one\\n\\nFlags:\\n  -h, --help   help for hf-simple-app\\n\\nUse \\\"hf-simple-app [command] --help\\\" for more information about a command.\\n```\\nCli只提供了两个命令，query和transfer\\n\\nquery的用法(查询a的余额):\\n```\\n$ go run . query -n a\\nBalance is: 100\\n```\\n\\ntransfer的用法(a给b转10块):\\n```\\n$ go run . transfer -f a -t b -v 10\\nTransfer success!\\n$ go run . query -n a\\nBalance is: 90\\n```\\n\\n## 关于fabric-go-sdk的使用\\ndevenet使用fabric-ca的形式启动，同时创建了用于连接fabric的配置文件:organizations/peerOrganizations/org1.develop.com/connection-org1.yaml\\n\\ncli/sdk/sdk.go文件中可以看到，sdk启动时，读取该文件，创建钱包，创建channel网络的对象，创建对应chaincode对象：\\n```\\nfunc Init() {\\n\\tos.Setenv(\\\"DISCOVERY_AS_LOCALHOST\\\", \\\"true\\\")\\n\\n\\tlogging.SetLevel(\\\"fabsdk/core\\\", logging.ERROR)\\n\\n\\twallet, err = gateway.NewFileSystemWallet(\\\"wallet\\\")\\n\\tif err != nil {\\n\\t\\tfmt.Printf(\\\"Failed to create wallet: %s\\\\n\\\", err)\\n\\t\\tos.Exit(1)\\n\\t}\\n\\n\\tif !wallet.Exists(\\\"appUser\\\") {\\n\\t\\terr = populateWallet(wallet)\\n\\t\\tif err != nil {\\n\\t\\t\\tfmt.Printf(\\\"Failed to populate wallet contents: %s\\\\n\\\", err)\\n\\t\\t\\tos.Exit(1)\\n\\t\\t}\\n\\t}\\n\\n\\tccpPath := filepath.Join(\\n\\t\\t\\\"..\\\",\\n\\t\\t\\\"fixtures\\\",\\n\\t\\t\\\"organizations\\\",\\n\\t\\t\\\"peerOrganizations\\\",\\n\\t\\t\\\"org1.develop.com\\\",\\n\\t\\t\\\"connection-org1.yaml\\\",\\n\\t)\\n\\n\\tgw, err := gateway.Connect(\\n\\t\\tgateway.WithConfig(config.FromFile(filepath.Clean(ccpPath))),\\n\\t\\tgateway.WithIdentity(wallet, \\\"appUser\\\"),\\n\\t)\\n\\tif err != nil {\\n\\t\\tfmt.Printf(\\\"Failed to connect to gateway: %s\\\\n\\\", err)\\n\\t\\tos.Exit(1)\\n\\t}\\n\\n\\tnetwork, err = gw.GetNetwork(channel)\\n\\tif err != nil {\\n\\t\\tfmt.Printf(\\\"Failed to get network: %s\\\\n\\\", err)\\n\\t\\tos.Exit(1)\\n\\t}\\n\\n\\tcontract = network.GetContract(chaincode)\\n}\\n```\\n\\n与fabric进行交互时，有两种类型的方法：\\n1. 只读:\\n   ```\\n   func ChannelQuery(fcn string, args ...string) ([]byte, error) {\\n      result, err := contract.EvaluateTransaction(fcn, args...)\\n      return result, err\\n   }\\n   ```\\n2. 读写:\\n   ```\\n   func ChannelExecute(fcn string, args ...string) ([]byte, error) {\\n      result, err := contract.SubmitTransaction(fcn, args...)\\n      return result, err\\n   }\\n   ```\\n\\n以上就是fabric-sdk-go最基本的使用方法\\n\\n注：\\n- 网络重建、证书文件修改之后，需要把cli下的wallet文件夹删除，它是根据上一次的证书文件创建的，无权访问新的网络\";","export default \"# 赌博\\n\\n当今，赌博的开发者很难处理好支付系统，特别是 web 上的赌博。各个支付系统，如 Stripe，Paypal，执行转账，取款的功能，往往需要几天的时间。Ethereum 使得赌博的支付系统开发变得很轻松。\\n\\n使用开源的 smart contract 开发的赌博系统更加透明，公开，稳定。以往，玩家把钱交给网站托管，这样会面临一个风险，网站拥有者可能把钱卷走，人间蒸发。2011年，FBI关闭了许多扑克网站，许多人存在网站的钱也跟着没了。 Ethereum 上的 smart contract 永远不会被关闭或者审查，除非整个网络都没了。只要 contract 能够让用户把钱取走，用户就敢把钱存进去。优秀的赌博 contract 降低甚至消灭了交易对手风险。\\n\\n赌博网站往往有暗箱操作，赌博 contract 公开透明，对于不信任的 contract，人们不会参与的。\\n\\nEthereum 上的赌博，也有缺点。新的 block 的诞生时间是15 - 30秒，意味着每次更新至少得15-30秒。在这个期间，transaction 对网络上所有的节点都是公开的，一般 transaction 在 block 的排序，是以 gas price 的大小排序的，如果有的节点发现某个 transaction 将会赢得奖励，它可能会复制 transaction 的数据，然后以更加高的 gas price 使得 transaction 的排名靠前，从而获得奖励。\\n\";","// Code block (4 spaces padded)\n\n'use strict';\n\n\nmodule.exports = function code(state, startLine, endLine/*, silent*/) {\n  var nextLine, last, token, emptyLines = 0;\n\n  if (state.sCount[startLine] - state.blkIndent < 4) { return false; }\n\n  last = nextLine = startLine + 1;\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      emptyLines++;\n\n      // workaround for lists: 2 blank lines should terminate indented\n      // code block, but not fenced code block\n      if (emptyLines >= 2 && state.parentType === 'list') {\n        break;\n      }\n\n      nextLine++;\n      continue;\n    }\n\n    emptyLines = 0;\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++;\n      last = nextLine;\n      continue;\n    }\n    break;\n  }\n\n  state.line = last;\n\n  token         = state.push('code_block', 'code', 0);\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, true);\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","/**\n * vue-markdown v2.2.4\n * https://github.com/miaolz123/vue-markdown\n * MIT License\n */\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"babel-runtime/core-js/get-iterator\"), require(\"babel-runtime/core-js/object/keys\"), require(\"markdown-it\"), require(\"markdown-it-emoji\"), require(\"markdown-it-sub\"), require(\"markdown-it-sup\"), require(\"markdown-it-footnote\"), require(\"markdown-it-deflist\"), require(\"markdown-it-abbr\"), require(\"markdown-it-ins\"), require(\"markdown-it-mark\"), require(\"markdown-it-toc-and-anchor\"), require(\"markdown-it-katex\"), require(\"markdown-it-task-lists\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"babel-runtime/core-js/get-iterator\", \"babel-runtime/core-js/object/keys\", \"markdown-it\", \"markdown-it-emoji\", \"markdown-it-sub\", \"markdown-it-sup\", \"markdown-it-footnote\", \"markdown-it-deflist\", \"markdown-it-abbr\", \"markdown-it-ins\", \"markdown-it-mark\", \"markdown-it-toc-and-anchor\", \"markdown-it-katex\", \"markdown-it-task-lists\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"VueMarkdown\"] = factory(require(\"babel-runtime/core-js/get-iterator\"), require(\"babel-runtime/core-js/object/keys\"), require(\"markdown-it\"), require(\"markdown-it-emoji\"), require(\"markdown-it-sub\"), require(\"markdown-it-sup\"), require(\"markdown-it-footnote\"), require(\"markdown-it-deflist\"), require(\"markdown-it-abbr\"), require(\"markdown-it-ins\"), require(\"markdown-it-mark\"), require(\"markdown-it-toc-and-anchor\"), require(\"markdown-it-katex\"), require(\"markdown-it-task-lists\"));\n\telse\n\t\troot[\"VueMarkdown\"] = factory(root[\"babel-runtime/core-js/get-iterator\"], root[\"babel-runtime/core-js/object/keys\"], root[\"markdown-it\"], root[\"markdown-it-emoji\"], root[\"markdown-it-sub\"], root[\"markdown-it-sup\"], root[\"markdown-it-footnote\"], root[\"markdown-it-deflist\"], root[\"markdown-it-abbr\"], root[\"markdown-it-ins\"], root[\"markdown-it-mark\"], root[\"markdown-it-toc-and-anchor\"], root[\"markdown-it-katex\"], root[\"markdown-it-task-lists\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_6__, __WEBPACK_EXTERNAL_MODULE_7__, __WEBPACK_EXTERNAL_MODULE_8__, __WEBPACK_EXTERNAL_MODULE_9__, __WEBPACK_EXTERNAL_MODULE_10__, __WEBPACK_EXTERNAL_MODULE_11__, __WEBPACK_EXTERNAL_MODULE_12__, __WEBPACK_EXTERNAL_MODULE_13__, __WEBPACK_EXTERNAL_MODULE_14__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n\tvar _getIterator2 = __webpack_require__(1);\n\n\tvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\n\tvar _keys = __webpack_require__(2);\n\n\tvar _keys2 = _interopRequireDefault(_keys);\n\n\tvar _markdownIt = __webpack_require__(3);\n\n\tvar _markdownIt2 = _interopRequireDefault(_markdownIt);\n\n\tvar _markdownItEmoji = __webpack_require__(4);\n\n\tvar _markdownItEmoji2 = _interopRequireDefault(_markdownItEmoji);\n\n\tvar _markdownItSub = __webpack_require__(5);\n\n\tvar _markdownItSub2 = _interopRequireDefault(_markdownItSub);\n\n\tvar _markdownItSup = __webpack_require__(6);\n\n\tvar _markdownItSup2 = _interopRequireDefault(_markdownItSup);\n\n\tvar _markdownItFootnote = __webpack_require__(7);\n\n\tvar _markdownItFootnote2 = _interopRequireDefault(_markdownItFootnote);\n\n\tvar _markdownItDeflist = __webpack_require__(8);\n\n\tvar _markdownItDeflist2 = _interopRequireDefault(_markdownItDeflist);\n\n\tvar _markdownItAbbr = __webpack_require__(9);\n\n\tvar _markdownItAbbr2 = _interopRequireDefault(_markdownItAbbr);\n\n\tvar _markdownItIns = __webpack_require__(10);\n\n\tvar _markdownItIns2 = _interopRequireDefault(_markdownItIns);\n\n\tvar _markdownItMark = __webpack_require__(11);\n\n\tvar _markdownItMark2 = _interopRequireDefault(_markdownItMark);\n\n\tvar _markdownItTocAndAnchor = __webpack_require__(12);\n\n\tvar _markdownItTocAndAnchor2 = _interopRequireDefault(_markdownItTocAndAnchor);\n\n\tvar _markdownItKatex = __webpack_require__(13);\n\n\tvar _markdownItKatex2 = _interopRequireDefault(_markdownItKatex);\n\n\tvar _markdownItTaskLists = __webpack_require__(14);\n\n\tvar _markdownItTaskLists2 = _interopRequireDefault(_markdownItTaskLists);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\texports.default = {\n\t  md: new _markdownIt2.default(),\n\n\t  template: '<div><slot></slot></div>',\n\n\t  data: function data() {\n\t    return {\n\t      sourceData: this.source\n\t    };\n\t  },\n\n\n\t  props: {\n\t    watches: {\n\t      type: Array,\n\t      default: function _default() {\n\t        return ['source', 'show', 'toc'];\n\t      }\n\t    },\n\t    source: {\n\t      type: String,\n\t      default: ''\n\t    },\n\t    show: {\n\t      type: Boolean,\n\t      default: true\n\t    },\n\t    highlight: {\n\t      type: Boolean,\n\t      default: true\n\t    },\n\t    html: {\n\t      type: Boolean,\n\t      default: true\n\t    },\n\t    xhtmlOut: {\n\t      type: Boolean,\n\t      default: true\n\t    },\n\t    breaks: {\n\t      type: Boolean,\n\t      default: true\n\t    },\n\t    linkify: {\n\t      type: Boolean,\n\t      default: true\n\t    },\n\t    emoji: {\n\t      type: Boolean,\n\t      default: true\n\t    },\n\t    typographer: {\n\t      type: Boolean,\n\t      default: true\n\t    },\n\t    langPrefix: {\n\t      type: String,\n\t      default: 'language-'\n\t    },\n\t    quotes: {\n\t      type: String,\n\t      default: '“”‘’'\n\t    },\n\t    tableClass: {\n\t      type: String,\n\t      default: 'table'\n\t    },\n\t    taskLists: {\n\t      type: Boolean,\n\t      default: true\n\t    },\n\t    toc: {\n\t      type: Boolean,\n\t      default: false\n\t    },\n\t    tocId: {\n\t      type: String\n\t    },\n\t    tocClass: {\n\t      type: String,\n\t      default: 'table-of-contents'\n\t    },\n\t    tocFirstLevel: {\n\t      type: Number,\n\t      default: 2\n\t    },\n\t    tocLastLevel: {\n\t      type: Number\n\t    },\n\t    tocAnchorLink: {\n\t      type: Boolean,\n\t      default: true\n\t    },\n\t    tocAnchorClass: {\n\t      type: String,\n\t      default: 'toc-anchor'\n\t    },\n\t    tocAnchorLinkSymbol: {\n\t      type: String,\n\t      default: '#'\n\t    },\n\t    tocAnchorLinkSpace: {\n\t      type: Boolean,\n\t      default: true\n\t    },\n\t    tocAnchorLinkClass: {\n\t      type: String,\n\t      default: 'toc-anchor-link'\n\t    },\n\t    anchorAttributes: {\n\t      type: Object,\n\t      default: function _default() {\n\t        return {};\n\t      }\n\t    },\n\t    prerender: {\n\t      type: Function,\n\t      default: function _default(sourceData) {\n\t        return sourceData;\n\t      }\n\t    },\n\t    postrender: {\n\t      type: Function,\n\t      default: function _default(htmlData) {\n\t        return htmlData;\n\t      }\n\t    }\n\t  },\n\n\t  computed: {\n\t    tocLastLevelComputed: function tocLastLevelComputed() {\n\t      return this.tocLastLevel > this.tocFirstLevel ? this.tocLastLevel : this.tocFirstLevel + 1;\n\t    }\n\t  },\n\n\t  render: function render(createElement) {\n\t    var _this = this;\n\n\t    this.md = new _markdownIt2.default().use(_markdownItSub2.default).use(_markdownItSup2.default).use(_markdownItFootnote2.default).use(_markdownItDeflist2.default).use(_markdownItAbbr2.default).use(_markdownItIns2.default).use(_markdownItMark2.default).use(_markdownItKatex2.default, { \"throwOnError\": false, \"errorColor\": \" #cc0000\" }).use(_markdownItTaskLists2.default, { enabled: this.taskLists });\n\n\t    if (this.emoji) {\n\t      this.md.use(_markdownItEmoji2.default);\n\t    }\n\n\t    this.md.set({\n\t      html: this.html,\n\t      xhtmlOut: this.xhtmlOut,\n\t      breaks: this.breaks,\n\t      linkify: this.linkify,\n\t      typographer: this.typographer,\n\t      langPrefix: this.langPrefix,\n\t      quotes: this.quotes\n\t    });\n\t    this.md.renderer.rules.table_open = function () {\n\t      return '<table class=\"' + _this.tableClass + '\">\\n';\n\t    };\n\t    var defaultLinkRenderer = this.md.renderer.rules.link_open || function (tokens, idx, options, env, self) {\n\t      return self.renderToken(tokens, idx, options);\n\t    };\n\t    this.md.renderer.rules.link_open = function (tokens, idx, options, env, self) {\n\t      (0, _keys2.default)(_this.anchorAttributes).map(function (attribute) {\n\t        var aIndex = tokens[idx].attrIndex(attribute);\n\t        var value = _this.anchorAttributes[attribute];\n\t        if (aIndex < 0) {\n\t          tokens[idx].attrPush([attribute, value]); // add new attribute\n\t        } else {\n\t          tokens[idx].attrs[aIndex][1] = value;\n\t        }\n\t      });\n\t      return defaultLinkRenderer(tokens, idx, options, env, self);\n\t    };\n\n\t    if (this.toc) {\n\t      this.md.use(_markdownItTocAndAnchor2.default, {\n\t        tocClassName: this.tocClass,\n\t        tocFirstLevel: this.tocFirstLevel,\n\t        tocLastLevel: this.tocLastLevelComputed,\n\t        anchorLink: this.tocAnchorLink,\n\t        anchorLinkSymbol: this.tocAnchorLinkSymbol,\n\t        anchorLinkSpace: this.tocAnchorLinkSpace,\n\t        anchorClassName: this.tocAnchorClass,\n\t        anchorLinkSymbolClassName: this.tocAnchorLinkClass,\n\t        tocCallback: function tocCallback(tocMarkdown, tocArray, tocHtml) {\n\t          if (tocHtml) {\n\t            if (_this.tocId && document.getElementById(_this.tocId)) {\n\t              document.getElementById(_this.tocId).innerHTML = tocHtml;\n\t            }\n\n\t            _this.$emit('toc-rendered', tocHtml);\n\t          }\n\t        }\n\t      });\n\t    }\n\n\t    var outHtml = this.show ? this.md.render(this.prerender(this.sourceData)) : '';\n\t    outHtml = this.postrender(outHtml);\n\n\t    this.$emit('rendered', outHtml);\n\t    return createElement('div', {\n\t      domProps: {\n\t        innerHTML: outHtml\n\t      }\n\t    });\n\t  },\n\t  beforeMount: function beforeMount() {\n\t    var _this2 = this;\n\n\t    if (this.$slots.default) {\n\t      this.sourceData = '';\n\t      var _iteratorNormalCompletion = true;\n\t      var _didIteratorError = false;\n\t      var _iteratorError = undefined;\n\n\t      try {\n\t        for (var _iterator = (0, _getIterator3.default)(this.$slots.default), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t          var slot = _step.value;\n\n\t          this.sourceData += slot.text;\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError = true;\n\t        _iteratorError = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion && _iterator.return) {\n\t            _iterator.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError) {\n\t            throw _iteratorError;\n\t          }\n\t        }\n\t      }\n\t    }\n\n\t    this.$watch('source', function () {\n\t      _this2.sourceData = _this2.prerender(_this2.source);\n\t      _this2.$forceUpdate();\n\t    });\n\n\t    this.watches.forEach(function (v) {\n\t      _this2.$watch(v, function () {\n\t        _this2.$forceUpdate();\n\t      });\n\t    });\n\t  }\n\t};\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_9__;\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_10__;\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_11__;\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_12__;\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_13__;\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_14__;\n\n/***/ })\n/******/ ])\n});\n;","/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n","'use strict';\n\nmodule.exports = function inline(state) {\n  var tokens = state.tokens, tok, i, l;\n\n  // Parse inlines\n  for (i = 0, l = tokens.length; i < l; i++) {\n    tok = tokens[i];\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children);\n    }\n  }\n};\n","/**\n * This is a module for storing settings passed into KaTeX. It correctly handles\n * default settings.\n */\n\n/**\n * Helper function for getting a default value if the value is undefined\n */\nfunction get(option, defaultValue) {\n    return option === undefined ? defaultValue : option;\n}\n\n/**\n * The main Settings object\n *\n * The current options stored are:\n *  - displayMode: Whether the expression should be typeset by default in\n *                 textstyle or displaystyle (default false)\n */\nfunction Settings(options) {\n    // allow null options\n    options = options || {};\n    this.displayMode = get(options.displayMode, false);\n    this.throwOnError = get(options.throwOnError, true);\n    this.errorColor = get(options.errorColor, \"#cc0000\");\n}\n\nmodule.exports = Settings;\n","/* Process inline math */\n/*\nLike markdown-it-simplemath, this is a stripped down, simplified version of:\nhttps://github.com/runarberg/markdown-it-math\n\nIt differs in that it takes (a subset of) LaTeX as input and relies on KaTeX\nfor rendering output.\n*/\n\n/*jslint node: true */\n'use strict';\n\nvar katex = require('katex');\n\n// Test if potential opening or closing delimieter\n// Assumes that there is a \"$\" at state.src[pos]\nfunction isValidDelim(state, pos) {\n    var prevChar, nextChar,\n        max = state.posMax,\n        can_open = true,\n        can_close = true;\n\n    prevChar = pos > 0 ? state.src.charCodeAt(pos - 1) : -1;\n    nextChar = pos + 1 <= max ? state.src.charCodeAt(pos + 1) : -1;\n\n    // Check non-whitespace conditions for opening and closing, and\n    // check that closing delimeter isn't followed by a number\n    if (prevChar === 0x20/* \" \" */ || prevChar === 0x09/* \\t */ ||\n            (nextChar >= 0x30/* \"0\" */ && nextChar <= 0x39/* \"9\" */)) {\n        can_close = false;\n    }\n    if (nextChar === 0x20/* \" \" */ || nextChar === 0x09/* \\t */) {\n        can_open = false;\n    }\n\n    return {\n        can_open: can_open,\n        can_close: can_close\n    };\n}\n\nfunction math_inline(state, silent) {\n    var start, match, token, res, pos, esc_count;\n\n    if (state.src[state.pos] !== \"$\") { return false; }\n\n    res = isValidDelim(state, state.pos);\n    if (!res.can_open) {\n        if (!silent) { state.pending += \"$\"; }\n        state.pos += 1;\n        return true;\n    }\n\n    // First check for and bypass all properly escaped delimieters\n    // This loop will assume that the first leading backtick can not\n    // be the first character in state.src, which is known since\n    // we have found an opening delimieter already.\n    start = state.pos + 1;\n    match = start;\n    while ( (match = state.src.indexOf(\"$\", match)) !== -1) {\n        // Found potential $, look for escapes, pos will point to\n        // first non escape when complete\n        pos = match - 1;\n        while (state.src[pos] === \"\\\\\") { pos -= 1; }\n\n        // Even number of escapes, potential closing delimiter found\n        if ( ((match - pos) % 2) == 1 ) { break; }\n        match += 1;\n    }\n\n    // No closing delimter found.  Consume $ and continue.\n    if (match === -1) {\n        if (!silent) { state.pending += \"$\"; }\n        state.pos = start;\n        return true;\n    }\n\n    // Check if we have empty content, ie: $$.  Do not parse.\n    if (match - start === 0) {\n        if (!silent) { state.pending += \"$$\"; }\n        state.pos = start + 1;\n        return true;\n    }\n\n    // Check for valid closing delimiter\n    res = isValidDelim(state, match);\n    if (!res.can_close) {\n        if (!silent) { state.pending += \"$\"; }\n        state.pos = start;\n        return true;\n    }\n\n    if (!silent) {\n        token         = state.push('math_inline', 'math', 0);\n        token.markup  = \"$\";\n        token.content = state.src.slice(start, match);\n    }\n\n    state.pos = match + 1;\n    return true;\n}\n\nfunction math_block(state, start, end, silent){\n    var firstLine, lastLine, next, lastPos, found = false, token,\n        pos = state.bMarks[start] + state.tShift[start],\n        max = state.eMarks[start]\n\n    if(pos + 2 > max){ return false; }\n    if(state.src.slice(pos,pos+2)!=='$$'){ return false; }\n\n    pos += 2;\n    firstLine = state.src.slice(pos,max);\n\n    if(silent){ return true; }\n    if(firstLine.trim().slice(-2)==='$$'){\n        // Single line expression\n        firstLine = firstLine.trim().slice(0, -2);\n        found = true;\n    }\n\n    for(next = start; !found; ){\n\n        next++;\n\n        if(next >= end){ break; }\n\n        pos = state.bMarks[next]+state.tShift[next];\n        max = state.eMarks[next];\n\n        if(pos < max && state.tShift[next] < state.blkIndent){\n            // non-empty line with negative indent should stop the list:\n            break;\n        }\n\n        if(state.src.slice(pos,max).trim().slice(-2)==='$$'){\n            lastPos = state.src.slice(0,max).lastIndexOf('$$');\n            lastLine = state.src.slice(pos,lastPos);\n            found = true;\n        }\n\n    }\n\n    state.line = next + 1;\n\n    token = state.push('math_block', 'math', 0);\n    token.block = true;\n    token.content = (firstLine && firstLine.trim() ? firstLine + '\\n' : '')\n    + state.getLines(start + 1, next, state.tShift[start], true)\n    + (lastLine && lastLine.trim() ? lastLine : '');\n    token.map = [ start, state.line ];\n    token.markup = '$$';\n    return true;\n}\n\nmodule.exports = function math_plugin(md, options) {\n    // Default options\n\n    options = options || {};\n\n    // set KaTeX as the renderer for markdown-it-simplemath\n    var katexInline = function(latex){\n        options.displayMode = false;\n        try{\n            return katex.renderToString(latex, options);\n        }\n        catch(error){\n            if(options.throwOnError){ console.log(error); }\n            return latex;\n        }\n    };\n\n    var inlineRenderer = function(tokens, idx){\n        return katexInline(tokens[idx].content);\n    };\n\n    var katexBlock = function(latex){\n        options.displayMode = true;\n        try{\n            return \"<p>\" + katex.renderToString(latex, options) + \"</p>\";\n        }\n        catch(error){\n            if(options.throwOnError){ console.log(error); }\n            return latex;\n        }\n    }\n\n    var blockRenderer = function(tokens, idx){\n        return  katexBlock(tokens[idx].content) + '\\n';\n    }\n\n    md.inline.ruler.after('escape', 'math_inline', math_inline);\n    md.block.ruler.after('blockquote', 'math_block', math_block, {\n        alt: [ 'paragraph', 'reference', 'blockquote', 'list' ]\n    });\n    md.renderer.rules.math_inline = inlineRenderer;\n    md.renderer.rules.math_block = blockRenderer;\n};\n","export default \"Ethereum发展早起，创立者的愿景比Smart Contract的定义要宽广的多，甚至要重新创造互联网的世界，直接称之为Web3。而Smart Contract是实现控制逻辑与支付功能分散化一种方式。Web3 DApp的目标是分散化一切应用，包括存储，信息传递，命名等等。如图：\\n\\n![img](/book/dapp.jpg)\\n\\n# 什么是DApp?\\n\\n# DApp\\n\\nDApp是去中心化的应用程序，一个应用程序，这些方面皆可去中心化：\\n\\n- 后端软件，应用逻辑\\n- 前段软件\\n- 数据存储\\n- 消息交互\\n- 命名解释\\n\\n每一方面都可以使用中心化设计，或是去中心化设计。例如，前端软件可以设计成运行在中心化服务器的web应用，也可以设计成运行在各自的手机里；后端软件和数据存储可以放在私人的服务器和数据库上，也可以设计成Smart Contract运行在P2P的网络。DApp有一些优势，是中心化的架构无法拥有的：\\n\\n### 弹性\\n\\n由于业务逻辑写在了Smart Contract，DApp后端程序在Blockchain平台分布式部署和管理。与部署在中心服务器的程序不同，DApp永远不会下线，只要Blockchain运行，它就运行。\\n\\n### 透明\\n\\n>DApp在链上的自然属性，使得任何人都可以审查它的代码，功能。与DApp发生的任何交互都会永远记录在Blockchain上。\\n\\n### 不受干扰\\n\\n>用户只要使用Ethereum的节点，就可以使用DApp，不受任何权威机构的干扰。DApp一旦部署到网络中，服务的提供商，甚至Smart Contract的拥有者，都无法修改代码。\\n\\nEthereum生态系统直至今日，只有非常少的完全去中心化的应用，绝大部分应用部分依赖与中心服务器提供功能支持，我们希望未来的DApp能够完全去中心化。\\n\\n# 后端(Smart Contract)\\n\\n在DApp里，Smart Contract存储业务逻辑(程序代码)，运行状态。你可以将Smart Contract看作传统应用的服务端程序，它们主要的区别是，Smart Contract的运行非常昂贵，应尽可能少访问。因此Smart Contract适合于开发高信任度的，在分散化平台运行的应用。\\n\\nEthereum提供了这样子的一个网络，Smart Contract之间互相调用，互相传递信息，修改状态，逻辑的复杂度仅仅受到gas消耗的限制。在部署Smart Contract之后，它的逻辑能够被其它DApp使用。有一点值得我们细虑，Smart Contract一旦部署，无法被修改，如果Contract实现了selfdestruct函数功能，它可以被销毁。除了被销毁，没有任何办法改变代码。另外值得细虑的是DApp的大小，整体庞大的DApp在部署和使用上会话费昂贵的gas，因此有些应用将计算量大的操作放到Blockchain之外。如果DApp的核心逻辑不在Blockchain上，使用它意味着你对服务提供商的信任。\\n\\n# 前端(Web用户接口)\\n\\nDApp后端商业逻辑要求程序员理解EVM，Smart Contract编程语言如solidy，而前端的开发可以使用标准的web技术，HTML，CSS，JavaScript，等等。传统的前端开发者可以使用他熟识的程序库，程序框架。与Ethereum的交互操作，如消息签名，发送交易，管理钥匙，一般由web浏览器整合，提供扩展工具，如MetaMask。当然，前端程序也可以是手机软件，但目前很少开发资源用于手机应用，没有支持手机的，管理钥匙，签名，交易发送的的轻量级服务。与Ethereum交互的应用库主要是web3.js。\\n\\n# 数据存储\\n\\n由于gas价格贵，限量低，Smart Contract不适合存储和处理大Block，因此绝大部分应用将数据存储在Blockchain之外。存储服务可以中心化的(云存储)，也可以是分散化的，如存储在P2P网络的IPFS，Ethereum自身的Swarm。分散化的P2P存储平台适合存储大的静态资源，如图片，视频，前端程序的资源文件等等。\\n\\n### IPFS\\nInter Planetary File System，简称IPFS，星际文件系统，是去中心化的，内容可寻址的，分布式存储于P2P网络的存储系统。内容可选址的意思是，文件的每一块都被哈希，哈希值用于该一Block的唯一标识。之后可以IPFS的节点上使用该哈希来获取数据。IPFS的目标是替代HTTP，用分布式的方式传递web应用，文件。\\n\\n### Swarm\\nSwarm也是内容可寻址分布式存储系统，与IPFS相似，由Ethereum Fundation创建，作为geth的一整套工具。与IPFS相似，Swarm将数据存储在swarm node里，通过哈希值访问，数据存储在P2P网络中。\\n\\n# 分布式消息交流协议\\n\\n应用程序的另外一个重要组件是内部进程交流协议，它是指消息在应用程序之间，应用程序的实例之间以及应用程序的用户之间的传递。传统的消息由中心服务器接收转发，当然也有许多去中心化的服务在P2P网络转发消息，值得一提的是用于DApp的Whisper，是geth的一组应用工具。\\n\\n# Ethereum命名服务(ENS)\\n假设你设计了世界上最好的Smart Contract，但是没有提供良好的用户接口，人们就不会使用它。传统互联网，DNS服务为每个域名连接人们能看懂的名字，因此可以在浏览器输入名字访问到相对应的服务。在Ethereum Blockchain里，ENS的作用与DNS是一样的，不同的是它用去中心化的方式实现。举个例子，Ethereum Fundation的捐款地址是0xfB6916095ca1df60bB79Ce92cE3Ea74c37c5d359，支持ENS的钱包，可以用ethereum.eth来表示它。\\n\\nENS不仅仅是Smart Contract，同时是一个基础DApp，它提供名字解释服务，支持其它DApp进行地址命名的注册，管理和拍卖。ENS本身是基础DApp，为其它DApp提供服务，嵌入其它DApp一起工作。\\n\";","module.exports=/[\\0-\\x1F\\x7F-\\x9F]/","/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n'use strict';\n\n\nvar Ruler  = require('./ruler');\n\n\nvar _rules = [\n  [ 'normalize',      require('./rules_core/normalize')      ],\n  [ 'block',          require('./rules_core/block')          ],\n  [ 'inline',         require('./rules_core/inline')         ],\n  [ 'linkify',        require('./rules_core/linkify')        ],\n  [ 'replacements',   require('./rules_core/replacements')   ],\n  [ 'smartquotes',    require('./rules_core/smartquotes')    ]\n];\n\n\n/**\n * new Core()\n **/\nfunction Core() {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n}\n\n\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\nCore.prototype.process = function (state) {\n  var i, l, rules;\n\n  rules = this.ruler.getRules('');\n\n  for (i = 0, l = rules.length; i < l; i++) {\n    rules[i](state);\n  }\n};\n\nCore.prototype.State = require('./rules_core/state_core');\n\n\nmodule.exports = Core;\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar isForced = require('../internals/is-forced');\nvar redefine = require('../internals/redefine');\nvar has = require('../internals/has');\nvar classof = require('../internals/classof-raw');\nvar inheritIfRequired = require('../internals/inherit-if-required');\nvar toPrimitive = require('../internals/to-primitive');\nvar fails = require('../internals/fails');\nvar create = require('../internals/object-create');\nvar getOwnPropertyNames = require('../internals/object-get-own-property-names').f;\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar defineProperty = require('../internals/object-define-property').f;\nvar trim = require('../internals/string-trim').trim;\n\nvar NUMBER = 'Number';\nvar NativeNumber = global[NUMBER];\nvar NumberPrototype = NativeNumber.prototype;\n\n// Opera ~12 has broken Object#toString\nvar BROKEN_CLASSOF = classof(create(NumberPrototype)) == NUMBER;\n\n// `ToNumber` abstract operation\n// https://tc39.github.io/ecma262/#sec-tonumber\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, false);\n  var first, third, radix, maxCode, digits, length, index, code;\n  if (typeof it == 'string' && it.length > 2) {\n    it = trim(it);\n    first = it.charCodeAt(0);\n    if (first === 43 || first === 45) {\n      third = it.charCodeAt(2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (it.charCodeAt(1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal of /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal of /^0o[0-7]+$/i\n        default: return +it;\n      }\n      digits = it.slice(2);\n      length = digits.length;\n      for (index = 0; index < length; index++) {\n        code = digits.charCodeAt(index);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\n// `Number` constructor\n// https://tc39.github.io/ecma262/#sec-number-constructor\nif (isForced(NUMBER, !NativeNumber(' 0o1') || !NativeNumber('0b1') || NativeNumber('+0x1'))) {\n  var NumberWrapper = function Number(value) {\n    var it = arguments.length < 1 ? 0 : value;\n    var dummy = this;\n    return dummy instanceof NumberWrapper\n      // check on 1..constructor(foo) case\n      && (BROKEN_CLASSOF ? fails(function () { NumberPrototype.valueOf.call(dummy); }) : classof(dummy) != NUMBER)\n        ? inheritIfRequired(new NativeNumber(toNumber(it)), dummy, NumberWrapper) : toNumber(it);\n  };\n  for (var keys = DESCRIPTORS ? getOwnPropertyNames(NativeNumber) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES2015 (in case, if modules with ES2015 Number statics required before):\n    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +\n    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (has(NativeNumber, key = keys[j]) && !has(NumberWrapper, key)) {\n      defineProperty(NumberWrapper, key, getOwnPropertyDescriptor(NativeNumber, key));\n    }\n  }\n  NumberWrapper.prototype = NumberPrototype;\n  NumberPrototype.constructor = NumberWrapper;\n  redefine(global, NUMBER, NumberWrapper);\n}\n","// Emoticons -> Emoji mapping.\n//\n// (!) Some patterns skipped, to avoid collisions\n// without increase matcher complicity. Than can change in future.\n//\n// Places to look for more emoticons info:\n//\n// - http://en.wikipedia.org/wiki/List_of_emoticons#Western\n// - https://github.com/wooorm/emoticon/blob/master/Support.md\n// - http://factoryjoe.com/projects/emoticons/\n//\n'use strict';\n\nmodule.exports = {\n  angry:            [ '>:(', '>:-(' ],\n  blush:            [ ':\")', ':-\")' ],\n  broken_heart:     [ '</3', '<\\\\3' ],\n  // :\\ and :-\\ not used because of conflict with markdown escaping\n  confused:         [ ':/', ':-/' ], // twemoji shows question\n  cry:              [ \":'(\", \":'-(\", ':,(', ':,-(' ],\n  frowning:         [ ':(', ':-(' ],\n  heart:            [ '<3' ],\n  imp:              [ ']:(', ']:-(' ],\n  innocent:         [ 'o:)', 'O:)', 'o:-)', 'O:-)', '0:)', '0:-)' ],\n  joy:              [ \":')\", \":'-)\", ':,)', ':,-)', \":'D\", \":'-D\", ':,D', ':,-D' ],\n  kissing:          [ ':*', ':-*' ],\n  laughing:         [ 'x-)', 'X-)' ],\n  neutral_face:     [ ':|', ':-|' ],\n  open_mouth:       [ ':o', ':-o', ':O', ':-O' ],\n  rage:             [ ':@', ':-@' ],\n  smile:            [ ':D', ':-D' ],\n  smiley:           [ ':)', ':-)' ],\n  smiling_imp:      [ ']:)', ']:-)' ],\n  sob:              [ \":,'(\", \":,'-(\", ';(', ';-(' ],\n  stuck_out_tongue: [ ':P', ':-P' ],\n  sunglasses:       [ '8-)', 'B-)' ],\n  sweat:            [ ',:(', ',:-(' ],\n  sweat_smile:      [ ',:)', ',:-)' ],\n  unamused:         [ ':s', ':-S', ':z', ':-Z', ':$', ':-$' ],\n  wink:             [ ';)', ';-)' ]\n};\n","export default \"# 从test-network说起\\n相信大部分开发者接触Hyperledger Fabric，都会从官方教程fabric-samples中的例子入手。首先运行test-network下的测试网络，再运行各种教材案例。当我们开始进行开发chaincode的时候，问题就来了。\\n\\n假设我们写了一段代码: 函数A...，然后进行测试，清除网络，重新启动网络；随后我们又写了一段代码：函数B...，清除网络，重新启动网络；发现有一个bug，清除网络，重新启动网络......\\n\\n重启网络，test-network大致做了以下工作:\\n1. 关闭，删除container，删除docker网络\\n2. 清空证书文件\\n3. 重新生成证书文件\\n4. 创建docker网络，创建container\\n5. 创建channel，加入channel\\n6. 打包，安装，实例化chaincode\\n\\n时间足够喝一杯咖啡。\\n\\n咖啡不能多喝，所以需要配置专门开发chaincode的网络，具有以下特点：\\n1. 将节点的数据写入至本地文件，重启时读取本地文件，恢复链的状态\\n2. 重启不清除已经生成的证书文件\\n3. 修改chaincode之后，用peer chaincode upgrade升级，而不是重新安装\\n4. 只需要一个orderer节点，一个peer节点，简化网络架构\\n\\n# 解释devnet网络\\n首先拉取[fabric-cases](https://github.com/stephenwu2020/fabric-cases.git)的源码，在根目录执行\\n```\\nmake\\n```\\n脚本运行成功之后，生成了两个目录：\\n1. bin: 工具bin文件\\n2. config: 配置文件\\n同时拉取了fabric的镜像，执行\\n```\\ndocker ps\\n```\\n确认fabric v2.2和fabric-ca v1.4.7的镜像在本地\\n```\\nREPOSITORY                   TAG                 IMAGE ID            CREATED             SIZE\\nhyperledger/fabric-tools     2.2                 5eb2356665e7        4 weeks ago         519MB\\nhyperledger/fabric-tools     2.2.0               5eb2356665e7        4 weeks ago         519MB\\nhyperledger/fabric-tools     latest              5eb2356665e7        4 weeks ago         519MB\\nhyperledger/fabric-peer      2.2                 760f304a3282        4 weeks ago         54.9MB\\nhyperledger/fabric-peer      2.2.0               760f304a3282        4 weeks ago         54.9MB\\nhyperledger/fabric-peer      latest              760f304a3282        4 weeks ago         54.9MB\\nhyperledger/fabric-orderer   2.2                 5fb8e97da88d        4 weeks ago         38.4MB\\nhyperledger/fabric-orderer   2.2.0               5fb8e97da88d        4 weeks ago         38.4MB\\nhyperledger/fabric-orderer   latest              5fb8e97da88d        4 weeks ago         38.4MB\\nhyperledger/fabric-ccenv     2.2                 aac435a5d3f1        4 weeks ago         586MB\\nhyperledger/fabric-ccenv     2.2.0               aac435a5d3f1        4 weeks ago         586MB\\nhyperledger/fabric-ccenv     latest              aac435a5d3f1        4 weeks ago         586MB\\nhyperledger/fabric-baseos    2.2                 aa2bdf8013af        4 weeks ago         6.85MB\\nhyperledger/fabric-baseos    2.2.0               aa2bdf8013af        4 weeks ago         6.85MB\\nhyperledger/fabric-baseos    latest              aa2bdf8013af        4 weeks ago         6.85MB\\nhyperledger/fabric-nodeenv   2.2                 ab88fe4d29dd        5 weeks ago         293MB\\nhyperledger/fabric-nodeenv   2.2.0               ab88fe4d29dd        5 weeks ago         293MB\\nhyperledger/fabric-nodeenv   latest              ab88fe4d29dd        5 weeks ago         293MB\\nhyperledger/fabric-javaenv   2.2                 56c30f316b23        5 weeks ago         504MB\\nhyperledger/fabric-javaenv   2.2.0               56c30f316b23        5 weeks ago         504MB\\nhyperledger/fabric-javaenv   latest              56c30f316b23        5 weeks ago         504MB\\nhyperledger/fabric-ca        1.4                 743a758fae29        2 months ago        154MB\\nhyperledger/fabric-ca        1.4.7               743a758fae29        2 months ago        154MB\\nhyperledger/fabric-ca        latest              743a758fae29        2 months ago        154MB\\n```\\n\\n\\n## 目录结构解释\\n进入devnet:\\n```\\ncd devnet\\n```\\n主要目录有：\\n1. pkg:链码打包后存放的目录\\n2. productions: peer和orderer数据存放目录\\n3. scripts: 网络部署，channel设置，chaincode安装等工具脚本\\n4. builder.sh: 网络部署的cli工具\\n\\n## 如何解决test-network存在的问题\\n第一，节点的数据存放在本地，容器重启后，数据还在，其中主要的设置在docker-compose.yaml文件中：\\n```\\n peer0.org1.develop.com:\\n    ......\\n    volumes:\\n        - ./productions/peer:/var/hyperledger/production\\n    .......\\n```\\n\\n```\\n  orderer.develop.com:\\n    ......\\n    volumes:\\n        - ./productions/orderer:/var/hyperledger/production/orderer\\n    ......\\n```\\n\\n第二，builder.sh细化了网络的启动逻辑，查看帮助:\\n```\\n#$ ./builder.sh \\nUsage: \\n  ./builder.sh <cmd>\\ncmd: \\n  - new\\n  - destroy\\n  - up\\n  - down\\n  - upgrade\\n  - network\\n  - channel\\n  - chaincode\\n\\n```\\n指令解释:\\n- new: 创建全新网络，会清空之前全部网络的数据，证书，链的数据等等；\\n- destroy: 销毁网络，清空证书，链的数据等等；\\n- up: 启动网络，只是启动docker container\\n- down: 关闭网络，只是删除docker container\\n- upgrade: 更新链码\\n- network, channel, chaincode 分别对应网络，channel, chaincode的更细的功能，请查看帮助\\n\\n第三，提供upgrade指令\\n\\nchaincode修改后，运行upgrade，重新部署chaincode\\n\\n# 使用示例\\n\\n1 如果没有下载工具，请先执行:\\n```\\nmake\\n```\\n\\n2 新建全新的网络:\\n```\\n#$ ./builder.sh new\\nRemoving network develop_basic\\nWARNING: Network develop_basic not found.\\norg1.develop.com\\n2020-08-11 09:55:23.165 HKT [common.tools.configtxgen] main -> INFO 001 Loading configuration\\n2020-08-11 09:55:23.199 HKT [common.tools.configtxgen.localconfig] completeInitialization -> INFO 002 orderer type: etcdraft\\n2020-08-11 09:55:23.200 HKT [common.tools.configtxgen.localconfig] completeInitial\\n......\\nc1\\nBlockchain info: {\\\"height\\\":2,\\\"currentBlockHash\\\":\\\"jn8Npe0AfpjLiVYA3+EUb7Drvd7F7xIMB4q9KZcTaJA=\\\",\\\"previousBlockHash\\\":\\\"0jPkgU/EY/4ZHft2BMBk2yprOFAGyqPwDwkbp3nMJLc=\\\"}\\npkg already exist\\nInstalled chaincodes on peer:\\nPackage ID: abstore_1:f038023086151baad502e5b82165d3630ac2c482ea502244a8f52cc1f25c5d22, Label: abstore_1\\nPackageID is abstore_1:f038023086151baad502e5b82165d3630ac2c482ea502244a8f52cc1f25c5d22\\n{\\n\\t\\\"approvals\\\": {\\n\\t\\t\\\"Org1MSP\\\": true\\n\\t}\\n}\\nCommitted chaincode definitions on channel 'c1':\\nName: mycc, Version: 1.0.0, Sequence: 1, Endorsement Plugin: escc, Validation Plugin: vscc\\n100\\n```\\n\\n3 关闭网络\\n```\\n#$ ./builder.sh down\\nStopping cli                    ... done\\nStopping orderer.develop.com    ... done\\nStopping peer0.org1.develop.com ... done\\nRemoving cli                    ... done\\nRemoving orderer.develop.com    ... done\\nRemoving peer0.org1.develop.com ... done\\nRemoving network develop_basic\\n\\n```\\n4 启动网络\\n```\\n#$ ./builder.sh up\\nCreating network \\\"develop_basic\\\" with the default driver\\nCreating peer0.org1.develop.com ... done\\nCreating orderer.develop.com    ... done\\nCreating cli                    ... done\\n\\n```\\n\\n5 查询chaincode\\n```\\n#$ ./builder.sh chaincode queryCommit\\nCommitted chaincode definitions on channel 'c1':\\nName: mycc, Version: 1.0.0, Sequence: 1, Endorsement Plugin: escc, Validation Plugin: vscc\\n```\\n```\\n#$ ./builder.sh chaincode query\\n100\\n\\n```\\n\\n6 修改chaincode，注意./chaincode/abstore/go/abstore.go的55行，初始化a的值时，额外增加10\\n```\\n\\tfmt.Printf(\\\"Aval = %d, Bval = %d\\\\n\\\", Aval, Bval)\\n\\n\\tAval = Aval + 10\\n\\n\\t// Write the state to the ledger\\n\\terr = stub.PutState(A, []byte(strconv.Itoa(Aval)))\\n```\\n\\n7 运行upgrade指令，更新链码\\n```\\n#$ ./builder.sh chaincode upgrade\\nupgrade chaincode...\\noptions: version:1.0.1, sequence:2\\nfetch go dependency\\n/opt/gopath/src/github.com/hyperledger/chaincode/abstore/go /opt/gopath/src/github.com/hyperledger/fabric/peer\\n/opt/gopath/src/github.com/hyperledger/fabric/peer\\npackage chaincode\\nInstalled chaincodes on peer:\\nPackage ID: abstore_1:5496f0b8dabffeb1e498582b78b676c62aeb3cf7ec263d68281320dc6da7f7cd, Label: abstore_1\\nPackage ID: abstore_1:f038023086151baad502e5b82165d3630ac2c482ea502244a8f52cc1f25c5d22, Label: abstore_1\\nPackageID is abstore_1:f038023086151baad502e5b82165d3630ac2c482ea502244a8f52cc1f25c5d22\\n110\\nchaincode upgraded.\\n\\n```\\n8 再次查询链码\\n```\\n#$ ./builder.sh chaincode query\\n110\\n\\n#$ ./builder.sh chaincode queryCommit\\nCommitted chaincode definitions on channel 'c1':\\nName: mycc, Version: 1.0.1, Sequence: 2, Endorsement Plugin: escc, Validation Plugin: vscc\\n```\\n\\n可以看到, a的值变为了110， chaincode版本已经是1.0.1了\\n\\n9 销毁网络\\n```\\n#$ ./builder.sh destroy\\n```\\n\\n## 后话\\ndown命令只是停止、删除container，container的数据都存放在production目录，下次启动时，读取数据，读取证书文件，启动，恢复状态，时间大大的缩短了。另一点，chaincode的升级步骤被抽离出来了，为日常开发提供了便利。\";","function getRelocatable(re) {\n  // In the future, this could use a WeakMap instead of an expando.\n  if (!re.__matchAtRelocatable) {\n    // Disjunctions are the lowest-precedence operator, so we can make any\n    // pattern match the empty string by appending `|()` to it:\n    // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-patterns\n    var source = re.source + '|()';\n\n    // We always make the new regex global.\n    var flags = 'g' + (re.ignoreCase ? 'i' : '') + (re.multiline ? 'm' : '') + (re.unicode ? 'u' : '')\n    // sticky (/.../y) doesn't make sense in conjunction with our relocation\n    // logic, so we ignore it here.\n    ;\n\n    re.__matchAtRelocatable = new RegExp(source, flags);\n  }\n  return re.__matchAtRelocatable;\n}\n\nfunction matchAt(re, str, pos) {\n  if (re.global || re.sticky) {\n    throw new Error('matchAt(...): Only non-global regexes are supported');\n  }\n  var reloc = getRelocatable(re);\n  reloc.lastIndex = pos;\n  var match = reloc.exec(str);\n  // Last capturing group is our sentinel that indicates whether the regex\n  // matched at the given location.\n  if (match[match.length - 1] == null) {\n    // Original regex matched.\n    match.length = match.length - 1;\n    return match;\n  } else {\n    return null;\n  }\n}\n\nmodule.exports = matchAt;","// Convert straight quotation marks to typographic ones\n//\n'use strict';\n\n\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\nvar QUOTE_TEST_RE = /['\"]/;\nvar QUOTE_RE = /['\"]/g;\nvar APOSTROPHE = '\\u2019'; /* ’ */\n\n\nfunction replaceAt(str, index, ch) {\n  return str.substr(0, index) + ch + str.substr(index + 1);\n}\n\nfunction process_inlines(tokens, state) {\n  var i, token, text, t, pos, max, thisLevel, item, lastChar, nextChar,\n      isLastPunctChar, isNextPunctChar, isLastWhiteSpace, isNextWhiteSpace,\n      canOpen, canClose, j, isSingle, stack, openQuote, closeQuote;\n\n  stack = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    token = tokens[i];\n\n    thisLevel = tokens[i].level;\n\n    for (j = stack.length - 1; j >= 0; j--) {\n      if (stack[j].level <= thisLevel) { break; }\n    }\n    stack.length = j + 1;\n\n    if (token.type !== 'text') { continue; }\n\n    text = token.content;\n    pos = 0;\n    max = text.length;\n\n    /*eslint no-labels:0,block-scoped-var:0*/\n    OUTER:\n    while (pos < max) {\n      QUOTE_RE.lastIndex = pos;\n      t = QUOTE_RE.exec(text);\n      if (!t) { break; }\n\n      canOpen = canClose = true;\n      pos = t.index + 1;\n      isSingle = (t[0] === \"'\");\n\n      // Find previous character,\n      // default to space if it's the beginning of the line\n      //\n      lastChar = 0x20;\n\n      if (t.index - 1 >= 0) {\n        lastChar = text.charCodeAt(t.index - 1);\n      } else {\n        for (j = i - 1; j >= 0; j--) {\n          if (tokens[j].type !== 'text') { continue; }\n\n          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1);\n          break;\n        }\n      }\n\n      // Find next character,\n      // default to space if it's the end of the line\n      //\n      nextChar = 0x20;\n\n      if (pos < max) {\n        nextChar = text.charCodeAt(pos);\n      } else {\n        for (j = i + 1; j < tokens.length; j++) {\n          if (tokens[j].type !== 'text') { continue; }\n\n          nextChar = tokens[j].content.charCodeAt(0);\n          break;\n        }\n      }\n\n      isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n      isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n      isLastWhiteSpace = isWhiteSpace(lastChar);\n      isNextWhiteSpace = isWhiteSpace(nextChar);\n\n      if (isNextWhiteSpace) {\n        canOpen = false;\n      } else if (isNextPunctChar) {\n        if (!(isLastWhiteSpace || isLastPunctChar)) {\n          canOpen = false;\n        }\n      }\n\n      if (isLastWhiteSpace) {\n        canClose = false;\n      } else if (isLastPunctChar) {\n        if (!(isNextWhiteSpace || isNextPunctChar)) {\n          canClose = false;\n        }\n      }\n\n      if (nextChar === 0x22 /* \" */ && t[0] === '\"') {\n        if (lastChar >= 0x30 /* 0 */ && lastChar <= 0x39 /* 9 */) {\n          // special case: 1\"\" - count first quote as an inch\n          canClose = canOpen = false;\n        }\n      }\n\n      if (canOpen && canClose) {\n        // treat this as the middle of the word\n        canOpen = false;\n        canClose = isNextPunctChar;\n      }\n\n      if (!canOpen && !canClose) {\n        // middle of word\n        if (isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE);\n        }\n        continue;\n      }\n\n      if (canClose) {\n        // this could be a closing quote, rewind the stack to get a match\n        for (j = stack.length - 1; j >= 0; j--) {\n          item = stack[j];\n          if (stack[j].level < thisLevel) { break; }\n          if (item.single === isSingle && stack[j].level === thisLevel) {\n            item = stack[j];\n\n            if (isSingle) {\n              openQuote = state.md.options.quotes[2];\n              closeQuote = state.md.options.quotes[3];\n            } else {\n              openQuote = state.md.options.quotes[0];\n              closeQuote = state.md.options.quotes[1];\n            }\n\n            // replace token.content *before* tokens[item.token].content,\n            // because, if they are pointing at the same token, replaceAt\n            // could mess up indices when quote length != 1\n            token.content = replaceAt(token.content, t.index, closeQuote);\n            tokens[item.token].content = replaceAt(\n              tokens[item.token].content, item.pos, openQuote);\n\n            pos += closeQuote.length - 1;\n            if (item.token === i) { pos += openQuote.length - 1; }\n\n            text = token.content;\n            max = text.length;\n\n            stack.length = j;\n            continue OUTER;\n          }\n        }\n      }\n\n      if (canOpen) {\n        stack.push({\n          token: i,\n          pos: t.index,\n          single: isSingle,\n          level: thisLevel\n        });\n      } else if (canClose && isSingle) {\n        token.content = replaceAt(token.content, t.index, APOSTROPHE);\n      }\n    }\n  }\n}\n\n\nmodule.exports = function smartquotes(state) {\n  /*eslint max-depth:0*/\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline' ||\n        !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n      continue;\n    }\n\n    process_inlines(state.tokens[blkIdx].children, state);\n  }\n};\n","'use strict';\n\n// Use direct extract instead of `regenerate` to reduse browserified size\nvar src_Any = exports.src_Any = require('uc.micro/properties/Any/regex').source;\nvar src_Cc  = exports.src_Cc = require('uc.micro/categories/Cc/regex').source;\nvar src_Z   = exports.src_Z  = require('uc.micro/categories/Z/regex').source;\nvar src_P   = exports.src_P  = require('uc.micro/categories/P/regex').source;\n\n// \\p{\\Z\\P\\Cc\\CF} (white spaces + control + format + punctuation)\nvar src_ZPCc = exports.src_ZPCc = [ src_Z, src_P, src_Cc ].join('|');\n\n// \\p{\\Z\\Cc} (white spaces + control)\nvar src_ZCc = exports.src_ZCc = [ src_Z, src_Cc ].join('|');\n\n// All possible word characters (everything without punctuation, spaces & controls)\n// Defined via punctuation & spaces to save space\n// Should be something like \\p{\\L\\N\\S\\M} (\\w but without `_`)\nvar src_pseudo_letter       = '(?:(?!>|<|' + src_ZPCc + ')' + src_Any + ')';\n// The same as abothe but without [0-9]\n// var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar src_ip4 = exports.src_ip4 =\n\n  '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)';\n\n// Prohibit [@/] in user/pass to avoid wrong domain fetch.\nexports.src_auth    = '(?:(?:(?!' + src_ZCc + '|[@/]).)+@)?';\n\nvar src_port = exports.src_port =\n\n  '(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?';\n\nvar src_host_terminator = exports.src_host_terminator =\n\n  '(?=$|>|<|' + src_ZPCc + ')(?!-|_|:\\\\d|\\\\.-|\\\\.(?!$|' + src_ZPCc + '))';\n\nvar src_path = exports.src_path =\n\n  '(?:' +\n    '[/?#]' +\n      '(?:' +\n        '(?!' + src_ZCc + '|[()[\\\\]{}.,\"\\'?!\\\\-<>]).|' +\n        '\\\\[(?:(?!' + src_ZCc + '|\\\\]).)*\\\\]|' +\n        '\\\\((?:(?!' + src_ZCc + '|[)]).)*\\\\)|' +\n        '\\\\{(?:(?!' + src_ZCc + '|[}]).)*\\\\}|' +\n        '\\\\\"(?:(?!' + src_ZCc + '|[\"]).)+\\\\\"|' +\n        \"\\\\'(?:(?!\" + src_ZCc + \"|[']).)+\\\\'|\" +\n        \"\\\\'(?=\" + src_pseudo_letter + ').|' +  // allow `I'm_king` if no pair found\n        '\\\\.{2,3}[a-zA-Z0-9%/]|' + // github has ... in commit range links. Restrict to\n                                   // - english\n                                   // - percent-encoded\n                                   // - parts of file path\n                                   // until more examples found.\n        '\\\\.(?!' + src_ZCc + '|[.]).|' +\n        '\\\\-(?!--(?:[^-]|$))(?:-*)|' +  // `---` => long dash, terminate\n        '\\\\,(?!' + src_ZCc + ').|' +      // allow `,,,` in paths\n        '\\\\!(?!' + src_ZCc + '|[!]).|' +\n        '\\\\?(?!' + src_ZCc + '|[?]).' +\n      ')+' +\n    '|\\\\/' +\n  ')?';\n\nvar src_email_name = exports.src_email_name =\n\n  '[\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]+';\n\nvar src_xn = exports.src_xn =\n\n  'xn--[a-z0-9\\\\-]{1,59}';\n\n// More to read about domain names\n// http://serverfault.com/questions/638260/\n\nvar src_domain_root = exports.src_domain_root =\n\n  // Allow letters & digits (http://test1)\n  '(?:' +\n    src_xn +\n    '|' +\n    src_pseudo_letter + '{1,63}' +\n  ')';\n\nvar src_domain = exports.src_domain =\n\n  '(?:' +\n    src_xn +\n    '|' +\n    '(?:' + src_pseudo_letter + ')' +\n    '|' +\n    // don't allow `--` in domain names, because:\n    // - that can conflict with markdown &mdash; / &ndash;\n    // - nobody use those anyway\n    '(?:' + src_pseudo_letter + '(?:-(?!-)|' + src_pseudo_letter + '){0,61}' + src_pseudo_letter + ')' +\n  ')';\n\nvar src_host = exports.src_host =\n\n  '(?:' +\n  // Don't need IP check, because digits are already allowed in normal domain names\n  //   src_ip4 +\n  // '|' +\n    '(?:(?:(?:' + src_domain + ')\\\\.)*' + src_domain_root + ')' +\n  ')';\n\nvar tpl_host_fuzzy = exports.tpl_host_fuzzy =\n\n  '(?:' +\n    src_ip4 +\n  '|' +\n    '(?:(?:(?:' + src_domain + ')\\\\.)+(?:%TLDS%))' +\n  ')';\n\nvar tpl_host_no_ip_fuzzy = exports.tpl_host_no_ip_fuzzy =\n\n  '(?:(?:(?:' + src_domain + ')\\\\.)+(?:%TLDS%))';\n\nexports.src_host_strict =\n\n  src_host + src_host_terminator;\n\nvar tpl_host_fuzzy_strict = exports.tpl_host_fuzzy_strict =\n\n  tpl_host_fuzzy + src_host_terminator;\n\nexports.src_host_port_strict =\n\n  src_host + src_port + src_host_terminator;\n\nvar tpl_host_port_fuzzy_strict = exports.tpl_host_port_fuzzy_strict =\n\n  tpl_host_fuzzy + src_port + src_host_terminator;\n\nvar tpl_host_port_no_ip_fuzzy_strict = exports.tpl_host_port_no_ip_fuzzy_strict =\n\n  tpl_host_no_ip_fuzzy + src_port + src_host_terminator;\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Main rules\n\n// Rude test fuzzy links by host, for quick deny\nexports.tpl_host_fuzzy_test =\n\n  'localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:' + src_ZPCc + '|>|$))';\n\nexports.tpl_email_fuzzy =\n\n    '(^|<|>|\\\\(|' + src_ZCc + ')(' + src_email_name + '@' + tpl_host_fuzzy_strict + ')';\n\nexports.tpl_link_fuzzy =\n    // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n    // but can start with > (markdown blockquote)\n    '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|]|' + src_ZPCc + '))' +\n    '((?![$+<=>^`|])' + tpl_host_port_fuzzy_strict + src_path + ')';\n\nexports.tpl_link_no_ip_fuzzy =\n    // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n    // but can start with > (markdown blockquote)\n    '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|]|' + src_ZPCc + '))' +\n    '((?![$+<=>^`|])' + tpl_host_port_no_ip_fuzzy_strict + src_path + ')';\n","var anObject = require('./_an-object');\nvar get = require('./core.get-iterator-method');\nmodule.exports = require('./_core').getIterator = function (it) {\n  var iterFn = get(it);\n  if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');\n  return anObject(iterFn.call(it));\n};\n","/**\n * This file contains a list of utility functions which are useful in other\n * files.\n */\n\n/**\n * Provide an `indexOf` function which works in IE8, but defers to native if\n * possible.\n */\nvar nativeIndexOf = Array.prototype.indexOf;\nvar indexOf = function(list, elem) {\n    if (list == null) {\n        return -1;\n    }\n    if (nativeIndexOf && list.indexOf === nativeIndexOf) {\n        return list.indexOf(elem);\n    }\n    var i = 0;\n    var l = list.length;\n    for (; i < l; i++) {\n        if (list[i] === elem) {\n            return i;\n        }\n    }\n    return -1;\n};\n\n/**\n * Return whether an element is contained in a list\n */\nvar contains = function(list, elem) {\n    return indexOf(list, elem) !== -1;\n};\n\n/**\n * Provide a default value if a setting is undefined\n */\nvar deflt = function(setting, defaultIfUndefined) {\n    return setting === undefined ? defaultIfUndefined : setting;\n};\n\n// hyphenate and escape adapted from Facebook's React under Apache 2 license\n\nvar uppercase = /([A-Z])/g;\nvar hyphenate = function(str) {\n    return str.replace(uppercase, \"-$1\").toLowerCase();\n};\n\nvar ESCAPE_LOOKUP = {\n    \"&\": \"&amp;\",\n    \">\": \"&gt;\",\n    \"<\": \"&lt;\",\n    \"\\\"\": \"&quot;\",\n    \"'\": \"&#x27;\",\n};\n\nvar ESCAPE_REGEX = /[&><\"']/g;\n\nfunction escaper(match) {\n    return ESCAPE_LOOKUP[match];\n}\n\n/**\n * Escapes text to prevent scripting attacks.\n *\n * @param {*} text Text value to escape.\n * @return {string} An escaped string.\n */\nfunction escape(text) {\n    return (\"\" + text).replace(ESCAPE_REGEX, escaper);\n}\n\n/**\n * A function to set the text content of a DOM element in all supported\n * browsers. Note that we don't define this if there is no document.\n */\nvar setTextContent;\nif (typeof document !== \"undefined\") {\n    var testNode = document.createElement(\"span\");\n    if (\"textContent\" in testNode) {\n        setTextContent = function(node, text) {\n            node.textContent = text;\n        };\n    } else {\n        setTextContent = function(node, text) {\n            node.innerText = text;\n        };\n    }\n}\n\n/**\n * A function to clear a node.\n */\nfunction clearNode(node) {\n    setTextContent(node, \"\");\n}\n\nmodule.exports = {\n    contains: contains,\n    deflt: deflt,\n    escape: escape,\n    hyphenate: hyphenate,\n    indexOf: indexOf,\n    setTextContent: setTextContent,\n    clearNode: clearNode,\n};\n","export default \"# 虚拟机\\n\\nEthereum虚拟机，简称EVM，处于Ethereum协议操作的核心地位。从名字看得出来，它是一台计算引擎，与微软的 .Net Framework相似，与Java语言的虚拟机相似。\\n\\n# EVM是什么\\nEVM在Ethereum生态中，负责smart conract的部署和执行。最简单的转钱交易不需要EVM，其它的操作都需要EVM执行，修改状态。从整体的视角看，EVM是一台全球化分布式的计算机，七百万的对象在里面运行，每个对象都有自己的存储空间。\\n\\nEVM是准图灵完整状态机，Smart Contract的执行进程，由于受到gasLimit的约束，其计算步骤是有限的，因此进程不会无限地进行，避免Ethereum自身停机。EVM基于堆栈的设计架构，所有内存中的变量存放在一个堆栈里，每一块数据的大小是256位，里面细分了几大数据寻址组件：\\n\\n- 不可变的代码ROM，用于加载Smart Contract代码运行\\n- 一块频繁修改的内存，每次寻址默认初始化0值\\n- 一块永久的存储，记录了Ethereum的状态\\n\\n每次运行，有一组环境变量和数据提供访问。下图是EVM的架构和运行上下文:\\n\\n![img](/book/evm.png)\\n\\n# 与现有技术的对比\\n虚拟机一词，通常指真正的一台电脑的虚拟化，特别是像VirtualBox，QEMU这样的虚拟程序，或者是一个完整的操作系统实例，如Linux KVM。它们必须提供真实硬件的软件层抽象，系统调用，和其它kernel功能。\\n\\n相比之下，EVM提供非常有限的虚拟化，它仅仅是一个计算引擎，因此仅提供计算和存储的抽象，类似Java的虚拟机JVM。JVM抽象出运行环境，里面的对象运行时不需要知道底层的操作系统，具体硬件是什么，从而使得程序跨平台运行。高级语言被编译成对应虚拟机的机器指令集，如Java和Scala编译后是JVM的机器指令集，C#编译后是.net的机器指令集。类似这样，Smart Contract的编程语言，如Solidiy，Serpent，LLL，Mutan会被编译成EVM的程序指令集。\\n\\nEthereum不能进行系统调度，程序的运行顺序由外部因素决定，Ethereum客户端依据验证的块数据里面的交易信息，决定哪些Smart Contract运行，以什么样的顺序运行。从这个角度看，Ethereum是一个单线程的计算机。Ethereum没有系统处理接口，也没有硬件支持，没有物理机器与之交互，完全虚拟的。\\n\\n# EVM指令集\\nEVM指令集提供了绝大多数你想要的操作，包括：\\n\\n- 算术操作，按位逻辑操作\\n- 执行上下文询问\\n- 堆栈，内存，存储访问\\n- 控制流程控制\\n- 日志，调用\\n\\n除了特定的字节码操作，EVM可以访问账号信息，如地址，余额等，可以访问块数据相关的信息，如块的序号，当前gas的价格等等。EVM的计算单元从堆栈读取，结果写入堆栈头，具体的操作码可以分为以下几类：\\n\\n### 算数操作\\n> 算数操作包括指令集：\\n![img](/book/arithmetic.jpg)\\n\\n### 堆栈操作\\n> 堆栈，内存，存储管理指令：\\n![img](/book/stack.jpg)\\n\\n### 进程流程操作\\n> 流程控制指令集：\\n![img](/book/flow.jpg)\\n\\n### 系统操作\\n> 系统运行程序的操作：\\n![img](/book/system.jpg)\\n\\n### 逻辑操作\\n> 比较与按位操作：\\n![img](/book/logic.jpg)\\n\\n### 环境操作\\n> 处理运行环境信息的操作：\\n![img](/book/env.jpg)\\n\\n### 块数据操作\\n> 访问当前块数据信息的操作：\\n![img](/book/block.jpg)\\n\\n# Ethereum状态\\nEVM的工作处理合法验证的交易，计算并更新Ethereum的状态，作为执行Smart Contract的结果。Ethereum又被称为基于交易的状态机，外部账户通过创建交易，接受交易，进行状态的转换。在最上层的是Ethereum的世界级状态，它是地址到账户的映射。往下一层，每个Ethereum地址代表一个账户，记录着ether的余额；记录着nonce的值，对与外部账户，nonce代表了成功发送的交易的数目,对于contract账户，它代表创建的交易的数据;还记录着账户的存储，特指Smart Contract的永久性存储；记录着账户的程序代码，特指Smart Contract。而外部账户没有程序代码和存储空间。\\n\\n如果交易导致Smart Contract代码执行，就会实例化一个EVM，其中包含了与当前交易所在的块数据相关的所有信息。具体来说，contract被调用的函数代码的ROM被加载，程序计数器初始化为0，存储信息从contract的存储块加载，内存寄存器清0，块数据，运行环境数据初始化。其中一个关键变量是gas的值，一开始等于用户发送这个交易指定的值，随着代码的执行，gas持续消耗，如果降到0，就会触发GAS用完的异常。这时候Ethereum的状态并没有变化，而用户的nonce值增加了，余额因为执行计算操作被消耗了。从这个过程来看，可以将EVM的运行是Ethereum全球状态的沙盒复制版本，由于某些原因，该沙盒版本没有完成，被丢弃了。如果运行成功，那么这个沙盒版本就会更新当前的全球状态。\\n\\n注意，Smart Contract可以初始化交易信息，因此代码的执行是递归过程。Contract可以调用其它contract，每次调用导致另一个EVM实例的创建，每个EVM都有独立的沙盒状态，都有各自的gas供应，gas的供应不是最开始发送交易的指定值，而是上一个EVM处理过程的剩余值，都有可能因为gas不足导致自身停止运行。这种情况下，全部EVM的修改都会丢弃，恢复最原始的状态。\\n\\n# Gas\\nGas是Ethereum上执行的操作消耗的计算资源，存储资源的测量单位。Bitcoin的交易小费仅仅考虑交易数据的大小，Ethereum对Smart Contract每一步的执行都计算费用。每一步操作消耗固定的gas，如：\\n\\n- 两个数相加消耗3个单元的gas\\n- 进行Keccak-256哈希过程消耗30个gas，每个输入+6个gas\\n- 发送交易消耗21,000个gas\\n\\nGas是Ethereum很重要的组成，有双重角色，一是对于矿工的奖励，而是防止DoS攻击。为了避免恶意程序或者无心之失导致的程序无限循环，每个交易都有一个gas的上限，由用户指定。整套机制可以制止攻击者发送垃圾交易，因为每个交易都是有成本的。\\n\\n### 运行时Gas核算\\n每次交易初始化一个EVM实例，最开始的EVM的gas供应等于用户指定的gasLimit，每次执行指令消耗一定的gas，随着程序的运行，gas越来越少。每次执行之前，EVM计算剩余的gas是否能够支付本次操作，如果余额不足，EVM决绝继续执行，停止，交易会退。如果所有指令执行完毕，所有消耗的gas，将作为矿工的小费，根据gas与ether的汇率转换，发送到矿工的账户。而剩余的gas则会转回发送者的账户。而在gas不足，交易停止的情况下，所有的gas是要付给矿工的。\\n\\n### Gas消耗与Gas价格\\nGas的消耗用于测量消耗的计算资源，同时，Gas也是有价格的，由ether计价。用户可以指定gas的价格。矿工在组装块数据的时候，可以选择gas价格高的交易，因此高价格可以让交易执行得更快。Ethereum为了鼓励用户主动删除无用的存储和地址，设置了一笔奖励。\\n\\n- 删除一个contract，获得24,000个gas\\n- 将一个地址指向0，获得15,000个gas\\n\\n### 块数据的Gas上限\\n块数据的gas上限是其包含的所有交易数据可能消耗的gas的总和，它限制了块数据组合交易的上线。举个例子，现在有5个交易，gasLimit分别设置为30,000，30,000，40,000，50,000，50,000，如果块数据的gas上限是180,000，那么最多只能放4个交易，第5个交易将由未来的块数据处理。如果交易的gas上限总和大于快数据的gas限制，该块数据会被网络拒绝接收。\\n\\n### 谁决定块数据的Gas上限\\n块数据的gas上限由网络上的矿工共同决定。Ethereum协议有一个内建的投票系统在运行着，矿工一起投票决定上限增加或者减少。\\n\\n\\n\";","export default \"# 攻击\\n\\n绝对完美的激励机制是不存在的。任何 blockchain 都会存在一系列的攻击手段使得系统暴露。优秀系统的设计目标之一，就是使得破坏系统的这些攻击手段的应用难度更大。让我们看看针对 Ethereum 的主要攻击手段。\\n\\n### 51%攻击\\nEthereum 的挖矿系统，被设计成，只要没有机构拥有超过一半 hashpower，就是安全的。超过系统一半 hashpower 的机构，可以发起51%攻击，从而使得网络失去信任。\\n\\n网络中可以存在多条链，只有一条成为主链。判断哪一条链是主链的规则非常简单：最长的链就是主链。最安全的链，是消耗了最多 hashpower 的链，而最长的链消耗了最多的 hashpower。另外，决定主链的规则必须简单，各个节点能够轻松达成对主链共识。\\n\\n51%攻击是这样子的：攻击者挖矿成功，创建了新的 block，然而不广播到网络之中，只存储在本地。由于攻击者有超过一半的 hashpower，本地的链发展得更快，会超过原来的主链。经过一段时间之后，比如说，经过一天，攻击者广播它自己的链，成为网络的主链，期间其他的交易全都作废。\\n\\n昨天进行交易的商家，只能硬着头皮找卖家拿回商品，或者要求重新付款。反复这个过程，用户就会对 blockchain 失去信任。到目前为止，对于越大的 blockchain，这种攻击越是理论上的，建立超过51%的 hashpower 所需要的资金是海量的，甚至超过了 blockchain 带来的价值。要是说打算弄垮 Bitcoin 或者 Ethereum 这样的大型 blockchain，攻击者必须获得海量的资金需求，同时有很重要的原因，才会去尝试。目前并没有成功的案例，这种尝试可以说是一种赌博。\\n\\n### 网络垃圾\\n之前提到，交易小费用于防止恶意破坏者制造毫无意义的垃圾信息。这其实有一点误解了，实质上，交易小费仅仅让制作垃圾者付出代价，使得其他用户的交易小费提高了。\\n\\n网络垃圾目前在 Ethereum 使用最有效的，竟是用于排查 EVM 的 bug。在2016年9月份，网络上一攻击者瞄准了 EXTCODESIZE 操作码下手，使得 block 的认证时间提升至60秒。EXTCODESIZE 操作码需要读去磁盘，获得 contract 代码的大小。当时这个操作消耗20 gas，攻击者让 block 认证的时候重复执行这个操作超过5000次，从而增加了认证时间，降低了网络运行速度。后来这个问题在 EIP150 上修改为每次消耗 700 gas，而得到解决。\\n\\n### 破解密码学\\n也许攻击 blockchain 最有效的方式，是破解当中使用的密码学算法。Ethereum 的 POW 算法，Ethash，使用 Keccak-256 作为哈希算法，使用 Secp256k1 椭圆曲线产生公钥和私钥。破解其中之一，都会巨大地打击用户的信心。幸运的是，这不是说那么简单的。\\n\\nEthereum smart contract 大量地使用哈希函数来隐藏信息。Keccak256 不仅仅在 Ethash 上使用，在 EVM 的操作码中也有使用。同时，在地址，transaction, block 哈希信息，ABI里，都有使用。\\n\\n有很多很简单的方法用于破解哈希函数。最基础的是哈希字典，把最常用的输入输出记录在数据库里，在你使用的时候，在数据库里查询是否有相对应的记录。避免这种破解，得确保输入是随机产生的，不会匹配到常用的记录。\\n\\n### 回放攻击\\n\\n回放攻击仅仅出现在 hard fork。Ethereum 和 Ethereum Classic 分裂的过程中，遇到了一个很重要的问题。很多用户的交易原本在 Ethereum 上运行，在 hard fork 之后，这些交易在 Ethereum Classic 上回放。\\n\\n在 hard fork 期间，用户在不同的分支拥有相同的资金额，就是说，用户在 Ethereum 和 Ethereum Classic 上拥有同样的资金，同时两个网络的运行逻辑都是一样的。\\n\\n资金账户都是有私钥保护的，任何人想要动用资金，必须用私钥签名。在 hard fork 刚开始，用户在两边账户的私钥是一样的，现在假设有人在 Ethereum 发送了交易信息，攻击者把信息 copy，然后到 Ethereum Classic 上广播，两个信息都是合法的。而其中的受益者，是交易的接收者。\\n\";","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Article.vue?vue&type=style&index=0&lang=postcss&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Article.vue?vue&type=style&index=0&lang=postcss&\"","// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n'use strict';\n\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\nfunction isTerminatorChar(ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x21/* ! */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2D/* - */:\n    case 0x3A/* : */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos;\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  if (pos === state.pos) { return false; }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos); }\n\n  state.pos = pos;\n\n  return true;\n};\n\n// Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParcerInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n};*/\n","var fails = require('../internals/fails');\n\nmodule.exports = !fails(function () {\n  return Object.isExtensible(Object.preventExtensions({}));\n});\n","// Simple typographyc replacements\n//\n// (c) (C) → ©\n// (tm) (TM) → ™\n// (r) (R) → ®\n// +- → ±\n// (p) (P) -> §\n// ... → … (also ?.... → ?.., !.... → !..)\n// ???????? → ???, !!!!! → !!!, `,,` → `,`\n// -- → &ndash;, --- → &mdash;\n//\n'use strict';\n\n// TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - miltiplication 2 x 4 -> 2 × 4\n\nvar RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/;\n\n// Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\nvar SCOPED_ABBR_TEST_RE = /\\((c|tm|r|p)\\)/i;\n\nvar SCOPED_ABBR_RE = /\\((c|tm|r|p)\\)/ig;\nvar SCOPED_ABBR = {\n  c: '©',\n  r: '®',\n  p: '§',\n  tm: '™'\n};\n\nfunction replaceFn(match, name) {\n  return SCOPED_ABBR[name.toLowerCase()];\n}\n\nfunction replace_scoped(inlineTokens) {\n  var i, token;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n    if (token.type === 'text') {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn);\n    }\n  }\n}\n\nfunction replace_rare(inlineTokens) {\n  var i, token;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n    if (token.type === 'text') {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content\n                    .replace(/\\+-/g, '±')\n                    // .., ..., ....... -> …\n                    // but ?..... & !..... -> ?.. & !..\n                    .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..')\n                    .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n                    // em-dash\n                    .replace(/(^|[^-])---([^-]|$)/mg, '$1\\u2014$2')\n                    // en-dash\n                    .replace(/(^|\\s)--(\\s|$)/mg, '$1\\u2013$2')\n                    .replace(/(^|[^-\\s])--([^-\\s]|$)/mg, '$1\\u2013$2');\n      }\n    }\n  }\n}\n\n\nmodule.exports = function replace(state) {\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline') { continue; }\n\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children);\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children);\n    }\n\n  }\n};\n","// HTML5 entities map: { name -> utf16string }\n//\n'use strict';\n\n/*eslint quotes:0*/\nmodule.exports = require('entities/maps/entities.json');\n","// Markdown-it plugin to render GitHub-style task lists; see\n//\n// https://github.com/blog/1375-task-lists-in-gfm-issues-pulls-comments\n// https://github.com/blog/1825-task-lists-in-all-markdown-documents\n\nvar disableCheckboxes = true;\nvar useLabelWrapper = false;\nvar useLabelAfter = false;\n\nmodule.exports = function(md, options) {\n\tif (options) {\n\t\tdisableCheckboxes = !options.enabled;\n\t\tuseLabelWrapper = !!options.label;\n\t\tuseLabelAfter = !!options.labelAfter;\n\t}\n\n\tmd.core.ruler.after('inline', 'github-task-lists', function(state) {\n\t\tvar tokens = state.tokens;\n\t\tfor (var i = 2; i < tokens.length; i++) {\n\t\t\tif (isTodoItem(tokens, i)) {\n\t\t\t\ttodoify(tokens[i], state.Token);\n\t\t\t\tattrSet(tokens[i-2], 'class', 'task-list-item' + (!disableCheckboxes ? ' enabled' : ''));\n\t\t\t\tattrSet(tokens[parentToken(tokens, i-2)], 'class', 'contains-task-list');\n\t\t\t}\n\t\t}\n\t});\n};\n\nfunction attrSet(token, name, value) {\n\tvar index = token.attrIndex(name);\n\tvar attr = [name, value];\n\n\tif (index < 0) {\n\t\ttoken.attrPush(attr);\n\t} else {\n\t\ttoken.attrs[index] = attr;\n\t}\n}\n\nfunction parentToken(tokens, index) {\n\tvar targetLevel = tokens[index].level - 1;\n\tfor (var i = index - 1; i >= 0; i--) {\n\t\tif (tokens[i].level === targetLevel) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\nfunction isTodoItem(tokens, index) {\n\treturn isInline(tokens[index]) &&\n\t       isParagraph(tokens[index - 1]) &&\n\t       isListItem(tokens[index - 2]) &&\n\t       startsWithTodoMarkdown(tokens[index]);\n}\n\nfunction todoify(token, TokenConstructor) {\n\ttoken.children.unshift(makeCheckbox(token, TokenConstructor));\n\ttoken.children[1].content = token.children[1].content.slice(3);\n\ttoken.content = token.content.slice(3);\n\n\tif (useLabelWrapper) {\n\t\tif (useLabelAfter) {\n\t\t\ttoken.children.pop();\n\n\t\t\t// Use large random number as id property of the checkbox.\n\t\t\tvar id = 'task-item-' + Math.ceil(Math.random() * (10000 * 1000) - 1000);\n\t\t\ttoken.children[0].content = token.children[0].content.slice(0, -1) + ' id=\"' + id + '\">';\n\t\t\ttoken.children.push(afterLabel(token.content, id, TokenConstructor));\n\t\t} else {\n\t\t\ttoken.children.unshift(beginLabel(TokenConstructor));\n\t\t\ttoken.children.push(endLabel(TokenConstructor));\n\t\t}\n\t}\n}\n\nfunction makeCheckbox(token, TokenConstructor) {\n\tvar checkbox = new TokenConstructor('html_inline', '', 0);\n\tvar disabledAttr = disableCheckboxes ? ' disabled=\"\" ' : '';\n\tif (token.content.indexOf('[ ] ') === 0) {\n\t\tcheckbox.content = '<input class=\"task-list-item-checkbox\"' + disabledAttr + 'type=\"checkbox\">';\n\t} else if (token.content.indexOf('[x] ') === 0 || token.content.indexOf('[X] ') === 0) {\n\t\tcheckbox.content = '<input class=\"task-list-item-checkbox\" checked=\"\"' + disabledAttr + 'type=\"checkbox\">';\n\t}\n\treturn checkbox;\n}\n\n// these next two functions are kind of hacky; probably should really be a\n// true block-level token with .tag=='label'\nfunction beginLabel(TokenConstructor) {\n\tvar token = new TokenConstructor('html_inline', '', 0);\n\ttoken.content = '<label>';\n\treturn token;\n}\n\nfunction endLabel(TokenConstructor) {\n\tvar token = new TokenConstructor('html_inline', '', 0);\n\ttoken.content = '</label>';\n\treturn token;\n}\n\nfunction afterLabel(content, id, TokenConstructor) {\n\tvar token = new TokenConstructor('html_inline', '', 0);\n\ttoken.content = '<label class=\"task-list-item-label\" for=\"' + id + '\">' + content + '</label>';\n\ttoken.attrs = [{for: id}];\n\treturn token;\n}\n\nfunction isInline(token) { return token.type === 'inline'; }\nfunction isParagraph(token) { return token.type === 'paragraph_open'; }\nfunction isListItem(token) { return token.type === 'list_item_open'; }\n\nfunction startsWithTodoMarkdown(token) {\n\t// leading whitespace in a list item is already trimmed off by markdown-it\n\treturn token.content.indexOf('[ ] ') === 0 || token.content.indexOf('[x] ') === 0 || token.content.indexOf('[X] ') === 0;\n}\n","// fences (``` lang, ~~~ lang)\n\n'use strict';\n\n\nmodule.exports = function fence(state, startLine, endLine, silent) {\n  var marker, len, params, nextLine, mem, token, markup,\n      haveEndMarker = false,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  if (pos + 3 > max) { return false; }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {\n    return false;\n  }\n\n  // scan marker length\n  mem = pos;\n  pos = state.skipChars(pos, marker);\n\n  len = pos - mem;\n\n  if (len < 3) { return false; }\n\n  markup = state.src.slice(mem, pos);\n  params = state.src.slice(pos, max);\n\n  if (params.indexOf('`') >= 0) { return false; }\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) { return true; }\n\n  // search end of block\n  nextLine = startLine;\n\n  for (;;) {\n    nextLine++;\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break;\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break;\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) { continue; }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue;\n    }\n\n    pos = state.skipChars(pos, marker);\n\n    // closing code fence must be at least as long as the opening one\n    if (pos - mem < len) { continue; }\n\n    // make sure tail has spaces only\n    pos = state.skipSpaces(pos);\n\n    if (pos < max) { continue; }\n\n    haveEndMarker = true;\n    // found!\n    break;\n  }\n\n  // If a fence has heading spaces, they should be removed from its inner block\n  len = state.sCount[startLine];\n\n  state.line = nextLine + (haveEndMarker ? 1 : 0);\n\n  token         = state.push('fence', 'code', 0);\n  token.info    = params;\n  token.content = state.getLines(startLine + 1, nextLine, len, true);\n  token.markup  = markup;\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","export default \"# Bitcoin vs. Ethereum\\n\\n绝大多人首次知道加密货币和 blockchain 是通过 Bitcoin。Bitcoin 是第一个加密货币，目前仍然是最大的，最常用的 blockchain。它允许人们转账，收款，不受地域限制，无需通过第三关机构，银行，Paypal 等。可以认为它是互联网的货币。\\n\\nEthereum 相对于 Bitcoin 的创新，是在 blockchain 上增加了可信的计算框架。Ethereum 的节点之间不需要互相信任，但所有的节点都相信 Ethereum 网络，相信它会以某种特定的方式执行 smart contract 的代码。Ethereum 同时拥有自身的货币，所有这些组合，使得 Ethereum 能做很多 Bitcoin 不能实现的事情。\\n\\nBitcoin 不支持条件判断，资金或是发出，或者没有发出，transaction 不依赖系统的内部状态。这看起来不太重要，实际上，支持条件判断，能够让开发者进行流程控制，能够代码执行顺序。例如托管支付，它必须以来双方参与者的状态实施的。另外一个例子是赌博，赌博的结果，必须以来外部的事件发生。用户不需要相互信任，但他们都相信 smart contract 会按照设计，公正地执行。\\n\\nEthereum 在很多方面上，都代表着对未知领域的一次飞跃。Bitcoin 的设计，用于解决去中心化货币系统的特定的问题。Ethereum 可以基于任意逻辑，提供可编程的数据的传输，可用于未来无法想象的，与 blockchain 相关的问题。目前最大的用处是公募，去中心化交易，市场预测，去中心化的百科全书，用户控制的 smart contract，越来越多的构想正在 Ethereum平台中实现。\\n\";","export default \"# Fabric Web应用\\n针对chaincode fabcar设计的web应用\\n\\n## 程序架构\\n1. Fabric\\n2. Chaincode Fabcar\\n3. SDK选取fabric-sdk-go\\n4. Web server，用go语言开发，web框架gin\\n5. 前端的App采取Vue\\n\\n## 启动\\n1. 拉取[fabric-cases](https://github.com/stephenwu2020/fabric-cases)\\n2. 启动网络\\n    ```\\n    cd web-app\\n    make\\n    ```\\n3. 启动 Web Server\\n    ```\\n    cd web-app/server\\n    go run .\\n    ```\\n4. 访问 Web App: localhost:8000\\n\\n## 功能\\n1. 打开首页，查询所有的car的信息\\n2. 点击+按钮，添加car\\n\\n## 其他\\n1. 更新chaincode\\n   ```\\n   make upgradeCC\\n   ```\\n2. 销毁网络\\n   ```\\n   make destroy\\n   ```\";","// Process html tags\n\n'use strict';\n\n\nvar HTML_TAG_RE = require('../common/html_re').HTML_TAG_RE;\n\n\nfunction isLetter(ch) {\n  /*eslint no-bitwise:0*/\n  var lc = ch | 0x20; // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */);\n}\n\n\nmodule.exports = function html_inline(state, silent) {\n  var ch, match, max, token,\n      pos = state.pos;\n\n  if (!state.md.options.html) { return false; }\n\n  // Check start\n  max = state.posMax;\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||\n      pos + 2 >= max) {\n    return false;\n  }\n\n  // Quick fail on second char\n  ch = state.src.charCodeAt(pos + 1);\n  if (ch !== 0x21/* ! */ &&\n      ch !== 0x3F/* ? */ &&\n      ch !== 0x2F/* / */ &&\n      !isLetter(ch)) {\n    return false;\n  }\n\n  match = state.src.slice(pos).match(HTML_TAG_RE);\n  if (!match) { return false; }\n\n  if (!silent) {\n    token         = state.push('html_inline', '', 0);\n    token.content = state.src.slice(pos, pos + match[0].length);\n  }\n  state.pos += match[0].length;\n  return true;\n};\n","\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n","export default \"Hyperledger Explorer是Fabric的管理后台。通过Explorer，可以很直观地看到Fabric网络的区块信息，网络状态。\\n\\n以下是[devnet](https://github.com/stephenwu2020/fabric-cases/tree/master/devnet)的运行情况:\\n\\n![devnet](/book/fabric/devnet.png)\\n\\n## 运行\\n1. 拉取[fabric-cases](https://github.com/stephenwu2020/fabric-cases)\\n2. 启动devnet\\n   ```\\n   cd devnet\\n   ./builder.sh new\\n   ```\\n\\n3. 启动explorer\\n  ```\\n  cd explorer\\n  make up\\n  ```\\n\\n## 配置\\nExplorer的配置文件在:./connection-profile/devnet.json\";","/* eslint no-console:0 */\n/**\n * This is the main entry point for KaTeX. Here, we expose functions for\n * rendering expressions either to DOM nodes or to markup strings.\n *\n * We also expose the ParseError class to check if errors thrown from KaTeX are\n * errors in the expression, or errors in javascript handling.\n */\n\nvar ParseError = require(\"./src/ParseError\");\nvar Settings = require(\"./src/Settings\");\n\nvar buildTree = require(\"./src/buildTree\");\nvar parseTree = require(\"./src/parseTree\");\nvar utils = require(\"./src/utils\");\n\n/**\n * Parse and build an expression, and place that expression in the DOM node\n * given.\n */\nvar render = function(expression, baseNode, options) {\n    utils.clearNode(baseNode);\n\n    var settings = new Settings(options);\n\n    var tree = parseTree(expression, settings);\n    var node = buildTree(tree, expression, settings).toNode();\n\n    baseNode.appendChild(node);\n};\n\n// KaTeX's styles don't work properly in quirks mode. Print out an error, and\n// disable rendering.\nif (typeof document !== \"undefined\") {\n    if (document.compatMode !== \"CSS1Compat\") {\n        typeof console !== \"undefined\" && console.warn(\n            \"Warning: KaTeX doesn't work in quirks mode. Make sure your \" +\n                \"website has a suitable doctype.\");\n\n        render = function() {\n            throw new ParseError(\"KaTeX doesn't work in quirks mode.\");\n        };\n    }\n}\n\n/**\n * Parse and build an expression, and return the markup for that.\n */\nvar renderToString = function(expression, options) {\n    var settings = new Settings(options);\n\n    var tree = parseTree(expression, settings);\n    return buildTree(tree, expression, settings).toMarkup();\n};\n\n/**\n * Parse an expression and return the parse tree.\n */\nvar generateParseTree = function(expression, options) {\n    var settings = new Settings(options);\n    return parseTree(expression, settings);\n};\n\nmodule.exports = {\n    render: render,\n    renderToString: renderToString,\n    /**\n     * NOTE: This method is not currently recommended for public use.\n     * The internal tree representation is unstable and is very likely\n     * to change. Use at your own risk.\n     */\n    __parse: generateParseTree,\n    ParseError: ParseError,\n};\n","// Process *this* and _that_\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function emphasis(state, silent) {\n  var i, scanned, token,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x5F /* _ */ && marker !== 0x2A /* * */) { return false; }\n\n  scanned = state.scanDelims(state.pos, marker === 0x2A);\n\n  for (i = 0; i < scanned.length; i++) {\n    token         = state.push('text', '', 0);\n    token.content = String.fromCharCode(marker);\n\n    state.delimiters.push({\n      // Char code of the starting marker (number).\n      //\n      marker: marker,\n\n      // An amount of characters before this one that's equivalent to\n      // current one. In plain English: if this delimiter does not open\n      // an emphasis, neither do previous `jump` characters.\n      //\n      // Used to skip sequences like \"*****\" in one step, for 1st asterisk\n      // value will be 0, for 2nd it's 1 and so on.\n      //\n      jump:   i,\n\n      // A position of the token this delimiter corresponds to.\n      //\n      token:  state.tokens.length - 1,\n\n      // Token level.\n      //\n      level:  state.level,\n\n      // If this delimiter is matched as a valid opener, `end` will be\n      // equal to its position, otherwise it's `-1`.\n      //\n      end:    -1,\n\n      // Boolean flags that determine if this delimiter could open or close\n      // an emphasis.\n      //\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function emphasis(state) {\n  var i,\n      startDelim,\n      endDelim,\n      token,\n      ch,\n      isStrong,\n      delimiters = state.delimiters,\n      max = state.delimiters.length;\n\n  for (i = 0; i < max; i++) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x5F/* _ */ && startDelim.marker !== 0x2A/* * */) {\n      continue;\n    }\n\n    // Process only opening markers\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    // If the next delimiter has the same marker and is adjacent to this one,\n    // merge those into one strong delimiter.\n    //\n    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n    //\n    isStrong = i + 1 < max &&\n               delimiters[i + 1].end === startDelim.end - 1 &&\n               delimiters[i + 1].token === startDelim.token + 1 &&\n               delimiters[startDelim.end - 1].token === endDelim.token - 1 &&\n               delimiters[i + 1].marker === startDelim.marker;\n\n    ch = String.fromCharCode(startDelim.marker);\n\n    token         = state.tokens[startDelim.token];\n    token.type    = isStrong ? 'strong_open' : 'em_open';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = 1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = isStrong ? 'strong_close' : 'em_close';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = -1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    if (isStrong) {\n      state.tokens[delimiters[i + 1].token].content = '';\n      state.tokens[delimiters[startDelim.end - 1].token].content = '';\n      i++;\n    }\n  }\n};\n","/* eslint no-console:0 */\n/**\n * This module contains general functions that can be used for building\n * different kinds of domTree nodes in a consistent manner.\n */\n\nvar domTree = require(\"./domTree\");\nvar fontMetrics = require(\"./fontMetrics\");\nvar symbols = require(\"./symbols\");\nvar utils = require(\"./utils\");\n\nvar greekCapitals = [\n    \"\\\\Gamma\",\n    \"\\\\Delta\",\n    \"\\\\Theta\",\n    \"\\\\Lambda\",\n    \"\\\\Xi\",\n    \"\\\\Pi\",\n    \"\\\\Sigma\",\n    \"\\\\Upsilon\",\n    \"\\\\Phi\",\n    \"\\\\Psi\",\n    \"\\\\Omega\",\n];\n\nvar dotlessLetters = [\n    \"\\u0131\",   // dotless i, \\imath\n    \"\\u0237\",   // dotless j, \\jmath\n];\n\n/**\n * Makes a symbolNode after translation via the list of symbols in symbols.js.\n * Correctly pulls out metrics for the character, and optionally takes a list of\n * classes to be attached to the node.\n */\nvar makeSymbol = function(value, style, mode, color, classes) {\n    // Replace the value with its replaced value from symbol.js\n    if (symbols[mode][value] && symbols[mode][value].replace) {\n        value = symbols[mode][value].replace;\n    }\n\n    var metrics = fontMetrics.getCharacterMetrics(value, style);\n\n    var symbolNode;\n    if (metrics) {\n        symbolNode = new domTree.symbolNode(\n            value, metrics.height, metrics.depth, metrics.italic, metrics.skew,\n            classes);\n    } else {\n        // TODO(emily): Figure out a good way to only print this in development\n        typeof console !== \"undefined\" && console.warn(\n            \"No character metrics for '\" + value + \"' in style '\" +\n                style + \"'\");\n        symbolNode = new domTree.symbolNode(value, 0, 0, 0, 0, classes);\n    }\n\n    if (color) {\n        symbolNode.style.color = color;\n    }\n\n    return symbolNode;\n};\n\n/**\n * Makes a symbol in Main-Regular or AMS-Regular.\n * Used for rel, bin, open, close, inner, and punct.\n */\nvar mathsym = function(value, mode, color, classes) {\n    // Decide what font to render the symbol in by its entry in the symbols\n    // table.\n    // Have a special case for when the value = \\ because the \\ is used as a\n    // textord in unsupported command errors but cannot be parsed as a regular\n    // text ordinal and is therefore not present as a symbol in the symbols\n    // table for text\n    if (value === \"\\\\\" || symbols[mode][value].font === \"main\") {\n        return makeSymbol(value, \"Main-Regular\", mode, color, classes);\n    } else {\n        return makeSymbol(\n            value, \"AMS-Regular\", mode, color, classes.concat([\"amsrm\"]));\n    }\n};\n\n/**\n * Makes a symbol in the default font for mathords and textords.\n */\nvar mathDefault = function(value, mode, color, classes, type) {\n    if (type === \"mathord\") {\n        return mathit(value, mode, color, classes);\n    } else if (type === \"textord\") {\n        return makeSymbol(\n            value, \"Main-Regular\", mode, color, classes.concat([\"mathrm\"]));\n    } else {\n        throw new Error(\"unexpected type: \" + type + \" in mathDefault\");\n    }\n};\n\n/**\n * Makes a symbol in the italic math font.\n */\nvar mathit = function(value, mode, color, classes) {\n    if (/[0-9]/.test(value.charAt(0)) ||\n            // glyphs for \\imath and \\jmath do not exist in Math-Italic so we\n            // need to use Main-Italic instead\n            utils.contains(dotlessLetters, value) ||\n            utils.contains(greekCapitals, value)) {\n        return makeSymbol(\n            value, \"Main-Italic\", mode, color, classes.concat([\"mainit\"]));\n    } else {\n        return makeSymbol(\n            value, \"Math-Italic\", mode, color, classes.concat([\"mathit\"]));\n    }\n};\n\n/**\n * Makes either a mathord or textord in the correct font and color.\n */\nvar makeOrd = function(group, options, type) {\n    var mode = group.mode;\n    var value = group.value;\n    if (symbols[mode][value] && symbols[mode][value].replace) {\n        value = symbols[mode][value].replace;\n    }\n\n    var classes = [\"mord\"];\n    var color = options.getColor();\n\n    var font = options.font;\n    if (font) {\n        if (font === \"mathit\" || utils.contains(dotlessLetters, value)) {\n            return mathit(value, mode, color, classes);\n        } else {\n            var fontName = fontMap[font].fontName;\n            if (fontMetrics.getCharacterMetrics(value, fontName)) {\n                return makeSymbol(\n                    value, fontName, mode, color, classes.concat([font]));\n            } else {\n                return mathDefault(value, mode, color, classes, type);\n            }\n        }\n    } else {\n        return mathDefault(value, mode, color, classes, type);\n    }\n};\n\n/**\n * Calculate the height, depth, and maxFontSize of an element based on its\n * children.\n */\nvar sizeElementFromChildren = function(elem) {\n    var height = 0;\n    var depth = 0;\n    var maxFontSize = 0;\n\n    if (elem.children) {\n        for (var i = 0; i < elem.children.length; i++) {\n            if (elem.children[i].height > height) {\n                height = elem.children[i].height;\n            }\n            if (elem.children[i].depth > depth) {\n                depth = elem.children[i].depth;\n            }\n            if (elem.children[i].maxFontSize > maxFontSize) {\n                maxFontSize = elem.children[i].maxFontSize;\n            }\n        }\n    }\n\n    elem.height = height;\n    elem.depth = depth;\n    elem.maxFontSize = maxFontSize;\n};\n\n/**\n * Makes a span with the given list of classes, list of children, and color.\n */\nvar makeSpan = function(classes, children, color) {\n    var span = new domTree.span(classes, children);\n\n    sizeElementFromChildren(span);\n\n    if (color) {\n        span.style.color = color;\n    }\n\n    return span;\n};\n\n/**\n * Makes a document fragment with the given list of children.\n */\nvar makeFragment = function(children) {\n    var fragment = new domTree.documentFragment(children);\n\n    sizeElementFromChildren(fragment);\n\n    return fragment;\n};\n\n/**\n * Makes an element placed in each of the vlist elements to ensure that each\n * element has the same max font size. To do this, we create a zero-width space\n * with the correct font size.\n */\nvar makeFontSizer = function(options, fontSize) {\n    var fontSizeInner = makeSpan([], [new domTree.symbolNode(\"\\u200b\")]);\n    fontSizeInner.style.fontSize =\n        (fontSize / options.style.sizeMultiplier) + \"em\";\n\n    var fontSizer = makeSpan(\n        [\"fontsize-ensurer\", \"reset-\" + options.size, \"size5\"],\n        [fontSizeInner]);\n\n    return fontSizer;\n};\n\n/**\n * Makes a vertical list by stacking elements and kerns on top of each other.\n * Allows for many different ways of specifying the positioning method.\n *\n * Arguments:\n *  - children: A list of child or kern nodes to be stacked on top of each other\n *              (i.e. the first element will be at the bottom, and the last at\n *              the top). Element nodes are specified as\n *                {type: \"elem\", elem: node}\n *              while kern nodes are specified as\n *                {type: \"kern\", size: size}\n *  - positionType: The method by which the vlist should be positioned. Valid\n *                  values are:\n *                   - \"individualShift\": The children list only contains elem\n *                                        nodes, and each node contains an extra\n *                                        \"shift\" value of how much it should be\n *                                        shifted (note that shifting is always\n *                                        moving downwards). positionData is\n *                                        ignored.\n *                   - \"top\": The positionData specifies the topmost point of\n *                            the vlist (note this is expected to be a height,\n *                            so positive values move up)\n *                   - \"bottom\": The positionData specifies the bottommost point\n *                               of the vlist (note this is expected to be a\n *                               depth, so positive values move down\n *                   - \"shift\": The vlist will be positioned such that its\n *                              baseline is positionData away from the baseline\n *                              of the first child. Positive values move\n *                              downwards.\n *                   - \"firstBaseline\": The vlist will be positioned such that\n *                                      its baseline is aligned with the\n *                                      baseline of the first child.\n *                                      positionData is ignored. (this is\n *                                      equivalent to \"shift\" with\n *                                      positionData=0)\n *  - positionData: Data used in different ways depending on positionType\n *  - options: An Options object\n *\n */\nvar makeVList = function(children, positionType, positionData, options) {\n    var depth;\n    var currPos;\n    var i;\n    if (positionType === \"individualShift\") {\n        var oldChildren = children;\n        children = [oldChildren[0]];\n\n        // Add in kerns to the list of children to get each element to be\n        // shifted to the correct specified shift\n        depth = -oldChildren[0].shift - oldChildren[0].elem.depth;\n        currPos = depth;\n        for (i = 1; i < oldChildren.length; i++) {\n            var diff = -oldChildren[i].shift - currPos -\n                oldChildren[i].elem.depth;\n            var size = diff -\n                (oldChildren[i - 1].elem.height +\n                 oldChildren[i - 1].elem.depth);\n\n            currPos = currPos + diff;\n\n            children.push({type: \"kern\", size: size});\n            children.push(oldChildren[i]);\n        }\n    } else if (positionType === \"top\") {\n        // We always start at the bottom, so calculate the bottom by adding up\n        // all the sizes\n        var bottom = positionData;\n        for (i = 0; i < children.length; i++) {\n            if (children[i].type === \"kern\") {\n                bottom -= children[i].size;\n            } else {\n                bottom -= children[i].elem.height + children[i].elem.depth;\n            }\n        }\n        depth = bottom;\n    } else if (positionType === \"bottom\") {\n        depth = -positionData;\n    } else if (positionType === \"shift\") {\n        depth = -children[0].elem.depth - positionData;\n    } else if (positionType === \"firstBaseline\") {\n        depth = -children[0].elem.depth;\n    } else {\n        depth = 0;\n    }\n\n    // Make the fontSizer\n    var maxFontSize = 0;\n    for (i = 0; i < children.length; i++) {\n        if (children[i].type === \"elem\") {\n            maxFontSize = Math.max(maxFontSize, children[i].elem.maxFontSize);\n        }\n    }\n    var fontSizer = makeFontSizer(options, maxFontSize);\n\n    // Create a new list of actual children at the correct offsets\n    var realChildren = [];\n    currPos = depth;\n    for (i = 0; i < children.length; i++) {\n        if (children[i].type === \"kern\") {\n            currPos += children[i].size;\n        } else {\n            var child = children[i].elem;\n\n            var shift = -child.depth - currPos;\n            currPos += child.height + child.depth;\n\n            var childWrap = makeSpan([], [fontSizer, child]);\n            childWrap.height -= shift;\n            childWrap.depth += shift;\n            childWrap.style.top = shift + \"em\";\n\n            realChildren.push(childWrap);\n        }\n    }\n\n    // Add in an element at the end with no offset to fix the calculation of\n    // baselines in some browsers (namely IE, sometimes safari)\n    var baselineFix = makeSpan(\n        [\"baseline-fix\"], [fontSizer, new domTree.symbolNode(\"\\u200b\")]);\n    realChildren.push(baselineFix);\n\n    var vlist = makeSpan([\"vlist\"], realChildren);\n    // Fix the final height and depth, in case there were kerns at the ends\n    // since the makeSpan calculation won't take that in to account.\n    vlist.height = Math.max(currPos, vlist.height);\n    vlist.depth = Math.max(-depth, vlist.depth);\n    return vlist;\n};\n\n// A table of size -> font size for the different sizing functions\nvar sizingMultiplier = {\n    size1: 0.5,\n    size2: 0.7,\n    size3: 0.8,\n    size4: 0.9,\n    size5: 1.0,\n    size6: 1.2,\n    size7: 1.44,\n    size8: 1.73,\n    size9: 2.07,\n    size10: 2.49,\n};\n\n// A map of spacing functions to their attributes, like size and corresponding\n// CSS class\nvar spacingFunctions = {\n    \"\\\\qquad\": {\n        size: \"2em\",\n        className: \"qquad\",\n    },\n    \"\\\\quad\": {\n        size: \"1em\",\n        className: \"quad\",\n    },\n    \"\\\\enspace\": {\n        size: \"0.5em\",\n        className: \"enspace\",\n    },\n    \"\\\\;\": {\n        size: \"0.277778em\",\n        className: \"thickspace\",\n    },\n    \"\\\\:\": {\n        size: \"0.22222em\",\n        className: \"mediumspace\",\n    },\n    \"\\\\,\": {\n        size: \"0.16667em\",\n        className: \"thinspace\",\n    },\n    \"\\\\!\": {\n        size: \"-0.16667em\",\n        className: \"negativethinspace\",\n    },\n};\n\n/**\n * Maps TeX font commands to objects containing:\n * - variant: string used for \"mathvariant\" attribute in buildMathML.js\n * - fontName: the \"style\" parameter to fontMetrics.getCharacterMetrics\n */\n// A map between tex font commands an MathML mathvariant attribute values\nvar fontMap = {\n    // styles\n    \"mathbf\": {\n        variant: \"bold\",\n        fontName: \"Main-Bold\",\n    },\n    \"mathrm\": {\n        variant: \"normal\",\n        fontName: \"Main-Regular\",\n    },\n\n    // \"mathit\" is missing because it requires the use of two fonts: Main-Italic\n    // and Math-Italic.  This is handled by a special case in makeOrd which ends\n    // up calling mathit.\n\n    // families\n    \"mathbb\": {\n        variant: \"double-struck\",\n        fontName: \"AMS-Regular\",\n    },\n    \"mathcal\": {\n        variant: \"script\",\n        fontName: \"Caligraphic-Regular\",\n    },\n    \"mathfrak\": {\n        variant: \"fraktur\",\n        fontName: \"Fraktur-Regular\",\n    },\n    \"mathscr\": {\n        variant: \"script\",\n        fontName: \"Script-Regular\",\n    },\n    \"mathsf\": {\n        variant: \"sans-serif\",\n        fontName: \"SansSerif-Regular\",\n    },\n    \"mathtt\": {\n        variant: \"monospace\",\n        fontName: \"Typewriter-Regular\",\n    },\n};\n\nmodule.exports = {\n    fontMap: fontMap,\n    makeSymbol: makeSymbol,\n    mathsym: mathsym,\n    makeSpan: makeSpan,\n    makeFragment: makeFragment,\n    makeVList: makeVList,\n    makeOrd: makeOrd,\n    sizingMultiplier: sizingMultiplier,\n    spacingFunctions: spacingFunctions,\n};\n","export default \"# 钱包\\n\\nEthereum中的\\\"钱包\\\"同时描述好几样不同的东西。在应用层面，钱包是应用软件，提供访问Ethereum服务的用户接口。钱包控制钥匙的访问权，保管钥匙，设置地址，追踪记录账户的资产，创建交易，为交易签名。部分钱包可以运行Contract。在程序员看来，钱包是存储和管理用户钥匙的系统。每一个钱包都有一个钥匙管理组件，对于某些钱包来说，它只有这个组件，而另外一些钱包，功能强大得多，像浏览器一样，是Ethereum DApp的用户接口。我们把钱包视为私钥的容器，私钥的管理系统。\\n\\n# 钱包技术概览\\n\\n使用方便与隐私保护之间的平衡，是设计钱包的核心考虑因素。一个私钥，一个地址，重复使用，这种设计是最简单便捷的。而从私密性来看，则是一场噩梦。任何人都可以轻松地追踪和关联你所有的交易。相对而言，每一次交易都使用不同的私钥，不同的账户，隐私保护是最好的，但是钥匙的管理，备份非常复杂，容易丢失钥匙。恰当的均衡很难，这正是优秀钱包所追求的。\\n\\n很多人会误以为Ethereum钱包里面有ether或者token，实际上钱包里只有钥匙。ether或者token，是记录在Blockchain之中的。用户通过使用私钥对交易签名的方式，控制私钥对应的账户上的ether或token。在传统的支付模式里，客户通知银行转账，银行检查账户余额，确认后转账到对方账户。在Blockchain中，只需要私钥签名，即可将资金转到对方的账户。所有人都可以对这个交易进行验证，所有人都可以知道这个账户有多少资金，但是他们不知道该账户是属于哪个人的。实际应用当中，检查一个账户有多少资金是一个独立的操作，无需经过钱包的钥匙验证。\\n\\n总体上可以将钱包可以分为两大类，钥匙之间有关联的钱包和无关联的钱包。第一种是非确定性钱包，每个私钥是根据随机数独立产生的，私钥间无任何关联，简称JBOK钱包，\\\"Just a Bunch of Keys\\\",仅仅是一堆钥匙放在一起而已。第二种是确定性钱包，所有的私钥都是一个主钥匙根据算法派生的，这个主钥匙又成为种子。这些派生的私钥互相之间有关联，可以根据种子计算出来。确定性钱包又派生出几种不同的类型，最流行的是一种树状结构的派生方式，BIP32/44。\\n\\n某些情况下，主钥匙也有可能丢失，例如手机丢了，或者掉进厕所了。为了应对这种事故，确定性钱包通常将种子加密为一串单词，被称为钱包的助记词。根据这一串有序的助记词，可以解密出主钥匙，从而派生出相应的私钥和公钥。因此，一定要把助记词备份到纸上，藏好。\\n\\n# 非确定性(随机的)钱包\\n\\n第一代钱包软件，有一个文件专用于存储随机产生的私钥，这种老式的钱包由于自身的缺陷，正在被确定性钱包替代。举个例子，为了更好地保护隐私，账号的地址不应该被重用，每次进行交易都应该用一个新的地址。为了更新地址，非确定性的老式钱包，必须再次创建一个私钥，同时对新的私钥进行备份。如果在备份之前，发生硬盘损坏，丢失，对应的账户就废了，里面的资金和Contract都将永久封锁。这种设计让私钥的管理造成了很大的压力。\\n\\n# 确定性(有种子的)钱包\\n\\n确定性的钱包，或者说有种子的钱包，它管理的所有私钥，都是来自于一个主钥匙，或者说种子。种子是根据某些数据随机产生的，用于派生私钥。根据种子来产生私钥的算法非常高效，因此只需要对种子进行备份，就能确保所有的资金和Contract的安全。种子也很容易导入和导出，使得私钥在钱包之间的迁移非常方便。\\n\\n# 层次式确定性钱包\\n\\n确定性钱包的设计目标是简化种子派生私钥的过程。目前最先进的设计是Bitcoin的BIP-32标准所定义的层次式确定性钱包，简称HD钱包。HD钱包的设计是树状的，父亲私钥派生出孩子私钥，孩子私钥派生出孙子私钥，以此类推。\\n\\n![img](/book/hdwallet.png)\\n\\nHD钱包相对于简单的非确定性钱包有几个关键的优势。首先，树状的设计在结构上有方便之处，用户可以设置某些分支用于资金的出口，另外一些分支用于资金的入口。其次，账户公钥可以委托给第三方，第三方根据公钥产生其它公钥，用于接收资金，但是不暴露私钥，第三方无法转移资金。\\n\\n种子与助记词\\n\\n为了确保私钥的安全，需要对私钥进行加密，加密的方式有很多种，目前推荐的是使用一串有序单词对私钥加密，这一串单词按照正确的顺序，能够解密出私钥，因此也被成为私钥的助记词，这种方法在BIP-39中被标准化。如今这个标准广泛应用于钱包软件中。\\n\\n为了理解这种方法为什么如此流行，来看一个例子：\\n![img](/book/mnemonic.jpg)\\n\\n实际应用当中，抄错这一长串16进制数字的概率非常高，相反，抄写12个单词容易得多，这些单词都是日常生活中最常用的。某些情况下，我们把其中的单词insect抄写成了inzect，这种错误也很容易被察觉，因为inzect不是合法的单词，没有意思的。把单词抄下来，藏好，是非常有必要的，如果发生硬盘丢失，损坏，这串单词导入到别的钱包软件中，所有的资金和Contract都会在新钱包里恢复。总的来说，用助记词加密种子，使HD钱包用起来方便，安全，容易迁移，有效避免私钥抄写错误。\\n\";","/**\n * The resulting parse tree nodes of the parse tree.\n */\nfunction ParseNode(type, value, mode) {\n    this.type = type;\n    this.value = value;\n    this.mode = mode;\n}\n\nmodule.exports = {\n    ParseNode: ParseNode,\n};\n\n","module.exports=/[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/","/* eslint no-unused-vars:0 */\n\nvar Style = require(\"./Style\");\n\n/**\n * This file contains metrics regarding fonts and individual symbols. The sigma\n * and xi variables, as well as the metricMap map contain data extracted from\n * TeX, TeX font metrics, and the TTF files. These data are then exposed via the\n * `metrics` variable and the getCharacterMetrics function.\n */\n\n// These font metrics are extracted from TeX by using\n// \\font\\a=cmmi10\n// \\showthe\\fontdimenX\\a\n// where X is the corresponding variable number. These correspond to the font\n// parameters of the symbol fonts. In TeX, there are actually three sets of\n// dimensions, one for each of textstyle, scriptstyle, and scriptscriptstyle,\n// but we only use the textstyle ones, and scale certain dimensions accordingly.\n// See the TeXbook, page 441.\nvar sigma1 = 0.025;\nvar sigma2 = 0;\nvar sigma3 = 0;\nvar sigma4 = 0;\nvar sigma5 = 0.431;\nvar sigma6 = 1;\nvar sigma7 = 0;\nvar sigma8 = 0.677;\nvar sigma9 = 0.394;\nvar sigma10 = 0.444;\nvar sigma11 = 0.686;\nvar sigma12 = 0.345;\nvar sigma13 = 0.413;\nvar sigma14 = 0.363;\nvar sigma15 = 0.289;\nvar sigma16 = 0.150;\nvar sigma17 = 0.247;\nvar sigma18 = 0.386;\nvar sigma19 = 0.050;\nvar sigma20 = 2.390;\nvar sigma21 = 1.01;\nvar sigma21Script = 0.81;\nvar sigma21ScriptScript = 0.71;\nvar sigma22 = 0.250;\n\n// These font metrics are extracted from TeX by using\n// \\font\\a=cmex10\n// \\showthe\\fontdimenX\\a\n// where X is the corresponding variable number. These correspond to the font\n// parameters of the extension fonts (family 3). See the TeXbook, page 441.\nvar xi1 = 0;\nvar xi2 = 0;\nvar xi3 = 0;\nvar xi4 = 0;\nvar xi5 = 0.431;\nvar xi6 = 1;\nvar xi7 = 0;\nvar xi8 = 0.04;\nvar xi9 = 0.111;\nvar xi10 = 0.166;\nvar xi11 = 0.2;\nvar xi12 = 0.6;\nvar xi13 = 0.1;\n\n// This value determines how large a pt is, for metrics which are defined in\n// terms of pts.\n// This value is also used in katex.less; if you change it make sure the values\n// match.\nvar ptPerEm = 10.0;\n\n// The space between adjacent `|` columns in an array definition. From\n// `\\showthe\\doublerulesep` in LaTeX.\nvar doubleRuleSep = 2.0 / ptPerEm;\n\n/**\n * This is just a mapping from common names to real metrics\n */\nvar metrics = {\n    xHeight: sigma5,\n    quad: sigma6,\n    num1: sigma8,\n    num2: sigma9,\n    num3: sigma10,\n    denom1: sigma11,\n    denom2: sigma12,\n    sup1: sigma13,\n    sup2: sigma14,\n    sup3: sigma15,\n    sub1: sigma16,\n    sub2: sigma17,\n    supDrop: sigma18,\n    subDrop: sigma19,\n    axisHeight: sigma22,\n    defaultRuleThickness: xi8,\n    bigOpSpacing1: xi9,\n    bigOpSpacing2: xi10,\n    bigOpSpacing3: xi11,\n    bigOpSpacing4: xi12,\n    bigOpSpacing5: xi13,\n    ptPerEm: ptPerEm,\n    emPerEx: sigma5 / sigma6,\n    doubleRuleSep: doubleRuleSep,\n\n    // TODO(alpert): Missing parallel structure here. We should probably add\n    // style-specific metrics for all of these.\n    delim1: sigma20,\n    getDelim2: function(style) {\n        if (style.size === Style.TEXT.size) {\n            return sigma21;\n        } else if (style.size === Style.SCRIPT.size) {\n            return sigma21Script;\n        } else if (style.size === Style.SCRIPTSCRIPT.size) {\n            return sigma21ScriptScript;\n        }\n        throw new Error(\"Unexpected style size: \" + style.size);\n    },\n};\n\n// This map contains a mapping from font name and character code to character\n// metrics, including height, depth, italic correction, and skew (kern from the\n// character to the corresponding \\skewchar)\n// This map is generated via `make metrics`. It should not be changed manually.\nvar metricMap = require(\"./fontMetricsData\");\n\n/**\n * This function is a convenience function for looking up information in the\n * metricMap table. It takes a character as a string, and a style.\n *\n * Note: the `width` property may be undefined if fontMetricsData.js wasn't\n * built using `Make extended_metrics`.\n */\nvar getCharacterMetrics = function(character, style) {\n    var metrics = metricMap[style][character.charCodeAt(0)];\n    if (metrics) {\n        return {\n            depth: metrics[0],\n            height: metrics[1],\n            italic: metrics[2],\n            skew: metrics[3],\n            width: metrics[4],\n        };\n    }\n};\n\nmodule.exports = {\n    metrics: metrics,\n    getCharacterMetrics: getCharacterMetrics,\n};\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--14-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Article.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--14-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Article.vue?vue&type=script&lang=ts&\"","// Process [link](<to> \"stuff\")\n\n'use strict';\n\nvar parseLinkLabel       = require('../helpers/parse_link_label');\nvar parseLinkDestination = require('../helpers/parse_link_destination');\nvar parseLinkTitle       = require('../helpers/parse_link_title');\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function link(state, silent) {\n  var attrs,\n      code,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      res,\n      ref,\n      title,\n      token,\n      href = '',\n      oldPos = state.pos,\n      max = state.posMax,\n      start = state.pos;\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 1;\n  labelEnd = parseLinkLabel(state, state.pos, true);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = parseLinkTitle(state.src, pos, state.posMax);\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str;\n      pos = res.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      state.pos = oldPos;\n      return false;\n    }\n    pos++;\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n\n    token        = state.push('link_open', 'a', 1);\n    token.attrs  = attrs = [ [ 'href', href ] ];\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n\n    state.md.inline.tokenize(state);\n\n    token        = state.push('link_close', 'a', -1);\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","export default \"# Web3\\n\\n许多早期 blockchain 技术的追随者，对 blockchain 引领我们进入互联网的新领域相当感兴趣，这片的新空间就是 Web3.0。 Web1.0是互联网的初始阶段，当时互联网绝大部分是卖东西的，或者展示信息的。Web2.0 引入了社交网络，网络合作。像 Facebook, Flickr, Instagram 等网站，把用户创造的内容带到互联网上，并且成为互联网的中心。人们寄予 Web3.0 创造全新的分布式的互联网，让第三方机构不能够审查，控制用户数据，行为。\\n\\nDARPA 原本设计的互联网，是成为区中心化的交流网络，任何的中央机构被攻击，都不会导致网络的瘫痪。随着互联网过去15年的商业化，越来越多人希望互联网是去中心化的。\\n\\n新的网站要获得流量，必须得在 google 的的搜索算法上有好的排名； Facebook 控制了最大比例的用户创建的内容；Netflex 和 Youtube 的用户占了全球三分之一的流量；像中国，土耳其等等国家，利用这些特点，禁止用户访问不满足审查规定的网站。\\n\\nWeb3.0 的其中一个目标，是对互联网去中心化，使得审查，控制互联网更加困难，甚至不可能。Ethereum 平台是追求这个目标的热踪者之一，所有 Ethereum 上运行的应用都是分散化的。\\n\\nEthereum 上的应用，通常叫做分布式应用，或者 dapp。与传统的应用不同的是，这些应用不需要专门的服务器托管，存储数据，Ethereum 网络能够替代传统服务器的功能，包括认证，contract 的数据存储，作为 API。这意味着 dapps 不会像传统应用一样被审查。对 dapps 进行访问限制，必须屏蔽所有 Ethereum 节点的访问，这几乎不可能。\\n\\nEthereum 社区对 Web3 有一些理解上的混淆。最初，它是指 Web3.0 这个构想，现在，也只当中的一个客户端程序库，web3.js.\\n\";","'use strict';\n\n\nmodule.exports = function ins_plugin(md) {\n  // Insert each marker as a separate text token, and add it to delimiter list\n  //\n  function tokenize(state, silent) {\n    var i, scanned, token, len, ch,\n        start = state.pos,\n        marker = state.src.charCodeAt(start);\n\n    if (silent) { return false; }\n\n    if (marker !== 0x2B/* + */) { return false; }\n\n    scanned = state.scanDelims(state.pos, true);\n    len = scanned.length;\n    ch = String.fromCharCode(marker);\n\n    if (len < 2) { return false; }\n\n    if (len % 2) {\n      token         = state.push('text', '', 0);\n      token.content = ch;\n      len--;\n    }\n\n    for (i = 0; i < len; i += 2) {\n      token         = state.push('text', '', 0);\n      token.content = ch + ch;\n\n      state.delimiters.push({\n        marker: marker,\n        jump:   i,\n        token:  state.tokens.length - 1,\n        level:  state.level,\n        end:    -1,\n        open:   scanned.can_open,\n        close:  scanned.can_close\n      });\n    }\n\n    state.pos += scanned.length;\n\n    return true;\n  }\n\n\n  // Walk through delimiter list and replace text tokens with tags\n  //\n  function postProcess(state) {\n    var i, j,\n        startDelim,\n        endDelim,\n        token,\n        loneMarkers = [],\n        delimiters = state.delimiters,\n        max = state.delimiters.length;\n\n    for (i = 0; i < max; i++) {\n      startDelim = delimiters[i];\n\n      if (startDelim.marker !== 0x2B/* + */) {\n        continue;\n      }\n\n      if (startDelim.end === -1) {\n        continue;\n      }\n\n      endDelim = delimiters[startDelim.end];\n\n      token         = state.tokens[startDelim.token];\n      token.type    = 'ins_open';\n      token.tag     = 'ins';\n      token.nesting = 1;\n      token.markup  = '++';\n      token.content = '';\n\n      token         = state.tokens[endDelim.token];\n      token.type    = 'ins_close';\n      token.tag     = 'ins';\n      token.nesting = -1;\n      token.markup  = '++';\n      token.content = '';\n\n      if (state.tokens[endDelim.token - 1].type === 'text' &&\n          state.tokens[endDelim.token - 1].content === '+') {\n\n        loneMarkers.push(endDelim.token - 1);\n      }\n    }\n\n    // If a marker sequence has an odd number of characters, it's splitted\n    // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n    // start of the sequence.\n    //\n    // So, we have to move all those markers after subsequent s_close tags.\n    //\n    while (loneMarkers.length) {\n      i = loneMarkers.pop();\n      j = i + 1;\n\n      while (j < state.tokens.length && state.tokens[j].type === 'ins_close') {\n        j++;\n      }\n\n      j--;\n\n      if (i !== j) {\n        token = state.tokens[j];\n        state.tokens[j] = state.tokens[i];\n        state.tokens[i] = token;\n      }\n    }\n  }\n\n  md.inline.ruler.before('emphasis', 'ins', tokenize);\n  md.inline.ruler2.before('emphasis', 'ins', postProcess);\n};\n","export default \"# 挖矿的过程\\n\\n我们常听说，矿工去挖矿赚比特币，这到底是怎么回事呢？首先，矿工将一定数量的Tx打包成Block，这个Block目前是候选的，还没有被Blockchain接受。然后，矿工要找到一个数，这个数与Block的Merkel Root拼接在一起，产生一个Hash，且Hash的值必须少于某个值，这个值叫做target，在Bits字段定义。\\n\\n举个例子，当前候选的Block的Merkle Root是M，由于不确定哪个数(N)是我们要找的，初始化N=0，进行Hash，得到结果Hash(M, 0)=R1。判断R1是否少于target。现在，R1大于target，于是将N自增，N=1，得到结果Hash(M, 1)=R2，判断R2小于target，那么N=1是我们要找的数，记录在Nonce字段。\\n\\nBitcoin通过改变target的值，控制新一个Block的诞生时间，约为10分钟。如果当前Block只用了5分钟创造，那么降低target的值，这样挖矿的难度就会增加，花费时间会上升。如果当前Block使用了30分钟创造，那么增加target的值，降低挖矿难度，从而使挖矿时间徘徊在10分钟。\\n\\n如此看来，挖矿相当于解答一个数学谜题，nonce字段是矿工的猜想，target字段用于判断谜题是否解答。寻找答案的过程没有任何技巧，是一种暴力破解，需要尝试所有的可能性。这样一来，挖矿的设备不能是普通的家用CPU，而是高性能的ASIC芯片，GPU，甚至是FPGAS。\\n\\n当前挖矿成功的奖励是12.5比特币，刚开始时是50比特币，后面挖矿的奖励会越来越少，直到Bitcoin规定的2千1百万奖励全部分完，则不会再有奖励。\\n\";","/* eslint no-console:0 */\n/**\n * This file does the main work of building a domTree structure from a parse\n * tree. The entry point is the `buildHTML` function, which takes a parse tree.\n * Then, the buildExpression, buildGroup, and various groupTypes functions are\n * called, to produce a final HTML tree.\n */\n\nvar ParseError = require(\"./ParseError\");\nvar Style = require(\"./Style\");\n\nvar buildCommon = require(\"./buildCommon\");\nvar delimiter = require(\"./delimiter\");\nvar domTree = require(\"./domTree\");\nvar fontMetrics = require(\"./fontMetrics\");\nvar utils = require(\"./utils\");\n\nvar makeSpan = buildCommon.makeSpan;\n\n/**\n * Take a list of nodes, build them in order, and return a list of the built\n * nodes. This function handles the `prev` node correctly, and passes the\n * previous element from the list as the prev of the next element.\n */\nvar buildExpression = function(expression, options, prev) {\n    var groups = [];\n    for (var i = 0; i < expression.length; i++) {\n        var group = expression[i];\n        groups.push(buildGroup(group, options, prev));\n        prev = group;\n    }\n    return groups;\n};\n\n// List of types used by getTypeOfGroup,\n// see https://github.com/Khan/KaTeX/wiki/Examining-TeX#group-types\nvar groupToType = {\n    mathord: \"mord\",\n    textord: \"mord\",\n    bin: \"mbin\",\n    rel: \"mrel\",\n    text: \"mord\",\n    open: \"mopen\",\n    close: \"mclose\",\n    inner: \"minner\",\n    genfrac: \"mord\",\n    array: \"mord\",\n    spacing: \"mord\",\n    punct: \"mpunct\",\n    ordgroup: \"mord\",\n    op: \"mop\",\n    katex: \"mord\",\n    overline: \"mord\",\n    underline: \"mord\",\n    rule: \"mord\",\n    leftright: \"minner\",\n    sqrt: \"mord\",\n    accent: \"mord\",\n};\n\n/**\n * Gets the final math type of an expression, given its group type. This type is\n * used to determine spacing between elements, and affects bin elements by\n * causing them to change depending on what types are around them. This type\n * must be attached to the outermost node of an element as a CSS class so that\n * spacing with its surrounding elements works correctly.\n *\n * Some elements can be mapped one-to-one from group type to math type, and\n * those are listed in the `groupToType` table.\n *\n * Others (usually elements that wrap around other elements) often have\n * recursive definitions, and thus call `getTypeOfGroup` on their inner\n * elements.\n */\nvar getTypeOfGroup = function(group) {\n    if (group == null) {\n        // Like when typesetting $^3$\n        return groupToType.mathord;\n    } else if (group.type === \"supsub\") {\n        return getTypeOfGroup(group.value.base);\n    } else if (group.type === \"llap\" || group.type === \"rlap\") {\n        return getTypeOfGroup(group.value);\n    } else if (group.type === \"color\") {\n        return getTypeOfGroup(group.value.value);\n    } else if (group.type === \"sizing\") {\n        return getTypeOfGroup(group.value.value);\n    } else if (group.type === \"styling\") {\n        return getTypeOfGroup(group.value.value);\n    } else if (group.type === \"delimsizing\") {\n        return groupToType[group.value.delimType];\n    } else {\n        return groupToType[group.type];\n    }\n};\n\n/**\n * Sometimes, groups perform special rules when they have superscripts or\n * subscripts attached to them. This function lets the `supsub` group know that\n * its inner element should handle the superscripts and subscripts instead of\n * handling them itself.\n */\nvar shouldHandleSupSub = function(group, options) {\n    if (!group) {\n        return false;\n    } else if (group.type === \"op\") {\n        // Operators handle supsubs differently when they have limits\n        // (e.g. `\\displaystyle\\sum_2^3`)\n        return group.value.limits &&\n            (options.style.size === Style.DISPLAY.size ||\n            group.value.alwaysHandleSupSub);\n    } else if (group.type === \"accent\") {\n        return isCharacterBox(group.value.base);\n    } else {\n        return null;\n    }\n};\n\n/**\n * Sometimes we want to pull out the innermost element of a group. In most\n * cases, this will just be the group itself, but when ordgroups and colors have\n * a single element, we want to pull that out.\n */\nvar getBaseElem = function(group) {\n    if (!group) {\n        return false;\n    } else if (group.type === \"ordgroup\") {\n        if (group.value.length === 1) {\n            return getBaseElem(group.value[0]);\n        } else {\n            return group;\n        }\n    } else if (group.type === \"color\") {\n        if (group.value.value.length === 1) {\n            return getBaseElem(group.value.value[0]);\n        } else {\n            return group;\n        }\n    } else {\n        return group;\n    }\n};\n\n/**\n * TeXbook algorithms often reference \"character boxes\", which are simply groups\n * with a single character in them. To decide if something is a character box,\n * we find its innermost group, and see if it is a single character.\n */\nvar isCharacterBox = function(group) {\n    var baseElem = getBaseElem(group);\n\n    // These are all they types of groups which hold single characters\n    return baseElem.type === \"mathord\" ||\n        baseElem.type === \"textord\" ||\n        baseElem.type === \"bin\" ||\n        baseElem.type === \"rel\" ||\n        baseElem.type === \"inner\" ||\n        baseElem.type === \"open\" ||\n        baseElem.type === \"close\" ||\n        baseElem.type === \"punct\";\n};\n\nvar makeNullDelimiter = function(options) {\n    return makeSpan([\n        \"sizing\", \"reset-\" + options.size, \"size5\",\n        options.style.reset(), Style.TEXT.cls(),\n        \"nulldelimiter\",\n    ]);\n};\n\n/**\n * This is a map of group types to the function used to handle that type.\n * Simpler types come at the beginning, while complicated types come afterwards.\n */\nvar groupTypes = {};\n\ngroupTypes.mathord = function(group, options, prev) {\n    return buildCommon.makeOrd(group, options, \"mathord\");\n};\n\ngroupTypes.textord = function(group, options, prev) {\n    return buildCommon.makeOrd(group, options, \"textord\");\n};\n\ngroupTypes.bin = function(group, options, prev) {\n    var className = \"mbin\";\n    // Pull out the most recent element. Do some special handling to find\n    // things at the end of a \\color group. Note that we don't use the same\n    // logic for ordgroups (which count as ords).\n    var prevAtom = prev;\n    while (prevAtom && prevAtom.type === \"color\") {\n        var atoms = prevAtom.value.value;\n        prevAtom = atoms[atoms.length - 1];\n    }\n    // See TeXbook pg. 442-446, Rules 5 and 6, and the text before Rule 19.\n    // Here, we determine whether the bin should turn into an ord. We\n    // currently only apply Rule 5.\n    if (!prev || utils.contains([\"mbin\", \"mopen\", \"mrel\", \"mop\", \"mpunct\"],\n            getTypeOfGroup(prevAtom))) {\n        group.type = \"textord\";\n        className = \"mord\";\n    }\n\n    return buildCommon.mathsym(\n        group.value, group.mode, options.getColor(), [className]);\n};\n\ngroupTypes.rel = function(group, options, prev) {\n    return buildCommon.mathsym(\n        group.value, group.mode, options.getColor(), [\"mrel\"]);\n};\n\ngroupTypes.open = function(group, options, prev) {\n    return buildCommon.mathsym(\n        group.value, group.mode, options.getColor(), [\"mopen\"]);\n};\n\ngroupTypes.close = function(group, options, prev) {\n    return buildCommon.mathsym(\n        group.value, group.mode, options.getColor(), [\"mclose\"]);\n};\n\ngroupTypes.inner = function(group, options, prev) {\n    return buildCommon.mathsym(\n        group.value, group.mode, options.getColor(), [\"minner\"]);\n};\n\ngroupTypes.punct = function(group, options, prev) {\n    return buildCommon.mathsym(\n        group.value, group.mode, options.getColor(), [\"mpunct\"]);\n};\n\ngroupTypes.ordgroup = function(group, options, prev) {\n    return makeSpan(\n        [\"mord\", options.style.cls()],\n        buildExpression(group.value, options.reset())\n    );\n};\n\ngroupTypes.text = function(group, options, prev) {\n    return makeSpan([\"text\", \"mord\", options.style.cls()],\n        buildExpression(group.value.body, options.reset()));\n};\n\ngroupTypes.color = function(group, options, prev) {\n    var elements = buildExpression(\n        group.value.value,\n        options.withColor(group.value.color),\n        prev\n    );\n\n    // \\color isn't supposed to affect the type of the elements it contains.\n    // To accomplish this, we wrap the results in a fragment, so the inner\n    // elements will be able to directly interact with their neighbors. For\n    // example, `\\color{red}{2 +} 3` has the same spacing as `2 + 3`\n    return new buildCommon.makeFragment(elements);\n};\n\ngroupTypes.supsub = function(group, options, prev) {\n    // Superscript and subscripts are handled in the TeXbook on page\n    // 445-446, rules 18(a-f).\n\n    // Here is where we defer to the inner group if it should handle\n    // superscripts and subscripts itself.\n    if (shouldHandleSupSub(group.value.base, options)) {\n        return groupTypes[group.value.base.type](group, options, prev);\n    }\n\n    var base = buildGroup(group.value.base, options.reset());\n    var supmid;\n    var submid;\n    var sup;\n    var sub;\n\n    if (group.value.sup) {\n        sup = buildGroup(group.value.sup,\n                options.withStyle(options.style.sup()));\n        supmid = makeSpan(\n                [options.style.reset(), options.style.sup().cls()], [sup]);\n    }\n\n    if (group.value.sub) {\n        sub = buildGroup(group.value.sub,\n                options.withStyle(options.style.sub()));\n        submid = makeSpan(\n                [options.style.reset(), options.style.sub().cls()], [sub]);\n    }\n\n    // Rule 18a\n    var supShift;\n    var subShift;\n    if (isCharacterBox(group.value.base)) {\n        supShift = 0;\n        subShift = 0;\n    } else {\n        supShift = base.height - fontMetrics.metrics.supDrop;\n        subShift = base.depth + fontMetrics.metrics.subDrop;\n    }\n\n    // Rule 18c\n    var minSupShift;\n    if (options.style === Style.DISPLAY) {\n        minSupShift = fontMetrics.metrics.sup1;\n    } else if (options.style.cramped) {\n        minSupShift = fontMetrics.metrics.sup3;\n    } else {\n        minSupShift = fontMetrics.metrics.sup2;\n    }\n\n    // scriptspace is a font-size-independent size, so scale it\n    // appropriately\n    var multiplier = Style.TEXT.sizeMultiplier *\n            options.style.sizeMultiplier;\n    var scriptspace =\n        (0.5 / fontMetrics.metrics.ptPerEm) / multiplier + \"em\";\n\n    var supsub;\n    if (!group.value.sup) {\n        // Rule 18b\n        subShift = Math.max(\n            subShift, fontMetrics.metrics.sub1,\n            sub.height - 0.8 * fontMetrics.metrics.xHeight);\n\n        supsub = buildCommon.makeVList([\n            {type: \"elem\", elem: submid},\n        ], \"shift\", subShift, options);\n\n        supsub.children[0].style.marginRight = scriptspace;\n\n        // Subscripts shouldn't be shifted by the base's italic correction.\n        // Account for that by shifting the subscript back the appropriate\n        // amount. Note we only do this when the base is a single symbol.\n        if (base instanceof domTree.symbolNode) {\n            supsub.children[0].style.marginLeft = -base.italic + \"em\";\n        }\n    } else if (!group.value.sub) {\n        // Rule 18c, d\n        supShift = Math.max(supShift, minSupShift,\n            sup.depth + 0.25 * fontMetrics.metrics.xHeight);\n\n        supsub = buildCommon.makeVList([\n            {type: \"elem\", elem: supmid},\n        ], \"shift\", -supShift, options);\n\n        supsub.children[0].style.marginRight = scriptspace;\n    } else {\n        supShift = Math.max(\n            supShift, minSupShift,\n            sup.depth + 0.25 * fontMetrics.metrics.xHeight);\n        subShift = Math.max(subShift, fontMetrics.metrics.sub2);\n\n        var ruleWidth = fontMetrics.metrics.defaultRuleThickness;\n\n        // Rule 18e\n        if ((supShift - sup.depth) - (sub.height - subShift) <\n                4 * ruleWidth) {\n            subShift = 4 * ruleWidth - (supShift - sup.depth) + sub.height;\n            var psi = 0.8 * fontMetrics.metrics.xHeight -\n                (supShift - sup.depth);\n            if (psi > 0) {\n                supShift += psi;\n                subShift -= psi;\n            }\n        }\n\n        supsub = buildCommon.makeVList([\n            {type: \"elem\", elem: submid, shift: subShift},\n            {type: \"elem\", elem: supmid, shift: -supShift},\n        ], \"individualShift\", null, options);\n\n        // See comment above about subscripts not being shifted\n        if (base instanceof domTree.symbolNode) {\n            supsub.children[0].style.marginLeft = -base.italic + \"em\";\n        }\n\n        supsub.children[0].style.marginRight = scriptspace;\n        supsub.children[1].style.marginRight = scriptspace;\n    }\n\n    return makeSpan([getTypeOfGroup(group.value.base)],\n        [base, supsub]);\n};\n\ngroupTypes.genfrac = function(group, options, prev) {\n    // Fractions are handled in the TeXbook on pages 444-445, rules 15(a-e).\n    // Figure out what style this fraction should be in based on the\n    // function used\n    var fstyle = options.style;\n    if (group.value.size === \"display\") {\n        fstyle = Style.DISPLAY;\n    } else if (group.value.size === \"text\") {\n        fstyle = Style.TEXT;\n    }\n\n    var nstyle = fstyle.fracNum();\n    var dstyle = fstyle.fracDen();\n\n    var numer = buildGroup(group.value.numer, options.withStyle(nstyle));\n    var numerreset = makeSpan([fstyle.reset(), nstyle.cls()], [numer]);\n\n    var denom = buildGroup(group.value.denom, options.withStyle(dstyle));\n    var denomreset = makeSpan([fstyle.reset(), dstyle.cls()], [denom]);\n\n    var ruleWidth;\n    if (group.value.hasBarLine) {\n        ruleWidth = fontMetrics.metrics.defaultRuleThickness /\n            options.style.sizeMultiplier;\n    } else {\n        ruleWidth = 0;\n    }\n\n    // Rule 15b\n    var numShift;\n    var clearance;\n    var denomShift;\n    if (fstyle.size === Style.DISPLAY.size) {\n        numShift = fontMetrics.metrics.num1;\n        if (ruleWidth > 0) {\n            clearance = 3 * ruleWidth;\n        } else {\n            clearance = 7 * fontMetrics.metrics.defaultRuleThickness;\n        }\n        denomShift = fontMetrics.metrics.denom1;\n    } else {\n        if (ruleWidth > 0) {\n            numShift = fontMetrics.metrics.num2;\n            clearance = ruleWidth;\n        } else {\n            numShift = fontMetrics.metrics.num3;\n            clearance = 3 * fontMetrics.metrics.defaultRuleThickness;\n        }\n        denomShift = fontMetrics.metrics.denom2;\n    }\n\n    var frac;\n    if (ruleWidth === 0) {\n        // Rule 15c\n        var candiateClearance =\n            (numShift - numer.depth) - (denom.height - denomShift);\n        if (candiateClearance < clearance) {\n            numShift += 0.5 * (clearance - candiateClearance);\n            denomShift += 0.5 * (clearance - candiateClearance);\n        }\n\n        frac = buildCommon.makeVList([\n            {type: \"elem\", elem: denomreset, shift: denomShift},\n            {type: \"elem\", elem: numerreset, shift: -numShift},\n        ], \"individualShift\", null, options);\n    } else {\n        // Rule 15d\n        var axisHeight = fontMetrics.metrics.axisHeight;\n\n        if ((numShift - numer.depth) - (axisHeight + 0.5 * ruleWidth) <\n                clearance) {\n            numShift +=\n                clearance - ((numShift - numer.depth) -\n                             (axisHeight + 0.5 * ruleWidth));\n        }\n\n        if ((axisHeight - 0.5 * ruleWidth) - (denom.height - denomShift) <\n                clearance) {\n            denomShift +=\n                clearance - ((axisHeight - 0.5 * ruleWidth) -\n                             (denom.height - denomShift));\n        }\n\n        var mid = makeSpan(\n            [options.style.reset(), Style.TEXT.cls(), \"frac-line\"]);\n        // Manually set the height of the line because its height is\n        // created in CSS\n        mid.height = ruleWidth;\n\n        var midShift = -(axisHeight - 0.5 * ruleWidth);\n\n        frac = buildCommon.makeVList([\n            {type: \"elem\", elem: denomreset, shift: denomShift},\n            {type: \"elem\", elem: mid,        shift: midShift},\n            {type: \"elem\", elem: numerreset, shift: -numShift},\n        ], \"individualShift\", null, options);\n    }\n\n    // Since we manually change the style sometimes (with \\dfrac or \\tfrac),\n    // account for the possible size change here.\n    frac.height *= fstyle.sizeMultiplier / options.style.sizeMultiplier;\n    frac.depth *= fstyle.sizeMultiplier / options.style.sizeMultiplier;\n\n    // Rule 15e\n    var delimSize;\n    if (fstyle.size === Style.DISPLAY.size) {\n        delimSize = fontMetrics.metrics.delim1;\n    } else {\n        delimSize = fontMetrics.metrics.getDelim2(fstyle);\n    }\n\n    var leftDelim;\n    var rightDelim;\n    if (group.value.leftDelim == null) {\n        leftDelim = makeNullDelimiter(options);\n    } else {\n        leftDelim = delimiter.customSizedDelim(\n            group.value.leftDelim, delimSize, true,\n            options.withStyle(fstyle), group.mode);\n    }\n    if (group.value.rightDelim == null) {\n        rightDelim = makeNullDelimiter(options);\n    } else {\n        rightDelim = delimiter.customSizedDelim(\n            group.value.rightDelim, delimSize, true,\n            options.withStyle(fstyle), group.mode);\n    }\n\n    return makeSpan(\n        [\"mord\", options.style.reset(), fstyle.cls()],\n        [leftDelim, makeSpan([\"mfrac\"], [frac]), rightDelim],\n        options.getColor());\n};\n\ngroupTypes.array = function(group, options, prev) {\n    var r;\n    var c;\n    var nr = group.value.body.length;\n    var nc = 0;\n    var body = new Array(nr);\n\n    // Horizontal spacing\n    var pt = 1 / fontMetrics.metrics.ptPerEm;\n    var arraycolsep = 5 * pt; // \\arraycolsep in article.cls\n\n    // Vertical spacing\n    var baselineskip = 12 * pt; // see size10.clo\n    // Default \\arraystretch from lttab.dtx\n    // TODO(gagern): may get redefined once we have user-defined macros\n    var arraystretch = utils.deflt(group.value.arraystretch, 1);\n    var arrayskip = arraystretch * baselineskip;\n    var arstrutHeight = 0.7 * arrayskip; // \\strutbox in ltfsstrc.dtx and\n    var arstrutDepth = 0.3 * arrayskip;  // \\@arstrutbox in lttab.dtx\n\n    var totalHeight = 0;\n    for (r = 0; r < group.value.body.length; ++r) {\n        var inrow = group.value.body[r];\n        var height = arstrutHeight; // \\@array adds an \\@arstrut\n        var depth = arstrutDepth;   // to each tow (via the template)\n\n        if (nc < inrow.length) {\n            nc = inrow.length;\n        }\n\n        var outrow = new Array(inrow.length);\n        for (c = 0; c < inrow.length; ++c) {\n            var elt = buildGroup(inrow[c], options);\n            if (depth < elt.depth) {\n                depth = elt.depth;\n            }\n            if (height < elt.height) {\n                height = elt.height;\n            }\n            outrow[c] = elt;\n        }\n\n        var gap = 0;\n        if (group.value.rowGaps[r]) {\n            gap = group.value.rowGaps[r].value;\n            switch (gap.unit) {\n                case \"em\":\n                    gap = gap.number;\n                    break;\n                case \"ex\":\n                    gap = gap.number * fontMetrics.metrics.emPerEx;\n                    break;\n                default:\n                    console.error(\"Can't handle unit \" + gap.unit);\n                    gap = 0;\n            }\n            if (gap > 0) { // \\@argarraycr\n                gap += arstrutDepth;\n                if (depth < gap) {\n                    depth = gap; // \\@xargarraycr\n                }\n                gap = 0;\n            }\n        }\n\n        outrow.height = height;\n        outrow.depth = depth;\n        totalHeight += height;\n        outrow.pos = totalHeight;\n        totalHeight += depth + gap; // \\@yargarraycr\n        body[r] = outrow;\n    }\n\n    var offset = totalHeight / 2 + fontMetrics.metrics.axisHeight;\n    var colDescriptions = group.value.cols || [];\n    var cols = [];\n    var colSep;\n    var colDescrNum;\n    for (c = 0, colDescrNum = 0;\n         // Continue while either there are more columns or more column\n         // descriptions, so trailing separators don't get lost.\n         c < nc || colDescrNum < colDescriptions.length;\n         ++c, ++colDescrNum) {\n\n        var colDescr = colDescriptions[colDescrNum] || {};\n\n        var firstSeparator = true;\n        while (colDescr.type === \"separator\") {\n            // If there is more than one separator in a row, add a space\n            // between them.\n            if (!firstSeparator) {\n                colSep = makeSpan([\"arraycolsep\"], []);\n                colSep.style.width =\n                    fontMetrics.metrics.doubleRuleSep + \"em\";\n                cols.push(colSep);\n            }\n\n            if (colDescr.separator === \"|\") {\n                var separator = makeSpan(\n                    [\"vertical-separator\"],\n                    []);\n                separator.style.height = totalHeight + \"em\";\n                separator.style.verticalAlign =\n                    -(totalHeight - offset) + \"em\";\n\n                cols.push(separator);\n            } else {\n                throw new ParseError(\n                    \"Invalid separator type: \" + colDescr.separator);\n            }\n\n            colDescrNum++;\n            colDescr = colDescriptions[colDescrNum] || {};\n            firstSeparator = false;\n        }\n\n        if (c >= nc) {\n            continue;\n        }\n\n        var sepwidth;\n        if (c > 0 || group.value.hskipBeforeAndAfter) {\n            sepwidth = utils.deflt(colDescr.pregap, arraycolsep);\n            if (sepwidth !== 0) {\n                colSep = makeSpan([\"arraycolsep\"], []);\n                colSep.style.width = sepwidth + \"em\";\n                cols.push(colSep);\n            }\n        }\n\n        var col = [];\n        for (r = 0; r < nr; ++r) {\n            var row = body[r];\n            var elem = row[c];\n            if (!elem) {\n                continue;\n            }\n            var shift = row.pos - offset;\n            elem.depth = row.depth;\n            elem.height = row.height;\n            col.push({type: \"elem\", elem: elem, shift: shift});\n        }\n\n        col = buildCommon.makeVList(col, \"individualShift\", null, options);\n        col = makeSpan(\n            [\"col-align-\" + (colDescr.align || \"c\")],\n            [col]);\n        cols.push(col);\n\n        if (c < nc - 1 || group.value.hskipBeforeAndAfter) {\n            sepwidth = utils.deflt(colDescr.postgap, arraycolsep);\n            if (sepwidth !== 0) {\n                colSep = makeSpan([\"arraycolsep\"], []);\n                colSep.style.width = sepwidth + \"em\";\n                cols.push(colSep);\n            }\n        }\n    }\n    body = makeSpan([\"mtable\"], cols);\n    return makeSpan([\"mord\"], [body], options.getColor());\n};\n\ngroupTypes.spacing = function(group, options, prev) {\n    if (group.value === \"\\\\ \" || group.value === \"\\\\space\" ||\n        group.value === \" \" || group.value === \"~\") {\n        // Spaces are generated by adding an actual space. Each of these\n        // things has an entry in the symbols table, so these will be turned\n        // into appropriate outputs.\n        return makeSpan(\n            [\"mord\", \"mspace\"],\n            [buildCommon.mathsym(group.value, group.mode)]\n        );\n    } else {\n        // Other kinds of spaces are of arbitrary width. We use CSS to\n        // generate these.\n        return makeSpan(\n            [\"mord\", \"mspace\",\n             buildCommon.spacingFunctions[group.value].className]);\n    }\n};\n\ngroupTypes.llap = function(group, options, prev) {\n    var inner = makeSpan(\n        [\"inner\"], [buildGroup(group.value.body, options.reset())]);\n    var fix = makeSpan([\"fix\"], []);\n    return makeSpan(\n        [\"llap\", options.style.cls()], [inner, fix]);\n};\n\ngroupTypes.rlap = function(group, options, prev) {\n    var inner = makeSpan(\n        [\"inner\"], [buildGroup(group.value.body, options.reset())]);\n    var fix = makeSpan([\"fix\"], []);\n    return makeSpan(\n        [\"rlap\", options.style.cls()], [inner, fix]);\n};\n\ngroupTypes.op = function(group, options, prev) {\n    // Operators are handled in the TeXbook pg. 443-444, rule 13(a).\n    var supGroup;\n    var subGroup;\n    var hasLimits = false;\n    if (group.type === \"supsub\" ) {\n        // If we have limits, supsub will pass us its group to handle. Pull\n        // out the superscript and subscript and set the group to the op in\n        // its base.\n        supGroup = group.value.sup;\n        subGroup = group.value.sub;\n        group = group.value.base;\n        hasLimits = true;\n    }\n\n    // Most operators have a large successor symbol, but these don't.\n    var noSuccessor = [\n        \"\\\\smallint\",\n    ];\n\n    var large = false;\n    if (options.style.size === Style.DISPLAY.size &&\n        group.value.symbol &&\n        !utils.contains(noSuccessor, group.value.body)) {\n\n        // Most symbol operators get larger in displaystyle (rule 13)\n        large = true;\n    }\n\n    var base;\n    var baseShift = 0;\n    var slant = 0;\n    if (group.value.symbol) {\n        // If this is a symbol, create the symbol.\n        var style = large ? \"Size2-Regular\" : \"Size1-Regular\";\n        base = buildCommon.makeSymbol(\n            group.value.body, style, \"math\", options.getColor(),\n            [\"op-symbol\", large ? \"large-op\" : \"small-op\", \"mop\"]);\n\n        // Shift the symbol so its center lies on the axis (rule 13). It\n        // appears that our fonts have the centers of the symbols already\n        // almost on the axis, so these numbers are very small. Note we\n        // don't actually apply this here, but instead it is used either in\n        // the vlist creation or separately when there are no limits.\n        baseShift = (base.height - base.depth) / 2 -\n            fontMetrics.metrics.axisHeight *\n            options.style.sizeMultiplier;\n\n        // The slant of the symbol is just its italic correction.\n        slant = base.italic;\n    } else {\n        // Otherwise, this is a text operator. Build the text from the\n        // operator's name.\n        // TODO(emily): Add a space in the middle of some of these\n        // operators, like \\limsup\n        var output = [];\n        for (var i = 1; i < group.value.body.length; i++) {\n            output.push(buildCommon.mathsym(group.value.body[i], group.mode));\n        }\n        base = makeSpan([\"mop\"], output, options.getColor());\n    }\n\n    if (hasLimits) {\n        // IE 8 clips \\int if it is in a display: inline-block. We wrap it\n        // in a new span so it is an inline, and works.\n        base = makeSpan([], [base]);\n\n        var supmid;\n        var supKern;\n        var submid;\n        var subKern;\n        // We manually have to handle the superscripts and subscripts. This,\n        // aside from the kern calculations, is copied from supsub.\n        if (supGroup) {\n            var sup = buildGroup(\n                supGroup, options.withStyle(options.style.sup()));\n            supmid = makeSpan(\n                [options.style.reset(), options.style.sup().cls()], [sup]);\n\n            supKern = Math.max(\n                fontMetrics.metrics.bigOpSpacing1,\n                fontMetrics.metrics.bigOpSpacing3 - sup.depth);\n        }\n\n        if (subGroup) {\n            var sub = buildGroup(\n                subGroup, options.withStyle(options.style.sub()));\n            submid = makeSpan(\n                [options.style.reset(), options.style.sub().cls()],\n                [sub]);\n\n            subKern = Math.max(\n                fontMetrics.metrics.bigOpSpacing2,\n                fontMetrics.metrics.bigOpSpacing4 - sub.height);\n        }\n\n        // Build the final group as a vlist of the possible subscript, base,\n        // and possible superscript.\n        var finalGroup;\n        var top;\n        var bottom;\n        if (!supGroup) {\n            top = base.height - baseShift;\n\n            finalGroup = buildCommon.makeVList([\n                {type: \"kern\", size: fontMetrics.metrics.bigOpSpacing5},\n                {type: \"elem\", elem: submid},\n                {type: \"kern\", size: subKern},\n                {type: \"elem\", elem: base},\n            ], \"top\", top, options);\n\n            // Here, we shift the limits by the slant of the symbol. Note\n            // that we are supposed to shift the limits by 1/2 of the slant,\n            // but since we are centering the limits adding a full slant of\n            // margin will shift by 1/2 that.\n            finalGroup.children[0].style.marginLeft = -slant + \"em\";\n        } else if (!subGroup) {\n            bottom = base.depth + baseShift;\n\n            finalGroup = buildCommon.makeVList([\n                {type: \"elem\", elem: base},\n                {type: \"kern\", size: supKern},\n                {type: \"elem\", elem: supmid},\n                {type: \"kern\", size: fontMetrics.metrics.bigOpSpacing5},\n            ], \"bottom\", bottom, options);\n\n            // See comment above about slants\n            finalGroup.children[1].style.marginLeft = slant + \"em\";\n        } else if (!supGroup && !subGroup) {\n            // This case probably shouldn't occur (this would mean the\n            // supsub was sending us a group with no superscript or\n            // subscript) but be safe.\n            return base;\n        } else {\n            bottom = fontMetrics.metrics.bigOpSpacing5 +\n                submid.height + submid.depth +\n                subKern +\n                base.depth + baseShift;\n\n            finalGroup = buildCommon.makeVList([\n                {type: \"kern\", size: fontMetrics.metrics.bigOpSpacing5},\n                {type: \"elem\", elem: submid},\n                {type: \"kern\", size: subKern},\n                {type: \"elem\", elem: base},\n                {type: \"kern\", size: supKern},\n                {type: \"elem\", elem: supmid},\n                {type: \"kern\", size: fontMetrics.metrics.bigOpSpacing5},\n            ], \"bottom\", bottom, options);\n\n            // See comment above about slants\n            finalGroup.children[0].style.marginLeft = -slant + \"em\";\n            finalGroup.children[2].style.marginLeft = slant + \"em\";\n        }\n\n        return makeSpan([\"mop\", \"op-limits\"], [finalGroup]);\n    } else {\n        if (group.value.symbol) {\n            base.style.top = baseShift + \"em\";\n        }\n\n        return base;\n    }\n};\n\ngroupTypes.katex = function(group, options, prev) {\n    // The KaTeX logo. The offsets for the K and a were chosen to look\n    // good, but the offsets for the T, E, and X were taken from the\n    // definition of \\TeX in TeX (see TeXbook pg. 356)\n    var k = makeSpan(\n        [\"k\"], [buildCommon.mathsym(\"K\", group.mode)]);\n    var a = makeSpan(\n        [\"a\"], [buildCommon.mathsym(\"A\", group.mode)]);\n\n    a.height = (a.height + 0.2) * 0.75;\n    a.depth = (a.height - 0.2) * 0.75;\n\n    var t = makeSpan(\n        [\"t\"], [buildCommon.mathsym(\"T\", group.mode)]);\n    var e = makeSpan(\n        [\"e\"], [buildCommon.mathsym(\"E\", group.mode)]);\n\n    e.height = (e.height - 0.2155);\n    e.depth = (e.depth + 0.2155);\n\n    var x = makeSpan(\n        [\"x\"], [buildCommon.mathsym(\"X\", group.mode)]);\n\n    return makeSpan(\n        [\"katex-logo\", \"mord\"], [k, a, t, e, x], options.getColor());\n};\n\ngroupTypes.overline = function(group, options, prev) {\n    // Overlines are handled in the TeXbook pg 443, Rule 9.\n\n    // Build the inner group in the cramped style.\n    var innerGroup = buildGroup(group.value.body,\n            options.withStyle(options.style.cramp()));\n\n    var ruleWidth = fontMetrics.metrics.defaultRuleThickness /\n        options.style.sizeMultiplier;\n\n    // Create the line above the body\n    var line = makeSpan(\n        [options.style.reset(), Style.TEXT.cls(), \"overline-line\"]);\n    line.height = ruleWidth;\n    line.maxFontSize = 1.0;\n\n    // Generate the vlist, with the appropriate kerns\n    var vlist = buildCommon.makeVList([\n        {type: \"elem\", elem: innerGroup},\n        {type: \"kern\", size: 3 * ruleWidth},\n        {type: \"elem\", elem: line},\n        {type: \"kern\", size: ruleWidth},\n    ], \"firstBaseline\", null, options);\n\n    return makeSpan([\"overline\", \"mord\"], [vlist], options.getColor());\n};\n\ngroupTypes.underline = function(group, options, prev) {\n    // Underlines are handled in the TeXbook pg 443, Rule 10.\n\n    // Build the inner group.\n    var innerGroup = buildGroup(group.value.body, options);\n\n    var ruleWidth = fontMetrics.metrics.defaultRuleThickness /\n        options.style.sizeMultiplier;\n\n    // Create the line above the body\n    var line = makeSpan(\n        [options.style.reset(), Style.TEXT.cls(), \"underline-line\"]);\n    line.height = ruleWidth;\n    line.maxFontSize = 1.0;\n\n    // Generate the vlist, with the appropriate kerns\n    var vlist = buildCommon.makeVList([\n        {type: \"kern\", size: ruleWidth},\n        {type: \"elem\", elem: line},\n        {type: \"kern\", size: 3 * ruleWidth},\n        {type: \"elem\", elem: innerGroup},\n    ], \"top\", innerGroup.height, options);\n\n    return makeSpan([\"underline\", \"mord\"], [vlist], options.getColor());\n};\n\ngroupTypes.sqrt = function(group, options, prev) {\n    // Square roots are handled in the TeXbook pg. 443, Rule 11.\n\n    // First, we do the same steps as in overline to build the inner group\n    // and line\n    var inner = buildGroup(group.value.body,\n            options.withStyle(options.style.cramp()));\n\n    var ruleWidth = fontMetrics.metrics.defaultRuleThickness /\n        options.style.sizeMultiplier;\n\n    var line = makeSpan(\n        [options.style.reset(), Style.TEXT.cls(), \"sqrt-line\"], [],\n        options.getColor());\n    line.height = ruleWidth;\n    line.maxFontSize = 1.0;\n\n    var phi = ruleWidth;\n    if (options.style.id < Style.TEXT.id) {\n        phi = fontMetrics.metrics.xHeight;\n    }\n\n    // Calculate the clearance between the body and line\n    var lineClearance = ruleWidth + phi / 4;\n\n    var innerHeight =\n        (inner.height + inner.depth) * options.style.sizeMultiplier;\n    var minDelimiterHeight = innerHeight + lineClearance + ruleWidth;\n\n    // Create a \\surd delimiter of the required minimum size\n    var delim = makeSpan([\"sqrt-sign\"], [\n        delimiter.customSizedDelim(\"\\\\surd\", minDelimiterHeight,\n                                   false, options, group.mode)],\n                         options.getColor());\n\n    var delimDepth = (delim.height + delim.depth) - ruleWidth;\n\n    // Adjust the clearance based on the delimiter size\n    if (delimDepth > inner.height + inner.depth + lineClearance) {\n        lineClearance =\n            (lineClearance + delimDepth - inner.height - inner.depth) / 2;\n    }\n\n    // Shift the delimiter so that its top lines up with the top of the line\n    var delimShift = -(inner.height + lineClearance + ruleWidth) + delim.height;\n    delim.style.top = delimShift + \"em\";\n    delim.height -= delimShift;\n    delim.depth += delimShift;\n\n    // We add a special case here, because even when `inner` is empty, we\n    // still get a line. So, we use a simple heuristic to decide if we\n    // should omit the body entirely. (note this doesn't work for something\n    // like `\\sqrt{\\rlap{x}}`, but if someone is doing that they deserve for\n    // it not to work.\n    var body;\n    if (inner.height === 0 && inner.depth === 0) {\n        body = makeSpan();\n    } else {\n        body = buildCommon.makeVList([\n            {type: \"elem\", elem: inner},\n            {type: \"kern\", size: lineClearance},\n            {type: \"elem\", elem: line},\n            {type: \"kern\", size: ruleWidth},\n        ], \"firstBaseline\", null, options);\n    }\n\n    if (!group.value.index) {\n        return makeSpan([\"sqrt\", \"mord\"], [delim, body]);\n    } else {\n        // Handle the optional root index\n\n        // The index is always in scriptscript style\n        var root = buildGroup(\n            group.value.index,\n            options.withStyle(Style.SCRIPTSCRIPT));\n        var rootWrap = makeSpan(\n            [options.style.reset(), Style.SCRIPTSCRIPT.cls()],\n            [root]);\n\n        // Figure out the height and depth of the inner part\n        var innerRootHeight = Math.max(delim.height, body.height);\n        var innerRootDepth = Math.max(delim.depth, body.depth);\n\n        // The amount the index is shifted by. This is taken from the TeX\n        // source, in the definition of `\\r@@t`.\n        var toShift = 0.6 * (innerRootHeight - innerRootDepth);\n\n        // Build a VList with the superscript shifted up correctly\n        var rootVList = buildCommon.makeVList(\n            [{type: \"elem\", elem: rootWrap}],\n            \"shift\", -toShift, options);\n        // Add a class surrounding it so we can add on the appropriate\n        // kerning\n        var rootVListWrap = makeSpan([\"root\"], [rootVList]);\n\n        return makeSpan([\"sqrt\", \"mord\"], [rootVListWrap, delim, body]);\n    }\n};\n\ngroupTypes.sizing = function(group, options, prev) {\n    // Handle sizing operators like \\Huge. Real TeX doesn't actually allow\n    // these functions inside of math expressions, so we do some special\n    // handling.\n    var inner = buildExpression(group.value.value,\n            options.withSize(group.value.size), prev);\n\n    var span = makeSpan([\"mord\"],\n        [makeSpan([\"sizing\", \"reset-\" + options.size, group.value.size,\n                   options.style.cls()],\n                  inner)]);\n\n    // Calculate the correct maxFontSize manually\n    var fontSize = buildCommon.sizingMultiplier[group.value.size];\n    span.maxFontSize = fontSize * options.style.sizeMultiplier;\n\n    return span;\n};\n\ngroupTypes.styling = function(group, options, prev) {\n    // Style changes are handled in the TeXbook on pg. 442, Rule 3.\n\n    // Figure out what style we're changing to.\n    var style = {\n        \"display\": Style.DISPLAY,\n        \"text\": Style.TEXT,\n        \"script\": Style.SCRIPT,\n        \"scriptscript\": Style.SCRIPTSCRIPT,\n    };\n\n    var newStyle = style[group.value.style];\n\n    // Build the inner expression in the new style.\n    var inner = buildExpression(\n        group.value.value, options.withStyle(newStyle), prev);\n\n    return makeSpan([options.style.reset(), newStyle.cls()], inner);\n};\n\ngroupTypes.font = function(group, options, prev) {\n    var font = group.value.font;\n    return buildGroup(group.value.body, options.withFont(font), prev);\n};\n\ngroupTypes.delimsizing = function(group, options, prev) {\n    var delim = group.value.value;\n\n    if (delim === \".\") {\n        // Empty delimiters still count as elements, even though they don't\n        // show anything.\n        return makeSpan([groupToType[group.value.delimType]]);\n    }\n\n    // Use delimiter.sizedDelim to generate the delimiter.\n    return makeSpan(\n        [groupToType[group.value.delimType]],\n        [delimiter.sizedDelim(\n            delim, group.value.size, options, group.mode)]);\n};\n\ngroupTypes.leftright = function(group, options, prev) {\n    // Build the inner expression\n    var inner = buildExpression(group.value.body, options.reset());\n\n    var innerHeight = 0;\n    var innerDepth = 0;\n\n    // Calculate its height and depth\n    for (var i = 0; i < inner.length; i++) {\n        innerHeight = Math.max(inner[i].height, innerHeight);\n        innerDepth = Math.max(inner[i].depth, innerDepth);\n    }\n\n    // The size of delimiters is the same, regardless of what style we are\n    // in. Thus, to correctly calculate the size of delimiter we need around\n    // a group, we scale down the inner size based on the size.\n    innerHeight *= options.style.sizeMultiplier;\n    innerDepth *= options.style.sizeMultiplier;\n\n    var leftDelim;\n    if (group.value.left === \".\") {\n        // Empty delimiters in \\left and \\right make null delimiter spaces.\n        leftDelim = makeNullDelimiter(options);\n    } else {\n        // Otherwise, use leftRightDelim to generate the correct sized\n        // delimiter.\n        leftDelim = delimiter.leftRightDelim(\n            group.value.left, innerHeight, innerDepth, options,\n            group.mode);\n    }\n    // Add it to the beginning of the expression\n    inner.unshift(leftDelim);\n\n    var rightDelim;\n    // Same for the right delimiter\n    if (group.value.right === \".\") {\n        rightDelim = makeNullDelimiter(options);\n    } else {\n        rightDelim = delimiter.leftRightDelim(\n            group.value.right, innerHeight, innerDepth, options,\n            group.mode);\n    }\n    // Add it to the end of the expression.\n    inner.push(rightDelim);\n\n    return makeSpan(\n        [\"minner\", options.style.cls()], inner, options.getColor());\n};\n\ngroupTypes.rule = function(group, options, prev) {\n    // Make an empty span for the rule\n    var rule = makeSpan([\"mord\", \"rule\"], [], options.getColor());\n\n    // Calculate the shift, width, and height of the rule, and account for units\n    var shift = 0;\n    if (group.value.shift) {\n        shift = group.value.shift.number;\n        if (group.value.shift.unit === \"ex\") {\n            shift *= fontMetrics.metrics.xHeight;\n        }\n    }\n\n    var width = group.value.width.number;\n    if (group.value.width.unit === \"ex\") {\n        width *= fontMetrics.metrics.xHeight;\n    }\n\n    var height = group.value.height.number;\n    if (group.value.height.unit === \"ex\") {\n        height *= fontMetrics.metrics.xHeight;\n    }\n\n    // The sizes of rules are absolute, so make it larger if we are in a\n    // smaller style.\n    shift /= options.style.sizeMultiplier;\n    width /= options.style.sizeMultiplier;\n    height /= options.style.sizeMultiplier;\n\n    // Style the rule to the right size\n    rule.style.borderRightWidth = width + \"em\";\n    rule.style.borderTopWidth = height + \"em\";\n    rule.style.bottom = shift + \"em\";\n\n    // Record the height and width\n    rule.width = width;\n    rule.height = height + shift;\n    rule.depth = -shift;\n\n    return rule;\n};\n\ngroupTypes.accent = function(group, options, prev) {\n    // Accents are handled in the TeXbook pg. 443, rule 12.\n    var base = group.value.base;\n\n    var supsubGroup;\n    if (group.type === \"supsub\") {\n        // If our base is a character box, and we have superscripts and\n        // subscripts, the supsub will defer to us. In particular, we want\n        // to attach the superscripts and subscripts to the inner body (so\n        // that the position of the superscripts and subscripts won't be\n        // affected by the height of the accent). We accomplish this by\n        // sticking the base of the accent into the base of the supsub, and\n        // rendering that, while keeping track of where the accent is.\n\n        // The supsub group is the group that was passed in\n        var supsub = group;\n        // The real accent group is the base of the supsub group\n        group = supsub.value.base;\n        // The character box is the base of the accent group\n        base = group.value.base;\n        // Stick the character box into the base of the supsub group\n        supsub.value.base = base;\n\n        // Rerender the supsub group with its new base, and store that\n        // result.\n        supsubGroup = buildGroup(\n            supsub, options.reset(), prev);\n    }\n\n    // Build the base group\n    var body = buildGroup(\n        base, options.withStyle(options.style.cramp()));\n\n    // Calculate the skew of the accent. This is based on the line \"If the\n    // nucleus is not a single character, let s = 0; otherwise set s to the\n    // kern amount for the nucleus followed by the \\skewchar of its font.\"\n    // Note that our skew metrics are just the kern between each character\n    // and the skewchar.\n    var skew;\n    if (isCharacterBox(base)) {\n        // If the base is a character box, then we want the skew of the\n        // innermost character. To do that, we find the innermost character:\n        var baseChar = getBaseElem(base);\n        // Then, we render its group to get the symbol inside it\n        var baseGroup = buildGroup(\n            baseChar, options.withStyle(options.style.cramp()));\n        // Finally, we pull the skew off of the symbol.\n        skew = baseGroup.skew;\n        // Note that we now throw away baseGroup, because the layers we\n        // removed with getBaseElem might contain things like \\color which\n        // we can't get rid of.\n        // TODO(emily): Find a better way to get the skew\n    } else {\n        skew = 0;\n    }\n\n    // calculate the amount of space between the body and the accent\n    var clearance = Math.min(body.height, fontMetrics.metrics.xHeight);\n\n    // Build the accent\n    var accent = buildCommon.makeSymbol(\n        group.value.accent, \"Main-Regular\", \"math\", options.getColor());\n    // Remove the italic correction of the accent, because it only serves to\n    // shift the accent over to a place we don't want.\n    accent.italic = 0;\n\n    // The \\vec character that the fonts use is a combining character, and\n    // thus shows up much too far to the left. To account for this, we add a\n    // specific class which shifts the accent over to where we want it.\n    // TODO(emily): Fix this in a better way, like by changing the font\n    var vecClass = group.value.accent === \"\\\\vec\" ? \"accent-vec\" : null;\n\n    var accentBody = makeSpan([\"accent-body\", vecClass], [\n        makeSpan([], [accent])]);\n\n    accentBody = buildCommon.makeVList([\n        {type: \"elem\", elem: body},\n        {type: \"kern\", size: -clearance},\n        {type: \"elem\", elem: accentBody},\n    ], \"firstBaseline\", null, options);\n\n    // Shift the accent over by the skew. Note we shift by twice the skew\n    // because we are centering the accent, so by adding 2*skew to the left,\n    // we shift it to the right by 1*skew.\n    accentBody.children[1].style.marginLeft = 2 * skew + \"em\";\n\n    var accentWrap = makeSpan([\"mord\", \"accent\"], [accentBody]);\n\n    if (supsubGroup) {\n        // Here, we replace the \"base\" child of the supsub with our newly\n        // generated accent.\n        supsubGroup.children[0] = accentWrap;\n\n        // Since we don't rerun the height calculation after replacing the\n        // accent, we manually recalculate height.\n        supsubGroup.height = Math.max(accentWrap.height, supsubGroup.height);\n\n        // Accents should always be ords, even when their innards are not.\n        supsubGroup.classes[0] = \"mord\";\n\n        return supsubGroup;\n    } else {\n        return accentWrap;\n    }\n};\n\ngroupTypes.phantom = function(group, options, prev) {\n    var elements = buildExpression(\n        group.value.value,\n        options.withPhantom(),\n        prev\n    );\n\n    // \\phantom isn't supposed to affect the elements it contains.\n    // See \"color\" for more details.\n    return new buildCommon.makeFragment(elements);\n};\n\n/**\n * buildGroup is the function that takes a group and calls the correct groupType\n * function for it. It also handles the interaction of size and style changes\n * between parents and children.\n */\nvar buildGroup = function(group, options, prev) {\n    if (!group) {\n        return makeSpan();\n    }\n\n    if (groupTypes[group.type]) {\n        // Call the groupTypes function\n        var groupNode = groupTypes[group.type](group, options, prev);\n        var multiplier;\n\n        // If the style changed between the parent and the current group,\n        // account for the size difference\n        if (options.style !== options.parentStyle) {\n            multiplier = options.style.sizeMultiplier /\n                    options.parentStyle.sizeMultiplier;\n\n            groupNode.height *= multiplier;\n            groupNode.depth *= multiplier;\n        }\n\n        // If the size changed between the parent and the current group, account\n        // for that size difference.\n        if (options.size !== options.parentSize) {\n            multiplier = buildCommon.sizingMultiplier[options.size] /\n                    buildCommon.sizingMultiplier[options.parentSize];\n\n            groupNode.height *= multiplier;\n            groupNode.depth *= multiplier;\n        }\n\n        return groupNode;\n    } else {\n        throw new ParseError(\n            \"Got group of unknown type: '\" + group.type + \"'\");\n    }\n};\n\n/**\n * Take an entire parse tree, and build it into an appropriate set of HTML\n * nodes.\n */\nvar buildHTML = function(tree, options) {\n    // buildExpression is destructive, so we need to make a clone\n    // of the incoming tree so that it isn't accidentally changed\n    tree = JSON.parse(JSON.stringify(tree));\n\n    // Build the expression contained in the tree\n    var expression = buildExpression(tree, options);\n    var body = makeSpan([\"base\", options.style.cls()], expression);\n\n    // Add struts, which ensure that the top of the HTML element falls at the\n    // height of the expression, and the bottom of the HTML element falls at the\n    // depth of the expression.\n    var topStrut = makeSpan([\"strut\"]);\n    var bottomStrut = makeSpan([\"strut\", \"bottom\"]);\n\n    topStrut.style.height = body.height + \"em\";\n    bottomStrut.style.height = (body.height + body.depth) + \"em\";\n    // We'd like to use `vertical-align: top` but in IE 9 this lowers the\n    // baseline of the box to the bottom of this strut (instead staying in the\n    // normal place) so we use an absolute value for vertical-align instead\n    bottomStrut.style.verticalAlign = -body.depth + \"em\";\n\n    // Wrap the struts and body together\n    var htmlNode = makeSpan([\"katex-html\"], [topStrut, bottomStrut, body]);\n\n    htmlNode.setAttribute(\"aria-hidden\", \"true\");\n\n    return htmlNode;\n};\n\nmodule.exports = buildHTML;\n","export default \"# 共识\\n\\n共识规则，是为了让系统，以去中心化而又可确定性的方式运行，必须遵守的规则。在计算机科学领域，共识一词先于Blockchain存在，与如何在分布式系统同步状态的问题相关联，让分布式系统的参与者都认可唯一的系统状态，这个过程叫做“达成共识”。\\n\\n以分布式架构的数据存储和认证系统，单个节点的数据信任度很低，难以保证节点本地的数据状态与系统的最新状态是一致的。在去中心的网络中，这种问题更加突出，没有任何可信的第三方提供认证服务。而这正是Blockchain的魅力之一，Blockchain分布式的，去中心的架构，能够抵抗审查，无需权限认证地访问数据。为此付出的代价是，没有可信的公证人，任何分歧，欺骗或者差异，都需要其它手段调解。共识算法就是用于调解安全问题，分散化问题的机制。\\n\\n在Blockchain中，共识是极为重要的属性。简单来说，你的钱有危险！在Blockchain的世界里，共识是指如何保持分散化的同时，达成一个共同的状态。换句话说，达成共识就是要创造一个系统，让可能不遵守规则的玩家，在系统中只能遵循严格的规则进行交易。没有任何个人，机构，组织看管，权力与控制分散在网络中的各个参与者之中，每个参与者必须遵守规则，讲信用才由可能满足自身的利益。\\n\\n在分布式网络，存在竞争对手的条件，没有中心控制的情况下达成共识，是所有开放式公共Blockchain的核心原则。在保持分散化价值的前提下如何解决这个问题，Blockchain社区持续尝试了不同的共识模型。\\n\\n# 工作量证明共识模型\\n\\nBlockchain的鼻祖Bitcoin，发明了共识算法，叫做工作量证明，PoW。许多认为，PoW是Bitcoin最重要的支撑。PoW有更通俗的名称，挖矿，而挖矿一词混淆了共识的主要目的。人们通常认为挖矿就是创造新的货币，真实的世界，挖矿就是取出宝贵的金属或者其它资源。实质上，挖矿，或者其它共识模型的真正目的，是保护Blockchain的安全，系统越来越分散，越来越多参与者的同时，保持对系统的控制。新挖出的货币，是用来诱惑矿工为系统的安全做贡献的。达到目的得有合适的手段，奖励是手段，系统分散化而保持安全是目的。PoW共识模型同时存在惩罚，参与挖矿要消耗能量。如果参与者不按规则行动，损失的是投入到挖矿的电费。\\n\\nEthereum目前是使用PoW共识模型的Blockchain，它使用PoW共识算法的目的也是一致的：在Blockchain分散化的同时提供安全的保护。Ethereum的PoW与Bitcoin的PoW有轻微的区别，它叫Ethash。\\n\\n# 权益证明共识模型\\n\\nPoW并不是第一个被提出的共识算法，PoW之前，许多研究人员根据金融权益提出了各种共识算法，现在成为权益证明，PoS。从某些角度来看，PoW是PoS的一个可替代品。由于Bitcoin的成功，许多其它的Blockchain模仿Bitcoin使用PoW。目前对共识算法大量的研究，使得PoS得以复苏。Ethereum的创立者打算将共识算法由PoW转换到PoS，因为PoW又一个弱点，成为难度炸弹，它导致挖矿的难度会越来越大。目前Ethereum的共识算法是PoW，不久的将来将会切换为PoS，\\n名字叫Casper。过去两年，Casper替代Ethash的安排推迟了好几次。\\n\\nPoS算法执行过程大致是这样子的：Blockchain持续跟踪一组验证者，任何人都可以发送一笔保证金成为验证者，对于下一个合法的块数据，认证者轮流建议和投票，认证人投票的权重由他们存放的保证金决定。认证人又一个风险，如果他支持的块数据被其它大部分认证人拒绝，该认证人的保证金会被没收。如果认证人的块数据被大家接受了，会根据该认证人保证金的比例给予一笔奖励。PoS通过系统的奖励和惩罚，强迫认证人根据共识规则诚实办事。PoW和PoS最主要的区别是如何惩罚坏人，如果块数据被拒绝，PoW下损失的是挖矿消耗的资源，而PoS下损失保证金。\\n\\n# Ethash，Ethereum的PoW算法\\n\\nEthash是Ethereum的PoW算法，Ethash运行时，创建一大组数据，成为有向无环图DAG，根据DAG进行分析。DAG最开始的大小是1G，然后慢慢变大，没过一段时间更新一次，大概是30,000个块数据，125小时更新一次。DAG的目的，是让PoW算法的运行必须要维护一组很大的数据，这组数据还要频繁读取更新。这会导致普通的ASCI硬件设备挖矿的速度比不上使用GPU挖矿的设备，防止某些大的ASCI硬件制作商，或者拥有很多廉价ASCI设备的大公司成为垄断者，降低Blockchain的安全保护。\\n\\n消费级别的GPU更容易处理PoW算法，意味着可以让世界上更多的人参与挖矿的过程。更多的独立的个体，挖矿的力量就越分散，避免了Bitcoin现在出现的情况，绝大部分的挖矿力量集中在几个巨大的挖矿中心。使用GPU挖矿也导致了一些不好的影响，造成了2017年GPU供应短缺，价格飞涨，还有游戏玩家的抗议。\\n\\n对于Ethash对ASCI硬件的不友好，ASCI矿工的威胁目前大部分已经消失了，现在使用ASCI挖矿，需要设计，制作，分布式架构昂贵的硬件。而且Ethereum正在打算把共识算法切换成PoS，许多ASCI矿工可能会把目标转移到别的平台了。\\n\\n# Casper：Ethereum的权益证明共识算法\\n\\nCasper是Ethereum权益共识算法的名字，它目前仍然处于研究，开发状态。\\n\\n# 共识算法的原则\\n\\n共识算法的设计和改进原则可能通过下面这些问题得到更好的理解：\\n\\n* 谁可以修改过去，怎么修改？\\n* 谁可以改变未来，怎么改变？\\n* 作出这些修改，谁付出最大？\\n* 作出这些修改，如果保证和增加分散化的力量？\\n* 谁会知道这些修改改变了什么东西，怎么知道？\\n\\n# 争议，竞争\\n\\n现在你可能会问，为什么开发了这么多的共识算法？哪个是最好的？后一个问题的答案，是最近几十年来，在分布式领域的研究核心。它完全根据你对最好的定义。似乎没有哪一个算法在各个方面都是最好的。如果有人说，这个共识算法比那个更好，你应该问清楚，是哪一方面更好。是不可修改性？是最终结果吗？是分散化程度吗？是消耗更少吗？目前还没有确定性的答案。目前在Blockchain的投资是巨大的，历史将会给我们答案！\\n\";","require('../../modules/es6.object.keys');\nmodule.exports = require('../../modules/_core').Object.keys;\n","'use strict';\n\n\nmodule.exports = require('./lib/');\n","'use strict';\n\nexports.Any = require('./properties/Any/regex');\nexports.Cc  = require('./categories/Cc/regex');\nexports.Cf  = require('./categories/Cf/regex');\nexports.P   = require('./categories/P/regex');\nexports.Z   = require('./categories/Z/regex');\n","'use strict';\n\n\nvar parseLinkDestination = require('../helpers/parse_link_destination');\nvar parseLinkTitle       = require('../helpers/parse_link_title');\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function reference(state, startLine, _endLine, silent) {\n  var ch,\n      destEndPos,\n      destEndLineNo,\n      endLine,\n      href,\n      i,\n      l,\n      label,\n      labelEnd,\n      res,\n      start,\n      str,\n      terminate,\n      terminatorRules,\n      title,\n      lines = 0,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine],\n      nextLine = startLine + 1;\n\n  if (state.src.charCodeAt(pos) !== 0x5B/* [ */) { return false; }\n\n  // Simple check to quickly interrupt scan on [link](url) at the start of line.\n  // Can be useful on practice: https://github.com/markdown-it/markdown-it/issues/54\n  while (++pos < max) {\n    if (state.src.charCodeAt(pos) === 0x5D /* ] */ &&\n        state.src.charCodeAt(pos - 1) !== 0x5C/* \\ */) {\n      if (pos + 1 === max) { return false; }\n      if (state.src.charCodeAt(pos + 1) !== 0x3A/* : */) { return false; }\n      break;\n    }\n  }\n\n  endLine = state.lineMax;\n\n  // jump line-by-line until empty one or EOF\n  terminatorRules = state.md.block.ruler.getRules('reference');\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  str = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  max = str.length;\n\n  for (pos = 1; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x5B /* [ */) {\n      return false;\n    } else if (ch === 0x5D /* ] */) {\n      labelEnd = pos;\n      break;\n    } else if (ch === 0x0A /* \\n */) {\n      lines++;\n    } else if (ch === 0x5C /* \\ */) {\n      pos++;\n      if (pos < max && str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n  }\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return false; }\n\n  // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n  res = parseLinkDestination(str, pos, max);\n  if (!res.ok) { return false; }\n\n  href = state.md.normalizeLink(res.str);\n  if (!state.md.validateLink(href)) { return false; }\n\n  pos = res.pos;\n  lines += res.lines;\n\n  // save cursor state, we could require to rollback later\n  destEndPos = pos;\n  destEndLineNo = lines;\n\n  // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n  start = pos;\n  for (; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n  res = parseLinkTitle(str, pos, max);\n  if (pos < max && start !== pos && res.ok) {\n    title = res.str;\n    pos = res.pos;\n    lines += res.lines;\n  } else {\n    title = '';\n    pos = destEndPos;\n    lines = destEndLineNo;\n  }\n\n  // skip trailing spaces until the rest of the line\n  while (pos < max) {\n    ch = str.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n    pos++;\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    if (title) {\n      // garbage at the end of the line after title,\n      // but it could still be a valid reference if we roll back\n      title = '';\n      pos = destEndPos;\n      lines = destEndLineNo;\n      while (pos < max) {\n        ch = str.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n    }\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    // garbage at the end of the line\n    return false;\n  }\n\n  label = normalizeReference(str.slice(1, labelEnd));\n  if (!label) {\n    // CommonMark 0.20 disallows empty labels\n    return false;\n  }\n\n  // Reference can not terminate anything. This check is for safety only.\n  /*istanbul ignore if*/\n  if (silent) { return true; }\n\n  if (typeof state.env.references === 'undefined') {\n    state.env.references = {};\n  }\n  if (typeof state.env.references[label] === 'undefined') {\n    state.env.references[label] = { title: title, href: href };\n  }\n\n  state.line = startLine + lines + 1;\n  return true;\n};\n","export default \"# 从0开始搭建Fabric网络:联盟\\n## 定义联盟\\n要理解联盟，得搞清楚Fabric与链的关系。Fabric管理网络如何运行，谁可以加入，谁是管理员，但成员之间的生意，fabric是不管的。成员之间是如何做生意的呢？首先，成员自发成立一个联盟，或者说集团，邀请其他成员加入。同一个联盟的成员之间互相交易，交易的数据被记录在区块之中。这个联盟就是一条链。同一个成员可以加入多个联盟，每个联盟可以组织多个成员，这样就形成了各种各种的链。\\n小明的咖啡馆网络运行后，要开始真正的生意，必须有组织成立联盟，加入联盟。本节的任务非常简单：把企业Ming加入联盟。\\n\\n第一，创建目录 03-defining-a-consortium，并且进入该目录\\n```\\nmkdir 03-defining-a-consortium\\ncd 03-defining-a-consortium\\n```\\n\\n第二，在configtx.yaml中，定义联盟X1，定一个Ming为X1的成员:\\n```\\n        Consortiums:\\n            SampleConsortium:\\n                Organizations:\\n            X1:\\n                Organizations:\\n                    - *Ming\\n```\\n## 网络示意图\\n![consortium](/book/fabric/coffee03.png)\\n注：\\n- 本节源码位于: [03-defining-a-consortium](https://github.com/stephenwu2020/hfcoffeeshop/tree/master/03-defining-a-consortium)\";","export default \"# 地址\\n\\nEthereum 使用非对称钥匙加密的方法，对 transaction 进行安全保护，认证，与 Bitcoin 的一样。公钥-私钥键值对被创建，消息用私钥签名，只有相对应的公钥可以解密。用 Keccak256 算法，对公钥进行哈希，得到的结果的最后20位，作为账户的地址。 Keccak256 是 Ethereum 的标准哈希算法。\\n\\n与地址绑定的 ether 账户余额，可以被任何能够证明是该账户私钥的拥有者使用。这个过程是这样的，所有 Ethereum 的 transaction 被发送者的私钥加密，如果一个用户提供的公钥能够解密出原文，那就证明了该用户就是私钥的拥有者，该 transaction 是他发出的。\\n\\nEthereum 有两种类型的账户：外部账户和 contract。外部账户由用户控制，而 contract，是 blockchain 上半自治的条目，通过函数调用来触发它的功能。所有的账户，都相对应着 balance 和 nonce。这里账户的 nonce 与 block header 的 nonce 是不同的概念，账户的 nonce 记录账户发送 transaction，每次一个 transaction 发出后， nonce的值自增，避免发送重复的 transaction。除了拥有这两个属性，contract 可以访问存储空间，存储代码指定的数据。\\n\";","'use strict';\n\n\nmodule.exports.encode = require('./encode');\nmodule.exports.decode = require('./decode');\nmodule.exports.format = require('./format');\nmodule.exports.parse  = require('./parse');\n","\n\n\n\n\n\n\nimport Vue from \"vue\";\nimport VueMarkdown from \"vue-markdown\";\n\nexport default Vue.extend({\n  props: [\"source\"],\n  components: {\n    \"vue-markdown\": VueMarkdown\n  }\n});\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n//\n// Changes from joyent/node:\n//\n// 1. No leading slash in paths,\n//    e.g. in `url.parse('http://foo?bar')` pathname is ``, not `/`\n//\n// 2. Backslashes are not replaced with slashes,\n//    so `http:\\\\example.org\\` is treated like a relative path\n//\n// 3. Trailing colon is treated like a part of the path,\n//    i.e. in `http://example.org:foo` pathname is `:foo`\n//\n// 4. Nothing is URL-encoded in the resulting object,\n//    (in joyent/node some chars in auth and paths are encoded)\n//\n// 5. `url.parse()` does not have `parseQueryString` argument\n//\n// 6. Removed extraneous result properties: `host`, `path`, `query`, etc.,\n//    which can be constructed using other parts of the url.\n//\n\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.pathname = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = [ '<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t' ],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = [ '{', '}', '|', '\\\\', '^', '`' ].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = [ '\\'' ].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = [ '%', '/', '?', ';', '#' ].concat(autoEscape),\n    hostEndingChars = [ '/', '?', '#' ],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    /* eslint-disable no-script-url */\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    };\n    /* eslint-enable no-script-url */\n\nfunction urlParse(url, slashesDenoteHost) {\n  if (url && url instanceof Url) { return url; }\n\n  var u = new Url();\n  u.parse(url, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, slashesDenoteHost) {\n  var i, l, lowerProto, hec, slashes,\n      rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    lowerProto = proto.toLowerCase();\n    this.protocol = proto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = auth;\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) {\n      hostEnd = rest.length;\n    }\n\n    if (rest[hostEnd - 1] === ':') { hostEnd--; }\n    var host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost(host);\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) { continue; }\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    }\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n    }\n  }\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    rest = rest.slice(0, qm);\n  }\n  if (rest) { this.pathname = rest; }\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '';\n  }\n\n  return this;\n};\n\nUrl.prototype.parseHost = function(host) {\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) { this.hostname = host; }\n};\n\nmodule.exports = urlParse;\n","export default \"# 从0开始搭建Fabric网络:链码\\nFabric的商业逻辑通过chaincode，即链码来实现。链码的作用，简单来说，就是操作Fabric的数据库，修改变量的值，同时给Fabric之外的应用程序提供操作接口。\\n\\n## 现在开始为我们的咖啡馆网络部署链码\\n\\n第一，创建目录06-smart-contract-chaincode，并且进入该目录\\n```\\nmkdir 06-smart-contract-chaincode\\ncd 06-smart-contract-chaincode\\n```\\n\\n第二，此前网络已经成型，配置文件无需修改\\n\\n第三，链码的操作相对来说比较复杂，因此修改了shell脚本的逻辑，新增的`builder.sh`大致思路如下：\\n1. 操作分割为三个模块：网络操作，channel操作，chaincode操作，对应./scripts下的三个文件\\n2. 网络相关操作：./builder.sh network\\n3. channel相关操作：./builder.sh channel\\n4. chaincode相关操作：./builder.sh chaincode\\n   \\n由于网络操作，channel操作已经在前面介绍，这里快速启动网络，创建channel，加入channel：\\n```\\n./builder.sh network custom\\n./builder.sh channel custom\\n```\\n\\n第四，下面集中讲解chaincode的操作:\\n1.  我们将要部署的链码位于根目录下的./chaincode/abstore/go\\n2.  执行打包指令，会在./pkg目录下生成mycc.tar.gz包：\\n    ```\\n    ./builder.sh chaincode package\\n    ```\\n3. 执行安装指令：\\n    ```\\n    ./builder.sh chaincode install\\n    ```\\n4. 执行approve指令，可以理解为，这个代码我审核了，我支持它运行：\\n    ```\\n    ./builder.sh chaincode approve\\n    ```\\n5. 执行commit指令\\n    ```\\n    ./builder.sh chaincode commit\\n    ```\\n6. 执行invoke指令，进行实例化：\\n    ```\\n    ./builder.sh chaincode invoke\\n    ```\\n7. 执行query指令，查询：\\n    ```\\n    ./builder.sh chaincode query\\n    ```\\n熟悉上述操作之后，将他们合并成custom指令，免得一句一句从新打\\n\\n## 查看容器的状态\\n```\\nCONTAINER ID        IMAGE                                                                                                                                                                       COMMAND                  CREATED             STATUS              PORTS                    NAMES\\nef2e285c572a        dev-peer0.ming.coffeeshop.com-abstore_1-bf43a0391f5bac984beb7e55751e7f33432c517800406c12b6a2fd789480fe95-79103ebc9b8d25cd59dfd065e96be85d38c4f6332047cc67349cabdcd3fc0c23   \\\"chaincode -peer.add…\\\"   7 minutes ago       Up 7 minutes                                 dev-peer0.ming.coffeeshop.com-abstore_1-bf43a0391f5bac984beb7e55751e7f33432c517800406c12b6a2fd789480fe95\\n41ec607e9883        hyperledger/fabric-tools:2.2.0                                                                                                                                              \\\"/bin/bash\\\"              15 minutes ago      Up 15 minutes                                cli\\n49d5ecbf55bd        hyperledger/fabric-orderer:2.2.0                                                                                                                                            \\\"orderer\\\"                15 minutes ago      Up 15 minutes       0.0.0.0:7050->7050/tcp   orderer.coffeeshop.com\\n70ff2d210d98        hyperledger/fabric-peer:2.2.0                                                                                                                                               \\\"peer node start\\\"        15 minutes ago      Up 15 minutes       0.0.0.0:7051->7051/tcp   peer0.ming.coffeeshop.com\\n```\\n发现多了一个容器，以dev-peer0.ming.coffeeshop.com开头，这个是链码执行的容器\\n好了，链码部署成功！\\n\\n## 网络示意图\\n![consortium](/book/fabric/coffee06.png)\\n\\n注\\n- 本节源码位于:[06-smart-contract-chaincode](https://github.com/stephenwu2020/hfcoffeeshop/tree/master/06-smart-contract-chaincode)\";","export default \"# Block\\n\\nBlockchain 由一系列有序的 block 组成。一个 block 由包含着元数据的 header 和一系列 transaction 组成。Block 由矿工挖矿生成，并且广播到网络的其它节点。节点根据一系列的共识规则对接收的 block 进行验证。不满足共识规则的 block 会被网络拒绝。\\n\\n当网络中出现了相互矛盾的共识规则，就会出现一个 fork，通常发生在官方客户端更新的时候。在 Ethereum 里，就是指 geth 客户端更新的时候。\\n\\n如果新的规则诞生了，且是旧的规则的子集，导致的 fork 是 soft fork. 此时，使用最新共识规则的客户端创建的 block，仍然会被运行旧共识规则的客户端接受。这种情况下，只有矿工是必须要更新客户端的。\\n\\n如果新的共识规则与旧的不能兼容，导致的 fork 是 hard fork. 这种情况下，所有的客户单都必须更新。Hard fork 往往会引起大争议。如果有一部分客户端拒绝更新客户端，会导致区块链分裂，在一条链合法的 block，在另一条链就是非法的。 Ethereum 历史上发生了6次 hard fork，其中一次导致了区块链分裂，Ethereum Classic (ETC) 的诞生。\\n\";","export default \"# 相关概念\\nEthereum最基本的概念，有账户，钥匙，钱包，交易，Smart Contract等等。\\n\\n# Ether货币单位\\n\\nEthereum的货币叫ether，它能够细分出更小的单元，最小的单位称作wei。1ether等于1*10^18wei。在Ethereum的内部，Ether的价值衡量单位是wei。如果我们转账1ether的货币，这1ether在Ethereum内部，将转化为1000000000000000000 wei来传输。\\n\\nEther的各种面值都有一个科学的名称和一个密码学上通俗的称呼。\\n![img](/book/units.png)\\n\\n# 选择Ethereum钱包\\n\\n钱包，Wallet，是管理Ethereum账号的软件，它是进入Ethereum的门关，它记录了账号的钥匙，我们通过它来创建交易，广播交易。选择一个合适钱包是很困难的，因为不同的钱包有不同的特点，有不同的设计。有一些适合新手使用，而另外一些则适合专业玩家使用。Ethereum平台自身不断改进中，最好的钱包通常是跟着平台的改进不断改进自身的钱包。\\n\\n即使选了一个钱包，但不喜欢它的运作方式；或是一开始喜欢，但后来想要尝试别的，换一个钱包还是很方便的。你需要做的，仅仅是把旧钱包的钱转送到新钱包里即可，或是把旧钱包的私钥导出来，再导入新钱包里即可。\\n\\n切记，钱包软件的正常运作必须要访问私钥，因此钱包软件必须从信得过的地方下载。一般来说，最流行的钱包，通常是最信得过的钱包。而且，经验告诉我们，不要将鸡蛋放在同一个篮子里，尽量将Ethereum账号分布在不同的钱包之中。\\n\\n# 控制与责任\\n\\nEthereum是一个分散化的系统，没有机构会对Ethereum的用户进行认证，管理，这意味着，每个Ethereum的用户必须保管好私钥，它是唯一证明你是该账户的凭证。如果私钥丢了，没有任何人能够将它回复，对应账户的所有资金都将永久封存在Blockchain当中。为此，提供一些tips帮助大家管理私钥:\\n\\n* 不要轻易相信任何软件，网站，要反复地尝试和测试\\n* 越是重要的账户，资金最多的账户，管理的Smart Contract作用越大的账户，安全等级要越高\\n* 最高等级的安全保护必须是离线的，但不是每个账户都需要这种等级的保护\\n* 切勿用明文记录私钥，特别是电子版本。幸运的是，目前大多数钱包软件都不会给你展示私钥明文\\n* 私钥可以加密后存文档。加密后，需要密码才能解锁。选择密码时，尽量选择长的，随机的密码并且做好备份，存放在私密安全的地方。每次访问账户，需要加密的私钥和密码。\\n* 进行大金额的交易前，转一笔小钱测试对方是否能收到。\\n* 要创建一个新账户，先打一笔小钱到新账户，在从新账户打一笔小钱回来，测试可行性。账户创建失败的原因很多，拿笔小钱测一测，以防万一。\\n\\n# 外部账户与Contract账户\\n\\n外部账户是指拥有私钥的账户，拥有私钥意味着账户资金的所有权，账户合同的控制权。另一种账户是Contact账户，Contract账户没有私钥，但包含了实现合同细节的代码，可以这样说，Smart Contract的业务逻辑，控制了Contract账户。像外部账户一样，Contract账户也有地址，也能够接收和发送资金。如果一个交易的接受者是一个Contract账户，EVM就会加载该Contract的代码运行，交易的数据会作为代码的输入。除了发送ether，一个交易可以传送数据，数据可以指定Smart Contract由哪个函数执行，每个函数对应的参数是什么。通过这种方式，一个交易就可以调用Smart Contract的函数，完成相应的逻辑与功能。\\n\\n由于Contract账户是没有私钥的，它不能发起一个交易。只有外部账户才能发起交易，但是Contract账户可以根据交易的细节，去调用其它Contract，执行复杂的功能。典型的例子，一个外部账户发送一个交易请求，让一个多重签名的Contract账户给另一个地址打钱；又比如，一个DApp程序让Contract A到Contract B处获取一些公共数据。\\n\";","// Parse link label\n//\n// this function assumes that first character (\"[\") already matches;\n// returns the end of the label\n//\n'use strict';\n\nmodule.exports = function parseLinkLabel(state, start, disableNested) {\n  var level, found, marker, prevPos,\n      labelEnd = -1,\n      max = state.posMax,\n      oldPos = state.pos;\n\n  state.pos = start + 1;\n  level = 1;\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos);\n    if (marker === 0x5D /* ] */) {\n      level--;\n      if (level === 0) {\n        found = true;\n        break;\n      }\n    }\n\n    prevPos = state.pos;\n    state.md.inline.skipToken(state);\n    if (marker === 0x5B /* [ */) {\n      if (prevPos === state.pos - 1) {\n        // increase level if we find text `[`, which is not a part of any token\n        level++;\n      } else if (disableNested) {\n        state.pos = oldPos;\n        return -1;\n      }\n    }\n  }\n\n  if (found) {\n    labelEnd = state.pos;\n  }\n\n  // restore old state\n  state.pos = oldPos;\n\n  return labelEnd;\n};\n","// List of valid html blocks names, accorting to commonmark spec\n// http://jgm.github.io/CommonMark/spec.html#html-blocks\n\n'use strict';\n\n\nmodule.exports = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'meta',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'pre',\n  'section',\n  'source',\n  'title',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n];\n","// Parse link destination\n//\n'use strict';\n\n\nvar isSpace     = require('../common/utils').isSpace;\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkDestination(str, pos, max) {\n  var code, level,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (str.charCodeAt(pos) === 0x3C /* < */) {\n    pos++;\n    while (pos < max) {\n      code = str.charCodeAt(pos);\n      if (code === 0x0A /* \\n */ || isSpace(code)) { return result; }\n      if (code === 0x3E /* > */) {\n        result.pos = pos + 1;\n        result.str = unescapeAll(str.slice(start + 1, pos));\n        result.ok = true;\n        return result;\n      }\n      if (code === 0x5C /* \\ */ && pos + 1 < max) {\n        pos += 2;\n        continue;\n      }\n\n      pos++;\n    }\n\n    // no closing '>'\n    return result;\n  }\n\n  // this should be ... } else { ... branch\n\n  level = 0;\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n\n    if (code === 0x20) { break; }\n\n    // ascii control characters\n    if (code < 0x20 || code === 0x7F) { break; }\n\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos += 2;\n      continue;\n    }\n\n    if (code === 0x28 /* ( */) {\n      level++;\n      if (level > 1) { break; }\n    }\n\n    if (code === 0x29 /* ) */) {\n      level--;\n      if (level < 0) { break; }\n    }\n\n    pos++;\n  }\n\n  if (start === pos) { return result; }\n\n  result.str = unescapeAll(str.slice(start, pos));\n  result.lines = lines;\n  result.pos = pos;\n  result.ok = true;\n  return result;\n};\n","(function() {\n  var L = require('./L').L,\n      N = require('./N').N,\n      Z = require('./Z').Z,\n      M = require('./M').M,\n      unorm = require('unorm');\n\n  var _unicodeCategory = function(code) {\n    if (~L.indexOf(code)) return 'L';\n    if (~N.indexOf(code)) return 'N';\n    if (~Z.indexOf(code)) return 'Z';\n    if (~M.indexOf(code)) return 'M';\n    return undefined;\n  };\n\n  module.exports = function(string, options) {\n    string = string || '';\n    options = options || {};\n    var allowedChars = options.allowedChars || '-_~';\n    var lower = typeof options.lower === 'boolean' ? options.lower : true;\n    var spaces = typeof options.spaces === 'boolean' ? options.spaces : false;\n    var rv = [];\n    var chars = unorm.nfkc(string);\n    for(var i = 0; i < chars.length; i++) {\n      var c = chars[i];\n      var code = c.charCodeAt(0);\n      // Allow Common CJK Unified Ideographs\n      // See: http://www.unicode.org/versions/Unicode6.0.0/ch12.pdf - Table 12-2 \n      if (0x4E00 <= code && code <= 0x9FFF) {\n        rv.push(c);\n        continue;\n      }\n\n      // Allow Hangul\n      if (0xAC00 <= code && code <= 0xD7A3) {\n        rv.push(c);\n        continue;\n      }\n\n      // Japanese ideographic punctuation\n      if ((0x3000 <= code && code <= 0x3002) || (0xFF01 <= code && code <= 0xFF02)) {\n        rv.push(' ');\n      }\n\n      if (allowedChars.indexOf(c) != -1) {\n        rv.push(c);\n        continue;\n      }\n      var val = _unicodeCategory(code);\n      if (val && ~'LNM'.indexOf(val)) rv.push(c);\n      if (val && ~'Z'.indexOf(val)) rv.push(' ');\n    }\n    var slug = rv.join('').replace(/^\\s+|\\s+$/g, '').replace(/\\s+/g,' ');\n    if (!spaces) slug = slug.replace(/[\\s\\-]+/g,'-');\n    if (lower) slug = slug.toLowerCase();\n    return slug;\n  };\n}());","export default \"# 密码学\\n\\n密码学是Ethereum的基础技术之一，可以说是一大堆数学公式的集合，广泛应用于计算机安全领域。在希腊语，密码学的意思是“秘密的写作”，指的是加密。当今密码学不仅仅是加密，它的含义广泛得多。人们能够在不解开密文的情况下，证明该密文是否由哪个人加密，这就是电子签名的应用；人们能够证明某个数据是否完好的，未被修改的，这就是电子指纹，又叫哈希的应用。这些用于证明的密码学工具，对Ethereum，或者说所有Blockchain平台的运作，是极为重要的。\\n\\n值得一提的是，目前Ethereum协议层没有任何一个地方使用了加密。节点之间的信息交流，包括交易信息，都是没有加密的，任何人都可以看到消息的内容。因此，每个人都可以验证状态的更新是否正确，从而达成共识。未来，更加高级的密码学工具将会被使用，像零知识加密，同态加密等工具，会允许人们将加密后的数据写入Blockchain，同时一样可以达成共识。\\n\\n# 钥匙与地址\\n\\nEthereum有两种类型的账户：外部拥有人账户(EOA)，Contract账户。EOA账户对ether的控制权，是通过电子私钥，Ethereum地址，电子签名确定的。私钥是与Ethereum交互的核心。实际上，账户地址由私钥直接派生，一个私钥决定了唯一的Ethereum地址，也就是我们通常所说的账户。\\n\\n钥不是直接在Ethereum系统中使用的，它们永远也不会在Ethereum中存储，传输。也就是说，私钥应该保持私密，不会在消息中传递，不会记录在Blockchain中。在网络中存储，传输的是账户地址和电子签名。\\n\\n使用和控制资金由电子签名完成，电子签名由私钥产生，添加到Blockchain的交易信息，都必须附加合法的电子签名。任何持有私钥的人，都可以控制对应账户的资金。基于公钥的加密系统，钥匙是成对的，分为私钥和公钥。公钥类似银行卡的账号数字，私钥类似登陆该账号的PIN码。整个账号是由后者控制的，前者用于唯一鉴定。Ethereum的用户绝大部分都没见过账户的私钥，私钥或是加密后存储在本地文件，或是由钱包软件秘密管理。\\n\\n# 公钥密码学与加密币\\n\\n公钥密码学，又称非对称密码学，是现代信息安全的一个核心组成。这个密钥交换协议，在19世纪70年代，由Martin Hellman, Whitfield Diffie, RalphMerkle首次发表，在当时引起巨大的震撼，掀起了第一次密码学研究热潮。此前，强大的密码学工具仅掌握在政府手中。\\n\\n公钥密码学使用很独特的钥匙确保信息安全，这些钥匙是根据有特殊属性的数学函数计算的，使用钥匙加密的过程很容易计算，根据密文计算明文的过程无比困难。密码学就是根据这些独特的函数，对需要保密的数据进行加密，产生密文和电子签名。\\n\\n举个例子，求两个大素数相乘的结果，很容易计算。如果给出两个大素数相乘的结果，找出对应的素数，那就难多了。8,018,009，是两个素数的乘积，你能找出对应的两个素因子吗？如果你知道其中一个素数，那么很容易知道另外一个。这里其中一个是2,003，另外一个就是8,018,009 / 2,003 = 4,003。\\n\\n密码学有一类更高级的数学函数是基于椭圆曲线上的算术运算的。在椭圆曲线算术中，素数的模n乘法容易计算，反过来基本不可能，这就是离散对数问题。椭圆曲线加密广泛应用于现代计算机系统，也是Ethereum私钥加密和电子签名的基础算法。\\n\\n电子签名可以对任意数据签名。对于Ethereum的交易而言，进行电子签名的是交易的所有细节数据。密码学的数学公式，这里用的就是椭圆曲线加密公式，以交易数据和私钥作为输入，输出一串数字，这串数字只能由该交易数据和私钥计算出来，它就叫做电子签名。Ethereum的交易必须附上电子签名。任何人都可以把电子签名和账户地址作为参数，输入椭圆曲线加密公式，验证交易是否合法。验证的过程不需要密钥参与，但可以判断是否是该密钥签名的数据，这就是公钥密码学的魅力所在。\\n\\n# 私钥                    \\n\\n私钥就是一串随机的数字。私钥的所有权和控制权，是使用账户资金，使用账户上Contract的最根本权限。私钥必须绝对保密，将私钥交给第三方，相当于把账户的资金和Contract的控制权都交给了别人。必须对私钥备份，防止意外的事故，导致私钥丢失，导致资金和Contract的控制权永远的失去。\\n\\n### 用随机数产生私钥\\n\\n创建私钥最重要的步骤是确定随机数源的是安全的。创建Ethereum的私钥，可以看作是从1到2^256的范围内选择一个数。具体使用什么函数并不重要，只要它的结果是不可预测的，不确定的。Ethereum软件使用底层操作系统的随机数产生器，创建256个随机的位。一般来说，系统随机数产生器，需要用户输入一串随机数进行初始化，因此会要求鼠标输入，键盘输入，甚至是声音输入。\\n\\n私钥的创建过程是完全线下执行的，不要在Ethereum网络中做任何的请求，与任何人没有关系。因此，为了确保你产生的私钥不会跟别人产生的一样，必须确保产生的过程是绝对随机的。如果你自己选择一串数字作为私钥，很可能被人也会使用这串数字作为私钥，那么他也可以访问你的账户了。使用效果不好的随机数产生器，结果更是悲剧，例如，许多编程语言都有rand函数，用于产生伪随机数，别人可以轻松地运用这个函数，重复私钥的创建过程。私钥必须不能被猜到，幸运的是，日常使用中并不需要记住这个私钥，所以尽可能确保随机吧。\\n\\n# 公钥\\n\\nEthereum公钥是椭圆曲线上的点，私钥和公钥相当于满足椭圆曲线数学关系的一组(x, y)。公钥实际上是两个数拼接在一起形成的，这两个数是椭圆曲线数学函数以私钥作为输入的输出值。具体的表达式：K = k * G，小写k是私钥，G是生成点常数，大写K是公钥，这里的*是椭圆曲线乘法，跟平常的两个整数相乘的乘法不是同一个东西。\\n\\n### 椭圆曲线密码学解释\\n\\n椭圆曲线密码学是非对称密码学，或者说公钥密码学的一种，基于椭圆曲线上的点相加和相乘的离散对数问题。如图：\\n![img](/book/curve.jpg)\\n\\n由于函数的取值不是全体实数，实际上是一个椭圆形状的散点图：\\n![img](/book/curve2.jpg)\\n\\n这个曲线的具体函数公式为：\\n![img](/book/formular.jpg)\\n\\n# 加密哈希函数\\n\\n加密哈希函数的应用贯穿于Ethereum，实际上，哈希函数广泛应用于几乎所有的密码系统中。密码学研究者Bruse Schneier曾经说过，单方向哈希函数在现代密码学做的工作最多，比加密算法多得多。\\n\\n简单来说，所有将任意大小的输入映射到固定大小的输出的函数，都叫哈希函数。哈希函数的输入叫做原象，消息，或者就叫输入数据，输出叫哈希值。加密哈希函数是其特殊的子类，由于其自身的特性，被用来保障平台的安全，例如Ethereum。\\n\\n密码学的哈希函数是单向的哈希函数，单向意味着，仅仅知道输出的哈希值，是不能计算出输入的。唯一找到输入的方法是暴力遍历所有可能的候选数据，判断候选数据的哈希值是否等于目标哈希值。如果候选的集合是近乎无限的，那么相当于说，几乎不可能找出真是的输入。即使你找到一个候选数据，输出的结果等于目标哈希值，也不能确定它就是真是的输入，因为哈希函数是多对一的函数。找到两个不同的输入，具有相同的哈希值，叫做找到哈希冲突，越优秀的哈希函数，\\n\\n加密哈希函数的主要特征如下：\\n\\n### 确定性\\n> 相同的输入，对应的哈希值是唯一的\\n\\n### 可验证\\n> 哈希函数非常高效，线形复杂度\\n\\n### 不相关\\n> 输入的微小变化，对应哈希值的差异是巨大的\\n\\n### 不可逆\\n> 几乎不可能根据哈希值计算出函数输入\\n\\n### 冲突保护\\n> 不可能有两个不同的输入产生相同的哈希值\\n\\n在Ethereum中，为了避免签名伪造，使用的哈希函数必须防止哈希冲突。由于拥有上述的特性，加密哈希函数广泛应用于安全领域的应用，如：\\n\\n* 数据指纹\\n* 消息完整性检测\\n* 工作量证明PoW\\n* 系统认证\\n* 伪随机数生成器\\n* 消息委托，提交-披露机制\\n* 唯一身份\\n\\n### Ethereum的加密哈希函数：Keccak-256\\n\\nEthereum在很多地方使用了加密哈希函数Keccak-256。Keccak-256是2007年度SHA-3加密哈希函数竞赛的胜出者，在2015年成为联邦信息处理标准之一。\\n\\n### Ethereum地址\\n\\nEthereum地址是账户的唯一标识，由公钥经过Keccak-256单向加密哈希函数计算出来。地址的产生过程如下：\\n\\n1. 随机产生私钥：k=f8f8a2f43c8376ccb0871305060d7b27b0554d2cc72bccf41b2705608452f315\\n2. 根据椭圆曲线公式得到公钥：K=6e145ccef1033dea239875dd00dfb4fee6e3348b84985c92f103444683bae07b83b5c38e5e...\\n3. 用Keccak-256求哈希值: Keccak256(K)=2a5bc342ed616b5ba5732269001d3f1ef827552ae1114027bd3ecf1f086ba0f9\\n4. 保留最后20位：001d3f1ef827552ae1114027bd3ecf1f086ba0f\\n5. 一般0x开头表明是16进制：0x001d3f1ef827552ae1114027bd3ecf1f086ba0f9\\n\";","/**\n * The Lexer class handles tokenizing the input in various ways. Since our\n * parser expects us to be able to backtrack, the lexer allows lexing from any\n * given starting point.\n *\n * Its main exposed function is the `lex` function, which takes a position to\n * lex from and a type of token to lex. It defers to the appropriate `_innerLex`\n * function.\n *\n * The various `_innerLex` functions perform the actual lexing of different\n * kinds.\n */\n\nvar matchAt = require(\"match-at\");\n\nvar ParseError = require(\"./ParseError\");\n\n// The main lexer class\nfunction Lexer(input) {\n    this._input = input;\n}\n\n// The resulting token returned from `lex`.\nfunction Token(text, data, position) {\n    this.text = text;\n    this.data = data;\n    this.position = position;\n}\n\n/* The following tokenRegex\n * - matches typical whitespace (but not NBSP etc.) using its first group\n * - matches symbol combinations which result in a single output character\n * - does not match any control character \\x00-\\x1f except whitespace\n * - does not match a bare backslash\n * - matches any ASCII character except those just mentioned\n * - does not match the BMP private use area \\uE000-\\uF8FF\n * - does not match bare surrogate code units\n * - matches any BMP character except for those just described\n * - matches any valid Unicode surrogate pair\n * - matches a backslash followed by one or more letters\n * - matches a backslash followed by any BMP character, including newline\n * Just because the Lexer matches something doesn't mean it's valid input:\n * If there is no matching function or symbol definition, the Parser will\n * still reject the input.\n */\nvar tokenRegex = new RegExp(\n    \"([ \\r\\n\\t]+)|(\" +                                // whitespace\n    \"---?\" +                                          // special combinations\n    \"|[!-\\\\[\\\\]-\\u2027\\u202A-\\uD7FF\\uF900-\\uFFFF]\" +  // single codepoint\n    \"|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]\" +               // surrogate pair\n    \"|\\\\\\\\(?:[a-zA-Z]+|[^\\uD800-\\uDFFF])\" +           // function name\n    \")\"\n);\n\nvar whitespaceRegex = /\\s*/;\n\n/**\n * This function lexes a single normal token. It takes a position and\n * whether it should completely ignore whitespace or not.\n */\nLexer.prototype._innerLex = function(pos, ignoreWhitespace) {\n    var input = this._input;\n    if (pos === input.length) {\n        return new Token(\"EOF\", null, pos);\n    }\n    var match = matchAt(tokenRegex, input, pos);\n    if (match === null) {\n        throw new ParseError(\n            \"Unexpected character: '\" + input[pos] + \"'\",\n            this, pos);\n    } else if (match[2]) { // matched non-whitespace\n        return new Token(match[2], null, pos + match[2].length);\n    } else if (ignoreWhitespace) {\n        return this._innerLex(pos + match[1].length, true);\n    } else { // concatenate whitespace to a single space\n        return new Token(\" \", null, pos + match[1].length);\n    }\n};\n\n// A regex to match a CSS color (like #ffffff or BlueViolet)\nvar cssColor = /#[a-z0-9]+|[a-z]+/i;\n\n/**\n * This function lexes a CSS color.\n */\nLexer.prototype._innerLexColor = function(pos) {\n    var input = this._input;\n\n    // Ignore whitespace\n    var whitespace = matchAt(whitespaceRegex, input, pos)[0];\n    pos += whitespace.length;\n\n    var match;\n    if ((match = matchAt(cssColor, input, pos))) {\n        // If we look like a color, return a color\n        return new Token(match[0], null, pos + match[0].length);\n    } else {\n        throw new ParseError(\"Invalid color\", this, pos);\n    }\n};\n\n// A regex to match a dimension. Dimensions look like\n// \"1.2em\" or \".4pt\" or \"1 ex\"\nvar sizeRegex = /(-?)\\s*(\\d+(?:\\.\\d*)?|\\.\\d+)\\s*([a-z]{2})/;\n\n/**\n * This function lexes a dimension.\n */\nLexer.prototype._innerLexSize = function(pos) {\n    var input = this._input;\n\n    // Ignore whitespace\n    var whitespace = matchAt(whitespaceRegex, input, pos)[0];\n    pos += whitespace.length;\n\n    var match;\n    if ((match = matchAt(sizeRegex, input, pos))) {\n        var unit = match[3];\n        // We only currently handle \"em\" and \"ex\" units\n        if (unit !== \"em\" && unit !== \"ex\") {\n            throw new ParseError(\"Invalid unit: '\" + unit + \"'\", this, pos);\n        }\n        return new Token(match[0], {\n            number: +(match[1] + match[2]),\n            unit: unit,\n        }, pos + match[0].length);\n    }\n\n    throw new ParseError(\"Invalid size\", this, pos);\n};\n\n/**\n * This function lexes a string of whitespace.\n */\nLexer.prototype._innerLexWhitespace = function(pos) {\n    var input = this._input;\n\n    var whitespace = matchAt(whitespaceRegex, input, pos)[0];\n    pos += whitespace.length;\n\n    return new Token(whitespace[0], null, pos);\n};\n\n/**\n * This function lexes a single token starting at `pos` and of the given mode.\n * Based on the mode, we defer to one of the `_innerLex` functions.\n */\nLexer.prototype.lex = function(pos, mode) {\n    if (mode === \"math\") {\n        return this._innerLex(pos, true);\n    } else if (mode === \"text\") {\n        return this._innerLex(pos, false);\n    } else if (mode === \"color\") {\n        return this._innerLexColor(pos);\n    } else if (mode === \"size\") {\n        return this._innerLexSize(pos);\n    } else if (mode === \"whitespace\") {\n        return this._innerLexWhitespace(pos);\n    }\n};\n\nmodule.exports = Lexer;\n","/**\n * This file converts a parse tree into a cooresponding MathML tree. The main\n * entry point is the `buildMathML` function, which takes a parse tree from the\n * parser.\n */\n\nvar buildCommon = require(\"./buildCommon\");\nvar fontMetrics = require(\"./fontMetrics\");\nvar mathMLTree = require(\"./mathMLTree\");\nvar ParseError = require(\"./ParseError\");\nvar symbols = require(\"./symbols\");\nvar utils = require(\"./utils\");\n\nvar makeSpan = buildCommon.makeSpan;\nvar fontMap = buildCommon.fontMap;\n\n/**\n * Takes a symbol and converts it into a MathML text node after performing\n * optional replacement from symbols.js.\n */\nvar makeText = function(text, mode) {\n    if (symbols[mode][text] && symbols[mode][text].replace) {\n        text = symbols[mode][text].replace;\n    }\n\n    return new mathMLTree.TextNode(text);\n};\n\n/**\n * Returns the math variant as a string or null if none is required.\n */\nvar getVariant = function(group, options) {\n    var font = options.font;\n    if (!font) {\n        return null;\n    }\n\n    var mode = group.mode;\n    if (font === \"mathit\") {\n        return \"italic\";\n    }\n\n    var value = group.value;\n    if (utils.contains([\"\\\\imath\", \"\\\\jmath\"], value)) {\n        return null;\n    }\n\n    if (symbols[mode][value] && symbols[mode][value].replace) {\n        value = symbols[mode][value].replace;\n    }\n\n    var fontName = fontMap[font].fontName;\n    if (fontMetrics.getCharacterMetrics(value, fontName)) {\n        return fontMap[options.font].variant;\n    }\n\n    return null;\n};\n\n/**\n * Functions for handling the different types of groups found in the parse\n * tree. Each function should take a parse group and return a MathML node.\n */\nvar groupTypes = {};\n\ngroupTypes.mathord = function(group, options) {\n    var node = new mathMLTree.MathNode(\n        \"mi\",\n        [makeText(group.value, group.mode)]);\n\n    var variant = getVariant(group, options);\n    if (variant) {\n        node.setAttribute(\"mathvariant\", variant);\n    }\n    return node;\n};\n\ngroupTypes.textord = function(group, options) {\n    var text = makeText(group.value, group.mode);\n\n    var variant = getVariant(group, options) || \"normal\";\n\n    var node;\n    if (/[0-9]/.test(group.value)) {\n        // TODO(kevinb) merge adjacent <mn> nodes\n        // do it as a post processing step\n        node = new mathMLTree.MathNode(\"mn\", [text]);\n        if (options.font) {\n            node.setAttribute(\"mathvariant\", variant);\n        }\n    } else {\n        node = new mathMLTree.MathNode(\"mi\", [text]);\n        node.setAttribute(\"mathvariant\", variant);\n    }\n\n    return node;\n};\n\ngroupTypes.bin = function(group) {\n    var node = new mathMLTree.MathNode(\n        \"mo\", [makeText(group.value, group.mode)]);\n\n    return node;\n};\n\ngroupTypes.rel = function(group) {\n    var node = new mathMLTree.MathNode(\n        \"mo\", [makeText(group.value, group.mode)]);\n\n    return node;\n};\n\ngroupTypes.open = function(group) {\n    var node = new mathMLTree.MathNode(\n        \"mo\", [makeText(group.value, group.mode)]);\n\n    return node;\n};\n\ngroupTypes.close = function(group) {\n    var node = new mathMLTree.MathNode(\n        \"mo\", [makeText(group.value, group.mode)]);\n\n    return node;\n};\n\ngroupTypes.inner = function(group) {\n    var node = new mathMLTree.MathNode(\n        \"mo\", [makeText(group.value, group.mode)]);\n\n    return node;\n};\n\ngroupTypes.punct = function(group) {\n    var node = new mathMLTree.MathNode(\n        \"mo\", [makeText(group.value, group.mode)]);\n\n    node.setAttribute(\"separator\", \"true\");\n\n    return node;\n};\n\ngroupTypes.ordgroup = function(group, options) {\n    var inner = buildExpression(group.value, options);\n\n    var node = new mathMLTree.MathNode(\"mrow\", inner);\n\n    return node;\n};\n\ngroupTypes.text = function(group, options) {\n    var inner = buildExpression(group.value.body, options);\n\n    var node = new mathMLTree.MathNode(\"mtext\", inner);\n\n    return node;\n};\n\ngroupTypes.color = function(group, options) {\n    var inner = buildExpression(group.value.value, options);\n\n    var node = new mathMLTree.MathNode(\"mstyle\", inner);\n\n    node.setAttribute(\"mathcolor\", group.value.color);\n\n    return node;\n};\n\ngroupTypes.supsub = function(group, options) {\n    var children = [buildGroup(group.value.base, options)];\n\n    if (group.value.sub) {\n        children.push(buildGroup(group.value.sub, options));\n    }\n\n    if (group.value.sup) {\n        children.push(buildGroup(group.value.sup, options));\n    }\n\n    var nodeType;\n    if (!group.value.sub) {\n        nodeType = \"msup\";\n    } else if (!group.value.sup) {\n        nodeType = \"msub\";\n    } else {\n        nodeType = \"msubsup\";\n    }\n\n    var node = new mathMLTree.MathNode(nodeType, children);\n\n    return node;\n};\n\ngroupTypes.genfrac = function(group, options) {\n    var node = new mathMLTree.MathNode(\n        \"mfrac\",\n        [buildGroup(group.value.numer, options),\n         buildGroup(group.value.denom, options)]);\n\n    if (!group.value.hasBarLine) {\n        node.setAttribute(\"linethickness\", \"0px\");\n    }\n\n    if (group.value.leftDelim != null || group.value.rightDelim != null) {\n        var withDelims = [];\n\n        if (group.value.leftDelim != null) {\n            var leftOp = new mathMLTree.MathNode(\n                \"mo\", [new mathMLTree.TextNode(group.value.leftDelim)]);\n\n            leftOp.setAttribute(\"fence\", \"true\");\n\n            withDelims.push(leftOp);\n        }\n\n        withDelims.push(node);\n\n        if (group.value.rightDelim != null) {\n            var rightOp = new mathMLTree.MathNode(\n                \"mo\", [new mathMLTree.TextNode(group.value.rightDelim)]);\n\n            rightOp.setAttribute(\"fence\", \"true\");\n\n            withDelims.push(rightOp);\n        }\n\n        var outerNode = new mathMLTree.MathNode(\"mrow\", withDelims);\n\n        return outerNode;\n    }\n\n    return node;\n};\n\ngroupTypes.array = function(group, options) {\n    return new mathMLTree.MathNode(\n        \"mtable\", group.value.body.map(function(row) {\n            return new mathMLTree.MathNode(\n                \"mtr\", row.map(function(cell) {\n                    return new mathMLTree.MathNode(\n                        \"mtd\", [buildGroup(cell, options)]);\n                }));\n        }));\n};\n\ngroupTypes.sqrt = function(group, options) {\n    var node;\n    if (group.value.index) {\n        node = new mathMLTree.MathNode(\n            \"mroot\", [\n                buildGroup(group.value.body, options),\n                buildGroup(group.value.index, options),\n            ]);\n    } else {\n        node = new mathMLTree.MathNode(\n            \"msqrt\", [buildGroup(group.value.body, options)]);\n    }\n\n    return node;\n};\n\ngroupTypes.leftright = function(group, options) {\n    var inner = buildExpression(group.value.body, options);\n\n    if (group.value.left !== \".\") {\n        var leftNode = new mathMLTree.MathNode(\n            \"mo\", [makeText(group.value.left, group.mode)]);\n\n        leftNode.setAttribute(\"fence\", \"true\");\n\n        inner.unshift(leftNode);\n    }\n\n    if (group.value.right !== \".\") {\n        var rightNode = new mathMLTree.MathNode(\n            \"mo\", [makeText(group.value.right, group.mode)]);\n\n        rightNode.setAttribute(\"fence\", \"true\");\n\n        inner.push(rightNode);\n    }\n\n    var outerNode = new mathMLTree.MathNode(\"mrow\", inner);\n\n    return outerNode;\n};\n\ngroupTypes.accent = function(group, options) {\n    var accentNode = new mathMLTree.MathNode(\n        \"mo\", [makeText(group.value.accent, group.mode)]);\n\n    var node = new mathMLTree.MathNode(\n        \"mover\",\n        [buildGroup(group.value.base, options),\n         accentNode]);\n\n    node.setAttribute(\"accent\", \"true\");\n\n    return node;\n};\n\ngroupTypes.spacing = function(group) {\n    var node;\n\n    if (group.value === \"\\\\ \" || group.value === \"\\\\space\" ||\n        group.value === \" \" || group.value === \"~\") {\n        node = new mathMLTree.MathNode(\n            \"mtext\", [new mathMLTree.TextNode(\"\\u00a0\")]);\n    } else {\n        node = new mathMLTree.MathNode(\"mspace\");\n\n        node.setAttribute(\n            \"width\", buildCommon.spacingFunctions[group.value].size);\n    }\n\n    return node;\n};\n\ngroupTypes.op = function(group) {\n    var node;\n\n    // TODO(emily): handle big operators using the `largeop` attribute\n\n    if (group.value.symbol) {\n        // This is a symbol. Just add the symbol.\n        node = new mathMLTree.MathNode(\n            \"mo\", [makeText(group.value.body, group.mode)]);\n    } else {\n        // This is a text operator. Add all of the characters from the\n        // operator's name.\n        // TODO(emily): Add a space in the middle of some of these\n        // operators, like \\limsup.\n        node = new mathMLTree.MathNode(\n            \"mi\", [new mathMLTree.TextNode(group.value.body.slice(1))]);\n    }\n\n    return node;\n};\n\ngroupTypes.katex = function(group) {\n    var node = new mathMLTree.MathNode(\n        \"mtext\", [new mathMLTree.TextNode(\"KaTeX\")]);\n\n    return node;\n};\n\ngroupTypes.font = function(group, options) {\n    var font = group.value.font;\n    return buildGroup(group.value.body, options.withFont(font));\n};\n\ngroupTypes.delimsizing = function(group) {\n    var children = [];\n\n    if (group.value.value !== \".\") {\n        children.push(makeText(group.value.value, group.mode));\n    }\n\n    var node = new mathMLTree.MathNode(\"mo\", children);\n\n    if (group.value.delimType === \"open\" ||\n        group.value.delimType === \"close\") {\n        // Only some of the delimsizing functions act as fences, and they\n        // return \"open\" or \"close\" delimTypes.\n        node.setAttribute(\"fence\", \"true\");\n    } else {\n        // Explicitly disable fencing if it's not a fence, to override the\n        // defaults.\n        node.setAttribute(\"fence\", \"false\");\n    }\n\n    return node;\n};\n\ngroupTypes.styling = function(group, options) {\n    var inner = buildExpression(group.value.value, options);\n\n    var node = new mathMLTree.MathNode(\"mstyle\", inner);\n\n    var styleAttributes = {\n        \"display\": [\"0\", \"true\"],\n        \"text\": [\"0\", \"false\"],\n        \"script\": [\"1\", \"false\"],\n        \"scriptscript\": [\"2\", \"false\"],\n    };\n\n    var attr = styleAttributes[group.value.style];\n\n    node.setAttribute(\"scriptlevel\", attr[0]);\n    node.setAttribute(\"displaystyle\", attr[1]);\n\n    return node;\n};\n\ngroupTypes.sizing = function(group, options) {\n    var inner = buildExpression(group.value.value, options);\n\n    var node = new mathMLTree.MathNode(\"mstyle\", inner);\n\n    // TODO(emily): This doesn't produce the correct size for nested size\n    // changes, because we don't keep state of what style we're currently\n    // in, so we can't reset the size to normal before changing it.  Now\n    // that we're passing an options parameter we should be able to fix\n    // this.\n    node.setAttribute(\n        \"mathsize\", buildCommon.sizingMultiplier[group.value.size] + \"em\");\n\n    return node;\n};\n\ngroupTypes.overline = function(group, options) {\n    var operator = new mathMLTree.MathNode(\n        \"mo\", [new mathMLTree.TextNode(\"\\u203e\")]);\n    operator.setAttribute(\"stretchy\", \"true\");\n\n    var node = new mathMLTree.MathNode(\n        \"mover\",\n        [buildGroup(group.value.body, options),\n         operator]);\n    node.setAttribute(\"accent\", \"true\");\n\n    return node;\n};\n\ngroupTypes.underline = function(group, options) {\n    var operator = new mathMLTree.MathNode(\n        \"mo\", [new mathMLTree.TextNode(\"\\u203e\")]);\n    operator.setAttribute(\"stretchy\", \"true\");\n\n    var node = new mathMLTree.MathNode(\n        \"munder\",\n        [buildGroup(group.value.body, options),\n         operator]);\n    node.setAttribute(\"accentunder\", \"true\");\n\n    return node;\n};\n\ngroupTypes.rule = function(group) {\n    // TODO(emily): Figure out if there's an actual way to draw black boxes\n    // in MathML.\n    var node = new mathMLTree.MathNode(\"mrow\");\n\n    return node;\n};\n\ngroupTypes.llap = function(group, options) {\n    var node = new mathMLTree.MathNode(\n        \"mpadded\", [buildGroup(group.value.body, options)]);\n\n    node.setAttribute(\"lspace\", \"-1width\");\n    node.setAttribute(\"width\", \"0px\");\n\n    return node;\n};\n\ngroupTypes.rlap = function(group, options) {\n    var node = new mathMLTree.MathNode(\n        \"mpadded\", [buildGroup(group.value.body, options)]);\n\n    node.setAttribute(\"width\", \"0px\");\n\n    return node;\n};\n\ngroupTypes.phantom = function(group, options, prev) {\n    var inner = buildExpression(group.value.value, options);\n    return new mathMLTree.MathNode(\"mphantom\", inner);\n};\n\n/**\n * Takes a list of nodes, builds them, and returns a list of the generated\n * MathML nodes. A little simpler than the HTML version because we don't do any\n * previous-node handling.\n */\nvar buildExpression = function(expression, options) {\n    var groups = [];\n    for (var i = 0; i < expression.length; i++) {\n        var group = expression[i];\n        groups.push(buildGroup(group, options));\n    }\n    return groups;\n};\n\n/**\n * Takes a group from the parser and calls the appropriate groupTypes function\n * on it to produce a MathML node.\n */\nvar buildGroup = function(group, options) {\n    if (!group) {\n        return new mathMLTree.MathNode(\"mrow\");\n    }\n\n    if (groupTypes[group.type]) {\n        // Call the groupTypes function\n        return groupTypes[group.type](group, options);\n    } else {\n        throw new ParseError(\n            \"Got group of unknown type: '\" + group.type + \"'\");\n    }\n};\n\n/**\n * Takes a full parse tree and settings and builds a MathML representation of\n * it. In particular, we put the elements from building the parse tree into a\n * <semantics> tag so we can also include that TeX source as an annotation.\n *\n * Note that we actually return a domTree element with a `<math>` inside it so\n * we can do appropriate styling.\n */\nvar buildMathML = function(tree, texExpression, options) {\n    var expression = buildExpression(tree, options);\n\n    // Wrap up the expression in an mrow so it is presented in the semantics\n    // tag correctly.\n    var wrapper = new mathMLTree.MathNode(\"mrow\", expression);\n\n    // Build a TeX annotation of the source\n    var annotation = new mathMLTree.MathNode(\n        \"annotation\", [new mathMLTree.TextNode(texExpression)]);\n\n    annotation.setAttribute(\"encoding\", \"application/x-tex\");\n\n    var semantics = new mathMLTree.MathNode(\n        \"semantics\", [wrapper, annotation]);\n\n    var math = new mathMLTree.MathNode(\"math\", [semantics]);\n\n    // You can't style <math> nodes, so we wrap the node in a span.\n    return makeSpan([\"katex-mathml\"], [math]);\n};\n\nmodule.exports = buildMathML;\n","// Process footnotes\n//\n'use strict';\n\n////////////////////////////////////////////////////////////////////////////////\n// Renderer partials\n\nfunction _footnote_ref(tokens, idx) {\n  var n = Number(tokens[idx].meta.id + 1).toString();\n  var id = 'fnref' + n;\n  if (tokens[idx].meta.subId > 0) {\n    id += ':' + tokens[idx].meta.subId;\n  }\n  return '<sup class=\"footnote-ref\"><a href=\"#fn' + n + '\" id=\"' + id + '\">[' + n + ']</a></sup>';\n}\nfunction _footnote_block_open(tokens, idx, options) {\n  return (options.xhtmlOut ? '<hr class=\"footnotes-sep\" />\\n' : '<hr class=\"footnotes-sep\">\\n') +\n         '<section class=\"footnotes\">\\n' +\n         '<ol class=\"footnotes-list\">\\n';\n}\nfunction _footnote_block_close() {\n  return '</ol>\\n</section>\\n';\n}\nfunction _footnote_open(tokens, idx) {\n  var id = Number(tokens[idx].meta.id + 1).toString();\n  return '<li id=\"fn' + id + '\"  class=\"footnote-item\">';\n}\nfunction _footnote_close() {\n  return '</li>\\n';\n}\nfunction _footnote_anchor(tokens, idx) {\n  var n = Number(tokens[idx].meta.id + 1).toString();\n  var id = 'fnref' + n;\n  if (tokens[idx].meta.subId > 0) {\n    id += ':' + tokens[idx].meta.subId;\n  }\n  return ' <a href=\"#' + id + '\" class=\"footnote-backref\">\\u21a9</a>'; /* ↩ */\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nmodule.exports = function sub_plugin(md) {\n  var parseLinkLabel = md.helpers.parseLinkLabel,\n      isSpace = md.utils.isSpace;\n\n  md.renderer.rules.footnote_ref          = _footnote_ref;\n  md.renderer.rules.footnote_block_open   = _footnote_block_open;\n  md.renderer.rules.footnote_block_close  = _footnote_block_close;\n  md.renderer.rules.footnote_open         = _footnote_open;\n  md.renderer.rules.footnote_close        = _footnote_close;\n  md.renderer.rules.footnote_anchor       = _footnote_anchor;\n\n  // Process footnote block definition\n  function footnote_def(state, startLine, endLine, silent) {\n    var oldBMark, oldTShift, oldSCount, oldParentType, pos, label, token,\n        initial, offset, ch, posAfterColon,\n        start = state.bMarks[startLine] + state.tShift[startLine],\n        max = state.eMarks[startLine];\n\n    // line should be at least 5 chars - \"[^x]:\"\n    if (start + 4 > max) { return false; }\n\n    if (state.src.charCodeAt(start) !== 0x5B/* [ */) { return false; }\n    if (state.src.charCodeAt(start + 1) !== 0x5E/* ^ */) { return false; }\n\n    for (pos = start + 2; pos < max; pos++) {\n      if (state.src.charCodeAt(pos) === 0x20) { return false; }\n      if (state.src.charCodeAt(pos) === 0x5D /* ] */) {\n        break;\n      }\n    }\n\n    if (pos === start + 2) { return false; } // no empty footnote labels\n    if (pos + 1 >= max || state.src.charCodeAt(++pos) !== 0x3A /* : */) { return false; }\n    if (silent) { return true; }\n    pos++;\n\n    if (!state.env.footnotes) { state.env.footnotes = {}; }\n    if (!state.env.footnotes.refs) { state.env.footnotes.refs = {}; }\n    label = state.src.slice(start + 2, pos - 2);\n    state.env.footnotes.refs[':' + label] = -1;\n\n    token       = new state.Token('footnote_reference_open', '', 1);\n    token.meta  = { label: label };\n    token.level = state.level++;\n    state.tokens.push(token);\n\n    oldBMark = state.bMarks[startLine];\n    oldTShift = state.tShift[startLine];\n    oldSCount = state.sCount[startLine];\n    oldParentType = state.parentType;\n\n    posAfterColon = pos;\n    initial = offset = state.sCount[startLine] + pos - (state.bMarks[startLine] + state.tShift[startLine]);\n\n    while (pos < max) {\n      ch = state.src.charCodeAt(pos);\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          offset += 4 - offset % 4;\n        } else {\n          offset++;\n        }\n      } else {\n        break;\n      }\n\n      pos++;\n    }\n\n    state.tShift[startLine] = pos - posAfterColon;\n    state.sCount[startLine] = offset - initial;\n\n    state.bMarks[startLine] = posAfterColon;\n    state.blkIndent += 4;\n    state.parentType = 'footnote';\n\n    if (state.sCount[startLine] < state.blkIndent) {\n      state.sCount[startLine] += state.blkIndent;\n    }\n\n    state.md.block.tokenize(state, startLine, endLine, true);\n\n    state.parentType = oldParentType;\n    state.blkIndent -= 4;\n    state.tShift[startLine] = oldTShift;\n    state.sCount[startLine] = oldSCount;\n    state.bMarks[startLine] = oldBMark;\n\n    token       = new state.Token('footnote_reference_close', '', -1);\n    token.level = --state.level;\n    state.tokens.push(token);\n\n    return true;\n  }\n\n  // Process inline footnotes (^[...])\n  function footnote_inline(state, silent) {\n    var labelStart,\n        labelEnd,\n        footnoteId,\n        token,\n        tokens,\n        max = state.posMax,\n        start = state.pos;\n\n    if (start + 2 >= max) { return false; }\n    if (state.src.charCodeAt(start) !== 0x5E/* ^ */) { return false; }\n    if (state.src.charCodeAt(start + 1) !== 0x5B/* [ */) { return false; }\n\n    labelStart = start + 2;\n    labelEnd = parseLinkLabel(state, start + 1);\n\n    // parser failed to find ']', so it's not a valid note\n    if (labelEnd < 0) { return false; }\n\n    // We found the end of the link, and know for a fact it's a valid link;\n    // so all that's left to do is to call tokenizer.\n    //\n    if (!silent) {\n      if (!state.env.footnotes) { state.env.footnotes = {}; }\n      if (!state.env.footnotes.list) { state.env.footnotes.list = []; }\n      footnoteId = state.env.footnotes.list.length;\n\n      state.md.inline.parse(\n        state.src.slice(labelStart, labelEnd),\n        state.md,\n        state.env,\n        tokens = []\n      );\n\n      token      = state.push('footnote_ref', '', 0);\n      token.meta = { id: footnoteId };\n\n      state.env.footnotes.list[footnoteId] = { tokens: tokens };\n    }\n\n    state.pos = labelEnd + 1;\n    state.posMax = max;\n    return true;\n  }\n\n  // Process footnote references ([^...])\n  function footnote_ref(state, silent) {\n    var label,\n        pos,\n        footnoteId,\n        footnoteSubId,\n        token,\n        max = state.posMax,\n        start = state.pos;\n\n    // should be at least 4 chars - \"[^x]\"\n    if (start + 3 > max) { return false; }\n\n    if (!state.env.footnotes || !state.env.footnotes.refs) { return false; }\n    if (state.src.charCodeAt(start) !== 0x5B/* [ */) { return false; }\n    if (state.src.charCodeAt(start + 1) !== 0x5E/* ^ */) { return false; }\n\n    for (pos = start + 2; pos < max; pos++) {\n      if (state.src.charCodeAt(pos) === 0x20) { return false; }\n      if (state.src.charCodeAt(pos) === 0x0A) { return false; }\n      if (state.src.charCodeAt(pos) === 0x5D /* ] */) {\n        break;\n      }\n    }\n\n    if (pos === start + 2) { return false; } // no empty footnote labels\n    if (pos >= max) { return false; }\n    pos++;\n\n    label = state.src.slice(start + 2, pos - 1);\n    if (typeof state.env.footnotes.refs[':' + label] === 'undefined') { return false; }\n\n    if (!silent) {\n      if (!state.env.footnotes.list) { state.env.footnotes.list = []; }\n\n      if (state.env.footnotes.refs[':' + label] < 0) {\n        footnoteId = state.env.footnotes.list.length;\n        state.env.footnotes.list[footnoteId] = { label: label, count: 0 };\n        state.env.footnotes.refs[':' + label] = footnoteId;\n      } else {\n        footnoteId = state.env.footnotes.refs[':' + label];\n      }\n\n      footnoteSubId = state.env.footnotes.list[footnoteId].count;\n      state.env.footnotes.list[footnoteId].count++;\n\n      token      = state.push('footnote_ref', '', 0);\n      token.meta = { id: footnoteId, subId: footnoteSubId };\n    }\n\n    state.pos = pos;\n    state.posMax = max;\n    return true;\n  }\n\n  // Glue footnote tokens to end of token stream\n  function footnote_tail(state) {\n    var i, l, j, t, lastParagraph, list, token, tokens, current, currentLabel,\n        insideRef = false,\n        refTokens = {};\n\n    if (!state.env.footnotes) { return; }\n\n    state.tokens = state.tokens.filter(function(tok) {\n      if (tok.type === 'footnote_reference_open') {\n        insideRef = true;\n        current = [];\n        currentLabel = tok.meta.label;\n        return false;\n      }\n      if (tok.type === 'footnote_reference_close') {\n        insideRef = false;\n        // prepend ':' to avoid conflict with Object.prototype members\n        refTokens[':' + currentLabel] = current;\n        return false;\n      }\n      if (insideRef) { current.push(tok); }\n      return !insideRef;\n    });\n\n    if (!state.env.footnotes.list) { return; }\n    list = state.env.footnotes.list;\n\n    token = new state.Token('footnote_block_open', '', 1);\n    state.tokens.push(token);\n\n    for (i = 0, l = list.length; i < l; i++) {\n      token      = new state.Token('footnote_open', '', 1);\n      token.meta = { id: i };\n      state.tokens.push(token);\n\n      if (list[i].tokens) {\n        tokens = [];\n\n        token          = new state.Token('paragraph_open', 'p', 1);\n        token.block    = true;\n        tokens.push(token);\n\n        token          = new state.Token('inline', '', 0);\n        token.children = list[i].tokens;\n        token.content  = '';\n        tokens.push(token);\n\n        token          = new state.Token('paragraph_close', 'p', -1);\n        token.block    = true;\n        tokens.push(token);\n\n      } else if (list[i].label) {\n        tokens = refTokens[':' + list[i].label];\n      }\n\n      state.tokens = state.tokens.concat(tokens);\n      if (state.tokens[state.tokens.length - 1].type === 'paragraph_close') {\n        lastParagraph = state.tokens.pop();\n      } else {\n        lastParagraph = null;\n      }\n\n      t = list[i].count > 0 ? list[i].count : 1;\n      for (j = 0; j < t; j++) {\n        token      = new state.Token('footnote_anchor', '', 0);\n        token.meta = { id: i, subId: j };\n        state.tokens.push(token);\n      }\n\n      if (lastParagraph) {\n        state.tokens.push(lastParagraph);\n      }\n\n      token = new state.Token('footnote_close', '', -1);\n      state.tokens.push(token);\n    }\n\n    token = new state.Token('footnote_block_close', '', -1);\n    state.tokens.push(token);\n  }\n\n  md.block.ruler.before('reference', 'footnote_def', footnote_def, { alt: [ 'paragraph', 'reference' ] });\n  md.inline.ruler.after('image', 'footnote_inline', footnote_inline);\n  md.inline.ruler.after('footnote_inline', 'footnote_ref', footnote_ref);\n  md.core.ruler.after('inline', 'footnote_tail', footnote_tail);\n};\n","// 19.1.2.14 Object.keys(O)\nvar toObject = require('./_to-object');\nvar $keys = require('./_object-keys');\n\nrequire('./_object-sap')('keys', function () {\n  return function keys(it) {\n    return $keys(toObject(it));\n  };\n});\n","// Block quotes\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function blockquote(state, startLine, endLine, silent) {\n  var nextLine, lastLineEmpty, oldTShift, oldSCount, oldBMarks, oldIndent, oldParentType, lines, initial, offset, ch,\n      terminatorRules, token,\n      i, l, terminate,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // check the block quote marker\n  if (state.src.charCodeAt(pos++) !== 0x3E/* > */) { return false; }\n\n  // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n  if (silent) { return true; }\n\n  // skip one optional space (but not tab, check cmark impl) after '>'\n  if (state.src.charCodeAt(pos) === 0x20) { pos++; }\n\n  oldIndent = state.blkIndent;\n  state.blkIndent = 0;\n\n  // skip spaces after \">\" and re-calculate offset\n  initial = offset = state.sCount[startLine] + pos - (state.bMarks[startLine] + state.tShift[startLine]);\n\n  oldBMarks = [ state.bMarks[startLine] ];\n  state.bMarks[startLine] = pos;\n\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (isSpace(ch)) {\n      if (ch === 0x09) {\n        offset += 4 - offset % 4;\n      } else {\n        offset++;\n      }\n    } else {\n      break;\n    }\n\n    pos++;\n  }\n\n  lastLineEmpty = pos >= max;\n\n  oldSCount = [ state.sCount[startLine] ];\n  state.sCount[startLine] = offset - initial;\n\n  oldTShift = [ state.tShift[startLine] ];\n  state.tShift[startLine] = pos - state.bMarks[startLine];\n\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n  for (nextLine = startLine + 1; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < oldIndent) { break; }\n\n    pos = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break;\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E/* > */) {\n      // This line is inside the blockquote.\n\n      // skip one optional space (but not tab, check cmark impl) after '>'\n      if (state.src.charCodeAt(pos) === 0x20) { pos++; }\n\n      // skip spaces after \">\" and re-calculate offset\n      initial = offset = state.sCount[nextLine] + pos - (state.bMarks[nextLine] + state.tShift[nextLine]);\n\n      oldBMarks.push(state.bMarks[nextLine]);\n      state.bMarks[nextLine] = pos;\n\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - offset % 4;\n          } else {\n            offset++;\n          }\n        } else {\n          break;\n        }\n\n        pos++;\n      }\n\n      lastLineEmpty = pos >= max;\n\n      oldSCount.push(state.sCount[nextLine]);\n      state.sCount[nextLine] = offset - initial;\n\n      oldTShift.push(state.tShift[nextLine]);\n      state.tShift[nextLine] = pos - state.bMarks[nextLine];\n      continue;\n    }\n\n    // Case 2: line is not inside the blockquote, and the last line was empty.\n    if (lastLineEmpty) { break; }\n\n    // Case 3: another tag found.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n\n    oldBMarks.push(state.bMarks[nextLine]);\n    oldTShift.push(state.tShift[nextLine]);\n    oldSCount.push(state.sCount[nextLine]);\n\n    // A negative indentation means that this is a paragraph continuation\n    //\n    state.sCount[nextLine] = -1;\n  }\n\n  oldParentType = state.parentType;\n  state.parentType = 'blockquote';\n\n  token        = state.push('blockquote_open', 'blockquote', 1);\n  token.markup = '>';\n  token.map    = lines = [ startLine, 0 ];\n\n  state.md.block.tokenize(state, startLine, nextLine);\n\n  token        = state.push('blockquote_close', 'blockquote', -1);\n  token.markup = '>';\n\n  state.parentType = oldParentType;\n  lines[1] = state.line;\n\n  // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n  for (i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i];\n    state.tShift[i + startLine] = oldTShift[i];\n    state.sCount[i + startLine] = oldSCount[i];\n  }\n  state.blkIndent = oldIndent;\n\n  return true;\n};\n","export default \"# 拜占庭将军问题\\n\\n故事发生在中世纪黑暗时代，一艘海盗船正遭受围攻。海盗船上有200个海盗，被6搜军舰围堵，每艘军舰有50名士兵，由一位将军指挥。如果300名士兵同时攻击海盗，赢得战争轻而易举，否则，会被海盗逐一击破。\\n\\n![img](/book/ships.jpg)\\n\\n问题是，6位将军如何达成一致，作出决定呢？如果是今天，大家开个视频会议，决定晚上10点发起总攻，打完收工，还有时间吃顿宵夜。但在中世纪，情况有点复杂：\\n\\n- 晚上10点攻击这个消息，只能派遣一位水手，找遍6位将军，一一确认，达成一致。\\n- 其中，有的将军可能是叛徒，暗地里与海盗勾结。\\n\\n# 失败的策略\\n- 将军1决定晚上10点攻击，他派遣水手，将消息亲自传递给将军2\\n- 将军2读取了信息，同意晚上10点攻击，同时让水手继续把消息传递给将军3\\n- 将军3是叛徒，他看到消息后，把攻击时间修改为晚上9点，让水手继续把消息传递给将军4\\n- 将军4，5，6得到的消息是晚上9点攻击\\n- 晚上9点，将军4，5，6发起攻击，150士兵不敌200水手，攻击失败\\n- 晚上10点，将军1，2发起攻击，将军3叛变，加入海盗，结果海盗完胜\\n\\n# 胜利的策略\\n将军1准备晚上10点发起攻击，他开始传递消息给其它将军，这一次，必须遵守以下两条规则：\\n- 将军的消息由特殊的机关保护，必须花10分钟才能将信息准备好\\n- 将军的消息，必须挂在其它将军的后面，一起发送，使得作出决定的将军的信息都能被后面的将军看到\\n\\n在这种情况下，将军1花10分钟准备晚上10点攻击的消息，传递给将军2。将军2收到消息之后，能够确认两点:\\n- 需要花10分钟来创建我的消息\\n- 由于将军1的消息是第一条数据，它一定是真的。（即使不是真的，也不会影响战斗结果）\\n\\n现在，将军2花了10分钟准备自己的消息，然后挂在将军1的消息下面，形成一条链条。水手把这一串消息传递给将军3\\n\\n将军3是一个叛徒，上一次，他直接修改了信息，导致军队攻击失败，损失惨重。如今，在新的规则下，他有两种做法：\\n\\n- 其一，花10分钟准备晚上9点攻击的假信息，然后，再各自花10分钟来篡改将军1和将军2的消息。这样，整条消息链全部改为了晚上9点攻击，但是将军花了30分钟来准备，其它将军不会认可这条消息的，也知道了他叛徒的身份。\\n- 其二，将军3挂上晚上10点攻击的消息。因为其它将军能够看到所有将军的消息，他不可能挂上不一致的数据。\\n\\n换句话说，每个将军只有10分钟的时间，而准备自己的消息决定也至少10分钟，将军没有更多的时间去作假。任何超过10分钟的准备，都不会得到联盟的认可。\\n\";","export default \"# 从0开始搭建Fabric网络:Orderer\\n##  创建网络\\nFabric网络的重中之重是orderer节点。交易是如何在Fabric网络处理的呢？假设客户要买一杯咖啡，首先，在peer节点创建交易信息，随后发送给orderer节点，orderer把多个交易打包成区块，再把区块发送给peer节点，写入ledger中。\\n为此，小明决定先创建只有一个orderer节点的网络，并且打了一份配置草稿：\\n- 网络名称: `coffeeshop.com`\\n- orderer名称: `orderer.coffeesop.com`\\n- orderer类型： EtcdRaft\\n- orderer数量：1\\n\\n## 现在进入正式编码环节\\n第一、Fabric中，所有的资源都必须认证，我们首先创建orderer的证书文件：\\n1. 创建文件夹： 01-creating-the-network\\n2. 进入文件夹，创建文件：crypto-config.yaml，添加以下内容：\\n   ```\\n   OrdererOrgs:\\n    - Name: Orderer\\n      Domain: coffeeshop.com\\n      EnableNodeOUs: true\\n      Specs:\\n        - Hostname: orderer\\n          SANS:\\n            - localhost\\n   ```\\n3. 执行创建证书的指令:\\n   ```\\n   ./network.sh crypto\\n   ```\\n   证书文件存放在organizations目录下\\n\\n第二、定义网络的组织形式，创建文件configtx.yaml，这里大部分内容是默认配置，有几点需要解释:\\n1. Orderer的配置，指定类型etcdraft，配置tls证书的路径：\\n    ```\\n    Orderer: &OrdererDefaults\\n        OrdererType: etcdraft\\n\\n        EtcdRaft:\\n            Consenters:\\n            - Host: orderer.coffeeshop.com\\n              Port: 7050\\n              ClientTLSCert: ./organizations/ordererOrganizations/coffeeshop.com/orderers/orderer.coffeeshop.com/tls/server.crt\\n              ServerTLSCert: ./organizations/ordererOrganizations/coffeeshop.com/orderers/orderer.coffeeshop.com/tls/server.crt\\n        Addresses:\\n            - orderer.coffeeshop.com:7050\\n        ......\\n    ```\\n2. 全局通道的配置：\\n    ```\\n    Profiles:\\n        Genesis:\\n            <<: *ChannelDefaults\\n            Orderer:\\n                <<: *OrdererDefaults\\n                Organizations:\\n                    - *Orderer\\n                Capabilities:\\n                    <<: *OrdererCapabilities\\n            Consortiums:\\n                SampleConsortium:\\n                    Organizations:\\n    ```\\n3. Fabric的创世块就是依据此文件产生的。执行创建创世块的指令: \\n   ```\\n   ./network.sh genesis\\n   ```\\n   创世块存放路径为: ./system-genesis-block/genesis.block \\n\\n第三、编写orderer的容器文件: docker-compose.yml:\\n```\\nversion: '2'\\n\\nnetworks:\\n  basic:\\n\\nservices:\\n  orderer.coffeeshop.com:\\n    container_name: orderer.coffeeshop.com\\n    image: hyperledger/fabric-orderer:$IMAGE_TAG\\n    environment:\\n      - FABRIC_LOGGING_SPEC=info\\n      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0\\n      - ORDERER_GENERAL_BOOTSTRAPMETHOD=file\\n      - ORDERER_GENERAL_BOOTSTRAPFILE=/etc/hyperledger/configtx/genesis.block\\n      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP\\n      - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/msp/orderer/msp\\n        # enabled TLS\\n      - ORDERER_GENERAL_TLS_ENABLED=true\\n      - ORDERER_GENERAL_TLS_PRIVATEKEY=/etc/hyperledger/orderer/tls/server.key\\n      - ORDERER_GENERAL_TLS_CERTIFICATE=/etc/hyperledger/orderer/tls/server.crt\\n      - ORDERER_GENERAL_TLS_ROOTCAS=[/etc/hyperledger/orderer/tls/ca.crt]\\n      - ORDERER_KAFKA_TOPIC_REPLICATIONFACTOR=1\\n      - ORDERER_KAFKA_VERBOSE=true\\n      - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/etc/hyperledger/orderer/tls/server.crt\\n      - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/etc/hyperledger/orderer/tls/server.key\\n      - ORDERER_GENERAL_CLUSTER_ROOTCAS=[/etc/hyperledger/orderer/tls/ca.crt]\\n    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer\\n    command: orderer\\n    ports:\\n      - 7050:7050\\n    volumes:\\n        - ./system-genesis-block/:/etc/hyperledger/configtx\\n        - ./organizations/ordererOrganizations/coffeeshop.com/orderers/orderer.coffeeshop.com/:/etc/hyperledger/msp/orderer\\n        - ./organizations/ordererOrganizations/coffeeshop.com/orderers/orderer.coffeeshop.com/msp:/etc/hyperledger/orderer/msp\\n        - ./organizations/ordererOrganizations/coffeeshop.com/orderers/orderer.coffeeshop.com/tls/:/etc/hyperledger/orderer/tls\\n\\n    networks:\\n      - basic\\n```\\n执行启动网络的指令:\\n```\\n./network.sh up\\n```\\n此时orderer节点已经启动，执行 docker ps 可以看到orderer的运行状态：\\n```\\nCONTAINER ID        IMAGE                              COMMAND             CREATED             STATUS              PORTS                    NAMES\\ndf23933ad957        hyperledger/fabric-orderer:2.2.0   \\\"orderer\\\"           4 seconds ago       Up 2 seconds        0.0.0.0:7050->7050/tcp   orderer.coffeeshop.com\\n```\\n咖啡馆网络的启动工作就大功告成了\\n\\n## 网络示意图\\n![orderer](/book/fabric/coffee01.png)\\n\\n## 命令讲解\\n./networks.sh每一个命令相对应一个操作：\\n- 创建证书: ./network.sh crypto\\n- 创建创世块: ./network.sh genesis\\n- 启动网络: ./network.sh up\\n- 关闭网络： ./network.sh down\\n- 清理目录：./network.sh clear\\n- 启动网络一步到位： ./network.sh custom\\n\\n注：\\n- 这一节的所有文件存放在[01-creating-the-network](https://github.com/stephenwu2020/hfcoffeeshop/tree/master/01-creating-the-network)目录\";","/**\n * This file deals with creating delimiters of various sizes. The TeXbook\n * discusses these routines on page 441-442, in the \"Another subroutine sets box\n * x to a specified variable delimiter\" paragraph.\n *\n * There are three main routines here. `makeSmallDelim` makes a delimiter in the\n * normal font, but in either text, script, or scriptscript style.\n * `makeLargeDelim` makes a delimiter in textstyle, but in one of the Size1,\n * Size2, Size3, or Size4 fonts. `makeStackedDelim` makes a delimiter out of\n * smaller pieces that are stacked on top of one another.\n *\n * The functions take a parameter `center`, which determines if the delimiter\n * should be centered around the axis.\n *\n * Then, there are three exposed functions. `sizedDelim` makes a delimiter in\n * one of the given sizes. This is used for things like `\\bigl`.\n * `customSizedDelim` makes a delimiter with a given total height+depth. It is\n * called in places like `\\sqrt`. `leftRightDelim` makes an appropriate\n * delimiter which surrounds an expression of a given height an depth. It is\n * used in `\\left` and `\\right`.\n */\n\nvar ParseError = require(\"./ParseError\");\nvar Style = require(\"./Style\");\n\nvar buildCommon = require(\"./buildCommon\");\nvar fontMetrics = require(\"./fontMetrics\");\nvar symbols = require(\"./symbols\");\nvar utils = require(\"./utils\");\n\nvar makeSpan = buildCommon.makeSpan;\n\n/**\n * Get the metrics for a given symbol and font, after transformation (i.e.\n * after following replacement from symbols.js)\n */\nvar getMetrics = function(symbol, font) {\n    if (symbols.math[symbol] && symbols.math[symbol].replace) {\n        return fontMetrics.getCharacterMetrics(\n            symbols.math[symbol].replace, font);\n    } else {\n        return fontMetrics.getCharacterMetrics(\n            symbol, font);\n    }\n};\n\n/**\n * Builds a symbol in the given font size (note size is an integer)\n */\nvar mathrmSize = function(value, size, mode) {\n    return buildCommon.makeSymbol(value, \"Size\" + size + \"-Regular\", mode);\n};\n\n/**\n * Puts a delimiter span in a given style, and adds appropriate height, depth,\n * and maxFontSizes.\n */\nvar styleWrap = function(delim, toStyle, options) {\n    var span = makeSpan(\n        [\"style-wrap\", options.style.reset(), toStyle.cls()], [delim]);\n\n    var multiplier = toStyle.sizeMultiplier / options.style.sizeMultiplier;\n\n    span.height *= multiplier;\n    span.depth *= multiplier;\n    span.maxFontSize = toStyle.sizeMultiplier;\n\n    return span;\n};\n\n/**\n * Makes a small delimiter. This is a delimiter that comes in the Main-Regular\n * font, but is restyled to either be in textstyle, scriptstyle, or\n * scriptscriptstyle.\n */\nvar makeSmallDelim = function(delim, style, center, options, mode) {\n    var text = buildCommon.makeSymbol(delim, \"Main-Regular\", mode);\n\n    var span = styleWrap(text, style, options);\n\n    if (center) {\n        var shift =\n            (1 - options.style.sizeMultiplier / style.sizeMultiplier) *\n            fontMetrics.metrics.axisHeight;\n\n        span.style.top = shift + \"em\";\n        span.height -= shift;\n        span.depth += shift;\n    }\n\n    return span;\n};\n\n/**\n * Makes a large delimiter. This is a delimiter that comes in the Size1, Size2,\n * Size3, or Size4 fonts. It is always rendered in textstyle.\n */\nvar makeLargeDelim = function(delim, size, center, options, mode) {\n    var inner = mathrmSize(delim, size, mode);\n\n    var span = styleWrap(\n        makeSpan([\"delimsizing\", \"size\" + size],\n                 [inner], options.getColor()),\n        Style.TEXT, options);\n\n    if (center) {\n        var shift = (1 - options.style.sizeMultiplier) *\n            fontMetrics.metrics.axisHeight;\n\n        span.style.top = shift + \"em\";\n        span.height -= shift;\n        span.depth += shift;\n    }\n\n    return span;\n};\n\n/**\n * Make an inner span with the given offset and in the given font. This is used\n * in `makeStackedDelim` to make the stacking pieces for the delimiter.\n */\nvar makeInner = function(symbol, font, mode) {\n    var sizeClass;\n    // Apply the correct CSS class to choose the right font.\n    if (font === \"Size1-Regular\") {\n        sizeClass = \"delim-size1\";\n    } else if (font === \"Size4-Regular\") {\n        sizeClass = \"delim-size4\";\n    }\n\n    var inner = makeSpan(\n        [\"delimsizinginner\", sizeClass],\n        [makeSpan([], [buildCommon.makeSymbol(symbol, font, mode)])]);\n\n    // Since this will be passed into `makeVList` in the end, wrap the element\n    // in the appropriate tag that VList uses.\n    return {type: \"elem\", elem: inner};\n};\n\n/**\n * Make a stacked delimiter out of a given delimiter, with the total height at\n * least `heightTotal`. This routine is mentioned on page 442 of the TeXbook.\n */\nvar makeStackedDelim = function(delim, heightTotal, center, options, mode) {\n    // There are four parts, the top, an optional middle, a repeated part, and a\n    // bottom.\n    var top;\n    var middle;\n    var repeat;\n    var bottom;\n    top = repeat = bottom = delim;\n    middle = null;\n    // Also keep track of what font the delimiters are in\n    var font = \"Size1-Regular\";\n\n    // We set the parts and font based on the symbol. Note that we use\n    // '\\u23d0' instead of '|' and '\\u2016' instead of '\\\\|' for the\n    // repeats of the arrows\n    if (delim === \"\\\\uparrow\") {\n        repeat = bottom = \"\\u23d0\";\n    } else if (delim === \"\\\\Uparrow\") {\n        repeat = bottom = \"\\u2016\";\n    } else if (delim === \"\\\\downarrow\") {\n        top = repeat = \"\\u23d0\";\n    } else if (delim === \"\\\\Downarrow\") {\n        top = repeat = \"\\u2016\";\n    } else if (delim === \"\\\\updownarrow\") {\n        top = \"\\\\uparrow\";\n        repeat = \"\\u23d0\";\n        bottom = \"\\\\downarrow\";\n    } else if (delim === \"\\\\Updownarrow\") {\n        top = \"\\\\Uparrow\";\n        repeat = \"\\u2016\";\n        bottom = \"\\\\Downarrow\";\n    } else if (delim === \"[\" || delim === \"\\\\lbrack\") {\n        top = \"\\u23a1\";\n        repeat = \"\\u23a2\";\n        bottom = \"\\u23a3\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"]\" || delim === \"\\\\rbrack\") {\n        top = \"\\u23a4\";\n        repeat = \"\\u23a5\";\n        bottom = \"\\u23a6\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\lfloor\") {\n        repeat = top = \"\\u23a2\";\n        bottom = \"\\u23a3\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\lceil\") {\n        top = \"\\u23a1\";\n        repeat = bottom = \"\\u23a2\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\rfloor\") {\n        repeat = top = \"\\u23a5\";\n        bottom = \"\\u23a6\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\rceil\") {\n        top = \"\\u23a4\";\n        repeat = bottom = \"\\u23a5\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"(\") {\n        top = \"\\u239b\";\n        repeat = \"\\u239c\";\n        bottom = \"\\u239d\";\n        font = \"Size4-Regular\";\n    } else if (delim === \")\") {\n        top = \"\\u239e\";\n        repeat = \"\\u239f\";\n        bottom = \"\\u23a0\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\{\" || delim === \"\\\\lbrace\") {\n        top = \"\\u23a7\";\n        middle = \"\\u23a8\";\n        bottom = \"\\u23a9\";\n        repeat = \"\\u23aa\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\}\" || delim === \"\\\\rbrace\") {\n        top = \"\\u23ab\";\n        middle = \"\\u23ac\";\n        bottom = \"\\u23ad\";\n        repeat = \"\\u23aa\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\lgroup\") {\n        top = \"\\u23a7\";\n        bottom = \"\\u23a9\";\n        repeat = \"\\u23aa\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\rgroup\") {\n        top = \"\\u23ab\";\n        bottom = \"\\u23ad\";\n        repeat = \"\\u23aa\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\lmoustache\") {\n        top = \"\\u23a7\";\n        bottom = \"\\u23ad\";\n        repeat = \"\\u23aa\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\rmoustache\") {\n        top = \"\\u23ab\";\n        bottom = \"\\u23a9\";\n        repeat = \"\\u23aa\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\surd\") {\n        top = \"\\ue001\";\n        bottom = \"\\u23b7\";\n        repeat = \"\\ue000\";\n        font = \"Size4-Regular\";\n    }\n\n    // Get the metrics of the four sections\n    var topMetrics = getMetrics(top, font);\n    var topHeightTotal = topMetrics.height + topMetrics.depth;\n    var repeatMetrics = getMetrics(repeat, font);\n    var repeatHeightTotal = repeatMetrics.height + repeatMetrics.depth;\n    var bottomMetrics = getMetrics(bottom, font);\n    var bottomHeightTotal = bottomMetrics.height + bottomMetrics.depth;\n    var middleHeightTotal = 0;\n    var middleFactor = 1;\n    if (middle !== null) {\n        var middleMetrics = getMetrics(middle, font);\n        middleHeightTotal = middleMetrics.height + middleMetrics.depth;\n        middleFactor = 2; // repeat symmetrically above and below middle\n    }\n\n    // Calcuate the minimal height that the delimiter can have.\n    // It is at least the size of the top, bottom, and optional middle combined.\n    var minHeight = topHeightTotal + bottomHeightTotal + middleHeightTotal;\n\n    // Compute the number of copies of the repeat symbol we will need\n    var repeatCount = Math.ceil(\n        (heightTotal - minHeight) / (middleFactor * repeatHeightTotal));\n\n    // Compute the total height of the delimiter including all the symbols\n    var realHeightTotal =\n        minHeight + repeatCount * middleFactor * repeatHeightTotal;\n\n    // The center of the delimiter is placed at the center of the axis. Note\n    // that in this context, \"center\" means that the delimiter should be\n    // centered around the axis in the current style, while normally it is\n    // centered around the axis in textstyle.\n    var axisHeight = fontMetrics.metrics.axisHeight;\n    if (center) {\n        axisHeight *= options.style.sizeMultiplier;\n    }\n    // Calculate the depth\n    var depth = realHeightTotal / 2 - axisHeight;\n\n    // Now, we start building the pieces that will go into the vlist\n\n    // Keep a list of the inner pieces\n    var inners = [];\n\n    // Add the bottom symbol\n    inners.push(makeInner(bottom, font, mode));\n\n    var i;\n    if (middle === null) {\n        // Add that many symbols\n        for (i = 0; i < repeatCount; i++) {\n            inners.push(makeInner(repeat, font, mode));\n        }\n    } else {\n        // When there is a middle bit, we need the middle part and two repeated\n        // sections\n        for (i = 0; i < repeatCount; i++) {\n            inners.push(makeInner(repeat, font, mode));\n        }\n        inners.push(makeInner(middle, font, mode));\n        for (i = 0; i < repeatCount; i++) {\n            inners.push(makeInner(repeat, font, mode));\n        }\n    }\n\n    // Add the top symbol\n    inners.push(makeInner(top, font, mode));\n\n    // Finally, build the vlist\n    var inner = buildCommon.makeVList(inners, \"bottom\", depth, options);\n\n    return styleWrap(\n        makeSpan([\"delimsizing\", \"mult\"], [inner], options.getColor()),\n        Style.TEXT, options);\n};\n\n// There are three kinds of delimiters, delimiters that stack when they become\n// too large\nvar stackLargeDelimiters = [\n    \"(\", \")\", \"[\", \"\\\\lbrack\", \"]\", \"\\\\rbrack\",\n    \"\\\\{\", \"\\\\lbrace\", \"\\\\}\", \"\\\\rbrace\",\n    \"\\\\lfloor\", \"\\\\rfloor\", \"\\\\lceil\", \"\\\\rceil\",\n    \"\\\\surd\",\n];\n\n// delimiters that always stack\nvar stackAlwaysDelimiters = [\n    \"\\\\uparrow\", \"\\\\downarrow\", \"\\\\updownarrow\",\n    \"\\\\Uparrow\", \"\\\\Downarrow\", \"\\\\Updownarrow\",\n    \"|\", \"\\\\|\", \"\\\\vert\", \"\\\\Vert\",\n    \"\\\\lvert\", \"\\\\rvert\", \"\\\\lVert\", \"\\\\rVert\",\n    \"\\\\lgroup\", \"\\\\rgroup\", \"\\\\lmoustache\", \"\\\\rmoustache\",\n];\n\n// and delimiters that never stack\nvar stackNeverDelimiters = [\n    \"<\", \">\", \"\\\\langle\", \"\\\\rangle\", \"/\", \"\\\\backslash\", \"\\\\lt\", \"\\\\gt\",\n];\n\n// Metrics of the different sizes. Found by looking at TeX's output of\n// $\\bigl| // \\Bigl| \\biggl| \\Biggl| \\showlists$\n// Used to create stacked delimiters of appropriate sizes in makeSizedDelim.\nvar sizeToMaxHeight = [0, 1.2, 1.8, 2.4, 3.0];\n\n/**\n * Used to create a delimiter of a specific size, where `size` is 1, 2, 3, or 4.\n */\nvar makeSizedDelim = function(delim, size, options, mode) {\n    // < and > turn into \\langle and \\rangle in delimiters\n    if (delim === \"<\" || delim === \"\\\\lt\") {\n        delim = \"\\\\langle\";\n    } else if (delim === \">\" || delim === \"\\\\gt\") {\n        delim = \"\\\\rangle\";\n    }\n\n    // Sized delimiters are never centered.\n    if (utils.contains(stackLargeDelimiters, delim) ||\n        utils.contains(stackNeverDelimiters, delim)) {\n        return makeLargeDelim(delim, size, false, options, mode);\n    } else if (utils.contains(stackAlwaysDelimiters, delim)) {\n        return makeStackedDelim(\n            delim, sizeToMaxHeight[size], false, options, mode);\n    } else {\n        throw new ParseError(\"Illegal delimiter: '\" + delim + \"'\");\n    }\n};\n\n/**\n * There are three different sequences of delimiter sizes that the delimiters\n * follow depending on the kind of delimiter. This is used when creating custom\n * sized delimiters to decide whether to create a small, large, or stacked\n * delimiter.\n *\n * In real TeX, these sequences aren't explicitly defined, but are instead\n * defined inside the font metrics. Since there are only three sequences that\n * are possible for the delimiters that TeX defines, it is easier to just encode\n * them explicitly here.\n */\n\n// Delimiters that never stack try small delimiters and large delimiters only\nvar stackNeverDelimiterSequence = [\n    {type: \"small\", style: Style.SCRIPTSCRIPT},\n    {type: \"small\", style: Style.SCRIPT},\n    {type: \"small\", style: Style.TEXT},\n    {type: \"large\", size: 1},\n    {type: \"large\", size: 2},\n    {type: \"large\", size: 3},\n    {type: \"large\", size: 4},\n];\n\n// Delimiters that always stack try the small delimiters first, then stack\nvar stackAlwaysDelimiterSequence = [\n    {type: \"small\", style: Style.SCRIPTSCRIPT},\n    {type: \"small\", style: Style.SCRIPT},\n    {type: \"small\", style: Style.TEXT},\n    {type: \"stack\"},\n];\n\n// Delimiters that stack when large try the small and then large delimiters, and\n// stack afterwards\nvar stackLargeDelimiterSequence = [\n    {type: \"small\", style: Style.SCRIPTSCRIPT},\n    {type: \"small\", style: Style.SCRIPT},\n    {type: \"small\", style: Style.TEXT},\n    {type: \"large\", size: 1},\n    {type: \"large\", size: 2},\n    {type: \"large\", size: 3},\n    {type: \"large\", size: 4},\n    {type: \"stack\"},\n];\n\n/**\n * Get the font used in a delimiter based on what kind of delimiter it is.\n */\nvar delimTypeToFont = function(type) {\n    if (type.type === \"small\") {\n        return \"Main-Regular\";\n    } else if (type.type === \"large\") {\n        return \"Size\" + type.size + \"-Regular\";\n    } else if (type.type === \"stack\") {\n        return \"Size4-Regular\";\n    }\n};\n\n/**\n * Traverse a sequence of types of delimiters to decide what kind of delimiter\n * should be used to create a delimiter of the given height+depth.\n */\nvar traverseSequence = function(delim, height, sequence, options) {\n    // Here, we choose the index we should start at in the sequences. In smaller\n    // sizes (which correspond to larger numbers in style.size) we start earlier\n    // in the sequence. Thus, scriptscript starts at index 3-3=0, script starts\n    // at index 3-2=1, text starts at 3-1=2, and display starts at min(2,3-0)=2\n    var start = Math.min(2, 3 - options.style.size);\n    for (var i = start; i < sequence.length; i++) {\n        if (sequence[i].type === \"stack\") {\n            // This is always the last delimiter, so we just break the loop now.\n            break;\n        }\n\n        var metrics = getMetrics(delim, delimTypeToFont(sequence[i]));\n        var heightDepth = metrics.height + metrics.depth;\n\n        // Small delimiters are scaled down versions of the same font, so we\n        // account for the style change size.\n\n        if (sequence[i].type === \"small\") {\n            heightDepth *= sequence[i].style.sizeMultiplier;\n        }\n\n        // Check if the delimiter at this size works for the given height.\n        if (heightDepth > height) {\n            return sequence[i];\n        }\n    }\n\n    // If we reached the end of the sequence, return the last sequence element.\n    return sequence[sequence.length - 1];\n};\n\n/**\n * Make a delimiter of a given height+depth, with optional centering. Here, we\n * traverse the sequences, and create a delimiter that the sequence tells us to.\n */\nvar makeCustomSizedDelim = function(delim, height, center, options, mode) {\n    if (delim === \"<\" || delim === \"\\\\lt\") {\n        delim = \"\\\\langle\";\n    } else if (delim === \">\" || delim === \"\\\\gt\") {\n        delim = \"\\\\rangle\";\n    }\n\n    // Decide what sequence to use\n    var sequence;\n    if (utils.contains(stackNeverDelimiters, delim)) {\n        sequence = stackNeverDelimiterSequence;\n    } else if (utils.contains(stackLargeDelimiters, delim)) {\n        sequence = stackLargeDelimiterSequence;\n    } else {\n        sequence = stackAlwaysDelimiterSequence;\n    }\n\n    // Look through the sequence\n    var delimType = traverseSequence(delim, height, sequence, options);\n\n    // Depending on the sequence element we decided on, call the appropriate\n    // function.\n    if (delimType.type === \"small\") {\n        return makeSmallDelim(delim, delimType.style, center, options, mode);\n    } else if (delimType.type === \"large\") {\n        return makeLargeDelim(delim, delimType.size, center, options, mode);\n    } else if (delimType.type === \"stack\") {\n        return makeStackedDelim(delim, height, center, options, mode);\n    }\n};\n\n/**\n * Make a delimiter for use with `\\left` and `\\right`, given a height and depth\n * of an expression that the delimiters surround.\n */\nvar makeLeftRightDelim = function(delim, height, depth, options, mode) {\n    // We always center \\left/\\right delimiters, so the axis is always shifted\n    var axisHeight =\n        fontMetrics.metrics.axisHeight * options.style.sizeMultiplier;\n\n    // Taken from TeX source, tex.web, function make_left_right\n    var delimiterFactor = 901;\n    var delimiterExtend = 5.0 / fontMetrics.metrics.ptPerEm;\n\n    var maxDistFromAxis = Math.max(\n        height - axisHeight, depth + axisHeight);\n\n    var totalHeight = Math.max(\n        // In real TeX, calculations are done using integral values which are\n        // 65536 per pt, or 655360 per em. So, the division here truncates in\n        // TeX but doesn't here, producing different results. If we wanted to\n        // exactly match TeX's calculation, we could do\n        //   Math.floor(655360 * maxDistFromAxis / 500) *\n        //    delimiterFactor / 655360\n        // (To see the difference, compare\n        //    x^{x^{\\left(\\rule{0.1em}{0.68em}\\right)}}\n        // in TeX and KaTeX)\n        maxDistFromAxis / 500 * delimiterFactor,\n        2 * maxDistFromAxis - delimiterExtend);\n\n    // Finally, we defer to `makeCustomSizedDelim` with our calculated total\n    // height\n    return makeCustomSizedDelim(delim, totalHeight, true, options, mode);\n};\n\nmodule.exports = {\n    sizedDelim: makeSizedDelim,\n    customSizedDelim: makeCustomSizedDelim,\n    leftRightDelim: makeLeftRightDelim,\n};\n","export default \"# 有用的Smart Contract\\n\\nSmart contract 和 dapps 都是 blockchain 的新兴技术，没有人能保证100%的没问题。换句话说，很多用例都有相当大的发展潜力。\\n\\n目前得到最广泛认证的，是私人 token 和公众销售。数百万的 token 被开发和售卖，公众销售一般是指 token 的销售，以及首次货币供应，ICO。\\n\\n托管功能的 smart contract 在没有相互信任的参与者之间传输 token，变得越来越流行。卖家把 token 的控制权交给 smart contract，买家转账给 smart contract，smart contract 就把 token 转交个买家，最后卖家可以在 smart contract 取回资金。\\n\\n除了 token，其他电子资产也可以通过 smart contract 进行交易。许多公司开发应用，使得股票，房产，黄金，美元都可以在 Ethereum 上做交易。\\n\";","/**\n * Provides a single function for parsing an expression using a Parser\n * TODO(emily): Remove this\n */\n\nvar Parser = require(\"./Parser\");\n\n/**\n * Parses an expression using a Parser, then returns the parsed result.\n */\nvar parseTree = function(toParse, settings) {\n    var parser = new Parser(toParse, settings);\n\n    return parser.parse();\n};\n\nmodule.exports = parseTree;\n","export default \"# Fabric保险网络\\n这款应用搭建在Hyperledger Fabric之上，模拟了客户、商家、保险公司、警察机关之间的密切协作。客户购买商品及其保险，若是商品损坏、丢失，可向保险公司申请赔偿。在物品丢失的情况下，客户需要首先向警察机关报失登记，警察机关确认后，保险公司根据保单规则赔偿。\\n\\n## 网络部署\\n1. 拉取仓库[fabric-insurance](https://github.com/stephenwu2020/fabric-insurance)\\n2. 首先，进入fixtures文件夹\\n   ```\\n   cd fixtures\\n   ```\\n3. 拉取工具、镜像\\n   ```\\n   make dep\\n   ```\\n    拉取的文件位于fixtures下的bin和config，拉取的镜像通过docker images命令查看\\n4. 新建网络\\n   ```\\n   make new\\n   ```\\n5. 查看网络状态:\\n    ```\\n    docker ps\\n    ```\\n\\n## 启动服务\\n1. 进入server文件夹\\n   ```\\n   cd server\\n   ```\\n2. 启动web服务\\n   ```\\n   go run .\\n   ```\\n3. 浏览器访问web应用:localhost:8000\\n\\n## 关闭\\n1. ctrl + c 终止web服务\\n2. 在fixtures目录下，执行 make destroy销毁网络\\n\\n## 功能简介\\n在Shop界面，选择喜爱的商品，点击购买\\n\\n![s1](/book/insurance/s1.png)\\n\\n填写购买的信息\\n\\n![s2](/book/insurance/s2.png)\\n\\n购买成功后，自动跳转至保险合同界面\\n\\n![s3](/book/insurance/s3.png)\\n\\n点击Claim，申请保单理赔\\n\\n![s4](/book/insurance/s4.png)\\n\\n填写理赔信息之后，界面跳转到保单管理界面\\n\\n![s5](/book/insurance/s5.png)\\n\\n保险公司可以选择:\\n1. Repair 交付修理厂修理\\n2. Reimburse 赔偿\\n3. Reject 拒绝\\n   \\n假设保险公司选择赔偿，点击Reimburse，理赔终结.\\n\";","export default \"# CAP定理\\n\\nCAP定理又称CAP原则，指的是在一个分布式系统中，Consistency（一致性）、 Availability（可用性）、Partition tolerance（分区容错性），最多只能同时拥有三个特性中的两个，三者不可兼得。\\n\\n# 何为CAP\\n### Consistency (一致性)\\n“all nodes see the same data at the same time”,即更新操作成功并返回客户端后，所有节点在同一时间的数据完全一致，这就是分布式的一致性。一致性的问题在并发系统中不可避免，对于客户端来说，一致性指的是并发访问时更新过的数据如何获取的问题。从服务端来看，则是更新如何复制分布到整个系统，以保证数据最终一致。\\n\\n### Availability (可用性)\\n可用性指“Reads and writes always succeed”，即服务一直可用，而且是正常响应时间。好的可用性主要是指系统能够很好的为用户服务，不出现用户操作失败或者访问超时等用户体验不好的情况。\\n\\n### Partition Tolerance (分区容错性)\\n即分布式系统在遇到某节点或网络分区故障的时候，仍然能够对外提供满足一致性和可用性的服务。分区容错性要求能够使应用虽然是一个分布式系统，而看上去却好像是在一个可以运转正常的整体。比如现在的分布式系统中有某一个或者几个机器宕掉了，其他剩下的机器还能够正常运转满足系统需求，对于用户而言并没有什么体验上的影响。\\n\\n# CAP简要说明\\n现在有一个简单的分布式系统，由两个节点：NodeA和NodeB组成。用户ClientA连接NodeA，更新了数据，NodeA将数据同步给NodeB。另外一个用户ClientB连接NodeB，读取数据，此时数据是最新的。假设NodeA挂了，停止服务，那么ClientB会连接到NodeB，整个系统依然正常工作。系统满足Partition Tolerance (P).\\n\\n现在假设ClientA更细的NodeA，NodeA准备将数据同步给NodeB，发现与NodeB连接不上了，同步失败。此时，ClientB连接了NodeB，正好读取ClientA已经修改的数据。如果NodeB返回数据，那么这个数据不是最新的，这种情况下，系统满足了Availability (A)，但是不满足Consistency (C)。如果NodeB此刻拒绝服务，知道NodeA的同步完成后，再返回ClientB数据，这种情况下，系统满足了Consistency (C)，但是不满足Availability (A)。\\n\\n因此，一个分布式系统是不能同时满足C,A,P的。\\n\\n# CAP取舍\\n因为CAP不能同时满足，由此产生了三种策略：CA, CP和AP\\n\\n- 满足CA, 放弃分区容错性 (P)，系统由单一节点组成，那就不是分布式了，这种系统的脆弱的，难以扩展的。\\n- 满足CP, 放弃可用性 (A)，系统在节点同步的时候无法使用，降低了某些时段的用户体验。\\n- 满足AP, 放弃一致性 (C), 系统在某些时段内，部分用户的访问数据是过期的。\\n\\n当今绝大多数大型应用都是分布式的，不同的应用场景采取不同的分布式策略。\\n\";","var hiddenKeys = require('../internals/hidden-keys');\nvar isObject = require('../internals/is-object');\nvar has = require('../internals/has');\nvar defineProperty = require('../internals/object-define-property').f;\nvar uid = require('../internals/uid');\nvar FREEZING = require('../internals/freezing');\n\nvar METADATA = uid('meta');\nvar id = 0;\n\nvar isExtensible = Object.isExtensible || function () {\n  return true;\n};\n\nvar setMetadata = function (it) {\n  defineProperty(it, METADATA, { value: {\n    objectID: 'O' + ++id, // object ID\n    weakData: {}          // weak collections IDs\n  } });\n};\n\nvar fastKey = function (it, create) {\n  // return a primitive with prefix\n  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if (!has(it, METADATA)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return 'F';\n    // not necessary to add metadata\n    if (!create) return 'E';\n    // add missing metadata\n    setMetadata(it);\n  // return object ID\n  } return it[METADATA].objectID;\n};\n\nvar getWeakData = function (it, create) {\n  if (!has(it, METADATA)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return true;\n    // not necessary to add metadata\n    if (!create) return false;\n    // add missing metadata\n    setMetadata(it);\n  // return the store of weak collections IDs\n  } return it[METADATA].weakData;\n};\n\n// add metadata on freeze-family methods calling\nvar onFreeze = function (it) {\n  if (FREEZING && meta.REQUIRED && isExtensible(it) && !has(it, METADATA)) setMetadata(it);\n  return it;\n};\n\nvar meta = module.exports = {\n  REQUIRED: false,\n  fastKey: fastKey,\n  getWeakData: getWeakData,\n  onFreeze: onFreeze\n};\n\nhiddenKeys[METADATA] = true;\n","export default \"# Blockchain结构\\n\\nBlockchain，从技术的角度来看，是一棵巨大的Merkle Tree。每一个Block包含了许多Transaction (Tx)，所有的Tx形成一个小的Mercle Tree，同时每一个Block都包含前一个Block的Merkle Root。整体上，就是不同的小Mercle Tree拼接在一起，形成巨大的Mercle Tree。如图：\\n\\n![img](/book/block-merkle-tree.png)\\n\\n如果Block里面的某个Tx被修改了，那么Tx的Hash会改变，同时Merkle Root也会改变；如果Block里面Tx的排列顺序修改了，Merkle Root也会改变。因此，凭借Merkle Tree的信息，能够证明某个Tx是否在Block里面，是以什么样的顺序排列的。而且这个证明所需要的信息量不大，仅仅需要所有Tx的Hash，而不是Tx的所有信息。\\n\\n# Bitcoin与Ethereum的区别\\n在Bitcoin里，对交易信息Hash，形成Merkle Tree。比如，A给B转了10个比特币，这个交易Hash后得到T1，它与T2, T3, T4...形成Merkle Tree。而在Ethereum里，首先，数据具有普遍性，可以代表任意的东西；其次，Tx通常是让某个程序执行某段代码，从而改变了数据的状态，这些状态形成了Merkle Tree。例如，苹果是红色的，然后在下一个Tx里，执行了一段代码，使得苹果的状态变成绿色。简单对它们进行区分，如图：\\n\\n![img](/book/bitcoin-ethereum-diff.png)\\n\\n# Bitcoin Block的数据结构\\nBitcoin Block的大致结构如下：\\n\\n![img](/book/block-inner.png)\\n\\nMagic No 是Bitcoin Blockchain的网络ID，Block Size记录该Block的大小，Block Header有很多重要的东西：\\n\\n![img](/book/block-header.png)\\n\\nHeader包含了上一个Block的Merkle Root和当前Block所有Tx形成的Merkle Root。Bits决定了挖矿的难度，用于控制新的Block诞生所需要的时间。Nonce是一个自增值，它在挖矿过程中使用。\\n\";","export default \"小明的咖啡馆生意红火，目前为止共有5家分店，分别由小明、小红、小朋、小龙、小虎打理。处理咖啡订单的是一个分布式系统，有5个节点同时运行，使用Raft共识机制。\\n\\n让我们来看看如何使用Raft共识搭建一个分布式系统。\\n\\n(源码位于[fabric-cases](https://github.com/stephenwu2020/fabric-cases)下的coffee-raft目录)\\n\\n首先，为咖啡馆设计数据结构：\\n```\\ntype CoffeeNode struct {\\n\\tID       string\\n\\tBind     string\\n\\tDir      string\\n\\tRaftNode *raft.Raft\\n\\tFSM      *CoffeeFSM\\n}\\n```\\n- ID唯一标识咖啡馆\\n- Bind是端口\\n- Dir是数据存储位置\\n- RaftNode是实现Raft的节点\\n- FSM处理用户数据\\n\\n\\n5家分店，5个咖啡馆结构:\\n```\\nfunc NewCoffeeCluster() *CoffeeCluster {\\n\\tnodes := []*CoffeeNode{\\n\\t\\t{ID: \\\"ming\\\", Bind: \\\":11000\\\", Dir: \\\"./nodes/ming\\\"},\\n\\t\\t{ID: \\\"hong\\\", Bind: \\\":11001\\\", Dir: \\\"./nodes/hong\\\"},\\n\\t\\t{ID: \\\"peng\\\", Bind: \\\":11002\\\", Dir: \\\"./nodes/peng\\\"},\\n\\t\\t{ID: \\\"long\\\", Bind: \\\":11003\\\", Dir: \\\"./nodes/long\\\"},\\n\\t\\t{ID: \\\"hu\\\", Bind: \\\":11004\\\", Dir: \\\"./nodes/hu\\\"},\\n\\t}\\n\\treturn &CoffeeCluster{\\n\\t\\tRootDir:     \\\"./nodes\\\",\\n\\t\\tCoffeeNodes: nodes,\\n\\t}\\n\\n}\\n```\\n\\n程序启动，默认小明的咖啡馆是唯一分店，其raft节点是唯一节点，同时也是系统的Leader:\\n```\\nfunc main() {\\n\\tcluster := NewCoffeeCluster()\\n\\n\\t// Clean all files\\n\\tos.RemoveAll(cluster.RootDir)\\n\\ttime.Sleep(1 * time.Second)\\n\\n\\t// Start Ming's raft node, and boostrap cluser\\n\\t_, err := cluster.CreateRaftNode(cluster.CoffeeNodes[0], true)\\n\\tif err != nil {\\n\\t\\tlog.Fatal(err)\\n\\t}\\n\\n\\t// Need some time to vote a leader\\n\\ttime.Sleep(5 * time.Second)\\n\\n\\t// Interact with user\\n\\tReadInput(cluster)\\n\\n\\tterminate := make(chan os.Signal, 1)\\n\\tsignal.Notify(terminate, os.Interrupt)\\n\\t<-terminate\\n\\tlog.Println(\\\"Exit.\\\")\\n}\\n```\\n运行程序:\\n```\\n$ go run .\\n2020-08-31T03:19:44.774+0800 [INFO]  raft: initial configuration: index=0 servers=[]\\n2020-08-31T03:19:44.774+0800 [INFO]  raft: entering follower state: follower=\\\"Node at :11000 [Follower]\\\" leader=\\n2020-08-31T03:19:46.731+0800 [WARN]  raft: heartbeat timeout reached, starting election: last-leader=\\n2020-08-31T03:19:46.731+0800 [INFO]  raft: entering candidate state: node=\\\"Node at :11000 [Candidate]\\\" term=2\\n2020-08-31T03:19:46.747+0800 [INFO]  raft: election won: tally=1\\n2020-08-31T03:19:46.747+0800 [INFO]  raft: entering leader state: leader=\\\"Node at :11000 [Leader]\\\"\\n\\n* What's your request?\\n  - list: list all raft nodes\\n  - boot: bootstrap a new raft nodes\\n  - transfer: leader ship transfer, vote for new candidate\\n  - set:  set random value\\n  - get:  get value\\n  - down: bring down leader node\\n  - quit: quit\\n\\nInput: \\n```\\n从日志中看出，raft节点启动，端口号11000的节点当选为Leader。\\n输入list指令:\\n```\\nInput: list\\nOutput:\\n   Node at :11000 [Leader]\\n```\\n当前只有一个raft节点\\n\\n输入boot指令，启动小红的raft节点:\\n```\\nInput: boot\\n2020-08-31T03:41:24.596+0800 [INFO]  raft: initial configuration: index=0 servers=[]\\n2020-08-31T03:41:24.596+0800 [INFO]  raft: updating configuration: command=AddStaging server-id=hong server-addr=:11001 servers=\\\"[{Suffrage:Voter ID:ming Address::11000} {Suffrage:Voter ID:hong Address::11001}]\\\"\\n2020-08-31T03:41:24.596+0800 [INFO]  raft: entering follower state: follower=\\\"Node at :11001 [Follower]\\\" leader=\\n2020-08-31T03:41:24.603+0800 [INFO]  raft: added peer, starting replication: peer=hong\\n2020-08-31T03:41:24.611+0800 [WARN]  raft: failed to get previous log: previous-index=3 last-index=0 error=\\\"log not found\\\"\\n2020-08-31T03:41:24.611+0800 [WARN]  raft: appendEntries rejected, sending older logs: peer=\\\"{Voter hong :11001}\\\" next=1\\n2020-08-31T03:41:24.617+0800 [INFO]  raft: pipelining replication: peer=\\\"{Voter hong :11001}\\\"\\nOutput:\\n  Boot success\\n```\\n再次输入list查看节点信息:\\n```\\nInput: list\\nOutput:\\n   Node at :11000 [Leader]\\n   Node at :11001 [Follower]\\n```\\n此刻网络中有一个Leader，一个Follower。现在假设Leader节点宕机，输入down:\\n```\\nInput: down\\n2020-08-31T03:44:38.250+0800 [INFO]  raft: updating configuration: command=RemoveServer server-id=ming server-addr= servers=\\\"[{Suffrage:Voter ID:hong Address::11001}]\\\"\\n2020-08-31T03:44:38.263+0800 [INFO]  raft: removed ourself, shutting down\\n2020-08-31T03:44:38.263+0800 [INFO]  raft: aborting pipeline replication: peer=\\\"{Voter hong :11001}\\\"\\n2020-08-31T03:44:40.963+0800 [WARN]  raft: heartbeat timeout reached, starting election: last-leader=:11000\\n2020-08-31T03:44:40.963+0800 [INFO]  raft: entering candidate state: node=\\\"Node at :11001 [Candidate]\\\" term=3\\n2020-08-31T03:44:40.987+0800 [INFO]  raft: election won: tally=1\\n2020-08-31T03:44:40.987+0800 [INFO]  raft: entering leader state: leader=\\\"Node at :11001 [Leader]\\\"\\nOutput:\\n  Bring down leader success\\n```\\n从日志看出，新的Leader是11001端口的节点，输入list查看:\\n```\\nInput: list\\nOutput:\\n   Node at :11000 [Shutdown]\\n   Node at :11001 [Leader]\\n```\\n11000由Leader变为Shutdown, 11001由Follower变为Leader。\\n\\n现在输入set指令，设置一个随机数:\\n```\\nInput: set\\nOutput:\\n  Set value success\\n```\\n输入get，读取刚才设置的值:\\n```\\nInput: get\\nOutput:\\n  Value is: 71\\n```\\n客户端的请求，都由Leader处理:\\n```\\nfunc (cf *CoffeeCluster) Set() error {\\n\\tcm := &command{\\n\\t\\tOp:    \\\"set\\\",\\n\\t\\tKey:   key,\\n\\t\\tValue: strconv.Itoa(rand.Intn(100)),\\n\\t}\\n\\tbytes, err := json.Marshal(cm)\\n\\tif err != nil {\\n\\t\\treturn err\\n\\t}\\n\\tleader := cf.GetLeader()\\n\\tif leader == nil {\\n\\t\\treturn errors.New(\\\"Leader not found\\\")\\n\\t}\\n\\tf := leader.RaftNode.Apply(bytes, 10*time.Second)\\n\\treturn f.Error()\\n}\\n```\\n\\n这就是Raft共识的运行机制。总结有以下几点:\\n\\n1. raft节点启动，推选出Leader\\n2. 客户端的请求，全部由Leader处理，同时由Leader广播给Follower\\n3. Leader意外宕机，Follower收不到Leader的心跳，则进入Candidate候选人状态，通知其他节点给自己投票\\n4. 获得一定数量票的候选人成为Leader，接管工作，系统正常运作\";","'use strict';\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Helpers\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\nfunction isString(obj) { return _class(obj) === '[object String]'; }\nfunction isObject(obj) { return _class(obj) === '[object Object]'; }\nfunction isRegExp(obj) { return _class(obj) === '[object RegExp]'; }\nfunction isFunction(obj) { return _class(obj) === '[object Function]'; }\n\n\nfunction escapeRE(str) { return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&'); }\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar defaultOptions = {\n  fuzzyLink: true,\n  fuzzyEmail: true,\n  fuzzyIP: false\n};\n\n\nfunction isOptionsObj(obj) {\n  return Object.keys(obj || {}).reduce(function (acc, k) {\n    return acc || defaultOptions.hasOwnProperty(k);\n  }, false);\n}\n\n\nvar defaultSchemas = {\n  'http:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.http =  new RegExp(\n          '^\\\\/\\\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i'\n        );\n      }\n      if (self.re.http.test(tail)) {\n        return tail.match(self.re.http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'https:':  'http:',\n  'ftp:':    'http:',\n  '//':      {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.no_http) {\n      // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.no_http =  new RegExp(\n          '^' +\n          self.re.src_auth +\n          // Don't allow single-level domains, because of false positives like '//test'\n          // with code comments\n          '(?:localhost|(?:(?:' + self.re.src_domain + ')\\\\.)+' + self.re.src_domain_root + ')' +\n          self.re.src_port +\n          self.re.src_host_terminator +\n          self.re.src_path,\n\n          'i'\n        );\n      }\n\n      if (self.re.no_http.test(tail)) {\n        // should not be `://` & `///`, that protects from errors in protocol name\n        if (pos >= 3 && text[pos - 3] === ':') { return 0; }\n        if (pos >= 3 && text[pos - 3] === '/') { return 0; }\n        return tail.match(self.re.no_http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'mailto:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.mailto) {\n        self.re.mailto =  new RegExp(\n          '^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i'\n        );\n      }\n      if (self.re.mailto.test(tail)) {\n        return tail.match(self.re.mailto)[0].length;\n      }\n      return 0;\n    }\n  }\n};\n\n/*eslint-disable max-len*/\n\n// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)\nvar tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]';\n\n// DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead\nvar tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф'.split('|');\n\n/*eslint-enable max-len*/\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction resetScanCache(self) {\n  self.__index__ = -1;\n  self.__text_cache__   = '';\n}\n\nfunction createValidator(re) {\n  return function (text, pos) {\n    var tail = text.slice(pos);\n\n    if (re.test(tail)) {\n      return tail.match(re)[0].length;\n    }\n    return 0;\n  };\n}\n\nfunction createNormalizer() {\n  return function (match, self) {\n    self.normalize(match);\n  };\n}\n\n// Schemas compiler. Build regexps.\n//\nfunction compile(self) {\n\n  // Load & clone RE patterns.\n  var re = self.re = assign({}, require('./lib/re'));\n\n  // Define dynamic patterns\n  var tlds = self.__tlds__.slice();\n\n  if (!self.__tlds_replaced__) {\n    tlds.push(tlds_2ch_src_re);\n  }\n  tlds.push(re.src_xn);\n\n  re.src_tlds = tlds.join('|');\n\n  function untpl(tpl) { return tpl.replace('%TLDS%', re.src_tlds); }\n\n  re.email_fuzzy      = RegExp(untpl(re.tpl_email_fuzzy), 'i');\n  re.link_fuzzy       = RegExp(untpl(re.tpl_link_fuzzy), 'i');\n  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i');\n  re.host_fuzzy_test  = RegExp(untpl(re.tpl_host_fuzzy_test), 'i');\n\n  //\n  // Compile each schema\n  //\n\n  var aliases = [];\n\n  self.__compiled__ = {}; // Reset compiled data\n\n  function schemaError(name, val) {\n    throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val);\n  }\n\n  Object.keys(self.__schemas__).forEach(function (name) {\n    var val = self.__schemas__[name];\n\n    // skip disabled methods\n    if (val === null) { return; }\n\n    var compiled = { validate: null, link: null };\n\n    self.__compiled__[name] = compiled;\n\n    if (isObject(val)) {\n      if (isRegExp(val.validate)) {\n        compiled.validate = createValidator(val.validate);\n      } else if (isFunction(val.validate)) {\n        compiled.validate = val.validate;\n      } else {\n        schemaError(name, val);\n      }\n\n      if (isFunction(val.normalize)) {\n        compiled.normalize = val.normalize;\n      } else if (!val.normalize) {\n        compiled.normalize = createNormalizer();\n      } else {\n        schemaError(name, val);\n      }\n\n      return;\n    }\n\n    if (isString(val)) {\n      aliases.push(name);\n      return;\n    }\n\n    schemaError(name, val);\n  });\n\n  //\n  // Compile postponed aliases\n  //\n\n  aliases.forEach(function (alias) {\n    if (!self.__compiled__[self.__schemas__[alias]]) {\n      // Silently fail on missed schemas to avoid errons on disable.\n      // schemaError(alias, self.__schemas__[alias]);\n      return;\n    }\n\n    self.__compiled__[alias].validate =\n      self.__compiled__[self.__schemas__[alias]].validate;\n    self.__compiled__[alias].normalize =\n      self.__compiled__[self.__schemas__[alias]].normalize;\n  });\n\n  //\n  // Fake record for guessed links\n  //\n  self.__compiled__[''] = { validate: null, normalize: createNormalizer() };\n\n  //\n  // Build schema condition\n  //\n  var slist = Object.keys(self.__compiled__)\n                      .filter(function (name) {\n                        // Filter disabled & fake schemas\n                        return name.length > 0 && self.__compiled__[name];\n                      })\n                      .map(escapeRE)\n                      .join('|');\n  // (?!_) cause 1.5x slowdown\n  self.re.schema_test   = RegExp('(^|(?!_)(?:[><]|' + re.src_ZPCc + '))(' + slist + ')', 'i');\n  self.re.schema_search = RegExp('(^|(?!_)(?:[><]|' + re.src_ZPCc + '))(' + slist + ')', 'ig');\n\n  self.re.pretest       = RegExp(\n                            '(' + self.re.schema_test.source + ')|' +\n                            '(' + self.re.host_fuzzy_test.source + ')|' +\n                            '@',\n                            'i');\n\n  //\n  // Cleanup\n  //\n\n  resetScanCache(self);\n}\n\n/**\n * class Match\n *\n * Match result. Single element of array, returned by [[LinkifyIt#match]]\n **/\nfunction Match(self, shift) {\n  var start = self.__index__,\n      end   = self.__last_index__,\n      text  = self.__text_cache__.slice(start, end);\n\n  /**\n   * Match#schema -> String\n   *\n   * Prefix (protocol) for matched string.\n   **/\n  this.schema    = self.__schema__.toLowerCase();\n  /**\n   * Match#index -> Number\n   *\n   * First position of matched string.\n   **/\n  this.index     = start + shift;\n  /**\n   * Match#lastIndex -> Number\n   *\n   * Next position after matched string.\n   **/\n  this.lastIndex = end + shift;\n  /**\n   * Match#raw -> String\n   *\n   * Matched string.\n   **/\n  this.raw       = text;\n  /**\n   * Match#text -> String\n   *\n   * Notmalized text of matched string.\n   **/\n  this.text      = text;\n  /**\n   * Match#url -> String\n   *\n   * Normalized url of matched string.\n   **/\n  this.url       = text;\n}\n\nfunction createMatch(self, shift) {\n  var match = new Match(self, shift);\n\n  self.__compiled__[match.schema].normalize(match, self);\n\n  return match;\n}\n\n\n/**\n * class LinkifyIt\n **/\n\n/**\n * new LinkifyIt(schemas, options)\n * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Creates new linkifier instance with optional additional schemas.\n * Can be called without `new` keyword for convenience.\n *\n * By default understands:\n *\n * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n * - \"fuzzy\" links and emails (example.com, foo@bar.com).\n *\n * `schemas` is an object, where each key/value describes protocol/rule:\n *\n * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n *   for example). `linkify-it` makes shure that prefix is not preceeded with\n *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.\n * - __value__ - rule to check tail after link prefix\n *   - _String_ - just alias to existing rule\n *   - _Object_\n *     - _validate_ - validator function (should return matched length on success),\n *       or `RegExp`.\n *     - _normalize_ - optional function to normalize text & url of matched result\n *       (for example, for @twitter mentions).\n *\n * `options`:\n *\n * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.\n * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts\n *   like version numbers. Default `false`.\n * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.\n *\n **/\nfunction LinkifyIt(schemas, options) {\n  if (!(this instanceof LinkifyIt)) {\n    return new LinkifyIt(schemas, options);\n  }\n\n  if (!options) {\n    if (isOptionsObj(schemas)) {\n      options = schemas;\n      schemas = {};\n    }\n  }\n\n  this.__opts__           = assign({}, defaultOptions, options);\n\n  // Cache last tested result. Used to skip repeating steps on next `match` call.\n  this.__index__          = -1;\n  this.__last_index__     = -1; // Next scan position\n  this.__schema__         = '';\n  this.__text_cache__     = '';\n\n  this.__schemas__        = assign({}, defaultSchemas, schemas);\n  this.__compiled__       = {};\n\n  this.__tlds__           = tlds_default;\n  this.__tlds_replaced__  = false;\n\n  this.re = {};\n\n  compile(this);\n}\n\n\n/** chainable\n * LinkifyIt#add(schema, definition)\n * - schema (String): rule name (fixed pattern prefix)\n * - definition (String|RegExp|Object): schema definition\n *\n * Add new rule definition. See constructor description for details.\n **/\nLinkifyIt.prototype.add = function add(schema, definition) {\n  this.__schemas__[schema] = definition;\n  compile(this);\n  return this;\n};\n\n\n/** chainable\n * LinkifyIt#set(options)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Set recognition options for links without schema.\n **/\nLinkifyIt.prototype.set = function set(options) {\n  this.__opts__ = assign(this.__opts__, options);\n  return this;\n};\n\n\n/**\n * LinkifyIt#test(text) -> Boolean\n *\n * Searches linkifiable pattern and returns `true` on success or `false` on fail.\n **/\nLinkifyIt.prototype.test = function test(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__      = -1;\n\n  if (!text.length) { return false; }\n\n  var m, ml, me, len, shift, next, re, tld_pos, at_pos;\n\n  // try to scan for link with schema - that's the most simple rule\n  if (this.re.schema_test.test(text)) {\n    re = this.re.schema_search;\n    re.lastIndex = 0;\n    while ((m = re.exec(text)) !== null) {\n      len = this.testSchemaAt(text, m[2], re.lastIndex);\n      if (len) {\n        this.__schema__     = m[2];\n        this.__index__      = m.index + m[1].length;\n        this.__last_index__ = m.index + m[0].length + len;\n        break;\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {\n    // guess schemaless links\n    tld_pos = text.search(this.re.host_fuzzy_test);\n    if (tld_pos >= 0) {\n      // if tld is located after found link - no need to check fuzzy pattern\n      if (this.__index__ < 0 || tld_pos < this.__index__) {\n        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n\n          shift = ml.index + ml[1].length;\n\n          if (this.__index__ < 0 || shift < this.__index__) {\n            this.__schema__     = '';\n            this.__index__      = shift;\n            this.__last_index__ = ml.index + ml[0].length;\n          }\n        }\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {\n    // guess schemaless emails\n    at_pos = text.indexOf('@');\n    if (at_pos >= 0) {\n      // We can't skip this check, because this cases are possible:\n      // 192.168.1.1@gmail.com, my.in@example.com\n      if ((me = text.match(this.re.email_fuzzy)) !== null) {\n\n        shift = me.index + me[1].length;\n        next  = me.index + me[0].length;\n\n        if (this.__index__ < 0 || shift < this.__index__ ||\n            (shift === this.__index__ && next > this.__last_index__)) {\n          this.__schema__     = 'mailto:';\n          this.__index__      = shift;\n          this.__last_index__ = next;\n        }\n      }\n    }\n  }\n\n  return this.__index__ >= 0;\n};\n\n\n/**\n * LinkifyIt#pretest(text) -> Boolean\n *\n * Very quick check, that can give false positives. Returns true if link MAY BE\n * can exists. Can be used for speed optimization, when you need to check that\n * link NOT exists.\n **/\nLinkifyIt.prototype.pretest = function pretest(text) {\n  return this.re.pretest.test(text);\n};\n\n\n/**\n * LinkifyIt#testSchemaAt(text, name, position) -> Number\n * - text (String): text to scan\n * - name (String): rule (schema) name\n * - position (Number): text offset to check from\n *\n * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly\n * at given position. Returns length of found pattern (0 on fail).\n **/\nLinkifyIt.prototype.testSchemaAt = function testSchemaAt(text, schema, pos) {\n  // If not supported schema check requested - terminate\n  if (!this.__compiled__[schema.toLowerCase()]) {\n    return 0;\n  }\n  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this);\n};\n\n\n/**\n * LinkifyIt#match(text) -> Array|null\n *\n * Returns array of found link descriptions or `null` on fail. We strongly\n * recommend to use [[LinkifyIt#test]] first, for best speed.\n *\n * ##### Result match description\n *\n * - __schema__ - link schema, can be empty for fuzzy links, or `//` for\n *   protocol-neutral  links.\n * - __index__ - offset of matched text\n * - __lastIndex__ - index of next char after mathch end\n * - __raw__ - matched text\n * - __text__ - normalized text\n * - __url__ - link, generated from matched text\n **/\nLinkifyIt.prototype.match = function match(text) {\n  var shift = 0, result = [];\n\n  // Try to take previous element from cache, if .test() called before\n  if (this.__index__ >= 0 && this.__text_cache__ === text) {\n    result.push(createMatch(this, shift));\n    shift = this.__last_index__;\n  }\n\n  // Cut head if cache was used\n  var tail = shift ? text.slice(shift) : text;\n\n  // Scan string until end reached\n  while (this.test(tail)) {\n    result.push(createMatch(this, shift));\n\n    tail = tail.slice(this.__last_index__);\n    shift += this.__last_index__;\n  }\n\n  if (result.length) {\n    return result;\n  }\n\n  return null;\n};\n\n\n/** chainable\n * LinkifyIt#tlds(list [, keepOld]) -> this\n * - list (Array): list of tlds\n * - keepOld (Boolean): merge with current list if `true` (`false` by default)\n *\n * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)\n * to avoid false positives. By default this algorythm used:\n *\n * - hostname with any 2-letter root zones are ok.\n * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф\n *   are ok.\n * - encoded (`xn--...`) root zones are ok.\n *\n * If list is replaced, then exact match for 2-chars root zones will be checked.\n **/\nLinkifyIt.prototype.tlds = function tlds(list, keepOld) {\n  list = Array.isArray(list) ? list : [ list ];\n\n  if (!keepOld) {\n    this.__tlds__ = list.slice();\n    this.__tlds_replaced__ = true;\n    compile(this);\n    return this;\n  }\n\n  this.__tlds__ = this.__tlds__.concat(list)\n                                  .sort()\n                                  .filter(function (el, idx, arr) {\n                                    return el !== arr[idx - 1];\n                                  })\n                                  .reverse();\n\n  compile(this);\n  return this;\n};\n\n/**\n * LinkifyIt#normalize(match)\n *\n * Default normalizer (if schema does not define it's own).\n **/\nLinkifyIt.prototype.normalize = function normalize(match) {\n\n  // Do minimal possible changes by default. Need to collect feedback prior\n  // to move forward https://github.com/markdown-it/linkify-it/issues/1\n\n  if (!match.schema) { match.url = 'http://' + match.url; }\n\n  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {\n    match.url = 'mailto:' + match.url;\n  }\n};\n\n\nmodule.exports = LinkifyIt;\n","export default \"# Orderer启动时做了什么？\\n\\n日常开发，部署时，Orderer被编译成bin程序，运行在Docker容器中。或许有人会问：Orderer可以运行在主机中吗？如何启动呢？启动的时候做了什么？\\n\\n## 本地启动\\n\\n阅读Orderer源码后，发现，启动的入口位于 fabric/orderer/common/server/main.go中:\\n```\\n// Main is the entry point of orderer process\\nfunc Main() {\\n  fullCmd := kingpin.MustParse(app.Parse(os.Args[1:]))\\n  ...\\n}\\n```\\n注意，这个Main函数的package并不是main，因此不可以直接启动。我们可以创建新的GO项目，调用此Main函数，启动Orderer。\\n\\n我们的工程位于[fabric-cases](https://github.com/stephenwu2020/fabric-cases)下的[code-analyse](https://github.com/stephenwu2020/fabric-cases/tree/master/code-analyse)目录下。\\n\\n启动之前，请确保fabic-case的根目录下，已经下载bin文件，否则，请查看根目录的README，执行:\\n```\\nmake\\n```\\n\\n然后进入本项目的目录:\\n```\\ncd code-analyse\\n```\\n\\n编写Main函数: (main.go)\\n```\\npackage main\\n\\nimport (\\n\\t\\\"github.com/hyperledger/fabric/orderer/common/server\\\"\\n)\\n\\nfunc main() {\\n\\tserver.Main()\\n}\\n```\\nMain函数非常简单，直接调用orderer的Main函数。不出意外的话，程序会奔溃，因为配置文件并未设置！！！\\n\\n## 配置\\n\\nOrderer的源码中，很多参数都设置了默认值，比如配置文件order.yaml，channel id，msp路径等等。在源码中，发现默认的配置在fabric/orderer/common/server/testdata/下，本工程目录下的3个配置文件就是从那里复制过来的:\\n```\\n$ ls -l *.yaml\\n-rw-r--r--  1 stephen  staff   6113 Sep  3 08:58 configtx.yaml\\n-rw-r--r--  1 stephen  staff   3589 Sep  3 08:58 examplecom-config.yaml\\n-rw-r--r--  1 stephen  staff  14066 Sep  3 08:58 orderer.yaml\\n```\\n\\n在网络的部署过程中，头两个步骤分别是生成认证文件、生成创世块，我们把这个过程写如Makefile的crypto指令中，执行指令生成crypto文件夹和genesisblock:\\n```\\n$ make crypto\\nClean materials...\\nDone\\nGenerate materials...\\nexample.com\\n2020-09-03 10:40:56.867 HKT [common.tools.configtxgen] main -> INFO 001 Loading configuration\\n2020-09-03 10:40:56.988 HKT [common.tools.configtxgen.localconfig] completeInitialization -> INFO 002 orderer type: solo\\n2020-09-03 10:40:56.988 HKT [common.tools.configtxgen.localconfig] Load -> INFO 003 Loaded configuration: /Users/stephen/Develop/Blockchain/fabric-cases/code-analyse/configtx.yaml\\n2020-09-03 10:40:56.997 HKT [common.tools.configtxgen] doOutputBlock -> INFO 004 Generating genesis block\\n2020-09-03 10:40:56.998 HKT [common.tools.configtxgen] doOutputBlock -> INFO 005 Writing genesis block\\nDone!\\n```\\n然后我们启动程序:\\n```\\n$ go run .\\n2020-09-03 10:41:58.889 HKT [localconfig] completeInitialization -> WARN 001 General.GenesisMethod should be replaced by General.BootstrapMethod\\n2020-09-03 10:41:58.889 HKT [localconfig] completeInitialization -> WARN 002 General.GenesisFile should be replaced by General.BootstrapFile\\n2020-09-03 10:41:58.889 HKT [localconfig] completeInitialization -> INFO 003 FileLedger.Prefix unset, setting to hyperledger-fabric-ordererledger\\n2020-09-03 10:41:58.889 HKT [localconfig] completeInitialization -> INFO 004 Kafka.Version unset, setting to 0.10.2.0\\n2020-09-03 10:41:58.889 HKT [orderer.common.server] prettyPrintStruct -> INFO 005 Orderer config values:\\n        General.ListenAddress = \\\"127.0.0.1\\\"\\n        General.ListenPort = 7050\\n        General.TLS.Enabled = false\\n        General.TLS.PrivateKey = \\\"/Users/stephen/Develop/Blockchain/fabric-cases/code-analyse/crypto/ordererOrganizations/example.com/orderers/127.0.0.1.example.com/tls/server.key\\\"\\n        General.TLS.Certificate = \\\"/Users/stephen/Develop/Blockchain/fabric-cases/code-analyse/crypto/ordererOrganizations/example.com/orderers/127.0.0.1.example.com/tls/server.crt\\\"\\n        General.TLS.RootCAs = [/Users/stephen/Develop/Blockchain/fabric-cases/code-analyse/crypto/ordererOrganizations/example.com/orderers/127.0.0.1.example.com/tls/ca.crt]\\n        General.TLS.ClientAuthRequired = false\\n        General.TLS.ClientRootCAs = []\\n        General.Cluster.ListenAddress = \\\"\\\"\\n        General.Cluster.ListenPort = 0\\n        General.Cluster.ServerCertificate = \\\"\\\"\\n        General.Cluster.ServerPrivateKey = \\\"\\\"\\n        General.Cluster.ClientCertificate = \\\"\\\"\\n        General.Cluster.ClientPrivateKey = \\\"\\\"\\n        General.Cluster.RootCAs = []\\n        General.Cluster.DialTimeout = 5s\\n        General.Cluster.RPCTimeout = 7s\\n        General.Cluster.ReplicationBufferSize = 20971520\\n        General.Cluster.ReplicationPullTimeout = 5s\\n        General.Cluster.ReplicationRetryTimeout = 5s\\n        General.Cluster.ReplicationBackgroundRefreshInterval = 5m0s\\n        General.Cluster.ReplicationMaxRetries = 12\\n        General.Cluster.SendBufferSize = 10\\n        General.Cluster.CertExpirationWarningThreshold = 168h0m0s\\n        General.Cluster.TLSHandshakeTimeShift = 0s\\n        General.Keepalive.ServerMinInterval = 1m0s\\n        General.Keepalive.ServerInterval = 2h0m0s\\n        General.Keepalive.ServerTimeout = 20s\\n        General.ConnectionTimeout = 0s\\n        General.GenesisMethod = \\\"file\\\"\\n        General.GenesisFile = \\\"genesisblock\\\"\\n        General.BootstrapMethod = \\\"file\\\"\\n        General.BootstrapFile = \\\"/Users/stephen/Develop/Blockchain/fabric-cases/code-analyse/genesisblock\\\"\\n        General.Profile.Enabled = false\\n        General.Profile.Address = \\\"0.0.0.0:6060\\\"\\n        General.LocalMSPDir = \\\"/Users/stephen/Develop/Blockchain/fabric-cases/code-analyse/crypto/ordererOrganizations/example.com/orderers/127.0.0.1.example.com/msp\\\"\\n        General.LocalMSPID = \\\"SampleOrg\\\"\\n        General.BCCSP.ProviderName = \\\"SW\\\"\\n        General.BCCSP.SwOpts.SecLevel = 256\\n        General.BCCSP.SwOpts.HashFamily = \\\"SHA2\\\"\\n        General.BCCSP.SwOpts.Ephemeral = true\\n        General.BCCSP.SwOpts.FileKeystore.KeyStorePath = \\\"\\\"\\n        General.BCCSP.SwOpts.DummyKeystore =\\n        General.BCCSP.SwOpts.InmemKeystore =\\n        General.Authentication.TimeWindow = 15m0s\\n        General.Authentication.NoExpirationChecks = false\\n        FileLedger.Location = \\\"/var/hyperledger/production/orderer\\\"\\n        FileLedger.Prefix = \\\"hyperledger-fabric-ordererledger\\\"\\n        Kafka.Retry.ShortInterval = 5s\\n        Kafka.Retry.ShortTotal = 10m0s\\n        Kafka.Retry.LongInterval = 5m0s\\n        Kafka.Retry.LongTotal = 12h0m0s\\n        Kafka.Retry.NetworkTimeouts.DialTimeout = 10s\\n        Kafka.Retry.NetworkTimeouts.ReadTimeout = 10s\\n        Kafka.Retry.NetworkTimeouts.WriteTimeout = 10s\\n        Kafka.Retry.Metadata.RetryMax = 3\\n        Kafka.Retry.Metadata.RetryBackoff = 250ms\\n        Kafka.Retry.Producer.RetryMax = 3\\n        Kafka.Retry.Producer.RetryBackoff = 100ms\\n        Kafka.Retry.Consumer.RetryBackoff = 2s\\n        Kafka.Verbose = false\\n        Kafka.Version = 0.10.2.0\\n        Kafka.TLS.Enabled = false\\n        Kafka.TLS.PrivateKey = \\\"\\\"\\n        Kafka.TLS.Certificate = \\\"\\\"\\n        Kafka.TLS.RootCAs = []\\n        Kafka.TLS.ClientAuthRequired = false\\n        Kafka.TLS.ClientRootCAs = []\\n        Kafka.SASLPlain.Enabled = false\\n        Kafka.SASLPlain.User = \\\"\\\"\\n        Kafka.SASLPlain.Password = \\\"\\\"\\n        Kafka.Topic.ReplicationFactor = 3\\n        Debug.BroadcastTraceDir = \\\"\\\"\\n        Debug.DeliverTraceDir = \\\"\\\"\\n        Consensus = map[snapdir:/var/hyperledger/production/orderer/etcdraft/snapshot waldir:/var/hyperledger/production/orderer/etcdraft/wal]\\n        Operations.ListenAddress = \\\"127.0.0.1:8443\\\"\\n        Operations.TLS.Enabled = false\\n        Operations.TLS.PrivateKey = \\\"\\\"\\n        Operations.TLS.Certificate = \\\"\\\"\\n        Operations.TLS.RootCAs = []\\n        Operations.TLS.ClientAuthRequired = false\\n        Operations.TLS.ClientRootCAs = []\\n        Metrics.Provider = \\\"disabled\\\"\\n        Metrics.Statsd.Network = \\\"udp\\\"\\n        Metrics.Statsd.Address = \\\"127.0.0.1:8125\\\"\\n        Metrics.Statsd.WriteInterval = 30s\\n        Metrics.Statsd.Prefix = \\\"\\\"\\n        ChannelParticipation.Enabled = false\\n        ChannelParticipation.RemoveStorage = false\\n2020-09-03 10:41:58.933 HKT [orderer.common.server] Main -> INFO 006 Not bootstrapping the system channel because of existing channels\\n2020-09-03 10:41:58.940 HKT [orderer.common.server] selectClusterBootBlock -> INFO 007 Cluster boot block is bootstrap (genesis) block; Blocks Header.Number system-channel=0, bootstrap=0\\n2020-09-03 10:41:58.945 HKT [orderer.common.server] Main -> INFO 008 Starting with system channel: testchannelid, consensus type: solo\\n2020-09-03 10:41:58.957 HKT [orderer.consensus.solo] HandleChain -> WARN 009 Use of the Solo orderer is deprecated and remains only for use in test environments but may be removed in the future.\\n2020-09-03 10:41:58.957 HKT [orderer.commmon.multichannel] Initialize -> INFO 00a Starting system channel 'testchannelid' with genesis block hash baf6470148beed52854637f803db5473458c5c7de06cdc714944d13e1a9d12d5 and orderer type solo\\n2020-09-03 10:41:58.957 HKT [orderer.common.server] Main -> INFO 00b Starting orderer:\\n Version: latest\\n Commit SHA: development build\\n Go version: go1.14.3\\n OS/Arch: darwin/amd64\\n2020-09-03 10:41:58.957 HKT [orderer.common.server] Main -> INFO 00c Beginning to serve requests\\n```\\nOrderer启动成功啦！！！\\n\\n## 配置初始化\\n\\nOrderer的Main函数中，有几个比较重要的步骤，第一个是配置初始化:\\n```\\nconf, err := localconfig.Load()\\n```\\n函数会加载当前目录下的orderer.yaml文件:\\n```\\nconfig := viper.New()\\ncoreconfig.InitViper(config, \\\"orderer\\\")\\nconfig.SetEnvPrefix(Prefix)\\n```\\n怎么知道是当前目录下呢？InitViper函数里，若FABRIC_CFG_PATH未设置，则将当前目录添加进搜索路径：\\n```\\nfunc InitViper(v *viper.Viper, configName string) error {\\n\\tvar altPath = os.Getenv(\\\"FABRIC_CFG_PATH\\\")\\n\\tif altPath != \\\"\\\" {\\n\\t\\t// If the user has overridden the path with an envvar, its the only path\\n\\t\\t// we will consider\\n\\n\\t\\tif !dirExists(altPath) {\\n\\t\\t\\treturn fmt.Errorf(\\\"FABRIC_CFG_PATH %s does not exist\\\", altPath)\\n\\t\\t}\\n\\n\\t\\tAddConfigPath(v, altPath)\\n\\t} else {\\n\\t\\t// If we get here, we should use the default paths in priority order:\\n\\t\\t//\\n\\t\\t// *) CWD\\n\\t\\t// *) /etc/hyperledger/fabric\\n\\n\\t\\t// CWD\\n\\t\\tAddConfigPath(v, \\\"./\\\")\\n\\n\\t\\t// And finally, the official path\\n\\t\\tif dirExists(OfficialPath) {\\n\\t\\t\\tAddConfigPath(v, OfficialPath)\\n\\t\\t}\\n\\t}\\n\\n\\t// Now set the configuration file.\\n\\tif v != nil {\\n\\t\\tv.SetConfigName(configName)\\n\\t} else {\\n\\t\\tviper.SetConfigName(configName)\\n\\t}\\n\\n\\treturn nil\\n}\\n```\\n我们并没有设置该环境变量的值，因此会找当前目录下的orderer.yaml.\\n\\n查看orderer.yaml，才发现很多选项很熟悉，对应了docker容器的环境变量，例如，监听端口:\\n```\\n# Listen port: The port on which to bind to listen.\\nListenPort: 7050\\n```\\nTLS证书:\\n```\\n# TLS: TLS settings for the GRPC server.\\nTLS:\\n    Enabled: false\\n    # PrivateKey governs the file location of the private key of the TLS certificate.\\n    PrivateKey: crypto/ordererOrganizations/example.com/orderers/127.0.0.1.example.com/tls/server.key\\n    # Certificate governs the file location of the server TLS certificate.\\n    Certificate: crypto/ordererOrganizations/example.com/orderers/127.0.0.1.example.com/tls/server.crt\\n    RootCAs:\\n      - crypto/ordererOrganizations/example.com/orderers/127.0.0.1.example.com/tls/ca.crt\\n    ClientAuthRequired: false\\n    ClientRootCAs:\\n```\\nGenesis Block的位置、msp的路径:\\n```\\nGenesisFile: genesisblock\\n\\n# LocalMSPDir is where to find the private crypto material needed by the\\n# orderer. It is set relative here as a default for dev environments but\\n# should be changed to the real location in production.\\nLocalMSPDir: crypto/ordererOrganizations/example.com/orderers/127.0.0.1.example.com/msp\\n\\n# LocalMSPID is the identity to register the local MSP material with the MSP\\n# manager. IMPORTANT: The local MSP ID of an orderer needs to match the MSP\\n# ID of one of the organizations defined in the orderer system channel's\\n# /Channel/Orderer configuration. The sample organization defined in the\\n# sample configuration provided has an MSP ID of \\\"SampleOrg\\\".\\nLocalMSPID: SampleOrg\\n```\\n\\n## GenesisBlock，Channel\\n随后是读取、解释创世块:\\n```\\n\\tvar bootstrapBlock *cb.Block\\n\\tif conf.General.BootstrapMethod == \\\"file\\\" {\\n\\t\\tbootstrapBlock = file.New(conf.General.BootstrapFile).GenesisBlock()\\n\\t\\tif err := onboarding.ValidateBootstrapBlock(bootstrapBlock, cryptoProvider); err != nil {\\n\\t\\t\\tlogger.Panicf(\\\"Failed validating bootstrap block: %v\\\", err)\\n\\t\\t}\\n\\n\\t\\t// Are we bootstrapping with a genesis block (i.e. bootstrap block number = 0)?\\n\\t\\t// If yes, generate the system channel with a genesis block.\\n\\t\\tif len(lf.ChannelIDs()) == 0 && bootstrapBlock.Header.Number == 0 {\\n\\t\\t\\tlogger.Info(\\\"Bootstrapping the system channel\\\")\\n\\t\\t\\tinitializeBootstrapChannel(bootstrapBlock, lf)\\n\\t\\t} else if len(lf.ChannelIDs()) > 0 {\\n\\t\\t\\tlogger.Info(\\\"Not bootstrapping the system channel because of existing channels\\\")\\n\\t\\t} else {\\n\\t\\t\\tlogger.Infof(\\\"Not bootstrapping the system channel because the bootstrap block number is %d (>0), replication is needed\\\", bootstrapBlock.Header.Number)\\n\\t\\t}\\n\\t} else if conf.General.BootstrapMethod != \\\"none\\\" {\\n\\t\\tlogger.Panicf(\\\"Unknown bootstrap method: %s\\\", conf.General.BootstrapMethod)\\n\\t}\\n```\\n解释、创建系统channel:\\n```\\n// select the highest numbered block among the bootstrap block and the last config block if the system channel.\\n\\tsysChanConfigBlock := extractSystemChannel(lf, cryptoProvider)\\n\\tclusterBootBlock := selectClusterBootBlock(bootstrapBlock, sysChanConfigBlock)\\n\\n\\t// determine whether the orderer is of cluster type\\n\\tvar isClusterType bool\\n\\tif clusterBootBlock == nil {\\n\\t\\tlogger.Infof(\\\"Starting without a system channel\\\")\\n\\t\\tisClusterType = true\\n\\t} else {\\n\\t\\tsysChanID, err := protoutil.GetChannelIDFromBlock(clusterBootBlock)\\n\\t\\tif err != nil {\\n\\t\\t\\tlogger.Panicf(\\\"Failed getting channel ID from clusterBootBlock: %s\\\", err)\\n\\t\\t}\\n\\n\\t\\tconsensusTypeName := consensusType(clusterBootBlock, cryptoProvider)\\n\\t\\tlogger.Infof(\\\"Starting with system channel: %s, consensus type: %s\\\", sysChanID, consensusTypeName)\\n\\t\\t_, isClusterType = clusterTypes[consensusTypeName]\\n\\t}\\n```\\n\\n## 系统管理服务\\nOrderer.yaml配置中的Operations字段，用于启动系统管理服务:\\n```\\nopsSystem := newOperationsSystem(conf.Operations, conf.Metrics)\\nif err = opsSystem.Start(); err != nil {\\n\\t\\tlogger.Panicf(\\\"failed to start operations subsystem: %s\\\", err)\\n}\\n```\\n此服务监听8443端口:\\n```\\nOperations:\\n    # host and port for the operations server\\n    ListenAddress: 127.0.0.1:8443\\n```\\n分析源码，这个一个http服务，提供的API有:\\n```\\ns.mux.Handle(\\\"/metrics\\\", s.handlerChain(promhttp.Handler(), s.options.TLS.Enabled))\\ns.mux.Handle(\\\"/logspec\\\", s.handlerChain(httpadmin.NewSpecHandler(), s.options.TLS.Enabled))\\ns.mux.Handle(\\\"/healthz\\\", s.handlerChain(s.healthHandler, false))\\ns.mux.Handle(\\\"/version\\\", s.handlerChain(versionInfo, false))\\n```\\n大多是反馈系统状态的请求。我们尝试调用这些API：\\n```\\ncurl localhost:8443/version\\n{\\\"CommitSHA\\\":\\\"development build\\\",\\\"Version\\\":\\\"latest\\\"}\\n\\ncurl localhost:8443/healthz\\n{\\\"status\\\":\\\"OK\\\",\\\"time\\\":\\\"2020-09-03T11:17:48.613373+08:00\\\"}\\n```\\n\\n## Orderer服务\\n最后，启动orderer服务:\\n```\\ngrpcServer := initializeGrpcServer(conf, serverConfig)\\nlogger.Info(\\\"Beginning to serve requests\\\")\\nif err := grpcServer.Start(); err != nil {\\n  logger.Fatalf(\\\"Atomic Broadcast gRPC server has terminated while serving requests due to: %v\\\", err)\\n}\\n```\\n这是一个google grpc服务:\\n```\\n// Start starts the underlying grpc.Server\\nfunc (gServer *GRPCServer) Start() error {\\n\\t// if health check is enabled, set the health status for all registered services\\n\\tif gServer.healthServer != nil {\\n\\t\\tfor name := range gServer.server.GetServiceInfo() {\\n\\t\\t\\tgServer.healthServer.SetServingStatus(\\n\\t\\t\\t\\tname,\\n\\t\\t\\t\\thealthpb.HealthCheckResponse_SERVING,\\n\\t\\t\\t)\\n\\t\\t}\\n\\n\\t\\tgServer.healthServer.SetServingStatus(\\n\\t\\t\\t\\\"\\\",\\n\\t\\t\\thealthpb.HealthCheckResponse_SERVING,\\n\\t\\t)\\n\\t}\\n\\treturn gServer.server.Serve(gServer.listener)\\n}\\n```\\n它监听的是7050的端口:\\n```\\n# Listen port: The port on which to bind to listen.\\nListenPort: 7050\\n```\\n当grpc服务接收到信息，它将交给ab.AtomicBroadcastServer处理:\\n```\\nserver := NewServer(\\n\\t\\tmanager,\\n\\t\\tmetricsProvider,\\n\\t\\t&conf.Debug,\\n\\t\\tconf.General.Authentication.TimeWindow,\\n\\t\\tmutualTLS,\\n\\t\\tconf.General.Authentication.NoExpirationChecks,\\n\\t)\\nab.RegisterAtomicBroadcastServer(grpcServer.Server(), server)\\n```\\n它处理两大类的消息：\\n1. 接收客户端发起的交易，打包\\n2. 广播打包好的区块\\n```\\n// Broadcast receives a stream of messages from a client for ordering\\nfunc (s *server) Broadcast(srv ab.AtomicBroadcast_BroadcastServer) error {\\n\\tlogger.Debugf(\\\"Starting new Broadcast handler\\\")\\n\\tdefer func() {\\n\\t\\tif r := recover(); r != nil {\\n\\t\\t\\tlogger.Criticalf(\\\"Broadcast client triggered panic: %s\\\\n%s\\\", r, debug.Stack())\\n\\t\\t}\\n\\t\\tlogger.Debugf(\\\"Closing Broadcast stream\\\")\\n\\t}()\\n\\treturn s.bh.Handle(&broadcastMsgTracer{\\n\\t\\tAtomicBroadcast_BroadcastServer: srv,\\n\\t\\tmsgTracer: msgTracer{\\n\\t\\t\\tdebug:    s.debug,\\n\\t\\t\\tfunction: \\\"Broadcast\\\",\\n\\t\\t},\\n\\t})\\n}\\n\\n// Deliver sends a stream of blocks to a client after ordering\\nfunc (s *server) Deliver(srv ab.AtomicBroadcast_DeliverServer) error {\\n\\tlogger.Debugf(\\\"Starting new Deliver handler\\\")\\n\\tdefer func() {\\n\\t\\tif r := recover(); r != nil {\\n\\t\\t\\tlogger.Criticalf(\\\"Deliver client triggered panic: %s\\\\n%s\\\", r, debug.Stack())\\n\\t\\t}\\n\\t\\tlogger.Debugf(\\\"Closing Deliver stream\\\")\\n\\t}()\\n\\n\\tpolicyChecker := func(env *cb.Envelope, channelID string) error {\\n\\t\\tchain := s.GetChain(channelID)\\n\\t\\tif chain == nil {\\n\\t\\t\\treturn errors.Errorf(\\\"channel %s not found\\\", channelID)\\n\\t\\t}\\n\\t\\t// In maintenance mode, we typically require the signature of /Channel/Orderer/Readers.\\n\\t\\t// This will block Deliver requests from peers (which normally satisfy /Channel/Readers).\\n\\t\\tsf := msgprocessor.NewSigFilter(policies.ChannelReaders, policies.ChannelOrdererReaders, chain)\\n\\t\\treturn sf.Apply(env)\\n\\t}\\n\\tdeliverServer := &deliver.Server{\\n\\t\\tPolicyChecker: deliver.PolicyCheckerFunc(policyChecker),\\n\\t\\tReceiver: &deliverMsgTracer{\\n\\t\\t\\tReceiver: srv,\\n\\t\\t\\tmsgTracer: msgTracer{\\n\\t\\t\\t\\tdebug:    s.debug,\\n\\t\\t\\t\\tfunction: \\\"Deliver\\\",\\n\\t\\t\\t},\\n\\t\\t},\\n\\t\\tResponseSender: &responseSender{\\n\\t\\t\\tAtomicBroadcast_DeliverServer: srv,\\n\\t\\t},\\n\\t}\\n\\treturn s.dh.Handle(srv.Context(), deliverServer)\\n}\\n```\\n\\n## 监听\\n最后，检查系统的监听服务，系统管理服务和grpc服务都在:\\n```\\n$ make listener\\norder-ana 7673 stephen    9u     IPv4 0xc1d0e97275765439        0t0                 TCP 127.0.0.1:7050 (LISTEN)\\norder-ana 7673 stephen   17u     IPv4 0xc1d0e97275764079        0t0                 TCP 127.0.0.1:8443 (LISTEN)\\n```\";","// Horizontal rule\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function hr(state, startLine, endLine, silent) {\n  var marker, cnt, ch, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  marker = state.src.charCodeAt(pos++);\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false;\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 of them\n\n  cnt = 1;\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos++);\n    if (ch !== marker && !isSpace(ch)) { return false; }\n    if (ch === marker) { cnt++; }\n  }\n\n  if (cnt < 3) { return false; }\n\n  if (silent) { return true; }\n\n  state.line = startLine + 1;\n\n  token        = state.push('hr', 'hr', 0);\n  token.map    = [ startLine, state.line ];\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker));\n\n  return true;\n};\n","// Process definition lists\n//\n'use strict';\n\n\nmodule.exports = function deflist_plugin(md) {\n  var isSpace = md.utils.isSpace;\n\n  // Search `[:~][\\n ]`, returns next pos after marker on success\n  // or -1 on fail.\n  function skipMarker(state, line) {\n    var pos, marker,\n        start = state.bMarks[line] + state.tShift[line],\n        max = state.eMarks[line];\n\n    if (start >= max) { return -1; }\n\n    // Check bullet\n    marker = state.src.charCodeAt(start++);\n    if (marker !== 0x7E/* ~ */ && marker !== 0x3A/* : */) { return -1; }\n\n    pos = state.skipSpaces(start);\n\n    // require space after \":\"\n    if (start === pos) { return -1; }\n\n    // no empty definitions, e.g. \"  : \"\n    if (pos >= max) { return -1; }\n\n    return start;\n  }\n\n  function markTightParagraphs(state, idx) {\n    var i, l,\n        level = state.level + 2;\n\n    for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n      if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n        state.tokens[i + 2].hidden = true;\n        state.tokens[i].hidden = true;\n        i += 2;\n      }\n    }\n  }\n\n  function deflist(state, startLine, endLine, silent) {\n    var ch,\n        contentStart,\n        ddLine,\n        dtLine,\n        itemLines,\n        listLines,\n        listTokIdx,\n        max,\n        nextLine,\n        offset,\n        oldDDIndent,\n        oldIndent,\n        oldParentType,\n        oldSCount,\n        oldTShift,\n        oldTight,\n        pos,\n        prevEmptyEnd,\n        tight,\n        token;\n\n    if (silent) {\n      // quirk: validation mode validates a dd block only, not a whole deflist\n      if (state.ddIndent < 0) { return false; }\n      return skipMarker(state, startLine) >= 0;\n    }\n\n    nextLine = startLine + 1;\n    if (nextLine >= endLine) { return false; }\n\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      if (nextLine >= endLine) { return false; }\n    }\n\n    if (state.sCount[nextLine] < state.blkIndent) { return false; }\n    contentStart = skipMarker(state, nextLine);\n    if (contentStart < 0) { return false; }\n\n    // Start list\n    listTokIdx = state.tokens.length;\n    tight = true;\n\n    token     = state.push('dl_open', 'dl', 1);\n    token.map = listLines = [ startLine, 0 ];\n\n    //\n    // Iterate list items\n    //\n\n    dtLine = startLine;\n    ddLine = nextLine;\n\n    // One definition list can contain multiple DTs,\n    // and one DT can be followed by multiple DDs.\n    //\n    // Thus, there is two loops here, and label is\n    // needed to break out of the second one\n    //\n    /*eslint no-labels:0,block-scoped-var:0*/\n    OUTER:\n    for (;;) {\n      prevEmptyEnd = false;\n\n      token          = state.push('dt_open', 'dt', 1);\n      token.map      = [ dtLine, dtLine ];\n\n      token          = state.push('inline', '', 0);\n      token.map      = [ dtLine, dtLine ];\n      token.content  = state.getLines(dtLine, dtLine + 1, state.blkIndent, false).trim();\n      token.children = [];\n\n      token          = state.push('dt_close', 'dt', -1);\n\n      for (;;) {\n        token     = state.push('dd_open', 'dd', 1);\n        token.map = itemLines = [ nextLine, 0 ];\n\n        pos = contentStart;\n        max = state.eMarks[ddLine];\n        offset = state.sCount[ddLine] + contentStart - (state.bMarks[ddLine] + state.tShift[ddLine]);\n\n        while (pos < max) {\n          ch = state.src.charCodeAt(pos);\n\n          if (isSpace(ch)) {\n            if (ch === 0x09) {\n              offset += 4 - offset % 4;\n            } else {\n              offset++;\n            }\n          } else {\n            break;\n          }\n\n          pos++;\n        }\n\n        contentStart = pos;\n\n        oldTight = state.tight;\n        oldDDIndent = state.ddIndent;\n        oldIndent = state.blkIndent;\n        oldTShift = state.tShift[ddLine];\n        oldSCount = state.sCount[ddLine];\n        oldParentType = state.parentType;\n        state.blkIndent = state.ddIndent = state.sCount[ddLine] + 2;\n        state.tShift[ddLine] = contentStart - state.bMarks[ddLine];\n        state.sCount[ddLine] = offset;\n        state.tight = true;\n        state.parentType = 'deflist';\n\n        state.md.block.tokenize(state, ddLine, endLine, true);\n\n        // If any of list item is tight, mark list as tight\n        if (!state.tight || prevEmptyEnd) {\n          tight = false;\n        }\n        // Item become loose if finish with empty line,\n        // but we should filter last element, because it means list finish\n        prevEmptyEnd = (state.line - ddLine) > 1 && state.isEmpty(state.line - 1);\n\n        state.tShift[ddLine] = oldTShift;\n        state.sCount[ddLine] = oldSCount;\n        state.tight = oldTight;\n        state.parentType = oldParentType;\n        state.blkIndent = oldIndent;\n        state.ddIndent = oldDDIndent;\n\n        token = state.push('dd_close', 'dd', -1);\n\n        itemLines[1] = nextLine = state.line;\n\n        if (nextLine >= endLine) { break OUTER; }\n\n        if (state.sCount[nextLine] < state.blkIndent) { break OUTER; }\n        contentStart = skipMarker(state, nextLine);\n        if (contentStart < 0) { break; }\n\n        ddLine = nextLine;\n\n        // go to the next loop iteration:\n        // insert DD tag and repeat checking\n      }\n\n      if (nextLine >= endLine) { break; }\n      dtLine = nextLine;\n\n      if (state.isEmpty(dtLine)) { break; }\n      if (state.sCount[dtLine] < state.blkIndent) { break; }\n\n      ddLine = dtLine + 1;\n      if (ddLine >= endLine) { break; }\n      if (state.isEmpty(ddLine)) { ddLine++; }\n      if (ddLine >= endLine) { break; }\n\n      if (state.sCount[ddLine] < state.blkIndent) { break; }\n      contentStart = skipMarker(state, ddLine);\n      if (contentStart < 0) { break; }\n\n      // go to the next loop iteration:\n      // insert DT and DD tags and repeat checking\n    }\n\n    // Finilize list\n    token = state.push('dl_close', 'dl', -1);\n\n    listLines[1] = nextLine;\n\n    state.line = nextLine;\n\n    // mark paragraphs tight if needed\n    if (tight) {\n      markTightParagraphs(state, listTokIdx);\n    }\n\n    return true;\n  }\n\n\n  md.block.ruler.before('paragraph', 'deflist', deflist, { alt: [ 'paragraph', 'reference' ] });\n};\n"],"sourceRoot":""}